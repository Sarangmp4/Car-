

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jun 02 13:25:51 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70   000000                     
    71                           ; Version 2.20
    72                           ; Generated 12/02/2020 GMT
    73                           ; 
    74                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F4580 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105   000000                     
   106                           	psect	idataCOMRAM
   107   002396                     __pidataCOMRAM:
   108                           	callstack 0
   109                           
   110                           ;initializer for _chance
   111   002396  02                 	db	2
   112                           
   113                           ;initializer for _tick_count
   114   002397  B4                 	db	180
   115                           
   116                           ;initializer for read_switches@once
   117   002398  01                 	db	1
   118                           
   119                           	psect	idataBANK0
   120   0022A0                     __pidataBANK0:
   121                           	callstack 0
   122                           
   123                           ;initializer for _events
   124   0022A0  F8                 	db	low STR_1
   125   0022A1  2F                 	db	high STR_1
   126   0022A2  FB                 	db	low STR_2
   127   0022A3  2F                 	db	high STR_2
   128   0022A4  F5                 	db	low STR_3
   129   0022A5  2F                 	db	high STR_3
   130   0022A6  E9                 	db	low STR_4
   131   0022A7  2F                 	db	high STR_4
   132   0022A8  EC                 	db	low STR_5
   133   0022A9  2F                 	db	high STR_5
   134   0022AA  EF                 	db	low STR_6
   135   0022AB  2F                 	db	high STR_6
   136   0022AC  F2                 	db	low STR_7
   137   0022AD  2F                 	db	high STR_7
   138   0022AE  E6                 	db	low STR_8
   139   0022AF  2F                 	db	high STR_8
   140                           
   141                           ;initializer for _logs
   142   0022B0  AB                 	db	low STR_15
   143   0022B1  2F                 	db	high STR_15
   144   0022B2  8B                 	db	low STR_16
   145   0022B3  2F                 	db	high STR_16
   146   0022B4  37                 	db	low STR_17
   147   0022B5  2F                 	db	high STR_17
   148   0022B6  7B                 	db	low STR_18
   149   0022B7  2F                 	db	high STR_18
   150   0022B8  BA                 	db	low STR_19
   151   0022B9  2F                 	db	high STR_19
   152   000000                     _RCREG	set	4014
   153   000000                     _TXREG	set	4013
   154   000000                     _SPBRG	set	4015
   155   000000                     _SSPADD	set	4040
   156   000000                     _SSPCON1	set	4038
   157   000000                     _ADRESL	set	4035
   158   000000                     _ADRESH	set	4036
   159   000000                     _ACKSTAT	set	32302
   160   000000                     _CKE	set	32318
   161   000000                     _RBPU	set	32655
   162   000000                     _VCFG1	set	32269
   163   000000                     _GODONE	set	32273
   164   000000                     _PORTBbits	set	3969
   165   000000                     _ADCON1	set	4033
   166   000000                     _TRISD	set	3989
   167   000000                     _ADCON0	set	4034
   168   000000                     _RCIF	set	31989
   169   000000                     _TXIF	set	31988
   170   000000                     _CREN	set	32092
   171   000000                     _TRISC6	set	31910
   172   000000                     _TRISC7	set	31911
   173   000000                     _PSA	set	32427
   174   000000                     _TMR0ON	set	32431
   175   000000                     _T0CS	set	32429
   176   000000                     _TMR0IF	set	32658
   177   000000                     _ACKEN	set	32300
   178   000000                     _ACKDT	set	32301
   179   000000                     _RCEN	set	32299
   180   000000                     _RSEN	set	32297
   181   000000                     _PEN	set	32298
   182   000000                     _SEN	set	32296
   183   000000                     _SMP	set	32319
   184   000000                     _TRISC4	set	31908
   185   000000                     _TRISC3	set	31907
   186   000000                     _PEIE	set	32662
   187   000000                     _GIE	set	32663
   188   000000                     _RD7	set	31775
   189   000000                     _RC0	set	31760
   190   000000                     _RC2	set	31762
   191   000000                     _GO	set	32273
   192   000000                     _ADON	set	32272
   193   000000                     _VCFG0	set	32268
   194   000000                     _ADCS2	set	32258
   195   000000                     _ADCS1	set	32257
   196   000000                     _ADCS0	set	32256
   197   000000                     _ACQT0	set	32259
   198   000000                     _ACQT1	set	32260
   199   000000                     _ACQT2	set	32261
   200   000000                     _PORTB	set	3969
   201   000000                     _RC1	set	31761
   202   000000                     _ADFM	set	32263
   203   000000                     _TRISB	set	3987
   204   000000                     _TRISC	set	3988
   205   000000                     _PORTD	set	3971
   206   000000                     _TRISD7	set	31919
   207   000000                     _RCIE	set	31981
   208   000000                     _SSPIF	set	31987
   209   000000                     _TMR0IE	set	32661
   210   000000                     _TMR0	set	4054
   211   000000                     _SSPBUF	set	4041
   212   000000                     _T08BIT	set	32430
   213   000000                     _BCLIF	set	32011
   214   000000                     _SPEN	set	32095
   215   000000                     _BRGH	set	32098
   216                           
   217                           	psect	mediumconst
   218   002E7E                     __pmediumconst:
   219                           	callstack 0
   220   002E7E  00                 	db	0
   221   002E7F                     STR_28:
   222   002E7F  20                 	db	32
   223   002E80  20                 	db	32
   224   002E81  52                 	db	82	;'R'
   225   002E82  65                 	db	101	;'e'
   226   002E83  74                 	db	116	;'t'
   227   002E84  79                 	db	121	;'y'
   228   002E85  70                 	db	112	;'p'
   229   002E86  65                 	db	101	;'e'
   230   002E87  20                 	db	32
   231   002E88  50                 	db	80	;'P'
   232   002E89  61                 	db	97	;'a'
   233   002E8A  73                 	db	115	;'s'
   234   002E8B  73                 	db	115	;'s'
   235   002E8C  77                 	db	119	;'w'
   236   002E8D  6F                 	db	111	;'o'
   237   002E8E  72                 	db	114	;'r'
   238   002E8F  64                 	db	100	;'d'
   239   002E90  20                 	db	32
   240   002E91  3A                 	db	58	;':'
   241   002E92  20                 	db	32
   242   002E93  00                 	db	0
   243   002E94                     STR_25:
   244   002E94  23                 	db	35
   245   002E95  20                 	db	32
   246   002E96  54                 	db	84	;'T'
   247   002E97  49                 	db	73	;'I'
   248   002E98  4D                 	db	77	;'M'
   249   002E99  45                 	db	69	;'E'
   250   002E9A  20                 	db	32
   251   002E9B  20                 	db	32
   252   002E9C  20                 	db	32
   253   002E9D  45                 	db	69	;'E'
   254   002E9E  56                 	db	86	;'V'
   255   002E9F  20                 	db	32
   256   002EA0  20                 	db	32
   257   002EA1  20                 	db	32
   258   002EA2  53                 	db	83	;'S'
   259   002EA3  50                 	db	80	;'P'
   260   002EA4  20                 	db	32
   261   002EA5  0A                 	db	10
   262   002EA6  0D                 	db	13
   263   002EA7  00                 	db	0
   264   002EA8                     STR_29:
   265   002EA8  20                 	db	32
   266   002EA9  50                 	db	80	;'P'
   267   002EAA  61                 	db	97	;'a'
   268   002EAB  73                 	db	115	;'s'
   269   002EAC  73                 	db	115	;'s'
   270   002EAD  77                 	db	119	;'w'
   271   002EAE  6F                 	db	111	;'o'
   272   002EAF  72                 	db	114	;'r'
   273   002EB0  64                 	db	100	;'d'
   274   002EB1  20                 	db	32
   275   002EB2  43                 	db	67	;'C'
   276   002EB3  68                 	db	104	;'h'
   277   002EB4  61                 	db	97	;'a'
   278   002EB5  6E                 	db	110	;'n'
   279   002EB6  67                 	db	103	;'g'
   280   002EB7  65                 	db	101	;'e'
   281   002EB8  20                 	db	32
   282   002EB9  20                 	db	32
   283   002EBA  00                 	db	0
   284   002EBB                     STR_31:
   285   002EBB  20                 	db	32
   286   002EBC  20                 	db	32
   287   002EBD  20                 	db	32
   288   002EBE  20                 	db	32
   289   002EBF  20                 	db	32
   290   002EC0  48                 	db	72	;'H'
   291   002EC1  48                 	db	72	;'H'
   292   002EC2  3A                 	db	58	;':'
   293   002EC3  4D                 	db	77	;'M'
   294   002EC4  4D                 	db	77	;'M'
   295   002EC5  3A                 	db	58	;':'
   296   002EC6  53                 	db	83	;'S'
   297   002EC7  53                 	db	83	;'S'
   298   002EC8  20                 	db	32
   299   002EC9  20                 	db	32
   300   002ECA  20                 	db	32
   301   002ECB  20                 	db	32
   302   002ECC  00                 	db	0
   303   002ECD                     STR_27:
   304   002ECD  20                 	db	32
   305   002ECE  20                 	db	32
   306   002ECF  4E                 	db	78	;'N'
   307   002ED0  65                 	db	101	;'e'
   308   002ED1  77                 	db	119	;'w'
   309   002ED2  20                 	db	32
   310   002ED3  50                 	db	80	;'P'
   311   002ED4  61                 	db	97	;'a'
   312   002ED5  73                 	db	115	;'s'
   313   002ED6  73                 	db	115	;'s'
   314   002ED7  77                 	db	119	;'w'
   315   002ED8  6F                 	db	111	;'o'
   316   002ED9  72                 	db	114	;'r'
   317   002EDA  64                 	db	100	;'d'
   318   002EDB  20                 	db	32
   319   002EDC  3A                 	db	58	;':'
   320   002EDD  20                 	db	32
   321   002EDE  00                 	db	0
   322   002EDF                     STR_23:
   323   002EDF  20                 	db	32
   324   002EE0  20                 	db	32
   325   002EE1  44                 	db	68	;'D'
   326   002EE2  6F                 	db	111	;'o'
   327   002EE3  77                 	db	119	;'w'
   328   002EE4  6E                 	db	110	;'n'
   329   002EE5  6C                 	db	108	;'l'
   330   002EE6  6F                 	db	111	;'o'
   331   002EE7  61                 	db	97	;'a'
   332   002EE8  64                 	db	100	;'d'
   333   002EE9  20                 	db	32
   334   002EEA  4C                 	db	76	;'L'
   335   002EEB  6F                 	db	111	;'o'
   336   002EEC  67                 	db	103	;'g'
   337   002EED  20                 	db	32
   338   002EEE  20                 	db	32
   339   002EEF  20                 	db	32
   340   002EF0  00                 	db	0
   341   002EF1                     STR_22:
   342   002EF1  20                 	db	32
   343   002EF2  20                 	db	32
   344   002EF3  20                 	db	32
   345   002EF4  20                 	db	32
   346   002EF5  20                 	db	32
   347   002EF6  20                 	db	32
   348   002EF7  20                 	db	32
   349   002EF8  20                 	db	32
   350   002EF9  20                 	db	32
   351   002EFA  20                 	db	32
   352   002EFB  20                 	db	32
   353   002EFC  20                 	db	32
   354   002EFD  20                 	db	32
   355   002EFE  20                 	db	32
   356   002EFF  20                 	db	32
   357   002F00  20                 	db	32
   358   002F01  20                 	db	32
   359   002F02  00                 	db	0
   360   002F03                     STR_21:
   361   002F03  20                 	db	32
   362   002F04  20                 	db	32
   363   002F05  20                 	db	32
   364   002F06  4C                 	db	76	;'L'
   365   002F07  4F                 	db	79	;'O'
   366   002F08  47                 	db	71	;'G'
   367   002F09  20                 	db	32
   368   002F0A  43                 	db	67	;'C'
   369   002F0B  4C                 	db	76	;'L'
   370   002F0C  45                 	db	69	;'E'
   371   002F0D  41                 	db	65	;'A'
   372   002F0E  52                 	db	82	;'R'
   373   002F0F  45                 	db	69	;'E'
   374   002F10  44                 	db	68	;'D'
   375   002F11  20                 	db	32
   376   002F12  20                 	db	32
   377   002F13  20                 	db	32
   378   002F14  00                 	db	0
   379   002F15                     STR_30:
   380   002F15  20                 	db	32
   381   002F16  20                 	db	32
   382   002F17  20                 	db	32
   383   002F18  53                 	db	83	;'S'
   384   002F19  55                 	db	85	;'U'
   385   002F1A  43                 	db	67	;'C'
   386   002F1B  43                 	db	67	;'C'
   387   002F1C  45                 	db	69	;'E'
   388   002F1D  53                 	db	83	;'S'
   389   002F1E  53                 	db	83	;'S'
   390   002F1F  46                 	db	70	;'F'
   391   002F20  55                 	db	85	;'U'
   392   002F21  4C                 	db	76	;'L'
   393   002F22  4C                 	db	76	;'L'
   394   002F23  20                 	db	32
   395   002F24  20                 	db	32
   396   002F25  00                 	db	0
   397   002F26                     STR_20:
   398   002F26  45                 	db	69	;'E'
   399   002F27  6E                 	db	110	;'n'
   400   002F28  74                 	db	116	;'t'
   401   002F29  65                 	db	101	;'e'
   402   002F2A  72                 	db	114	;'r'
   403   002F2B  65                 	db	101	;'e'
   404   002F2C  64                 	db	100	;'d'
   405   002F2D  20                 	db	32
   406   002F2E  56                 	db	86	;'V'
   407   002F2F  69                 	db	105	;'i'
   408   002F30  65                 	db	101	;'e'
   409   002F31  77                 	db	119	;'w'
   410   002F32  20                 	db	32
   411   002F33  4C                 	db	76	;'L'
   412   002F34  6F                 	db	111	;'o'
   413   002F35  67                 	db	103	;'g'
   414   002F36  00                 	db	0
   415   002F37                     STR_17:
   416   002F37  43                 	db	67	;'C'
   417   002F38  6C                 	db	108	;'l'
   418   002F39  65                 	db	101	;'e'
   419   002F3A  61                 	db	97	;'a'
   420   002F3B  72                 	db	114	;'r'
   421   002F3C  20                 	db	32
   422   002F3D  4C                 	db	76	;'L'
   423   002F3E  6F                 	db	111	;'o'
   424   002F3F  67                 	db	103	;'g'
   425   002F40  20                 	db	32
   426   002F41  20                 	db	32
   427   002F42  20                 	db	32
   428   002F43  20                 	db	32
   429   002F44  20                 	db	32
   430   002F45  20                 	db	32
   431   002F46  20                 	db	32
   432   002F47  00                 	db	0
   433   002F48                     STR_13:
   434   002F48  20                 	db	32
   435   002F49  20                 	db	32
   436   002F4A  20                 	db	32
   437   002F4B  54                 	db	84	;'T'
   438   002F4C  72                 	db	114	;'r'
   439   002F4D  79                 	db	121	;'y'
   440   002F4E  20                 	db	32
   441   002F4F  41                 	db	65	;'A'
   442   002F50  67                 	db	103	;'g'
   443   002F51  61                 	db	97	;'a'
   444   002F52  69                 	db	105	;'i'
   445   002F53  6E                 	db	110	;'n'
   446   002F54  20                 	db	32
   447   002F55  20                 	db	32
   448   002F56  20                 	db	32
   449   002F57  20                 	db	32
   450   002F58  00                 	db	0
   451   002F59                     STR_10:
   452   002F59  20                 	db	32
   453   002F5A  45                 	db	69	;'E'
   454   002F5B  6E                 	db	110	;'n'
   455   002F5C  74                 	db	116	;'t'
   456   002F5D  65                 	db	101	;'e'
   457   002F5E  72                 	db	114	;'r'
   458   002F5F  20                 	db	32
   459   002F60  50                 	db	80	;'P'
   460   002F61  61                 	db	97	;'a'
   461   002F62  73                 	db	115	;'s'
   462   002F63  73                 	db	115	;'s'
   463   002F64  77                 	db	119	;'w'
   464   002F65  6F                 	db	111	;'o'
   465   002F66  72                 	db	114	;'r'
   466   002F67  64                 	db	100	;'d'
   467   002F68  20                 	db	32
   468   002F69  00                 	db	0
   469   002F6A                     STR_9:
   470   002F6A  20                 	db	32
   471   002F6B  20                 	db	32
   472   002F6C  54                 	db	84	;'T'
   473   002F6D  49                 	db	73	;'I'
   474   002F6E  4D                 	db	77	;'M'
   475   002F6F  45                 	db	69	;'E'
   476   002F70  20                 	db	32
   477   002F71  20                 	db	32
   478   002F72  20                 	db	32
   479   002F73  20                 	db	32
   480   002F74  45                 	db	69	;'E'
   481   002F75  56                 	db	86	;'V'
   482   002F76  20                 	db	32
   483   002F77  20                 	db	32
   484   002F78  53                 	db	83	;'S'
   485   002F79  50                 	db	80	;'P'
   486   002F7A  00                 	db	0
   487   002F7B                     STR_18:
   488   002F7B  53                 	db	83	;'S'
   489   002F7C  65                 	db	101	;'e'
   490   002F7D  74                 	db	116	;'t'
   491   002F7E  20                 	db	32
   492   002F7F  74                 	db	116	;'t'
   493   002F80  69                 	db	105	;'i'
   494   002F81  6D                 	db	109	;'m'
   495   002F82  65                 	db	101	;'e'
   496   002F83  20                 	db	32
   497   002F84  20                 	db	32
   498   002F85  20                 	db	32
   499   002F86  20                 	db	32
   500   002F87  20                 	db	32
   501   002F88  20                 	db	32
   502   002F89  20                 	db	32
   503   002F8A  00                 	db	0
   504   002F8B                     STR_16:
   505   002F8B  44                 	db	68	;'D'
   506   002F8C  6F                 	db	111	;'o'
   507   002F8D  77                 	db	119	;'w'
   508   002F8E  6E                 	db	110	;'n'
   509   002F8F  6C                 	db	108	;'l'
   510   002F90  6F                 	db	111	;'o'
   511   002F91  61                 	db	97	;'a'
   512   002F92  64                 	db	100	;'d'
   513   002F93  20                 	db	32
   514   002F94  6C                 	db	108	;'l'
   515   002F95  6F                 	db	111	;'o'
   516   002F96  67                 	db	103	;'g'
   517   002F97  20                 	db	32
   518   002F98  20                 	db	32
   519   002F99  20                 	db	32
   520   002F9A  00                 	db	0
   521   002F9B                     STR_11:
   522   002F9B  20                 	db	32
   523   002F9C  53                 	db	83	;'S'
   524   002F9D  79                 	db	121	;'y'
   525   002F9E  73                 	db	115	;'s'
   526   002F9F  74                 	db	116	;'t'
   527   002FA0  65                 	db	101	;'e'
   528   002FA1  6D                 	db	109	;'m'
   529   002FA2  20                 	db	32
   530   002FA3  42                 	db	66	;'B'
   531   002FA4  6C                 	db	108	;'l'
   532   002FA5  6F                 	db	111	;'o'
   533   002FA6  63                 	db	99	;'c'
   534   002FA7  6B                 	db	107	;'k'
   535   002FA8  65                 	db	101	;'e'
   536   002FA9  64                 	db	100	;'d'
   537   002FAA  00                 	db	0
   538   002FAB                     STR_15:
   539   002FAB  56                 	db	86	;'V'
   540   002FAC  69                 	db	105	;'i'
   541   002FAD  65                 	db	101	;'e'
   542   002FAE  77                 	db	119	;'w'
   543   002FAF  20                 	db	32
   544   002FB0  4C                 	db	76	;'L'
   545   002FB1  6F                 	db	111	;'o'
   546   002FB2  67                 	db	103	;'g'
   547   002FB3  20                 	db	32
   548   002FB4  20                 	db	32
   549   002FB5  20                 	db	32
   550   002FB6  20                 	db	32
   551   002FB7  20                 	db	32
   552   002FB8  20                 	db	32
   553   002FB9  00                 	db	0
   554   002FBA                     STR_19:
   555   002FBA  43                 	db	67	;'C'
   556   002FBB  68                 	db	104	;'h'
   557   002FBC  61                 	db	97	;'a'
   558   002FBD  6E                 	db	110	;'n'
   559   002FBE  67                 	db	103	;'g'
   560   002FBF  65                 	db	101	;'e'
   561   002FC0  20                 	db	32
   562   002FC1  50                 	db	80	;'P'
   563   002FC2  61                 	db	97	;'a'
   564   002FC3  73                 	db	115	;'s'
   565   002FC4  73                 	db	115	;'s'
   566   002FC5  77                 	db	119	;'w'
   567   002FC6  72                 	db	114	;'r'
   568   002FC7  64                 	db	100	;'d'
   569   002FC8  00                 	db	0
   570   002FC9                     STR_14:
   571   002FC9  20                 	db	32
   572   002FCA  43                 	db	67	;'C'
   573   002FCB  68                 	db	104	;'h'
   574   002FCC  61                 	db	97	;'a'
   575   002FCD  6E                 	db	110	;'n'
   576   002FCE  63                 	db	99	;'c'
   577   002FCF  65                 	db	101	;'e'
   578   002FD0  73                 	db	115	;'s'
   579   002FD1  20                 	db	32
   580   002FD2  4C                 	db	76	;'L'
   581   002FD3  65                 	db	101	;'e'
   582   002FD4  66                 	db	102	;'f'
   583   002FD5  74                 	db	116	;'t'
   584   002FD6  20                 	db	32
   585   002FD7  00                 	db	0
   586   002FD8                     STR_24:
   587   002FD8  20                 	db	32
   588   002FD9  53                 	db	83	;'S'
   589   002FDA  55                 	db	85	;'U'
   590   002FDB  43                 	db	67	;'C'
   591   002FDC  43                 	db	67	;'C'
   592   002FDD  45                 	db	69	;'E'
   593   002FDE  53                 	db	83	;'S'
   594   002FDF  53                 	db	83	;'S'
   595   002FE0  46                 	db	70	;'F'
   596   002FE1  55                 	db	85	;'U'
   597   002FE2  4C                 	db	76	;'L'
   598   002FE3  4C                 	db	76	;'L'
   599   002FE4  20                 	db	32
   600   002FE5  00                 	db	0
   601   002FE6                     STR_8:
   602   002FE6  43                 	db	67	;'C'
   603   002FE7  20                 	db	32
   604   002FE8  00                 	db	0
   605   002FE9                     STR_4:
   606   002FE9  47                 	db	71	;'G'
   607   002FEA  31                 	db	49	;'1'
   608   002FEB  00                 	db	0
   609   002FEC                     STR_5:
   610   002FEC  47                 	db	71	;'G'
   611   002FED  32                 	db	50	;'2'
   612   002FEE  00                 	db	0
   613   002FEF                     STR_6:
   614   002FEF  47                 	db	71	;'G'
   615   002FF0  33                 	db	51	;'3'
   616   002FF1  00                 	db	0
   617   002FF2                     STR_7:
   618   002FF2  47                 	db	71	;'G'
   619   002FF3  34                 	db	52	;'4'
   620   002FF4  00                 	db	0
   621   002FF5                     STR_3:
   622   002FF5  47                 	db	71	;'G'
   623   002FF6  4E                 	db	78	;'N'
   624   002FF7  00                 	db	0
   625   002FF8                     STR_1:
   626   002FF8  4F                 	db	79	;'O'
   627   002FF9  4E                 	db	78	;'N'
   628   002FFA  00                 	db	0
   629   002FFB                     STR_2:
   630   002FFB  47                 	db	71	;'G'
   631   002FFC  52                 	db	82	;'R'
   632   002FFD  00                 	db	0
   633   002FFE  00                 	db	0	; dummy byte at the end
   634   000000                     
   635                           ; #config settings
   636                           
   637                           	psect	cinit
   638   001FAA                     __pcinit:
   639                           	callstack 0
   640   001FAA                     start_initialization:
   641                           	callstack 0
   642   001FAA                     __initialization:
   643                           	callstack 0
   644                           
   645                           ; Initialize objects allocated to BANK0 (26 bytes)
   646                           ; load TBLPTR registers with __pidataBANK0
   647   001FAA  0EA0               	movlw	low __pidataBANK0
   648   001FAC  6EF6               	movwf	tblptrl,c
   649   001FAE  0E22               	movlw	high __pidataBANK0
   650   001FB0  6EF7               	movwf	tblptrh,c
   651   001FB2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   652   001FB4  6EF8               	movwf	tblptru,c
   653   001FB6  EE00  F0A4         	lfsr	0,__pdataBANK0
   654   001FBA  EE10 F01A          	lfsr	1,26
   655   001FBE                     copy_data0:
   656   001FBE  0009               	tblrd		*+
   657   001FC0  CFF5 FFEE          	movff	tablat,postinc0
   658   001FC4  50E5               	movf	postdec1,w,c
   659   001FC6  50E1               	movf	fsr1l,w,c
   660   001FC8  E1FA               	bnz	copy_data0
   661                           
   662                           ; Initialize objects allocated to COMRAM (3 bytes)
   663                           ; load TBLPTR registers with __pidataCOMRAM
   664   001FCA  0E96               	movlw	low __pidataCOMRAM
   665   001FCC  6EF6               	movwf	tblptrl,c
   666   001FCE  0E23               	movlw	high __pidataCOMRAM
   667   001FD0  6EF7               	movwf	tblptrh,c
   668   001FD2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   669   001FD4  6EF8               	movwf	tblptru,c
   670   001FD6  0009               	tblrd		*+	;fetch initializer
   671   001FD8  CFF5 F05C          	movff	tablat,__pdataCOMRAM
   672   001FDC  0009               	tblrd		*+	;fetch initializer
   673   001FDE  CFF5 F05D          	movff	tablat,__pdataCOMRAM+1
   674   001FE2  0009               	tblrd		*+	;fetch initializer
   675   001FE4  CFF5 F05E          	movff	tablat,__pdataCOMRAM+2
   676                           
   677                           ; Clear objects allocated to BANK0 (68 bytes)
   678   001FE8  EE00  F060         	lfsr	0,__pbssBANK0
   679   001FEC  0E44               	movlw	68
   680   001FEE                     clear_0:
   681   001FEE  6AEE               	clrf	postinc0,c
   682   001FF0  06E8               	decf	wreg,f,c
   683   001FF2  E1FD               	bnz	clear_0
   684                           
   685                           ; Clear objects allocated to COMRAM (35 bytes)
   686   001FF4  EE00  F039         	lfsr	0,__pbssCOMRAM
   687   001FF8  0E23               	movlw	35
   688   001FFA                     clear_1:
   689   001FFA  6AEE               	clrf	postinc0,c
   690   001FFC  06E8               	decf	wreg,f,c
   691   001FFE  E1FD               	bnz	clear_1
   692   002000                     end_of_initialization:
   693                           	callstack 0
   694   002000                     __end_of__initialization:
   695                           	callstack 0
   696   002000  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   697   002002  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   698   002004  0E00               	movlw	low (__Lmediumconst shr (0+16))
   699   002006  6EF8               	movwf	tblptru,c
   700   002008  0100               	movlb	0
   701   00200A  EF96  F006         	goto	_main	;jump to C main() function
   702                           
   703                           	psect	bssCOMRAM
   704   000039                     __pbssCOMRAM:
   705                           	callstack 0
   706   000039                     _clock_reg:
   707                           	callstack 0
   708   000039                     	ds	3
   709   00003C                     _del:
   710                           	callstack 0
   711   00003C                     	ds	2
   712   00003E                     _delay:
   713                           	callstack 0
   714   00003E                     	ds	2
   715   000040                     _key_time:
   716                           	callstack 0
   717   000040                     	ds	2
   718   000042                     _adc_reg_val:
   719                           	callstack 0
   720   000042                     	ds	2
   721   000044                     _t_flag:
   722                           	callstack 0
   723   000044                     	ds	1
   724   000045                     _pos_flag:
   725                           	callstack 0
   726   000045                     	ds	1
   727   000046                     _sec:
   728                           	callstack 0
   729   000046                     	ds	1
   730   000047                     _min:
   731                           	callstack 0
   732   000047                     	ds	1
   733   000048                     _hr:
   734                           	callstack 0
   735   000048                     	ds	1
   736   000049                     _reset_flag:
   737                           	callstack 0
   738   000049                     	ds	1
   739   00004A                     _ind:
   740                           	callstack 0
   741   00004A                     	ds	1
   742   00004B                     _last:
   743                           	callstack 0
   744   00004B                     	ds	1
   745   00004C                     _var:
   746                           	callstack 0
   747   00004C                     	ds	1
   748   00004D                     _start:
   749                           	callstack 0
   750   00004D                     	ds	1
   751   00004E                     _apend_index:
   752                           	callstack 0
   753   00004E                     	ds	1
   754   00004F                     _start_index:
   755                           	callstack 0
   756   00004F                     	ds	1
   757   000050                     _overflow:
   758                           	callstack 0
   759   000050                     	ds	1
   760   000051                     _lap:
   761                           	callstack 0
   762   000051                     	ds	1
   763   000052                     _log_index:
   764                           	callstack 0
   765   000052                     	ds	1
   766   000053                     _star_index:
   767                           	callstack 0
   768   000053                     	ds	1
   769   000054                     _star_flag:
   770                           	callstack 0
   771   000054                     	ds	1
   772   000055                     _index:
   773                           	callstack 0
   774   000055                     	ds	1
   775   000056                     _i:
   776                           	callstack 0
   777   000056                     	ds	1
   778   000057                     read_switches@key:
   779                           	callstack 0
   780   000057                     	ds	1
   781   000058                     _menu_f:
   782                           	callstack 0
   783   000058                     	ds	1
   784   000059                     _main_f:
   785                           	callstack 0
   786   000059                     	ds	1
   787   00005A                     _pre_key:
   788                           	callstack 0
   789   00005A                     	ds	1
   790   00005B                     _key:
   791                           	callstack 0
   792   00005B                     	ds	1
   793                           
   794                           	psect	dataCOMRAM
   795   00005C                     __pdataCOMRAM:
   796                           	callstack 0
   797   00005C                     _chance:
   798                           	callstack 0
   799   00005C                     	ds	1
   800   00005D                     _tick_count:
   801                           	callstack 0
   802   00005D                     	ds	1
   803   00005E                     read_switches@once:
   804                           	callstack 0
   805   00005E                     	ds	1
   806                           
   807                           	psect	bssBANK0
   808   000060                     __pbssBANK0:
   809                           	callstack 0
   810   000060                     _download_array:
   811                           	callstack 0
   812   000060                     	ds	11
   813   00006B                     _view_array:
   814                           	callstack 0
   815   00006B                     	ds	11
   816   000076                     _store:
   817                           	callstack 0
   818   000076                     	ds	11
   819   000081                     isr@count:
   820                           	callstack 0
   821   000081                     	ds	4
   822   000085                     _press_delay:
   823                           	callstack 0
   824   000085                     	ds	2
   825   000087                     _time:
   826                           	callstack 0
   827   000087                     	ds	9
   828   000090                     _temp2:
   829                           	callstack 0
   830   000090                     	ds	5
   831   000095                     _temp1:
   832                           	callstack 0
   833   000095                     	ds	5
   834   00009A                     _temp_password:
   835                           	callstack 0
   836   00009A                     	ds	5
   837   00009F                     _pass:
   838                           	callstack 0
   839   00009F                     	ds	5
   840                           
   841                           	psect	dataBANK0
   842   0000A4                     __pdataBANK0:
   843                           	callstack 0
   844   0000A4                     _events:
   845                           	callstack 0
   846   0000A4                     	ds	16
   847   0000B4                     _logs:
   848                           	callstack 0
   849   0000B4                     	ds	10
   850                           
   851                           	psect	cstackCOMRAM
   852   000001                     __pcstackCOMRAM:
   853                           	callstack 0
   854   000001                     ?_read_adc:
   855                           	callstack 0
   856   000001                     ?_my_strcmp:
   857                           	callstack 0
   858   000001                     ?_my_strcp:
   859                           	callstack 0
   860   000001                     ?___awdiv:
   861                           	callstack 0
   862   000001                     ?___lwdiv:
   863                           	callstack 0
   864   000001                     ?___lwmod:
   865                           	callstack 0
   866   000001                     clcd_write@control_bit:
   867                           	callstack 0
   868   000001                     read_switches@detection_type:
   869                           	callstack 0
   870   000001                     my_strcmp@one:
   871                           	callstack 0
   872   000001                     i2c_write@data:
   873                           	callstack 0
   874   000001                     putch@byte:
   875                           	callstack 0
   876   000001                     my_strcp@one:
   877                           	callstack 0
   878   000001                     ___awdiv@dividend:
   879                           	callstack 0
   880   000001                     ___lwdiv@dividend:
   881                           	callstack 0
   882   000001                     ___lwmod@dividend:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x0
   886   000001                     	ds	1
   887   000002                     clcd_write@byte:
   888                           	callstack 0
   889   000002                     my_strcmp@two:
   890                           	callstack 0
   891   000002                     write_ds1307@data:
   892                           	callstack 0
   893   000002                     read_ds1307@address:
   894                           	callstack 0
   895   000002                     write_external_eeprom@data:
   896                           	callstack 0
   897   000002                     read_external_eeprom@address:
   898                           	callstack 0
   899   000002                     my_strcp@two:
   900                           	callstack 0
   901   000002                     puts@s:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x1
   905   000002                     	ds	1
   906   000003                     ??_read_adc:
   907   000003                     ??_init_clcd:
   908   000003                     ??_my_strcmp:
   909   000003                     ??_my_strcp:
   910   000003                     write_ds1307@address:
   911                           	callstack 0
   912   000003                     read_ds1307@data:
   913                           	callstack 0
   914   000003                     read_external_eeprom@data:
   915                           	callstack 0
   916   000003                     clcd_print@data:
   917                           	callstack 0
   918   000003                     write_external_eeprom@i:
   919                           	callstack 0
   920   000003                     ___awdiv@divisor:
   921                           	callstack 0
   922   000003                     ___lwdiv@divisor:
   923                           	callstack 0
   924   000003                     ___lwmod@divisor:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x2
   928   000003                     	ds	1
   929   000004                     init_ds1307@dummy:
   930                           	callstack 0
   931                           
   932                           ; 1 bytes @ 0x3
   933   000004                     	ds	1
   934   000005                     clcd_print@addr:
   935                           	callstack 0
   936   000005                     write_external_eeprom@address:
   937                           	callstack 0
   938   000005                     ___awdiv@counter:
   939                           	callstack 0
   940   000005                     ___lwmod@counter:
   941                           	callstack 0
   942   000005                     read_adc@reg_val:
   943                           	callstack 0
   944   000005                     my_strcmp@last:
   945                           	callstack 0
   946   000005                     my_strcp@last:
   947                           	callstack 0
   948   000005                     ___lwdiv@quotient:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x4
   952   000005                     	ds	1
   953   000006                     ___awdiv@sign:
   954                           	callstack 0
   955   000006                     init_config@j:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x5
   959   000006                     	ds	1
   960   000007                     read_adc@channel:
   961                           	callstack 0
   962   000007                     ___lwdiv@counter:
   963                           	callstack 0
   964   000007                     my_strcmp@k:
   965                           	callstack 0
   966   000007                     my_strcp@k:
   967                           	callstack 0
   968   000007                     ___awdiv@quotient:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x6
   972   000007                     	ds	1
   973   000008                     ??_store_event:
   974   000008                     ?___xxtofl:
   975                           	callstack 0
   976   000008                     clear_log@key:
   977                           	callstack 0
   978   000008                     ___xxtofl@val:
   979                           	callstack 0
   980                           
   981                           ; 4 bytes @ 0x7
   982   000008                     	ds	1
   983   000009                     ?___awmod:
   984                           	callstack 0
   985   000009                     clear_log@k:
   986                           	callstack 0
   987   000009                     ___awmod@dividend:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x8
   991   000009                     	ds	1
   992   00000A                     store_event@k:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x9
   996   00000A                     	ds	1
   997   00000B                     ___awmod@divisor:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0xA
  1001   00000B                     	ds	1
  1002   00000C                     ??___xxtofl:
  1003                           
  1004                           ; 1 bytes @ 0xB
  1005   00000C                     	ds	1
  1006   00000D                     ___awmod@counter:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0xC
  1010   00000D                     	ds	1
  1011   00000E                     ___awmod@sign:
  1012                           	callstack 0
  1013                           
  1014                           ; 1 bytes @ 0xD
  1015   00000E                     	ds	1
  1016   00000F                     clcd_putch@addr:
  1017                           	callstack 0
  1018   00000F                     download_log@j:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0xE
  1022   00000F                     	ds	1
  1023   000010                     clcd_putch@data:
  1024                           	callstack 0
  1025   000010                     ___xxtofl@sign:
  1026                           	callstack 0
  1027                           
  1028                           ; 1 bytes @ 0xF
  1029   000010                     	ds	1
  1030   000011                     ??_password:
  1031   000011                     ??_view_log:
  1032   000011                     ??_change_pass:
  1033   000011                     ??_settime:
  1034   000011                     menu@key:
  1035                           	callstack 0
  1036   000011                     ___xxtofl@exp:
  1037                           	callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x10
  1040   000011                     	ds	1
  1041   000012                     ___xxtofl@arg:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x11
  1045   000012                     	ds	1
  1046   000013                     settime@key:
  1047                           	callstack 0
  1048   000013                     change_pass@delay:
  1049                           	callstack 0
  1050   000013                     password@wait:
  1051                           	callstack 0
  1052                           
  1053                           ; 8 bytes @ 0x12
  1054   000013                     	ds	3
  1055   000016                     ?___fldiv:
  1056                           	callstack 0
  1057   000016                     view_log@j:
  1058                           	callstack 0
  1059   000016                     ___fldiv@b:
  1060                           	callstack 0
  1061                           
  1062                           ; 4 bytes @ 0x15
  1063   000016                     	ds	1
  1064   000017                     change_pass@key:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x16
  1068   000017                     	ds	1
  1069   000018                     view_log@key:
  1070                           	callstack 0
  1071   000018                     change_pass@k:
  1072                           	callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x17
  1075   000018                     	ds	2
  1076   00001A                     ___fldiv@a:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x19
  1080   00001A                     	ds	1
  1081   00001B                     password@delay:
  1082                           	callstack 0
  1083                           
  1084                           ; 4 bytes @ 0x1A
  1085   00001B                     	ds	3
  1086   00001E                     ??___fldiv:
  1087                           
  1088                           ; 1 bytes @ 0x1D
  1089   00001E                     	ds	1
  1090   00001F                     password@key:
  1091                           	callstack 0
  1092                           
  1093                           ; 1 bytes @ 0x1E
  1094   00001F                     	ds	3
  1095   000022                     ___fldiv@rem:
  1096                           	callstack 0
  1097                           
  1098                           ; 4 bytes @ 0x21
  1099   000022                     	ds	4
  1100   000026                     ___fldiv@sign:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x25
  1104   000026                     	ds	1
  1105   000027                     ___fldiv@new_exp:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x26
  1109   000027                     	ds	2
  1110   000029                     ___fldiv@grs:
  1111                           	callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x28
  1114   000029                     	ds	4
  1115   00002D                     ___fldiv@bexp:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x2C
  1119   00002D                     	ds	1
  1120   00002E                     ___fldiv@aexp:
  1121                           	callstack 0
  1122                           
  1123                           ; 1 bytes @ 0x2D
  1124   00002E                     	ds	1
  1125   00002F                     ?___fltol:
  1126                           	callstack 0
  1127   00002F                     ___fltol@f1:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x2E
  1131   00002F                     	ds	4
  1132   000033                     ??___fltol:
  1133                           
  1134                           ; 1 bytes @ 0x32
  1135   000033                     	ds	4
  1136   000037                     ___fltol@sign1:
  1137                           	callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x36
  1140   000037                     	ds	1
  1141   000038                     ___fltol@exp1:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x37
  1145   000038                     	ds	1
  1146   000039                     
  1147                           ; 1 bytes @ 0x38
  1148 ;;
  1149 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1150 ;;
  1151 ;; *************** function _main *****************
  1152 ;; Defined at:
  1153 ;;		line 58 in file "main.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;		None
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1167 ;;      Params:         0       0       0       0       0       0       0
  1168 ;;      Locals:         0       0       0       0       0       0       0
  1169 ;;      Temps:          0       0       0       0       0       0       0
  1170 ;;      Totals:         0       0       0       0       0       0       0
  1171 ;;Total ram usage:        0 bytes
  1172 ;; Hardware stack levels required when called: 7
  1173 ;; This function calls:
  1174 ;;		___fldiv
  1175 ;;		___fltol
  1176 ;;		___xxtofl
  1177 ;;		_change_pass
  1178 ;;		_clcd_write
  1179 ;;		_clear_log
  1180 ;;		_dashboard
  1181 ;;		_download_log
  1182 ;;		_init_config
  1183 ;;		_menu
  1184 ;;		_password
  1185 ;;		_read_adc
  1186 ;;		_read_switches
  1187 ;;		_settime
  1188 ;;		_view_log
  1189 ;; This function is called by:
  1190 ;;		Startup code after reset
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text0
  1195   000D2C                     __ptext0:
  1196                           	callstack 0
  1197   000D2C                     _main:
  1198                           	callstack 24
  1199   000D2C                     
  1200                           ;main.c: 59:     init_config();
  1201   000D2C  EC21  F00E         	call	_init_config	;wreg free
  1202   000D30                     l3984:
  1203                           
  1204                           ;main.c: 65:         key = read_switches(0);
  1205   000D30  0E00               	movlw	0
  1206   000D32  EC2A  F00F         	call	_read_switches
  1207   000D36  6E5B               	movwf	_key^0,c
  1208   000D38                     
  1209                           ;main.c: 67:         if (key != 0xFF) {
  1210   000D38  285B               	incf	_key^0,w,c
  1211   000D3A  B4D8               	btfsc	status,2,c
  1212   000D3C  EFA2  F006         	goto	u3391
  1213   000D40  EFA4  F006         	goto	u3390
  1214   000D44                     u3391:
  1215   000D44  EFBC  F006         	goto	l3998
  1216   000D48                     u3390:
  1217   000D48                     
  1218                           ;main.c: 68:             pre_key = key;
  1219   000D48  C05B  F05A         	movff	_key,_pre_key
  1220   000D4C                     
  1221                           ;main.c: 69:             key_time++;
  1222   000D4C  4A40               	infsnz	_key_time^0,f,c
  1223   000D4E  2A41               	incf	(_key_time+1)^0,f,c
  1224   000D50                     
  1225                           ;main.c: 70:             if (key_time == 500) {
  1226   000D50  0EF4               	movlw	244
  1227   000D52  1840               	xorwf	_key_time^0,w,c
  1228   000D54  E106               	bnz	u3401
  1229   000D56  0441               	decf	(_key_time+1)^0,w,c
  1230   000D58  A4D8               	btfss	status,2,c
  1231   000D5A  EFB1  F006         	goto	u3401
  1232   000D5E  EFB3  F006         	goto	u3400
  1233   000D62                     u3401:
  1234   000D62  EFB8  F006         	goto	l3996
  1235   000D66                     u3400:
  1236   000D66                     
  1237                           ;main.c: 71:                 key = key + 10;
  1238   000D66  505B               	movf	_key^0,w,c
  1239   000D68  0F0A               	addlw	10
  1240   000D6A  6E5B               	movwf	_key^0,c
  1241                           
  1242                           ;main.c: 72:             } else {
  1243   000D6C  EFE5  F006         	goto	l4008
  1244   000D70                     l3996:
  1245                           
  1246                           ;main.c: 73:                 key = 0;
  1247   000D70  0E00               	movlw	0
  1248   000D72  6E5B               	movwf	_key^0,c
  1249   000D74  EFE5  F006         	goto	l4008
  1250   000D78                     l3998:
  1251   000D78  BE41               	btfsc	(_key_time+1)^0,7,c
  1252   000D7A  EFC7  F006         	goto	u3411
  1253   000D7E  5041               	movf	(_key_time+1)^0,w,c
  1254   000D80  E108               	bnz	u3410
  1255   000D82  0440               	decf	_key_time^0,w,c
  1256   000D84  A0D8               	btfss	status,0,c
  1257   000D86  EFC7  F006         	goto	u3411
  1258   000D8A  EFC9  F006         	goto	u3410
  1259   000D8E                     u3411:
  1260   000D8E  EFDF  F006         	goto	l4006
  1261   000D92                     u3410:
  1262   000D92  BE41               	btfsc	(_key_time+1)^0,7,c
  1263   000D94  EFD7  F006         	goto	u3420
  1264   000D98  0EF4               	movlw	244
  1265   000D9A  5C40               	subwf	_key_time^0,w,c
  1266   000D9C  0E01               	movlw	1
  1267   000D9E  5841               	subwfb	(_key_time+1)^0,w,c
  1268   000DA0  B0D8               	btfsc	status,0,c
  1269   000DA2  EFD5  F006         	goto	u3421
  1270   000DA6  EFD7  F006         	goto	u3420
  1271   000DAA                     u3421:
  1272   000DAA  EFDF  F006         	goto	l4006
  1273   000DAE                     u3420:
  1274   000DAE                     
  1275                           ;main.c: 76:             key_time = 0;
  1276   000DAE  0E00               	movlw	0
  1277   000DB0  6E41               	movwf	(_key_time+1)^0,c
  1278   000DB2  0E00               	movlw	0
  1279   000DB4  6E40               	movwf	_key_time^0,c
  1280   000DB6                     
  1281                           ;main.c: 77:             key = pre_key;
  1282   000DB6  C05A  F05B         	movff	_pre_key,_key
  1283                           
  1284                           ;main.c: 78:         } else {
  1285   000DBA  EFE5  F006         	goto	l4008
  1286   000DBE                     l4006:
  1287                           
  1288                           ;main.c: 79:             key_time = 0;
  1289   000DBE  0E00               	movlw	0
  1290   000DC0  6E41               	movwf	(_key_time+1)^0,c
  1291   000DC2  0E00               	movlw	0
  1292   000DC4  6E40               	movwf	_key_time^0,c
  1293                           
  1294                           ;main.c: 80:             key = 0;
  1295   000DC6  0E00               	movlw	0
  1296   000DC8  6E5B               	movwf	_key^0,c
  1297   000DCA                     l4008:
  1298                           
  1299                           ;main.c: 84:         adc_reg_val = read_adc(0x04) / 10.33;
  1300   000DCA  0EAE               	movlw	174
  1301   000DCC  6E1A               	movwf	___fldiv@a^0,c
  1302   000DCE  0E47               	movlw	71
  1303   000DD0  6E1B               	movwf	(___fldiv@a+1)^0,c
  1304   000DD2  0E25               	movlw	37
  1305   000DD4  6E1C               	movwf	(___fldiv@a+2)^0,c
  1306   000DD6  0E41               	movlw	65
  1307   000DD8  6E1D               	movwf	(___fldiv@a+3)^0,c
  1308   000DDA  0E04               	movlw	4
  1309   000DDC  EC8C  F010         	call	_read_adc
  1310   000DE0  C001  F008         	movff	?_read_adc,___xxtofl@val
  1311   000DE4  C002  F009         	movff	?_read_adc+1,___xxtofl@val+1
  1312   000DE8  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1313   000DEA  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1314   000DEC  0E00               	movlw	0
  1315   000DEE  EC92  F008         	call	___xxtofl
  1316   000DF2  C008  F016         	movff	?___xxtofl,___fldiv@b
  1317   000DF6  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  1318   000DFA  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  1319   000DFE  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  1320   000E02  EC09  F000         	call	___fldiv	;wreg free
  1321   000E06  C016  F02F         	movff	?___fldiv,___fltol@f1
  1322   000E0A  C017  F030         	movff	?___fldiv+1,___fltol@f1+1
  1323   000E0E  C018  F031         	movff	?___fldiv+2,___fltol@f1+2
  1324   000E12  C019  F032         	movff	?___fldiv+3,___fltol@f1+3
  1325   000E16  ECBE  F00B         	call	___fltol	;wreg free
  1326   000E1A  C02F  F042         	movff	?___fltol,_adc_reg_val
  1327   000E1E  C030  F043         	movff	?___fltol+1,_adc_reg_val+1
  1328   000E22                     
  1329                           ;main.c: 88:         if (main_f == 0) {
  1330   000E22  5059               	movf	_main_f^0,w,c
  1331   000E24  A4D8               	btfss	status,2,c
  1332   000E26  EF17  F007         	goto	u3431
  1333   000E2A  EF19  F007         	goto	u3430
  1334   000E2E                     u3431:
  1335   000E2E  EF2F  F007         	goto	l4020
  1336   000E32                     u3430:
  1337   000E32                     
  1338                           ;main.c: 89:             dashboard();
  1339   000E32  ECAC  F00A         	call	_dashboard	;wreg free
  1340   000E36                     
  1341                           ;main.c: 90:             if (key == 5) {
  1342   000E36  0E05               	movlw	5
  1343   000E38  185B               	xorwf	_key^0,w,c
  1344   000E3A  A4D8               	btfss	status,2,c
  1345   000E3C  EF22  F007         	goto	u3441
  1346   000E40  EF24  F007         	goto	u3440
  1347   000E44                     u3441:
  1348   000E44  EF98  F006         	goto	l3984
  1349   000E48                     u3440:
  1350   000E48                     
  1351                           ;main.c: 91:                 clcd_write(0x01, 0);
  1352   000E48  0E00               	movlw	0
  1353   000E4A  6E01               	movwf	clcd_write@control_bit^0,c
  1354   000E4C  0E01               	movlw	1
  1355   000E4E  ECCF  F010         	call	_clcd_write
  1356   000E52                     
  1357                           ;main.c: 92:                 main_f = 1;
  1358   000E52  0E01               	movlw	1
  1359   000E54  6E59               	movwf	_main_f^0,c
  1360   000E56  EF98  F006         	goto	l3984
  1361   000E5A                     l146:
  1362                           
  1363                           ;main.c: 94:         } else if (main_f == 1) {
  1364   000E5A  EF98  F006         	goto	l3984
  1365   000E5E                     l4020:
  1366   000E5E  0459               	decf	_main_f^0,w,c
  1367   000E60  A4D8               	btfss	status,2,c
  1368   000E62  EF35  F007         	goto	u3451
  1369   000E66  EF37  F007         	goto	u3450
  1370   000E6A                     u3451:
  1371   000E6A  EF3C  F007         	goto	l4024
  1372   000E6E                     u3450:
  1373   000E6E                     
  1374                           ;main.c: 95:             password(key);
  1375   000E6E  505B               	movf	_key^0,w,c
  1376   000E70  EC22  F005         	call	_password
  1377                           
  1378                           ;main.c: 96:         } else if (main_f == 2) {
  1379   000E74  EF98  F006         	goto	l3984
  1380   000E78                     l4024:
  1381   000E78  0E02               	movlw	2
  1382   000E7A  1859               	xorwf	_main_f^0,w,c
  1383   000E7C  A4D8               	btfss	status,2,c
  1384   000E7E  EF43  F007         	goto	u3461
  1385   000E82  EF45  F007         	goto	u3460
  1386   000E86                     u3461:
  1387   000E86  EF4A  F007         	goto	l4028
  1388   000E8A                     u3460:
  1389   000E8A                     
  1390                           ;main.c: 97:             menu(key);
  1391   000E8A  505B               	movf	_key^0,w,c
  1392   000E8C  EC0E  F00A         	call	_menu
  1393                           
  1394                           ;main.c: 98:         } else if (main_f == 3) {
  1395   000E90  EF98  F006         	goto	l3984
  1396   000E94                     l4028:
  1397   000E94  0E03               	movlw	3
  1398   000E96  1859               	xorwf	_main_f^0,w,c
  1399   000E98  A4D8               	btfss	status,2,c
  1400   000E9A  EF51  F007         	goto	u3471
  1401   000E9E  EF53  F007         	goto	u3470
  1402   000EA2                     u3471:
  1403   000EA2  EF98  F006         	goto	l3984
  1404   000EA6                     u3470:
  1405   000EA6                     
  1406                           ;main.c: 100:             if (menu_f == 0) {
  1407   000EA6  5058               	movf	_menu_f^0,w,c
  1408   000EA8  A4D8               	btfss	status,2,c
  1409   000EAA  EF59  F007         	goto	u3481
  1410   000EAE  EF5B  F007         	goto	u3480
  1411   000EB2                     u3481:
  1412   000EB2  EF60  F007         	goto	l4034
  1413   000EB6                     u3480:
  1414   000EB6                     
  1415                           ;main.c: 101:                 view_log(key);
  1416   000EB6  505B               	movf	_key^0,w,c
  1417   000EB8  EC98  F007         	call	_view_log
  1418                           
  1419                           ;main.c: 102:             }
  1420   000EBC  EF98  F006         	goto	l3984
  1421   000EC0                     l4034:
  1422   000EC0  0E02               	movlw	2
  1423   000EC2  1858               	xorwf	_menu_f^0,w,c
  1424   000EC4  A4D8               	btfss	status,2,c
  1425   000EC6  EF67  F007         	goto	u3491
  1426   000ECA  EF69  F007         	goto	u3490
  1427   000ECE                     u3491:
  1428   000ECE  EF6E  F007         	goto	l4038
  1429   000ED2                     u3490:
  1430   000ED2                     
  1431                           ;main.c: 104:                 clear_log(key);
  1432   000ED2  505B               	movf	_key^0,w,c
  1433   000ED4  EC13  F00D         	call	_clear_log
  1434                           
  1435                           ;main.c: 105:             } else if (menu_f == 1) {
  1436   000ED8  EF98  F006         	goto	l3984
  1437   000EDC                     l4038:
  1438   000EDC  0458               	decf	_menu_f^0,w,c
  1439   000EDE  A4D8               	btfss	status,2,c
  1440   000EE0  EF74  F007         	goto	u3501
  1441   000EE4  EF76  F007         	goto	u3500
  1442   000EE8                     u3501:
  1443   000EE8  EF7A  F007         	goto	l4042
  1444   000EEC                     u3500:
  1445   000EEC                     
  1446                           ;main.c: 106:                 download_log();
  1447   000EEC  EC6C  F009         	call	_download_log	;wreg free
  1448                           
  1449                           ;main.c: 107:             } else if (menu_f == 4) {
  1450   000EF0  EF98  F006         	goto	l3984
  1451   000EF4                     l4042:
  1452   000EF4  0E04               	movlw	4
  1453   000EF6  1858               	xorwf	_menu_f^0,w,c
  1454   000EF8  A4D8               	btfss	status,2,c
  1455   000EFA  EF81  F007         	goto	u3511
  1456   000EFE  EF83  F007         	goto	u3510
  1457   000F02                     u3511:
  1458   000F02  EF88  F007         	goto	l4046
  1459   000F06                     u3510:
  1460   000F06                     
  1461                           ;main.c: 108:                 change_pass(key);
  1462   000F06  505B               	movf	_key^0,w,c
  1463   000F08  ECD6  F001         	call	_change_pass
  1464                           
  1465                           ;main.c: 109:             } else if (menu_f == 3) {
  1466   000F0C  EF98  F006         	goto	l3984
  1467   000F10                     l4046:
  1468   000F10  0E03               	movlw	3
  1469   000F12  1858               	xorwf	_menu_f^0,w,c
  1470   000F14  A4D8               	btfss	status,2,c
  1471   000F16  EF8F  F007         	goto	u3521
  1472   000F1A  EF91  F007         	goto	u3520
  1473   000F1E                     u3521:
  1474   000F1E  EF2D  F007         	goto	l146
  1475   000F22                     u3520:
  1476   000F22                     
  1477                           ;main.c: 111:                 settime(key);
  1478   000F22  505B               	movf	_key^0,w,c
  1479   000F24  ECA2  F003         	call	_settime
  1480   000F28  EF98  F006         	goto	l3984
  1481   000F2C  EF07  F000         	goto	start
  1482   000F30                     __end_of_main:
  1483                           	callstack 0
  1484                           
  1485 ;; *************** function _view_log *****************
  1486 ;; Defined at:
  1487 ;;		line 24 in file "view_log.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  key             1    wreg     unsigned char 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  key             1   23[COMRAM] unsigned char 
  1492 ;;  j               2   21[COMRAM] int 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1502 ;;      Params:         0       0       0       0       0       0       0
  1503 ;;      Locals:         3       0       0       0       0       0       0
  1504 ;;      Temps:          5       0       0       0       0       0       0
  1505 ;;      Totals:         8       0       0       0       0       0       0
  1506 ;;Total ram usage:        8 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 5
  1509 ;; This function calls:
  1510 ;;		___awmod
  1511 ;;		_clcd_print
  1512 ;;		_clcd_putch
  1513 ;;		_read_external_eeprom
  1514 ;; This function is called by:
  1515 ;;		_main
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text1
  1520   000F30                     __ptext1:
  1521                           	callstack 0
  1522   000F30                     _view_log:
  1523                           	callstack 25
  1524                           
  1525                           ;incstack = 0
  1526                           ;view_log@key stored from wreg
  1527   000F30  6E18               	movwf	view_log@key^0,c
  1528   000F32                     
  1529                           ;view_log.c: 27:     if (key == 16) {
  1530   000F32  0E10               	movlw	16
  1531   000F34  1818               	xorwf	view_log@key^0,w,c
  1532   000F36  A4D8               	btfss	status,2,c
  1533   000F38  EFA0  F007         	goto	u2521
  1534   000F3C  EFA2  F007         	goto	u2520
  1535   000F40                     u2521:
  1536   000F40  EFA4  F007         	goto	l521
  1537   000F44                     u2520:
  1538   000F44                     
  1539                           ;view_log.c: 28:         main_f = 2;
  1540   000F44  0E02               	movlw	2
  1541   000F46  6E59               	movwf	_main_f^0,c
  1542   000F48                     l521:
  1543                           
  1544                           ;view_log.c: 32:     if (overflow == 0) {
  1545   000F48  5050               	movf	_overflow^0,w,c
  1546   000F4A  A4D8               	btfss	status,2,c
  1547   000F4C  EFAA  F007         	goto	u2531
  1548   000F50  EFAC  F007         	goto	u2530
  1549   000F54                     u2531:
  1550   000F54  EFE4  F007         	goto	l3406
  1551   000F58                     u2530:
  1552   000F58                     
  1553                           ;view_log.c: 33:         start_index = 0;
  1554   000F58  0E00               	movlw	0
  1555   000F5A  6E4F               	movwf	_start_index^0,c
  1556   000F5C                     
  1557                           ;view_log.c: 35:         if (key == 5 && apend_index < lap - 1) {
  1558   000F5C  0E05               	movlw	5
  1559   000F5E  1818               	xorwf	view_log@key^0,w,c
  1560   000F60  A4D8               	btfss	status,2,c
  1561   000F62  EFB5  F007         	goto	u2541
  1562   000F66  EFB7  F007         	goto	u2540
  1563   000F6A                     u2541:
  1564   000F6A  EFD0  F007         	goto	l3400
  1565   000F6E                     u2540:
  1566   000F6E  0EFF               	movlw	255
  1567   000F70  2451               	addwf	_lap^0,w,c
  1568   000F72  6E11               	movwf	??_view_log^0,c
  1569   000F74  6A12               	clrf	(??_view_log+1)^0,c
  1570   000F76  0EFF               	movlw	255
  1571   000F78  2212               	addwfc	(??_view_log+1)^0,f,c
  1572   000F7A  504E               	movf	_apend_index^0,w,c
  1573   000F7C  6E13               	movwf	(??_view_log+2)^0,c
  1574   000F7E  6A14               	clrf	(??_view_log+3)^0,c
  1575   000F80  5011               	movf	??_view_log^0,w,c
  1576   000F82  5C13               	subwf	(??_view_log+2)^0,w,c
  1577   000F84  5014               	movf	(??_view_log+3)^0,w,c
  1578   000F86  0A80               	xorlw	128
  1579   000F88  6E15               	movwf	(??_view_log+4)^0,c
  1580   000F8A  5012               	movf	(??_view_log+1)^0,w,c
  1581   000F8C  0A80               	xorlw	128
  1582   000F8E  5815               	subwfb	(??_view_log+4)^0,w,c
  1583   000F90  B0D8               	btfsc	status,0,c
  1584   000F92  EFCD  F007         	goto	u2551
  1585   000F96  EFCF  F007         	goto	u2550
  1586   000F9A                     u2551:
  1587   000F9A  EFD0  F007         	goto	l3400
  1588   000F9E                     u2550:
  1589   000F9E                     
  1590                           ;view_log.c: 36:             apend_index++;
  1591   000F9E  2A4E               	incf	_apend_index^0,f,c
  1592   000FA0                     l3400:
  1593                           
  1594                           ;view_log.c: 39:         if (key == 6 && apend_index > 0) {
  1595   000FA0  0E06               	movlw	6
  1596   000FA2  1818               	xorwf	view_log@key^0,w,c
  1597   000FA4  A4D8               	btfss	status,2,c
  1598   000FA6  EFD7  F007         	goto	u2561
  1599   000FAA  EFD9  F007         	goto	u2560
  1600   000FAE                     u2561:
  1601   000FAE  EF13  F008         	goto	l3422
  1602   000FB2                     u2560:
  1603   000FB2  504E               	movf	_apend_index^0,w,c
  1604   000FB4  B4D8               	btfsc	status,2,c
  1605   000FB6  EFDF  F007         	goto	u2571
  1606   000FBA  EFE1  F007         	goto	u2570
  1607   000FBE                     u2571:
  1608   000FBE  EF13  F008         	goto	l3422
  1609   000FC2                     u2570:
  1610   000FC2                     l3404:
  1611                           
  1612                           ;view_log.c: 40:             apend_index--;
  1613   000FC2  064E               	decf	_apend_index^0,f,c
  1614   000FC4  EF13  F008         	goto	l3422
  1615   000FC8                     l3406:
  1616   000FC8  0450               	decf	_overflow^0,w,c
  1617   000FCA  A4D8               	btfss	status,2,c
  1618   000FCC  EFEA  F007         	goto	u2581
  1619   000FD0  EFEC  F007         	goto	u2580
  1620   000FD4                     u2581:
  1621   000FD4  EF13  F008         	goto	l3422
  1622   000FD8                     u2580:
  1623   000FD8                     
  1624                           ;view_log.c: 47:         start_index = lap;
  1625   000FD8  C051  F04F         	movff	_lap,_start_index
  1626   000FDC                     
  1627                           ;view_log.c: 49:         if (key == 5 && apend_index < 9) {
  1628   000FDC  0E05               	movlw	5
  1629   000FDE  1818               	xorwf	view_log@key^0,w,c
  1630   000FE0  A4D8               	btfss	status,2,c
  1631   000FE2  EFF5  F007         	goto	u2591
  1632   000FE6  EFF7  F007         	goto	u2590
  1633   000FEA                     u2591:
  1634   000FEA  EF00  F008         	goto	l3416
  1635   000FEE                     u2590:
  1636   000FEE  0E09               	movlw	9
  1637   000FF0  604E               	cpfslt	_apend_index^0,c
  1638   000FF2  EFFD  F007         	goto	u2601
  1639   000FF6  EFFF  F007         	goto	u2600
  1640   000FFA                     u2601:
  1641   000FFA  EF00  F008         	goto	l3416
  1642   000FFE                     u2600:
  1643   000FFE                     
  1644                           ;view_log.c: 50:             apend_index++;
  1645   000FFE  2A4E               	incf	_apend_index^0,f,c
  1646   001000                     l3416:
  1647                           
  1648                           ;view_log.c: 52:         if (key == 6 && apend_index > 0) {
  1649   001000  0E06               	movlw	6
  1650   001002  1818               	xorwf	view_log@key^0,w,c
  1651   001004  A4D8               	btfss	status,2,c
  1652   001006  EF07  F008         	goto	u2611
  1653   00100A  EF09  F008         	goto	u2610
  1654   00100E                     u2611:
  1655   00100E  EF13  F008         	goto	l3422
  1656   001012                     u2610:
  1657   001012  504E               	movf	_apend_index^0,w,c
  1658   001014  B4D8               	btfsc	status,2,c
  1659   001016  EF0F  F008         	goto	u2621
  1660   00101A  EF11  F008         	goto	u2620
  1661   00101E                     u2621:
  1662   00101E  EF13  F008         	goto	l3422
  1663   001022                     u2620:
  1664   001022  EFE1  F007         	goto	l3404
  1665   001026                     l3422:
  1666                           
  1667                           ;view_log.c: 60:     for (int j = 0; j < 10; j++) {
  1668   001026  0E00               	movlw	0
  1669   001028  6E17               	movwf	(view_log@j+1)^0,c
  1670   00102A  0E00               	movlw	0
  1671   00102C  6E16               	movwf	view_log@j^0,c
  1672   00102E                     l3428:
  1673                           
  1674                           ;view_log.c: 61:         view_array[j] = read_external_eeprom((start_index + apend_index
      +                          ) % 10 * 10 + j);
  1675   00102E  5016               	movf	view_log@j^0,w,c
  1676   001030  0F6B               	addlw	low _view_array
  1677   001032  6ED9               	movwf	fsr2l,c
  1678   001034  6ADA               	clrf	fsr2h,c
  1679   001036  504F               	movf	_start_index^0,w,c
  1680   001038  244E               	addwf	_apend_index^0,w,c
  1681   00103A  6E09               	movwf	___awmod@dividend^0,c
  1682   00103C  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1683   00103E  360A               	rlcf	(___awmod@dividend+1)^0,f,c
  1684   001040  0E00               	movlw	0
  1685   001042  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1686   001044  0E0A               	movlw	10
  1687   001046  6E0B               	movwf	___awmod@divisor^0,c
  1688   001048  EC75  F00D         	call	___awmod	;wreg free
  1689   00104C  5009               	movf	?___awmod^0,w,c
  1690   00104E  0D0A               	mullw	10
  1691   001050  50F3               	movf	243,w,c
  1692   001052  2416               	addwf	view_log@j^0,w,c
  1693   001054  EC07  F011         	call	_read_external_eeprom
  1694   001058  6EDF               	movwf	indf2,c
  1695   00105A                     
  1696                           ;view_log.c: 62:     }
  1697   00105A  4A16               	infsnz	view_log@j^0,f,c
  1698   00105C  2A17               	incf	(view_log@j+1)^0,f,c
  1699   00105E  BE17               	btfsc	(view_log@j+1)^0,7,c
  1700   001060  EF3B  F008         	goto	u2631
  1701   001064  5017               	movf	(view_log@j+1)^0,w,c
  1702   001066  E109               	bnz	u2630
  1703   001068  0E0A               	movlw	10
  1704   00106A  5C16               	subwf	view_log@j^0,w,c
  1705   00106C  A0D8               	btfss	status,0,c
  1706   00106E  EF3B  F008         	goto	u2631
  1707   001072  EF3D  F008         	goto	u2630
  1708   001076                     u2631:
  1709   001076  EF17  F008         	goto	l3428
  1710   00107A                     u2630:
  1711   00107A                     
  1712                           ;view_log.c: 65:     clcd_print("Entered View Log", (0x80 + (0)));
  1713   00107A  0E26               	movlw	low STR_20
  1714   00107C  6E03               	movwf	clcd_print@data^0,c
  1715   00107E  0E2F               	movlw	high STR_20
  1716   001080  6E04               	movwf	(clcd_print@data+1)^0,c
  1717   001082  0E80               	movlw	128
  1718   001084  6E05               	movwf	clcd_print@addr^0,c
  1719   001086  EC9F  F00F         	call	_clcd_print	;wreg free
  1720   00108A                     
  1721                           ;view_log.c: 66:     clcd_putch('0' + apend_index, (0xC0 + (0)));
  1722   00108A  0EC0               	movlw	192
  1723   00108C  6E0F               	movwf	clcd_putch@addr^0,c
  1724   00108E  504E               	movf	_apend_index^0,w,c
  1725   001090  0F30               	addlw	48
  1726   001092  EC5D  F011         	call	_clcd_putch
  1727   001096                     
  1728                           ;view_log.c: 69:     clcd_putch(view_array[0], (0xC0 + (2)));
  1729   001096  0EC2               	movlw	194
  1730   001098  6E0F               	movwf	clcd_putch@addr^0,c
  1731   00109A  0100               	movlb	0	; () banked
  1732   00109C  516B               	movf	_view_array& (0+255),w,b
  1733   00109E  EC5D  F011         	call	_clcd_putch
  1734   0010A2                     
  1735                           ;view_log.c: 70:     clcd_putch(view_array[1], (0xC0 + (3)));
  1736   0010A2  0EC3               	movlw	195
  1737   0010A4  6E0F               	movwf	clcd_putch@addr^0,c
  1738   0010A6  0100               	movlb	0	; () banked
  1739   0010A8  516C               	movf	(_view_array+1)& (0+255),w,b
  1740   0010AA  EC5D  F011         	call	_clcd_putch
  1741   0010AE                     
  1742                           ;view_log.c: 71:     clcd_putch(':', (0xC0 + (4)));
  1743   0010AE  0EC4               	movlw	196
  1744   0010B0  6E0F               	movwf	clcd_putch@addr^0,c
  1745   0010B2  0E3A               	movlw	58
  1746   0010B4  EC5D  F011         	call	_clcd_putch
  1747   0010B8                     
  1748                           ;view_log.c: 73:     clcd_putch(view_array[2], (0xC0 + (5)));
  1749   0010B8  0EC5               	movlw	197
  1750   0010BA  6E0F               	movwf	clcd_putch@addr^0,c
  1751   0010BC  0100               	movlb	0	; () banked
  1752   0010BE  516D               	movf	(_view_array+2)& (0+255),w,b
  1753   0010C0  EC5D  F011         	call	_clcd_putch
  1754   0010C4                     
  1755                           ;view_log.c: 74:     clcd_putch(view_array[3], (0xC0 + (6)));
  1756   0010C4  0EC6               	movlw	198
  1757   0010C6  6E0F               	movwf	clcd_putch@addr^0,c
  1758   0010C8  0100               	movlb	0	; () banked
  1759   0010CA  516E               	movf	(_view_array+3)& (0+255),w,b
  1760   0010CC  EC5D  F011         	call	_clcd_putch
  1761   0010D0                     
  1762                           ;view_log.c: 75:     clcd_putch(':', (0xC0 + (7)));
  1763   0010D0  0EC7               	movlw	199
  1764   0010D2  6E0F               	movwf	clcd_putch@addr^0,c
  1765   0010D4  0E3A               	movlw	58
  1766   0010D6  EC5D  F011         	call	_clcd_putch
  1767   0010DA                     
  1768                           ;view_log.c: 77:     clcd_putch(view_array[4], (0xC0 + (8)));
  1769   0010DA  0EC8               	movlw	200
  1770   0010DC  6E0F               	movwf	clcd_putch@addr^0,c
  1771   0010DE  0100               	movlb	0	; () banked
  1772   0010E0  516F               	movf	(_view_array+4)& (0+255),w,b
  1773   0010E2  EC5D  F011         	call	_clcd_putch
  1774   0010E6                     
  1775                           ;view_log.c: 78:     clcd_putch(view_array[5], (0xC0 + (9)));
  1776   0010E6  0EC9               	movlw	201
  1777   0010E8  6E0F               	movwf	clcd_putch@addr^0,c
  1778   0010EA  0100               	movlb	0	; () banked
  1779   0010EC  5170               	movf	(_view_array+5)& (0+255),w,b
  1780   0010EE  EC5D  F011         	call	_clcd_putch
  1781   0010F2                     
  1782                           ;view_log.c: 81:     clcd_putch(view_array[6], (0xC0 + (11)));
  1783   0010F2  0ECB               	movlw	203
  1784   0010F4  6E0F               	movwf	clcd_putch@addr^0,c
  1785   0010F6  0100               	movlb	0	; () banked
  1786   0010F8  5171               	movf	(_view_array+6)& (0+255),w,b
  1787   0010FA  EC5D  F011         	call	_clcd_putch
  1788   0010FE                     
  1789                           ;view_log.c: 82:     clcd_putch(view_array[7], (0xC0 + (12)));
  1790   0010FE  0ECC               	movlw	204
  1791   001100  6E0F               	movwf	clcd_putch@addr^0,c
  1792   001102  0100               	movlb	0	; () banked
  1793   001104  5172               	movf	(_view_array+7)& (0+255),w,b
  1794   001106  EC5D  F011         	call	_clcd_putch
  1795   00110A                     
  1796                           ;view_log.c: 85:     clcd_putch(view_array[8], (0xC0 + (14)));
  1797   00110A  0ECE               	movlw	206
  1798   00110C  6E0F               	movwf	clcd_putch@addr^0,c
  1799   00110E  0100               	movlb	0	; () banked
  1800   001110  5173               	movf	(_view_array+8)& (0+255),w,b
  1801   001112  EC5D  F011         	call	_clcd_putch
  1802   001116                     
  1803                           ;view_log.c: 86:     clcd_putch(view_array[9], (0xC0 + (15)));
  1804   001116  0ECF               	movlw	207
  1805   001118  6E0F               	movwf	clcd_putch@addr^0,c
  1806   00111A  0100               	movlb	0	; () banked
  1807   00111C  5174               	movf	(_view_array+9)& (0+255),w,b
  1808   00111E  EC5D  F011         	call	_clcd_putch
  1809   001122  0012               	return		;funcret
  1810   001124                     __end_of_view_log:
  1811                           	callstack 0
  1812                           
  1813 ;; *************** function _settime *****************
  1814 ;; Defined at:
  1815 ;;		line 23 in file "set_time.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  key             1    wreg     unsigned char 
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  key             1   18[COMRAM] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1829 ;;      Params:         0       0       0       0       0       0       0
  1830 ;;      Locals:         1       0       0       0       0       0       0
  1831 ;;      Temps:          2       0       0       0       0       0       0
  1832 ;;      Totals:         3       0       0       0       0       0       0
  1833 ;;Total ram usage:        3 bytes
  1834 ;; Hardware stack levels used: 1
  1835 ;; Hardware stack levels required when called: 3
  1836 ;; This function calls:
  1837 ;;		___awdiv
  1838 ;;		___awmod
  1839 ;;		___lwdiv
  1840 ;;		___lwmod
  1841 ;;		_clcd_print
  1842 ;;		_clcd_putch
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text2
  1849   000744                     __ptext2:
  1850                           	callstack 0
  1851   000744                     _settime:
  1852                           	callstack 27
  1853                           
  1854                           ;incstack = 0
  1855                           ;settime@key stored from wreg
  1856   000744  6E13               	movwf	settime@key^0,c
  1857   000746                     
  1858                           ;set_time.c: 26:     clcd_print("     HH:MM:SS    ", (0x80 + (0)));
  1859   000746  0EBB               	movlw	low STR_31
  1860   000748  6E03               	movwf	clcd_print@data^0,c
  1861   00074A  0E2E               	movlw	high STR_31
  1862   00074C  6E04               	movwf	(clcd_print@data+1)^0,c
  1863   00074E  0E80               	movlw	128
  1864   000750  6E05               	movwf	clcd_print@addr^0,c
  1865   000752  EC9F  F00F         	call	_clcd_print	;wreg free
  1866   000756                     
  1867                           ;set_time.c: 27:     if (t_flag == 0) {
  1868   000756  5044               	movf	_t_flag^0,w,c
  1869   000758  A4D8               	btfss	status,2,c
  1870   00075A  EFB1  F003         	goto	u2871
  1871   00075E  EFB3  F003         	goto	u2870
  1872   000762                     u2871:
  1873   000762  EFC7  F003         	goto	l3678
  1874   000766                     u2870:
  1875   000766                     
  1876                           ;set_time.c: 28:         hr = ((time[0] - 48)*10 + (time[0] - 48));
  1877   000766  0100               	movlb	0	; () banked
  1878   000768  5187               	movf	_time& (0+255),w,b
  1879   00076A  0D0B               	mullw	11
  1880   00076C  50F3               	movf	243,w,c
  1881   00076E  0FF0               	addlw	240
  1882   000770  6E48               	movwf	_hr^0,c
  1883                           
  1884                           ;set_time.c: 29:         min = ((time[3] - 48)*10 + (time[4] - 48));
  1885   000772  518A               	movf	(_time+3)& (0+255),w,b
  1886   000774  0D0A               	mullw	10
  1887   000776  50F3               	movf	243,w,c
  1888   000778  258B               	addwf	(_time+4)& (0+255),w,b
  1889   00077A  0FF0               	addlw	240
  1890   00077C  6E47               	movwf	_min^0,c
  1891                           
  1892                           ;set_time.c: 30:         sec = ((time[6] - 48)*10 + (time[7] - 48));
  1893   00077E  518D               	movf	(_time+6)& (0+255),w,b
  1894   000780  0D0A               	mullw	10
  1895   000782  50F3               	movf	243,w,c
  1896   000784  258E               	addwf	(_time+7)& (0+255),w,b
  1897   000786  0FF0               	addlw	240
  1898   000788  6E46               	movwf	_sec^0,c
  1899   00078A                     
  1900                           ; BSR set to: 0
  1901                           ;set_time.c: 31:         t_flag = 1;
  1902   00078A  0E01               	movlw	1
  1903   00078C  6E44               	movwf	_t_flag^0,c
  1904   00078E                     l3678:
  1905                           
  1906                           ;set_time.c: 34:     clcd_putch('0' + (hr / 10), (0xC0 + (0)));
  1907   00078E  0EC0               	movlw	192
  1908   000790  6E0F               	movwf	clcd_putch@addr^0,c
  1909   000792  C048  F001         	movff	_hr,___awdiv@dividend
  1910   000796  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1911   000798  0E00               	movlw	0
  1912   00079A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1913   00079C  0E0A               	movlw	10
  1914   00079E  6E03               	movwf	___awdiv@divisor^0,c
  1915   0007A0  ECB1  F00C         	call	___awdiv	;wreg free
  1916   0007A4  5001               	movf	?___awdiv^0,w,c
  1917   0007A6  0F30               	addlw	48
  1918   0007A8  EC5D  F011         	call	_clcd_putch
  1919   0007AC                     
  1920                           ;set_time.c: 35:     clcd_putch('0' + (hr % 10), (0xC0 + (1)));
  1921   0007AC  0EC1               	movlw	193
  1922   0007AE  6E0F               	movwf	clcd_putch@addr^0,c
  1923   0007B0  C048  F009         	movff	_hr,___awmod@dividend
  1924   0007B4  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1925   0007B6  0E00               	movlw	0
  1926   0007B8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1927   0007BA  0E0A               	movlw	10
  1928   0007BC  6E0B               	movwf	___awmod@divisor^0,c
  1929   0007BE  EC75  F00D         	call	___awmod	;wreg free
  1930   0007C2  5009               	movf	?___awmod^0,w,c
  1931   0007C4  0F30               	addlw	48
  1932   0007C6  EC5D  F011         	call	_clcd_putch
  1933   0007CA                     
  1934                           ;set_time.c: 37:     clcd_putch(':', (0xC0 + (2)));
  1935   0007CA  0EC2               	movlw	194
  1936   0007CC  6E0F               	movwf	clcd_putch@addr^0,c
  1937   0007CE  0E3A               	movlw	58
  1938   0007D0  EC5D  F011         	call	_clcd_putch
  1939   0007D4                     
  1940                           ;set_time.c: 38:     clcd_putch('0' + (min / 10), (0xC0 + (3)));
  1941   0007D4  0EC3               	movlw	195
  1942   0007D6  6E0F               	movwf	clcd_putch@addr^0,c
  1943   0007D8  C047  F001         	movff	_min,___awdiv@dividend
  1944   0007DC  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1945   0007DE  0E00               	movlw	0
  1946   0007E0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1947   0007E2  0E0A               	movlw	10
  1948   0007E4  6E03               	movwf	___awdiv@divisor^0,c
  1949   0007E6  ECB1  F00C         	call	___awdiv	;wreg free
  1950   0007EA  5001               	movf	?___awdiv^0,w,c
  1951   0007EC  0F30               	addlw	48
  1952   0007EE  EC5D  F011         	call	_clcd_putch
  1953   0007F2                     
  1954                           ;set_time.c: 39:     clcd_putch('0' + (min % 10), (0xC0 + (4)));
  1955   0007F2  0EC4               	movlw	196
  1956   0007F4  6E0F               	movwf	clcd_putch@addr^0,c
  1957   0007F6  C047  F009         	movff	_min,___awmod@dividend
  1958   0007FA  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1959   0007FC  0E00               	movlw	0
  1960   0007FE  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1961   000800  0E0A               	movlw	10
  1962   000802  6E0B               	movwf	___awmod@divisor^0,c
  1963   000804  EC75  F00D         	call	___awmod	;wreg free
  1964   000808  5009               	movf	?___awmod^0,w,c
  1965   00080A  0F30               	addlw	48
  1966   00080C  EC5D  F011         	call	_clcd_putch
  1967   000810                     
  1968                           ;set_time.c: 41:     clcd_putch(':', (0xC0 + (5)));
  1969   000810  0EC5               	movlw	197
  1970   000812  6E0F               	movwf	clcd_putch@addr^0,c
  1971   000814  0E3A               	movlw	58
  1972   000816  EC5D  F011         	call	_clcd_putch
  1973   00081A                     
  1974                           ;set_time.c: 42:     clcd_putch('0' + (sec / 10), (0xC0 + (6)));
  1975   00081A  0EC6               	movlw	198
  1976   00081C  6E0F               	movwf	clcd_putch@addr^0,c
  1977   00081E  C046  F001         	movff	_sec,___awdiv@dividend
  1978   000822  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1979   000824  0E00               	movlw	0
  1980   000826  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1981   000828  0E0A               	movlw	10
  1982   00082A  6E03               	movwf	___awdiv@divisor^0,c
  1983   00082C  ECB1  F00C         	call	___awdiv	;wreg free
  1984   000830  5001               	movf	?___awdiv^0,w,c
  1985   000832  0F30               	addlw	48
  1986   000834  EC5D  F011         	call	_clcd_putch
  1987   000838                     
  1988                           ;set_time.c: 43:     clcd_putch('0' + (sec % 10), (0xC0 + (7)));
  1989   000838  0EC7               	movlw	199
  1990   00083A  6E0F               	movwf	clcd_putch@addr^0,c
  1991   00083C  C046  F009         	movff	_sec,___awmod@dividend
  1992   000840  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1993   000842  0E00               	movlw	0
  1994   000844  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1995   000846  0E0A               	movlw	10
  1996   000848  6E0B               	movwf	___awmod@divisor^0,c
  1997   00084A  EC75  F00D         	call	___awmod	;wreg free
  1998   00084E  5009               	movf	?___awmod^0,w,c
  1999   000850  0F30               	addlw	48
  2000   000852  EC5D  F011         	call	_clcd_putch
  2001   000856                     
  2002                           ;set_time.c: 45:     if (key == 5) {
  2003   000856  0E05               	movlw	5
  2004   000858  1813               	xorwf	settime@key^0,w,c
  2005   00085A  A4D8               	btfss	status,2,c
  2006   00085C  EF32  F004         	goto	u2881
  2007   000860  EF34  F004         	goto	u2880
  2008   000864                     u2881:
  2009   000864  EF7B  F004         	goto	l3720
  2010   000868                     u2880:
  2011   000868                     
  2012                           ;set_time.c: 46:         if (pos_flag == 0) {
  2013   000868  5045               	movf	_pos_flag^0,w,c
  2014   00086A  A4D8               	btfss	status,2,c
  2015   00086C  EF3A  F004         	goto	u2891
  2016   000870  EF3C  F004         	goto	u2890
  2017   000874                     u2891:
  2018   000874  EF4C  F004         	goto	l3704
  2019   000878                     u2890:
  2020   000878                     
  2021                           ;set_time.c: 47:             if (sec == 59) {
  2022   000878  0E3B               	movlw	59
  2023   00087A  1846               	xorwf	_sec^0,w,c
  2024   00087C  A4D8               	btfss	status,2,c
  2025   00087E  EF43  F004         	goto	u2901
  2026   000882  EF45  F004         	goto	u2900
  2027   000886                     u2901:
  2028   000886  EF49  F004         	goto	l3702
  2029   00088A                     u2900:
  2030   00088A                     
  2031                           ;set_time.c: 48:                 sec = 0;
  2032   00088A  0E00               	movlw	0
  2033   00088C  6E46               	movwf	_sec^0,c
  2034                           
  2035                           ;set_time.c: 49:             } else
  2036   00088E  EF90  F004         	goto	l3728
  2037   000892                     l3702:
  2038                           
  2039                           ;set_time.c: 50:                 sec++;
  2040   000892  2A46               	incf	_sec^0,f,c
  2041   000894  EF90  F004         	goto	l3728
  2042   000898                     l3704:
  2043   000898  0445               	decf	_pos_flag^0,w,c
  2044   00089A  A4D8               	btfss	status,2,c
  2045   00089C  EF52  F004         	goto	u2911
  2046   0008A0  EF54  F004         	goto	u2910
  2047   0008A4                     u2911:
  2048   0008A4  EF62  F004         	goto	l3712
  2049   0008A8                     u2910:
  2050   0008A8                     
  2051                           ;set_time.c: 53:             if (min == 59) {
  2052   0008A8  0E3B               	movlw	59
  2053   0008AA  1847               	xorwf	_min^0,w,c
  2054   0008AC  A4D8               	btfss	status,2,c
  2055   0008AE  EF5B  F004         	goto	u2921
  2056   0008B2  EF5D  F004         	goto	u2920
  2057   0008B6                     u2921:
  2058   0008B6  EF5F  F004         	goto	l3710
  2059   0008BA                     u2920:
  2060   0008BA                     
  2061                           ;set_time.c: 54:                 min = 0;
  2062   0008BA  0E00               	movlw	0
  2063   0008BC  6E47               	movwf	_min^0,c
  2064   0008BE                     l3710:
  2065                           
  2066                           ;set_time.c: 56:             min++;
  2067   0008BE  2A47               	incf	_min^0,f,c
  2068                           
  2069                           ;set_time.c: 57:         } else if (pos_flag == 2) {
  2070   0008C0  EF90  F004         	goto	l3728
  2071   0008C4                     l3712:
  2072   0008C4  0E02               	movlw	2
  2073   0008C6  1845               	xorwf	_pos_flag^0,w,c
  2074   0008C8  A4D8               	btfss	status,2,c
  2075   0008CA  EF69  F004         	goto	u2931
  2076   0008CE  EF6B  F004         	goto	u2930
  2077   0008D2                     u2931:
  2078   0008D2  EF79  F004         	goto	l729
  2079   0008D6                     u2930:
  2080   0008D6                     
  2081                           ;set_time.c: 58:             if (hr == 23) {
  2082   0008D6  0E17               	movlw	23
  2083   0008D8  1848               	xorwf	_hr^0,w,c
  2084   0008DA  A4D8               	btfss	status,2,c
  2085   0008DC  EF72  F004         	goto	u2941
  2086   0008E0  EF74  F004         	goto	u2940
  2087   0008E4                     u2941:
  2088   0008E4  EF76  F004         	goto	l3718
  2089   0008E8                     u2940:
  2090   0008E8                     
  2091                           ;set_time.c: 59:                 hr = 0;
  2092   0008E8  0E00               	movlw	0
  2093   0008EA  6E48               	movwf	_hr^0,c
  2094   0008EC                     l3718:
  2095                           
  2096                           ;set_time.c: 61:             hr++;
  2097   0008EC  2A48               	incf	_hr^0,f,c
  2098   0008EE  EF90  F004         	goto	l3728
  2099   0008F2                     l729:
  2100                           
  2101                           ;set_time.c: 63:     } else if (key == 6) {
  2102   0008F2  EF90  F004         	goto	l3728
  2103   0008F6                     l3720:
  2104   0008F6  0E06               	movlw	6
  2105   0008F8  1813               	xorwf	settime@key^0,w,c
  2106   0008FA  A4D8               	btfss	status,2,c
  2107   0008FC  EF82  F004         	goto	u2951
  2108   000900  EF84  F004         	goto	u2950
  2109   000904                     u2951:
  2110   000904  EF90  F004         	goto	l3728
  2111   000908                     u2950:
  2112   000908                     
  2113                           ;set_time.c: 64:         pos_flag++;
  2114   000908  2A45               	incf	_pos_flag^0,f,c
  2115   00090A                     
  2116                           ;set_time.c: 66:         if (pos_flag == 3) {
  2117   00090A  0E03               	movlw	3
  2118   00090C  1845               	xorwf	_pos_flag^0,w,c
  2119   00090E  A4D8               	btfss	status,2,c
  2120   000910  EF8C  F004         	goto	u2961
  2121   000914  EF8E  F004         	goto	u2960
  2122   000918                     u2961:
  2123   000918  EF90  F004         	goto	l3728
  2124   00091C                     u2960:
  2125   00091C                     
  2126                           ;set_time.c: 67:             pos_flag = 0;
  2127   00091C  0E00               	movlw	0
  2128   00091E  6E45               	movwf	_pos_flag^0,c
  2129   000920                     l3728:
  2130                           
  2131                           ;set_time.c: 70:     if (key == 15) {
  2132   000920  0E0F               	movlw	15
  2133   000922  1813               	xorwf	settime@key^0,w,c
  2134   000924  A4D8               	btfss	status,2,c
  2135   000926  EF97  F004         	goto	u2971
  2136   00092A  EF99  F004         	goto	u2970
  2137   00092E                     u2971:
  2138   00092E  EF16  F005         	goto	l3750
  2139   000932                     u2970:
  2140   000932                     
  2141                           ;set_time.c: 72:         clock_reg[0] = ((hr / 10) << 4) | (hr % 10);
  2142   000932  C048  F009         	movff	_hr,___awmod@dividend
  2143   000936  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2144   000938  0E00               	movlw	0
  2145   00093A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2146   00093C  0E0A               	movlw	10
  2147   00093E  6E0B               	movwf	___awmod@divisor^0,c
  2148   000940  EC75  F00D         	call	___awmod	;wreg free
  2149   000944  C009  F011         	movff	?___awmod,??_settime
  2150   000948  C00A  F012         	movff	?___awmod+1,??_settime+1
  2151   00094C  C048  F001         	movff	_hr,___awdiv@dividend
  2152   000950  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2153   000952  0E00               	movlw	0
  2154   000954  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2155   000956  0E0A               	movlw	10
  2156   000958  6E03               	movwf	___awdiv@divisor^0,c
  2157   00095A  ECB1  F00C         	call	___awdiv	;wreg free
  2158   00095E  3801               	swapf	?___awdiv^0,w,c
  2159   000960  0BF0               	andlw	240
  2160   000962  1011               	iorwf	??_settime^0,w,c
  2161   000964  6E39               	movwf	_clock_reg^0,c
  2162                           
  2163                           ;set_time.c: 73:         clock_reg[0] = ((min / 10) << 4) | (min % 10);
  2164   000966  C047  F009         	movff	_min,___awmod@dividend
  2165   00096A  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2166   00096C  0E00               	movlw	0
  2167   00096E  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2168   000970  0E0A               	movlw	10
  2169   000972  6E0B               	movwf	___awmod@divisor^0,c
  2170   000974  EC75  F00D         	call	___awmod	;wreg free
  2171   000978  C009  F011         	movff	?___awmod,??_settime
  2172   00097C  C00A  F012         	movff	?___awmod+1,??_settime+1
  2173   000980  C047  F001         	movff	_min,___awdiv@dividend
  2174   000984  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2175   000986  0E00               	movlw	0
  2176   000988  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2177   00098A  0E0A               	movlw	10
  2178   00098C  6E03               	movwf	___awdiv@divisor^0,c
  2179   00098E  ECB1  F00C         	call	___awdiv	;wreg free
  2180   000992  3801               	swapf	?___awdiv^0,w,c
  2181   000994  0BF0               	andlw	240
  2182   000996  1011               	iorwf	??_settime^0,w,c
  2183   000998  6E39               	movwf	_clock_reg^0,c
  2184                           
  2185                           ;set_time.c: 74:         clock_reg[0] = ((sec / 10) << 4) | (sec % 10);
  2186   00099A  C046  F009         	movff	_sec,___awmod@dividend
  2187   00099E  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2188   0009A0  0E00               	movlw	0
  2189   0009A2  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2190   0009A4  0E0A               	movlw	10
  2191   0009A6  6E0B               	movwf	___awmod@divisor^0,c
  2192   0009A8  EC75  F00D         	call	___awmod	;wreg free
  2193   0009AC  C009  F011         	movff	?___awmod,??_settime
  2194   0009B0  C00A  F012         	movff	?___awmod+1,??_settime+1
  2195   0009B4  C046  F001         	movff	_sec,___awdiv@dividend
  2196   0009B8  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2197   0009BA  0E00               	movlw	0
  2198   0009BC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2199   0009BE  0E0A               	movlw	10
  2200   0009C0  6E03               	movwf	___awdiv@divisor^0,c
  2201   0009C2  ECB1  F00C         	call	___awdiv	;wreg free
  2202   0009C6  3801               	swapf	?___awdiv^0,w,c
  2203   0009C8  0BF0               	andlw	240
  2204   0009CA  1011               	iorwf	??_settime^0,w,c
  2205   0009CC  6E39               	movwf	_clock_reg^0,c
  2206   0009CE                     
  2207                           ;set_time.c: 78:         store[0] = time[0];
  2208   0009CE  C087  F076         	movff	_time,_store
  2209   0009D2                     
  2210                           ;set_time.c: 79:         store[1] = time[1];
  2211   0009D2  C088  F077         	movff	_time+1,_store+1
  2212   0009D6                     
  2213                           ;set_time.c: 80:         store[2] = time[3];
  2214   0009D6  C08A  F078         	movff	_time+3,_store+2
  2215   0009DA                     
  2216                           ;set_time.c: 81:         store[3] = time[4];
  2217   0009DA  C08B  F079         	movff	_time+4,_store+3
  2218   0009DE                     
  2219                           ;set_time.c: 82:         store[4] = time[6];
  2220   0009DE  C08D  F07A         	movff	_time+6,_store+4
  2221   0009E2                     
  2222                           ;set_time.c: 83:         store[5] = time[7];
  2223   0009E2  C08E  F07B         	movff	_time+7,_store+5
  2224   0009E6                     
  2225                           ;set_time.c: 86:         store[6] = 'S';
  2226   0009E6  0E53               	movlw	83
  2227   0009E8  0100               	movlb	0	; () banked
  2228   0009EA  6F7C               	movwf	(_store+6)& (0+255),b
  2229   0009EC                     
  2230                           ; BSR set to: 0
  2231                           ;set_time.c: 87:         store[7] = 'T';
  2232   0009EC  0E54               	movlw	84
  2233   0009EE  6F7D               	movwf	(_store+7)& (0+255),b
  2234                           
  2235                           ;set_time.c: 90:         store[8] = (adc_reg_val / 10) + 48;
  2236   0009F0  C042  F001         	movff	_adc_reg_val,___lwdiv@dividend
  2237   0009F4  C043  F002         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  2238   0009F8  0E00               	movlw	0
  2239   0009FA  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2240   0009FC  0E0A               	movlw	10
  2241   0009FE  6E03               	movwf	___lwdiv@divisor^0,c
  2242   000A00  EC65  F00F         	call	___lwdiv	;wreg free
  2243   000A04  5001               	movf	?___lwdiv^0,w,c
  2244   000A06  0F30               	addlw	48
  2245   000A08  0100               	movlb	0	; () banked
  2246   000A0A  6F7E               	movwf	(_store+8)& (0+255),b
  2247                           
  2248                           ;set_time.c: 91:         store[9] = (adc_reg_val % 10) + 48;
  2249   000A0C  C042  F001         	movff	_adc_reg_val,___lwmod@dividend
  2250   000A10  C043  F002         	movff	_adc_reg_val+1,___lwmod@dividend+1
  2251   000A14  0E00               	movlw	0
  2252   000A16  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2253   000A18  0E0A               	movlw	10
  2254   000A1A  6E03               	movwf	___lwmod@divisor^0,c
  2255   000A1C  EC07  F010         	call	___lwmod	;wreg free
  2256   000A20  5001               	movf	?___lwmod^0,w,c
  2257   000A22  0F30               	addlw	48
  2258   000A24  0100               	movlb	0	; () banked
  2259   000A26  6F7F               	movwf	(_store+9)& (0+255),b
  2260   000A28                     
  2261                           ; BSR set to: 0
  2262                           ;set_time.c: 93:         main_f = 2;
  2263   000A28  0E02               	movlw	2
  2264   000A2A  6E59               	movwf	_main_f^0,c
  2265   000A2C                     l3750:
  2266                           
  2267                           ;set_time.c: 96:     if (key == 16) {
  2268   000A2C  0E10               	movlw	16
  2269   000A2E  1813               	xorwf	settime@key^0,w,c
  2270   000A30  A4D8               	btfss	status,2,c
  2271   000A32  EF1D  F005         	goto	u2981
  2272   000A36  EF1F  F005         	goto	u2980
  2273   000A3A                     u2981:
  2274   000A3A  EF21  F005         	goto	l740
  2275   000A3E                     u2980:
  2276   000A3E                     
  2277                           ;set_time.c: 97:         main_f = 2;
  2278   000A3E  0E02               	movlw	2
  2279   000A40  6E59               	movwf	_main_f^0,c
  2280   000A42                     l740:
  2281   000A42  0012               	return		;funcret
  2282   000A44                     __end_of_settime:
  2283                           	callstack 0
  2284                           
  2285 ;; *************** function _read_switches *****************
  2286 ;; Defined at:
  2287 ;;		line 89 in file "matrix_keypad.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  detection_ty    1    wreg     unsigned char 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  detection_ty    1    0[COMRAM] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      unsigned char 
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2301 ;;      Params:         0       0       0       0       0       0       0
  2302 ;;      Locals:         1       0       0       0       0       0       0
  2303 ;;      Temps:          0       0       0       0       0       0       0
  2304 ;;      Totals:         1       0       0       0       0       0       0
  2305 ;;Total ram usage:        1 bytes
  2306 ;; Hardware stack levels used: 1
  2307 ;; Hardware stack levels required when called: 2
  2308 ;; This function calls:
  2309 ;;		_scan_key
  2310 ;; This function is called by:
  2311 ;;		_main
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text3
  2316   001E54                     __ptext3:
  2317                           	callstack 0
  2318   001E54                     _read_switches:
  2319                           	callstack 28
  2320                           
  2321                           ;incstack = 0
  2322                           ;read_switches@detection_type stored from wreg
  2323   001E54  6E01               	movwf	read_switches@detection_type^0,c
  2324   001E56                     
  2325                           ;matrix_keypad.c: 89: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 90: {;matrix_keypad.c: 91:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 93:  if (detection_type == 1)
  2326   001E56  0401               	decf	read_switches@detection_type^0,w,c
  2327   001E58  A4D8               	btfss	status,2,c
  2328   001E5A  EF31  F00F         	goto	u501
  2329   001E5E  EF33  F00F         	goto	u500
  2330   001E62                     u501:
  2331   001E62  EF57  F00F         	goto	l1930
  2332   001E66                     u500:
  2333   001E66                     
  2334                           ;matrix_keypad.c: 94:  {;matrix_keypad.c: 95:   key = scan_key();
  2335   001E66  EC3A  F00B         	call	_scan_key	;wreg free
  2336   001E6A  6E57               	movwf	read_switches@key^0,c
  2337   001E6C                     
  2338                           ;matrix_keypad.c: 96:   if(key != 0xFF && once )
  2339   001E6C  2857               	incf	read_switches@key^0,w,c
  2340   001E6E  B4D8               	btfsc	status,2,c
  2341   001E70  EF3C  F00F         	goto	u511
  2342   001E74  EF3E  F00F         	goto	u510
  2343   001E78                     u511:
  2344   001E78  EF4B  F00F         	goto	l1926
  2345   001E7C                     u510:
  2346   001E7C  505E               	movf	read_switches@once^0,w,c
  2347   001E7E  B4D8               	btfsc	status,2,c
  2348   001E80  EF44  F00F         	goto	u521
  2349   001E84  EF46  F00F         	goto	u520
  2350   001E88                     u521:
  2351   001E88  EF4B  F00F         	goto	l1926
  2352   001E8C                     u520:
  2353   001E8C                     
  2354                           ;matrix_keypad.c: 97:   {;matrix_keypad.c: 98:    once = 0;
  2355   001E8C  0E00               	movlw	0
  2356   001E8E  6E5E               	movwf	read_switches@once^0,c
  2357                           
  2358                           ;matrix_keypad.c: 99:    return key;
  2359   001E90  5057               	movf	read_switches@key^0,w,c
  2360   001E92  EF64  F00F         	goto	l210
  2361   001E96                     l1926:
  2362   001E96  2857               	incf	read_switches@key^0,w,c
  2363   001E98  A4D8               	btfss	status,2,c
  2364   001E9A  EF51  F00F         	goto	u531
  2365   001E9E  EF53  F00F         	goto	u530
  2366   001EA2                     u531:
  2367   001EA2  EF63  F00F         	goto	l1936
  2368   001EA6                     u530:
  2369   001EA6                     
  2370                           ;matrix_keypad.c: 102:   {;matrix_keypad.c: 103:    once = 1;
  2371   001EA6  0E01               	movlw	1
  2372   001EA8  6E5E               	movwf	read_switches@once^0,c
  2373   001EAA  EF63  F00F         	goto	l1936
  2374   001EAE                     l1930:
  2375   001EAE  5001               	movf	read_switches@detection_type^0,w,c
  2376   001EB0  A4D8               	btfss	status,2,c
  2377   001EB2  EF5D  F00F         	goto	u541
  2378   001EB6  EF5F  F00F         	goto	u540
  2379   001EBA                     u541:
  2380   001EBA  EF63  F00F         	goto	l1936
  2381   001EBE                     u540:
  2382   001EBE                     
  2383                           ;matrix_keypad.c: 107:  {;matrix_keypad.c: 108:   return scan_key();
  2384   001EBE  EC3A  F00B         	call	_scan_key	;wreg free
  2385   001EC2  EF64  F00F         	goto	l210
  2386   001EC6                     l1936:
  2387                           
  2388                           ;matrix_keypad.c: 111:  return 0xFF;
  2389   001EC6  0EFF               	movlw	255
  2390   001EC8                     l210:
  2391   001EC8  0012               	return		;funcret
  2392   001ECA                     __end_of_read_switches:
  2393                           	callstack 0
  2394                           
  2395 ;; *************** function _scan_key *****************
  2396 ;; Defined at:
  2397 ;;		line 19 in file "matrix_keypad.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      unsigned char 
  2404 ;; Registers used:
  2405 ;;		wreg
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2411 ;;      Params:         0       0       0       0       0       0       0
  2412 ;;      Locals:         0       0       0       0       0       0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0
  2414 ;;      Totals:         0       0       0       0       0       0       0
  2415 ;;Total ram usage:        0 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; Hardware stack levels required when called: 1
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		_read_switches
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text4
  2426   001674                     __ptext4:
  2427                           	callstack 0
  2428   001674                     _scan_key:
  2429                           	callstack 28
  2430   001674                     
  2431                           ;matrix_keypad.c: 21:  PORTBbits.RB5 = 0;
  2432   001674  9A81               	bcf	129,5,c	;volatile
  2433                           
  2434                           ;matrix_keypad.c: 22:  PORTBbits.RB6 = 1;
  2435   001676  8C81               	bsf	129,6,c	;volatile
  2436                           
  2437                           ;matrix_keypad.c: 23:  PORTBbits.RB7 = 1;
  2438   001678  8E81               	bsf	129,7,c	;volatile
  2439                           
  2440                           ;matrix_keypad.c: 25:  if (PORTBbits.RB1 == 0)
  2441   00167A  B281               	btfsc	129,1,c	;volatile
  2442   00167C  EF42  F00B         	goto	u161
  2443   001680  EF44  F00B         	goto	u160
  2444   001684                     u161:
  2445   001684  EF47  F00B         	goto	l180
  2446   001688                     u160:
  2447   001688                     
  2448                           ;matrix_keypad.c: 26:  {;matrix_keypad.c: 27:   return 1;
  2449   001688  0E01               	movlw	1
  2450   00168A  EFBD  F00B         	goto	l181
  2451   00168E                     l180:
  2452   00168E  B481               	btfsc	129,2,c	;volatile
  2453   001690  EF4C  F00B         	goto	u171
  2454   001694  EF4E  F00B         	goto	u170
  2455   001698                     u171:
  2456   001698  EF51  F00B         	goto	l183
  2457   00169C                     u170:
  2458   00169C                     
  2459                           ;matrix_keypad.c: 30:  {;matrix_keypad.c: 31:   return 4;
  2460   00169C  0E04               	movlw	4
  2461   00169E  EFBD  F00B         	goto	l181
  2462   0016A2                     l183:
  2463   0016A2  B681               	btfsc	129,3,c	;volatile
  2464   0016A4  EF56  F00B         	goto	u181
  2465   0016A8  EF58  F00B         	goto	u180
  2466   0016AC                     u181:
  2467   0016AC  EF5B  F00B         	goto	l185
  2468   0016B0                     u180:
  2469   0016B0                     
  2470                           ;matrix_keypad.c: 34:  {;matrix_keypad.c: 35:   return 7;
  2471   0016B0  0E07               	movlw	7
  2472   0016B2  EFBD  F00B         	goto	l181
  2473   0016B6                     l185:
  2474   0016B6  B881               	btfsc	129,4,c	;volatile
  2475   0016B8  EF60  F00B         	goto	u191
  2476   0016BC  EF62  F00B         	goto	u190
  2477   0016C0                     u191:
  2478   0016C0  EF65  F00B         	goto	l182
  2479   0016C4                     u190:
  2480   0016C4                     
  2481                           ;matrix_keypad.c: 38:  {;matrix_keypad.c: 39:   return 10;
  2482   0016C4  0E0A               	movlw	10
  2483   0016C6  EFBD  F00B         	goto	l181
  2484   0016CA                     l182:
  2485                           
  2486                           ;matrix_keypad.c: 42:  PORTBbits.RB5 = 1;
  2487   0016CA  8A81               	bsf	129,5,c	;volatile
  2488                           
  2489                           ;matrix_keypad.c: 43:  PORTBbits.RB6 = 0;
  2490   0016CC  9C81               	bcf	129,6,c	;volatile
  2491                           
  2492                           ;matrix_keypad.c: 44:  PORTBbits.RB7 = 1;
  2493   0016CE  8E81               	bsf	129,7,c	;volatile
  2494                           
  2495                           ;matrix_keypad.c: 46:  if (PORTBbits.RB1 == 0)
  2496   0016D0  B281               	btfsc	129,1,c	;volatile
  2497   0016D2  EF6D  F00B         	goto	u201
  2498   0016D6  EF6F  F00B         	goto	u200
  2499   0016DA                     u201:
  2500   0016DA  EF72  F00B         	goto	l188
  2501   0016DE                     u200:
  2502   0016DE                     
  2503                           ;matrix_keypad.c: 47:  {;matrix_keypad.c: 48:   return 2;
  2504   0016DE  0E02               	movlw	2
  2505   0016E0  EFBD  F00B         	goto	l181
  2506   0016E4                     l188:
  2507   0016E4  B481               	btfsc	129,2,c	;volatile
  2508   0016E6  EF77  F00B         	goto	u211
  2509   0016EA  EF79  F00B         	goto	u210
  2510   0016EE                     u211:
  2511   0016EE  EF7C  F00B         	goto	l190
  2512   0016F2                     u210:
  2513   0016F2                     
  2514                           ;matrix_keypad.c: 51:  {;matrix_keypad.c: 52:   return 5;
  2515   0016F2  0E05               	movlw	5
  2516   0016F4  EFBD  F00B         	goto	l181
  2517   0016F8                     l190:
  2518   0016F8  B681               	btfsc	129,3,c	;volatile
  2519   0016FA  EF81  F00B         	goto	u221
  2520   0016FE  EF83  F00B         	goto	u220
  2521   001702                     u221:
  2522   001702  EF86  F00B         	goto	l192
  2523   001706                     u220:
  2524   001706                     
  2525                           ;matrix_keypad.c: 55:  {;matrix_keypad.c: 56:   return 8;
  2526   001706  0E08               	movlw	8
  2527   001708  EFBD  F00B         	goto	l181
  2528   00170C                     l192:
  2529   00170C  B881               	btfsc	129,4,c	;volatile
  2530   00170E  EF8B  F00B         	goto	u231
  2531   001712  EF8D  F00B         	goto	u230
  2532   001716                     u231:
  2533   001716  EF90  F00B         	goto	l189
  2534   00171A                     u230:
  2535   00171A                     
  2536                           ;matrix_keypad.c: 59:  {;matrix_keypad.c: 60:   return 11;
  2537   00171A  0E0B               	movlw	11
  2538   00171C  EFBD  F00B         	goto	l181
  2539   001720                     l189:
  2540                           
  2541                           ;matrix_keypad.c: 63:  PORTBbits.RB5 = 1;
  2542   001720  8A81               	bsf	129,5,c	;volatile
  2543                           
  2544                           ;matrix_keypad.c: 64:  PORTBbits.RB6 = 1;
  2545   001722  8C81               	bsf	129,6,c	;volatile
  2546                           
  2547                           ;matrix_keypad.c: 65:  PORTBbits.RB7 = 0;
  2548   001724  9E81               	bcf	129,7,c	;volatile
  2549                           
  2550                           ;matrix_keypad.c: 67:  PORTBbits.RB7 = 0;
  2551   001726  9E81               	bcf	129,7,c	;volatile
  2552                           
  2553                           ;matrix_keypad.c: 69:  if (PORTBbits.RB1 == 0)
  2554   001728  B281               	btfsc	129,1,c	;volatile
  2555   00172A  EF99  F00B         	goto	u241
  2556   00172E  EF9B  F00B         	goto	u240
  2557   001732                     u241:
  2558   001732  EF9E  F00B         	goto	l195
  2559   001736                     u240:
  2560   001736                     
  2561                           ;matrix_keypad.c: 70:  {;matrix_keypad.c: 71:   return 3;
  2562   001736  0E03               	movlw	3
  2563   001738  EFBD  F00B         	goto	l181
  2564   00173C                     l195:
  2565   00173C  B481               	btfsc	129,2,c	;volatile
  2566   00173E  EFA3  F00B         	goto	u251
  2567   001742  EFA5  F00B         	goto	u250
  2568   001746                     u251:
  2569   001746  EFA8  F00B         	goto	l197
  2570   00174A                     u250:
  2571   00174A                     
  2572                           ;matrix_keypad.c: 74:  {;matrix_keypad.c: 75:   return 6;
  2573   00174A  0E06               	movlw	6
  2574   00174C  EFBD  F00B         	goto	l181
  2575   001750                     l197:
  2576   001750  B681               	btfsc	129,3,c	;volatile
  2577   001752  EFAD  F00B         	goto	u261
  2578   001756  EFAF  F00B         	goto	u260
  2579   00175A                     u261:
  2580   00175A  EFB2  F00B         	goto	l199
  2581   00175E                     u260:
  2582   00175E                     
  2583                           ;matrix_keypad.c: 78:  {;matrix_keypad.c: 79:   return 9;
  2584   00175E  0E09               	movlw	9
  2585   001760  EFBD  F00B         	goto	l181
  2586   001764                     l199:
  2587   001764  B881               	btfsc	129,4,c	;volatile
  2588   001766  EFB7  F00B         	goto	u271
  2589   00176A  EFB9  F00B         	goto	u270
  2590   00176E                     u271:
  2591   00176E  EFBC  F00B         	goto	l198
  2592   001772                     u270:
  2593   001772                     
  2594                           ;matrix_keypad.c: 82:  {;matrix_keypad.c: 83:   return 12;
  2595   001772  0E0C               	movlw	12
  2596   001774  EFBD  F00B         	goto	l181
  2597   001778                     l198:
  2598   001778                     
  2599                           ;matrix_keypad.c: 86:  return 0xFF;
  2600   001778  0EFF               	movlw	255
  2601   00177A                     l181:
  2602   00177A  0012               	return		;funcret
  2603   00177C                     __end_of_scan_key:
  2604                           	callstack 0
  2605                           
  2606 ;; *************** function _read_adc *****************
  2607 ;; Defined at:
  2608 ;;		line 43 in file "adc.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  channel         1    wreg     unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  channel         1    6[COMRAM] unsigned char 
  2613 ;;  reg_val         2    4[COMRAM] unsigned short 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  2    0[COMRAM] unsigned short 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2623 ;;      Params:         2       0       0       0       0       0       0
  2624 ;;      Locals:         3       0       0       0       0       0       0
  2625 ;;      Temps:          2       0       0       0       0       0       0
  2626 ;;      Totals:         7       0       0       0       0       0       0
  2627 ;;Total ram usage:        7 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 1
  2630 ;; This function calls:
  2631 ;;		Nothing
  2632 ;; This function is called by:
  2633 ;;		_main
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text5
  2638   002118                     __ptext5:
  2639                           	callstack 0
  2640   002118                     _read_adc:
  2641                           	callstack 29
  2642                           
  2643                           ;incstack = 0
  2644                           ;read_adc@channel stored from wreg
  2645   002118  6E07               	movwf	read_adc@channel^0,c
  2646   00211A                     
  2647                           ;adc.c: 43: unsigned short read_adc(unsigned char channel);adc.c: 44: {;adc.c: 45:  unsi
      +                          gned short reg_val;;adc.c: 48:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  2648   00211A  C007  F003         	movff	read_adc@channel,??_read_adc
  2649   00211E  90D8               	bcf	status,0,c
  2650   002120  3603               	rlcf	??_read_adc^0,f,c
  2651   002122  90D8               	bcf	status,0,c
  2652   002124  3603               	rlcf	??_read_adc^0,f,c
  2653   002126  50C2               	movf	194,w,c	;volatile
  2654   002128  0BC3               	andlw	195
  2655   00212A  1003               	iorwf	??_read_adc^0,w,c
  2656   00212C  6EC2               	movwf	194,c	;volatile
  2657   00212E                     
  2658                           ;adc.c: 51:  GO = 1;
  2659   00212E  82C2               	bsf	4034,1,c	;volatile
  2660   002130                     l36:
  2661   002130  B2C2               	btfsc	4034,1,c	;volatile
  2662   002132  EF9D  F010         	goto	u2221
  2663   002136  EF9F  F010         	goto	u2220
  2664   00213A                     u2221:
  2665   00213A  EF98  F010         	goto	l36
  2666   00213E                     u2220:
  2667   00213E                     
  2668                           ;adc.c: 53:  reg_val = (ADRESH << 8) | ADRESL;
  2669   00213E  50C3               	movf	195,w,c	;volatile
  2670   002140  CFC4 F003          	movff	4036,??_read_adc	;volatile
  2671   002144  6A04               	clrf	(??_read_adc+1)^0,c
  2672   002146  C003  F004         	movff	??_read_adc,??_read_adc+1
  2673   00214A  6A03               	clrf	??_read_adc^0,c
  2674   00214C  1003               	iorwf	??_read_adc^0,w,c
  2675   00214E  6E05               	movwf	read_adc@reg_val^0,c
  2676   002150  5004               	movf	(??_read_adc+1)^0,w,c
  2677   002152  6E06               	movwf	(read_adc@reg_val+1)^0,c
  2678   002154                     
  2679                           ;adc.c: 55:  return reg_val;
  2680   002154  C005  F001         	movff	read_adc@reg_val,?_read_adc
  2681   002158  C006  F002         	movff	read_adc@reg_val+1,?_read_adc+1
  2682   00215C  0012               	return		;funcret
  2683   00215E                     __end_of_read_adc:
  2684                           	callstack 0
  2685                           
  2686 ;; *************** function _password *****************
  2687 ;; Defined at:
  2688 ;;		line 37 in file "password.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  key             1    wreg     unsigned char 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  key             1   30[COMRAM] unsigned char 
  2693 ;;  wait            8   18[COMRAM] unsigned long long 
  2694 ;;  delay           4   26[COMRAM] unsigned long 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2704 ;;      Params:         0       0       0       0       0       0       0
  2705 ;;      Locals:        13       0       0       0       0       0       0
  2706 ;;      Temps:          2       0       0       0       0       0       0
  2707 ;;      Totals:        15       0       0       0       0       0       0
  2708 ;;Total ram usage:       15 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 3
  2711 ;; This function calls:
  2712 ;;		___awdiv
  2713 ;;		___awmod
  2714 ;;		_clcd_print
  2715 ;;		_clcd_putch
  2716 ;;		_clcd_write
  2717 ;;		_my_strcmp
  2718 ;; This function is called by:
  2719 ;;		_main
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text6
  2724   000A44                     __ptext6:
  2725                           	callstack 0
  2726   000A44                     _password:
  2727                           	callstack 27
  2728                           
  2729                           ;incstack = 0
  2730                           ;password@key stored from wreg
  2731   000A44  6E1F               	movwf	password@key^0,c
  2732   000A46                     
  2733                           ;password.c: 39:     clcd_print(" Enter Password ", (0x80 + (0)));
  2734   000A46  0E59               	movlw	low STR_10
  2735   000A48  6E03               	movwf	clcd_print@data^0,c
  2736   000A4A  0E2F               	movlw	high STR_10
  2737   000A4C  6E04               	movwf	(clcd_print@data+1)^0,c
  2738   000A4E  0E80               	movlw	128
  2739   000A50  6E05               	movwf	clcd_print@addr^0,c
  2740   000A52  EC9F  F00F         	call	_clcd_print	;wreg free
  2741   000A56                     
  2742                           ;password.c: 42:     if (delay++ < 500) {
  2743   000A56  503E               	movf	_delay^0,w,c
  2744   000A58  6E11               	movwf	??_password^0,c
  2745   000A5A  503F               	movf	(_delay+1)^0,w,c
  2746   000A5C  6E12               	movwf	(??_password+1)^0,c
  2747   000A5E  4A3E               	infsnz	_delay^0,f,c
  2748   000A60  2A3F               	incf	(_delay+1)^0,f,c
  2749   000A62  BE12               	btfsc	(??_password+1)^0,7,c
  2750   000A64  EF3F  F005         	goto	u2320
  2751   000A68  0EF4               	movlw	244
  2752   000A6A  5C11               	subwf	??_password^0,w,c
  2753   000A6C  0E01               	movlw	1
  2754   000A6E  5812               	subwfb	(??_password+1)^0,w,c
  2755   000A70  B0D8               	btfsc	status,0,c
  2756   000A72  EF3D  F005         	goto	u2321
  2757   000A76  EF3F  F005         	goto	u2320
  2758   000A7A                     u2321:
  2759   000A7A  EF47  F005         	goto	l3268
  2760   000A7E                     u2320:
  2761   000A7E                     
  2762                           ;password.c: 43:         clcd_putch('_', (0xC0 + (index)));
  2763   000A7E  5055               	movf	_index^0,w,c
  2764   000A80  0FC0               	addlw	192
  2765   000A82  6E0F               	movwf	clcd_putch@addr^0,c
  2766   000A84  0E5F               	movlw	95
  2767   000A86  EC5D  F011         	call	_clcd_putch
  2768                           
  2769                           ;password.c: 44:     } else if (delay > 500 && delay < 1000) {
  2770   000A8A  EF6F  F005         	goto	l3276
  2771   000A8E                     l3268:
  2772   000A8E  BE3F               	btfsc	(_delay+1)^0,7,c
  2773   000A90  EF53  F005         	goto	u2331
  2774   000A94  0EF5               	movlw	245
  2775   000A96  5C3E               	subwf	_delay^0,w,c
  2776   000A98  0E01               	movlw	1
  2777   000A9A  583F               	subwfb	(_delay+1)^0,w,c
  2778   000A9C  A0D8               	btfss	status,0,c
  2779   000A9E  EF53  F005         	goto	u2331
  2780   000AA2  EF55  F005         	goto	u2330
  2781   000AA6                     u2331:
  2782   000AA6  EF6B  F005         	goto	l3274
  2783   000AAA                     u2330:
  2784   000AAA  BE3F               	btfsc	(_delay+1)^0,7,c
  2785   000AAC  EF63  F005         	goto	u2340
  2786   000AB0  0EE8               	movlw	232
  2787   000AB2  5C3E               	subwf	_delay^0,w,c
  2788   000AB4  0E03               	movlw	3
  2789   000AB6  583F               	subwfb	(_delay+1)^0,w,c
  2790   000AB8  B0D8               	btfsc	status,0,c
  2791   000ABA  EF61  F005         	goto	u2341
  2792   000ABE  EF63  F005         	goto	u2340
  2793   000AC2                     u2341:
  2794   000AC2  EF6B  F005         	goto	l3274
  2795   000AC6                     u2340:
  2796   000AC6                     
  2797                           ;password.c: 45:         clcd_putch(' ', (0xC0 + (index)));
  2798   000AC6  5055               	movf	_index^0,w,c
  2799   000AC8  0FC0               	addlw	192
  2800   000ACA  6E0F               	movwf	clcd_putch@addr^0,c
  2801   000ACC  0E20               	movlw	32
  2802   000ACE  EC5D  F011         	call	_clcd_putch
  2803                           
  2804                           ;password.c: 46:     } else
  2805   000AD2  EF6F  F005         	goto	l3276
  2806   000AD6                     l3274:
  2807                           
  2808                           ;password.c: 47:         delay = 0;
  2809   000AD6  0E00               	movlw	0
  2810   000AD8  6E3F               	movwf	(_delay+1)^0,c
  2811   000ADA  0E00               	movlw	0
  2812   000ADC  6E3E               	movwf	_delay^0,c
  2813   000ADE                     l3276:
  2814                           
  2815                           ;password.c: 49:     if (key == 5) {
  2816   000ADE  0E05               	movlw	5
  2817   000AE0  181F               	xorwf	password@key^0,w,c
  2818   000AE2  A4D8               	btfss	status,2,c
  2819   000AE4  EF76  F005         	goto	u2351
  2820   000AE8  EF78  F005         	goto	u2350
  2821   000AEC                     u2351:
  2822   000AEC  EF87  F005         	goto	l3284
  2823   000AF0                     u2350:
  2824   000AF0                     
  2825                           ;password.c: 50:         temp_password[index] = '0';
  2826   000AF0  5055               	movf	_index^0,w,c
  2827   000AF2  0F9A               	addlw	low _temp_password
  2828   000AF4  6ED9               	movwf	fsr2l,c
  2829   000AF6  6ADA               	clrf	fsr2h,c
  2830   000AF8  0E30               	movlw	48
  2831   000AFA  6EDF               	movwf	indf2,c
  2832   000AFC                     
  2833                           ;password.c: 51:         clcd_putch('*', (0xC0 + (index)));
  2834   000AFC  5055               	movf	_index^0,w,c
  2835   000AFE  0FC0               	addlw	192
  2836   000B00  6E0F               	movwf	clcd_putch@addr^0,c
  2837   000B02  0E2A               	movlw	42
  2838   000B04  EC5D  F011         	call	_clcd_putch
  2839   000B08                     l3282:
  2840                           
  2841                           ;password.c: 52:         index++;
  2842   000B08  2A55               	incf	_index^0,f,c
  2843                           
  2844                           ;password.c: 54:     } else if (key == 6) {
  2845   000B0A  EF9E  F005         	goto	l3292
  2846   000B0E                     l3284:
  2847   000B0E  0E06               	movlw	6
  2848   000B10  181F               	xorwf	password@key^0,w,c
  2849   000B12  A4D8               	btfss	status,2,c
  2850   000B14  EF8E  F005         	goto	u2361
  2851   000B18  EF90  F005         	goto	u2360
  2852   000B1C                     u2361:
  2853   000B1C  EF9E  F005         	goto	l3292
  2854   000B20                     u2360:
  2855   000B20                     
  2856                           ;password.c: 55:         temp_password[index] = '1';
  2857   000B20  5055               	movf	_index^0,w,c
  2858   000B22  0F9A               	addlw	low _temp_password
  2859   000B24  6ED9               	movwf	fsr2l,c
  2860   000B26  6ADA               	clrf	fsr2h,c
  2861   000B28  0E31               	movlw	49
  2862   000B2A  6EDF               	movwf	indf2,c
  2863   000B2C                     
  2864                           ;password.c: 56:         clcd_putch('*', (0xC0 + (index)));
  2865   000B2C  5055               	movf	_index^0,w,c
  2866   000B2E  0FC0               	addlw	192
  2867   000B30  6E0F               	movwf	clcd_putch@addr^0,c
  2868   000B32  0E2A               	movlw	42
  2869   000B34  EC5D  F011         	call	_clcd_putch
  2870   000B38  EF84  F005         	goto	l3282
  2871   000B3C                     l3292:
  2872                           
  2873                           ;password.c: 61:     if (index == 4) {
  2874   000B3C  0E04               	movlw	4
  2875   000B3E  1855               	xorwf	_index^0,w,c
  2876   000B40  A4D8               	btfss	status,2,c
  2877   000B42  EFA5  F005         	goto	u2371
  2878   000B46  EFA7  F005         	goto	u2370
  2879   000B4A                     u2371:
  2880   000B4A  EF95  F006         	goto	l305
  2881   000B4E                     u2370:
  2882   000B4E                     
  2883                           ;password.c: 62:         temp_password[index] = '\0';
  2884   000B4E  5055               	movf	_index^0,w,c
  2885   000B50  0F9A               	addlw	low _temp_password
  2886   000B52  6ED9               	movwf	fsr2l,c
  2887   000B54  6ADA               	clrf	fsr2h,c
  2888   000B56  6ADF               	clrf	indf2,c
  2889   000B58                     
  2890                           ;password.c: 63:         if (my_strcmp(pass,temp_password) == 0) {
  2891   000B58  0E9F               	movlw	low _pass
  2892   000B5A  6E01               	movwf	my_strcmp@one^0,c
  2893   000B5C  0E9A               	movlw	low _temp_password
  2894   000B5E  6E02               	movwf	my_strcmp@two^0,c
  2895   000B60  EC64  F00E         	call	_my_strcmp	;wreg free
  2896   000B64  5001               	movf	?_my_strcmp^0,w,c
  2897   000B66  1002               	iorwf	(?_my_strcmp+1)^0,w,c
  2898   000B68  A4D8               	btfss	status,2,c
  2899   000B6A  EFB9  F005         	goto	u2381
  2900   000B6E  EFBB  F005         	goto	u2380
  2901   000B72                     u2381:
  2902   000B72  EFC6  F005         	goto	l3304
  2903   000B76                     u2380:
  2904   000B76                     
  2905                           ;password.c: 64:             clcd_write(0x01, 0);
  2906   000B76  0E00               	movlw	0
  2907   000B78  6E01               	movwf	clcd_write@control_bit^0,c
  2908   000B7A  0E01               	movlw	1
  2909   000B7C  ECCF  F010         	call	_clcd_write
  2910   000B80                     
  2911                           ;password.c: 65:             chance=3;
  2912   000B80  0E03               	movlw	3
  2913   000B82  6E5C               	movwf	_chance^0,c
  2914   000B84                     
  2915                           ;password.c: 66:             main_f=2;
  2916   000B84  0E02               	movlw	2
  2917   000B86  6E59               	movwf	_main_f^0,c
  2918                           
  2919                           ;password.c: 69:         } else {
  2920   000B88  EF95  F006         	goto	l305
  2921   000B8C                     l3304:
  2922                           
  2923                           ;password.c: 71:             if (chance == 0) {
  2924   000B8C  505C               	movf	_chance^0,w,c
  2925   000B8E  A4D8               	btfss	status,2,c
  2926   000B90  EFCC  F005         	goto	u2391
  2927   000B94  EFCE  F005         	goto	u2390
  2928   000B98                     u2391:
  2929   000B98  EF46  F006         	goto	l3326
  2930   000B9C                     u2390:
  2931   000B9C                     
  2932                           ;password.c: 74:                 TMR0IE = 1;
  2933   000B9C  8AF2               	bsf	4082,5,c	;volatile
  2934                           
  2935                           ;password.c: 75:                 GIE = 1;
  2936   000B9E  8EF2               	bsf	4082,7,c	;volatile
  2937                           
  2938                           ;password.c: 76:                 PEIE = 1;
  2939   000BA0  8CF2               	bsf	4082,6,c	;volatile
  2940   000BA2                     
  2941                           ;password.c: 78:                 clcd_print(" System Blocked", (0x80 + (0)));
  2942   000BA2  0E9B               	movlw	low STR_11
  2943   000BA4  6E03               	movwf	clcd_print@data^0,c
  2944   000BA6  0E2F               	movlw	high STR_11
  2945   000BA8  6E04               	movwf	(clcd_print@data+1)^0,c
  2946   000BAA  0E80               	movlw	128
  2947   000BAC  6E05               	movwf	clcd_print@addr^0,c
  2948   000BAE  EC9F  F00F         	call	_clcd_print	;wreg free
  2949                           
  2950                           ;password.c: 79:                 clcd_print("     ", (0xC0 + (0)));
  2951   000BB2  0EFD               	movlw	low (STR_22+12)
  2952   000BB4  6E03               	movwf	clcd_print@data^0,c
  2953   000BB6  0E2E               	movlw	high (STR_22+12)
  2954   000BB8  6E04               	movwf	(clcd_print@data+1)^0,c
  2955   000BBA  0EC0               	movlw	192
  2956   000BBC  6E05               	movwf	clcd_print@addr^0,c
  2957   000BBE  EC9F  F00F         	call	_clcd_print	;wreg free
  2958   000BC2                     
  2959                           ;password.c: 80:                 clcd_putch('0' + (tick_count / 100), (0xC0 + (5)));
  2960   000BC2  0EC5               	movlw	197
  2961   000BC4  6E0F               	movwf	clcd_putch@addr^0,c
  2962   000BC6  C05D  F001         	movff	_tick_count,___awdiv@dividend
  2963   000BCA  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2964   000BCC  0E00               	movlw	0
  2965   000BCE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2966   000BD0  0E64               	movlw	100
  2967   000BD2  6E03               	movwf	___awdiv@divisor^0,c
  2968   000BD4  ECB1  F00C         	call	___awdiv	;wreg free
  2969   000BD8  5001               	movf	?___awdiv^0,w,c
  2970   000BDA  0F30               	addlw	48
  2971   000BDC  EC5D  F011         	call	_clcd_putch
  2972   000BE0                     
  2973                           ;password.c: 81:                 clcd_putch('0' + (tick_count / 10) % 10, (0xC0 + (6)));
  2974   000BE0  0EC6               	movlw	198
  2975   000BE2  6E0F               	movwf	clcd_putch@addr^0,c
  2976   000BE4  0E00               	movlw	0
  2977   000BE6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2978   000BE8  0E0A               	movlw	10
  2979   000BEA  6E03               	movwf	___awdiv@divisor^0,c
  2980   000BEC  C05D  F001         	movff	_tick_count,___awdiv@dividend
  2981   000BF0  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2982   000BF2  ECB1  F00C         	call	___awdiv	;wreg free
  2983   000BF6  C001  F009         	movff	?___awdiv,___awmod@dividend
  2984   000BFA  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2985   000BFE  0E00               	movlw	0
  2986   000C00  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2987   000C02  0E0A               	movlw	10
  2988   000C04  6E0B               	movwf	___awmod@divisor^0,c
  2989   000C06  EC75  F00D         	call	___awmod	;wreg free
  2990   000C0A  5009               	movf	?___awmod^0,w,c
  2991   000C0C  0F30               	addlw	48
  2992   000C0E  EC5D  F011         	call	_clcd_putch
  2993   000C12                     
  2994                           ;password.c: 82:                 clcd_putch('0' + (tick_count % 10), (0xC0 + (7)));
  2995   000C12  0EC7               	movlw	199
  2996   000C14  6E0F               	movwf	clcd_putch@addr^0,c
  2997   000C16  C05D  F009         	movff	_tick_count,___awmod@dividend
  2998   000C1A  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2999   000C1C  0E00               	movlw	0
  3000   000C1E  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3001   000C20  0E0A               	movlw	10
  3002   000C22  6E0B               	movwf	___awmod@divisor^0,c
  3003   000C24  EC75  F00D         	call	___awmod	;wreg free
  3004   000C28  5009               	movf	?___awmod^0,w,c
  3005   000C2A  0F30               	addlw	48
  3006   000C2C  EC5D  F011         	call	_clcd_putch
  3007   000C30                     
  3008                           ;password.c: 83:                 for (unsigned long int delay = 200000; delay--;);
  3009   000C30  0E40               	movlw	64
  3010   000C32  6E1B               	movwf	password@delay^0,c
  3011   000C34  0E0D               	movlw	13
  3012   000C36  6E1C               	movwf	(password@delay+1)^0,c
  3013   000C38  0E03               	movlw	3
  3014   000C3A  6E1D               	movwf	(password@delay+2)^0,c
  3015   000C3C  0E00               	movlw	0
  3016   000C3E  6E1E               	movwf	(password@delay+3)^0,c
  3017   000C40                     l3318:
  3018   000C40  061B               	decf	password@delay^0,f,c
  3019   000C42  0E00               	movlw	0
  3020   000C44  5A1C               	subwfb	(password@delay+1)^0,f,c
  3021   000C46  5A1D               	subwfb	(password@delay+2)^0,f,c
  3022   000C48  5A1E               	subwfb	(password@delay+3)^0,f,c
  3023   000C4A  281B               	incf	password@delay^0,w,c
  3024   000C4C  E10A               	bnz	u2401
  3025   000C4E  281C               	incf	(password@delay+1)^0,w,c
  3026   000C50  E108               	bnz	u2401
  3027   000C52  281D               	incf	(password@delay+2)^0,w,c
  3028   000C54  E106               	bnz	u2401
  3029   000C56  281E               	incf	(password@delay+3)^0,w,c
  3030   000C58  A4D8               	btfss	status,2,c
  3031   000C5A  EF31  F006         	goto	u2401
  3032   000C5E  EF33  F006         	goto	u2400
  3033   000C62                     u2401:
  3034   000C62  EF20  F006         	goto	l3318
  3035   000C66                     u2400:
  3036   000C66                     
  3037                           ;password.c: 85:                 if (tick_count == 0) {
  3038   000C66  505D               	movf	_tick_count^0,w,c
  3039   000C68  A4D8               	btfss	status,2,c
  3040   000C6A  EF39  F006         	goto	u2411
  3041   000C6E  EF3B  F006         	goto	u2410
  3042   000C72                     u2411:
  3043   000C72  EF95  F006         	goto	l295
  3044   000C76                     u2410:
  3045   000C76                     
  3046                           ;password.c: 86:                     chance = 2;
  3047   000C76  0E02               	movlw	2
  3048   000C78  6E5C               	movwf	_chance^0,c
  3049                           
  3050                           ;password.c: 87:                     index = 0;
  3051   000C7A  0E00               	movlw	0
  3052   000C7C  6E55               	movwf	_index^0,c
  3053   000C7E                     
  3054                           ;password.c: 88:                     clcd_write(0x01, 0);
  3055   000C7E  0E00               	movlw	0
  3056   000C80  6E01               	movwf	clcd_write@control_bit^0,c
  3057   000C82  0E01               	movlw	1
  3058   000C84  ECCF  F010         	call	_clcd_write
  3059   000C88  EF95  F006         	goto	l305
  3060   000C8C                     l3326:
  3061                           
  3062                           ;password.c: 93:                 clcd_print("   Try Again    ", (0x80 + (0)));
  3063   000C8C  0E48               	movlw	low STR_13
  3064   000C8E  6E03               	movwf	clcd_print@data^0,c
  3065   000C90  0E2F               	movlw	high STR_13
  3066   000C92  6E04               	movwf	(clcd_print@data+1)^0,c
  3067   000C94  0E80               	movlw	128
  3068   000C96  6E05               	movwf	clcd_print@addr^0,c
  3069   000C98  EC9F  F00F         	call	_clcd_print	;wreg free
  3070   000C9C                     
  3071                           ;password.c: 94:                 clcd_putch('0' + chance, (0xC0 + (0)));
  3072   000C9C  0EC0               	movlw	192
  3073   000C9E  6E0F               	movwf	clcd_putch@addr^0,c
  3074   000CA0  505C               	movf	_chance^0,w,c
  3075   000CA2  0F30               	addlw	48
  3076   000CA4  EC5D  F011         	call	_clcd_putch
  3077   000CA8                     
  3078                           ;password.c: 95:                 clcd_print(" Chances Left ", (0xC0 + (1)));
  3079   000CA8  0EC9               	movlw	low STR_14
  3080   000CAA  6E03               	movwf	clcd_print@data^0,c
  3081   000CAC  0E2F               	movlw	high STR_14
  3082   000CAE  6E04               	movwf	(clcd_print@data+1)^0,c
  3083   000CB0  0EC1               	movlw	193
  3084   000CB2  6E05               	movwf	clcd_print@addr^0,c
  3085   000CB4  EC9F  F00F         	call	_clcd_print	;wreg free
  3086   000CB8                     
  3087                           ;password.c: 96:                 for (unsigned long long int wait = 400000; wait--;);
  3088   000CB8  0E80               	movlw	128
  3089   000CBA  6E13               	movwf	password@wait^0,c
  3090   000CBC  0E1A               	movlw	26
  3091   000CBE  6E14               	movwf	(password@wait+1)^0,c
  3092   000CC0  0E06               	movlw	6
  3093   000CC2  6E15               	movwf	(password@wait+2)^0,c
  3094   000CC4  0E00               	movlw	0
  3095   000CC6  6E16               	movwf	(password@wait+3)^0,c
  3096   000CC8  0E00               	movlw	0
  3097   000CCA  6E17               	movwf	(password@wait+4)^0,c
  3098   000CCC  0E00               	movlw	0
  3099   000CCE  6E18               	movwf	(password@wait+5)^0,c
  3100   000CD0  0E00               	movlw	0
  3101   000CD2  6E19               	movwf	(password@wait+6)^0,c
  3102   000CD4  0E00               	movlw	0
  3103   000CD6  6E1A               	movwf	(password@wait+7)^0,c
  3104   000CD8                     l3334:
  3105   000CD8  0613               	decf	password@wait^0,f,c
  3106   000CDA  0E00               	movlw	0
  3107   000CDC  5A14               	subwfb	(password@wait+1)^0,f,c
  3108   000CDE  5A15               	subwfb	(password@wait+2)^0,f,c
  3109   000CE0  5A16               	subwfb	(password@wait+3)^0,f,c
  3110   000CE2  5A17               	subwfb	(password@wait+4)^0,f,c
  3111   000CE4  5A18               	subwfb	(password@wait+5)^0,f,c
  3112   000CE6  5A19               	subwfb	(password@wait+6)^0,f,c
  3113   000CE8  5A1A               	subwfb	(password@wait+7)^0,f,c
  3114   000CEA  2813               	incf	password@wait^0,w,c
  3115   000CEC  E112               	bnz	u2421
  3116   000CEE  2814               	incf	(password@wait+1)^0,w,c
  3117   000CF0  E110               	bnz	u2421
  3118   000CF2  2815               	incf	(password@wait+2)^0,w,c
  3119   000CF4  E10E               	bnz	u2421
  3120   000CF6  2816               	incf	(password@wait+3)^0,w,c
  3121   000CF8  E10C               	bnz	u2421
  3122   000CFA  2817               	incf	(password@wait+4)^0,w,c
  3123   000CFC  E10A               	bnz	u2421
  3124   000CFE  2818               	incf	(password@wait+5)^0,w,c
  3125   000D00  E108               	bnz	u2421
  3126   000D02  2819               	incf	(password@wait+6)^0,w,c
  3127   000D04  E106               	bnz	u2421
  3128   000D06  281A               	incf	(password@wait+7)^0,w,c
  3129   000D08  A4D8               	btfss	status,2,c
  3130   000D0A  EF89  F006         	goto	u2421
  3131   000D0E  EF8B  F006         	goto	u2420
  3132   000D12                     u2421:
  3133   000D12  EF6C  F006         	goto	l3334
  3134   000D16                     u2420:
  3135   000D16                     
  3136                           ;password.c: 97:                 chance--;
  3137   000D16  065C               	decf	_chance^0,f,c
  3138   000D18                     
  3139                           ;password.c: 98:                 index = 0;
  3140   000D18  0E00               	movlw	0
  3141   000D1A  6E55               	movwf	_index^0,c
  3142   000D1C                     
  3143                           ;password.c: 99:                 clcd_write(0x01, 0);
  3144   000D1C  0E00               	movlw	0
  3145   000D1E  6E01               	movwf	clcd_write@control_bit^0,c
  3146   000D20  0E01               	movlw	1
  3147   000D22  ECCF  F010         	call	_clcd_write
  3148   000D26  EF95  F006         	goto	l305
  3149   000D2A                     l295:
  3150   000D2A                     l305:
  3151   000D2A  0012               	return		;funcret
  3152   000D2C                     __end_of_password:
  3153                           	callstack 0
  3154                           
  3155 ;; *************** function _my_strcmp *****************
  3156 ;; Defined at:
  3157 ;;		line 25 in file "password.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  one             1    0[COMRAM] PTR unsigned char 
  3160 ;;		 -> pass(5), 
  3161 ;;  two             1    1[COMRAM] PTR unsigned char 
  3162 ;;		 -> temp_password(5), 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  k               2    6[COMRAM] int 
  3165 ;;  last            2    4[COMRAM] int 
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  2    0[COMRAM] int 
  3168 ;; Registers used:
  3169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3175 ;;      Params:         2       0       0       0       0       0       0
  3176 ;;      Locals:         4       0       0       0       0       0       0
  3177 ;;      Temps:          2       0       0       0       0       0       0
  3178 ;;      Totals:         8       0       0       0       0       0       0
  3179 ;;Total ram usage:        8 bytes
  3180 ;; Hardware stack levels used: 1
  3181 ;; Hardware stack levels required when called: 1
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_password
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text7
  3190   001CC8                     __ptext7:
  3191                           	callstack 0
  3192   001CC8                     _my_strcmp:
  3193                           	callstack 28
  3194   001CC8                     
  3195                           ;password.c: 26:     int k = 0, last = 0;
  3196   001CC8  0E00               	movlw	0
  3197   001CCA  6E08               	movwf	(my_strcmp@k+1)^0,c
  3198   001CCC  0E00               	movlw	0
  3199   001CCE  6E07               	movwf	my_strcmp@k^0,c
  3200   001CD0  0E00               	movlw	0
  3201   001CD2  6E06               	movwf	(my_strcmp@last+1)^0,c
  3202   001CD4  0E00               	movlw	0
  3203   001CD6  6E05               	movwf	my_strcmp@last^0,c
  3204                           
  3205                           ;password.c: 27:     while (one[k] != '\0') {
  3206   001CD8  EF95  F00E         	goto	l3084
  3207   001CDC                     l3078:
  3208                           
  3209                           ;password.c: 28:         if (one[k] != two[k]) {
  3210   001CDC  5002               	movf	my_strcmp@two^0,w,c
  3211   001CDE  2407               	addwf	my_strcmp@k^0,w,c
  3212   001CE0  6ED9               	movwf	fsr2l,c
  3213   001CE2  6ADA               	clrf	fsr2h,c
  3214   001CE4  5001               	movf	my_strcmp@one^0,w,c
  3215   001CE6  2407               	addwf	my_strcmp@k^0,w,c
  3216   001CE8  6EE1               	movwf	fsr1l,c
  3217   001CEA  6AE2               	clrf	fsr1h,c
  3218   001CEC  50DE               	movf	postinc2,w,c
  3219   001CEE  18E6               	xorwf	postinc1,w,c
  3220   001CF0  B4D8               	btfsc	status,2,c
  3221   001CF2  EF7D  F00E         	goto	u2051
  3222   001CF6  EF7F  F00E         	goto	u2050
  3223   001CFA                     u2051:
  3224   001CFA  EF93  F00E         	goto	l3082
  3225   001CFE                     u2050:
  3226   001CFE                     
  3227                           ;password.c: 29:             last = one[k] - two[k];
  3228   001CFE  5001               	movf	my_strcmp@one^0,w,c
  3229   001D00  2407               	addwf	my_strcmp@k^0,w,c
  3230   001D02  6ED9               	movwf	fsr2l,c
  3231   001D04  6ADA               	clrf	fsr2h,c
  3232   001D06  50DF               	movf	indf2,w,c
  3233   001D08  6E03               	movwf	??_my_strcmp^0,c
  3234   001D0A  5002               	movf	my_strcmp@two^0,w,c
  3235   001D0C  2407               	addwf	my_strcmp@k^0,w,c
  3236   001D0E  6ED9               	movwf	fsr2l,c
  3237   001D10  6ADA               	clrf	fsr2h,c
  3238   001D12  50DF               	movf	indf2,w,c
  3239   001D14  6E04               	movwf	(??_my_strcmp+1)^0,c
  3240   001D16  5004               	movf	(??_my_strcmp+1)^0,w,c
  3241   001D18  5C03               	subwf	??_my_strcmp^0,w,c
  3242   001D1A  6E05               	movwf	my_strcmp@last^0,c
  3243   001D1C  6A06               	clrf	(my_strcmp@last+1)^0,c
  3244   001D1E  A0D8               	btfss	status,0,c
  3245   001D20  0606               	decf	(my_strcmp@last+1)^0,f,c
  3246                           
  3247                           ;password.c: 30:             break;
  3248   001D22  EFA1  F00E         	goto	l282
  3249   001D26                     l3082:
  3250                           
  3251                           ;password.c: 32:         k++;
  3252   001D26  4A07               	infsnz	my_strcmp@k^0,f,c
  3253   001D28  2A08               	incf	(my_strcmp@k+1)^0,f,c
  3254   001D2A                     l3084:
  3255                           
  3256                           ;password.c: 27:     while (one[k] != '\0') {
  3257   001D2A  5001               	movf	my_strcmp@one^0,w,c
  3258   001D2C  2407               	addwf	my_strcmp@k^0,w,c
  3259   001D2E  6ED9               	movwf	fsr2l,c
  3260   001D30  6ADA               	clrf	fsr2h,c
  3261   001D32  50DF               	movf	indf2,w,c
  3262   001D34  A4D8               	btfss	status,2,c
  3263   001D36  EF9F  F00E         	goto	u2061
  3264   001D3A  EFA1  F00E         	goto	u2060
  3265   001D3E                     u2061:
  3266   001D3E  EF6E  F00E         	goto	l3078
  3267   001D42                     u2060:
  3268   001D42                     l282:
  3269                           
  3270                           ;password.c: 34:     return last;
  3271   001D42  C005  F001         	movff	my_strcmp@last,?_my_strcmp
  3272   001D46  C006  F002         	movff	my_strcmp@last+1,?_my_strcmp+1
  3273   001D4A  0012               	return		;funcret
  3274   001D4C                     __end_of_my_strcmp:
  3275                           	callstack 0
  3276                           
  3277 ;; *************** function ___awdiv *****************
  3278 ;; Defined at:
  3279 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  dividend        2    0[COMRAM] int 
  3282 ;;  divisor         2    2[COMRAM] int 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  quotient        2    6[COMRAM] int 
  3285 ;;  sign            1    5[COMRAM] unsigned char 
  3286 ;;  counter         1    4[COMRAM] unsigned char 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  2    0[COMRAM] int 
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, status,0
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3296 ;;      Params:         4       0       0       0       0       0       0
  3297 ;;      Locals:         4       0       0       0       0       0       0
  3298 ;;      Temps:          0       0       0       0       0       0       0
  3299 ;;      Totals:         8       0       0       0       0       0       0
  3300 ;;Total ram usage:        8 bytes
  3301 ;; Hardware stack levels used: 1
  3302 ;; Hardware stack levels required when called: 1
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_password
  3307 ;;		_settime
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text8
  3312   001962                     __ptext8:
  3313                           	callstack 0
  3314   001962                     ___awdiv:
  3315                           	callstack 28
  3316   001962  0E00               	movlw	0
  3317   001964  6E06               	movwf	___awdiv@sign^0,c
  3318   001966  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3319   001968  EFBA  F00C         	goto	u2100
  3320   00196C  EFB8  F00C         	goto	u2101
  3321   001970                     u2101:
  3322   001970  EFC0  F00C         	goto	l3112
  3323   001974                     u2100:
  3324   001974  6C03               	negf	___awdiv@divisor^0,c
  3325   001976  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3326   001978  B0D8               	btfsc	status,0,c
  3327   00197A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3328   00197C  0E01               	movlw	1
  3329   00197E  6E06               	movwf	___awdiv@sign^0,c
  3330   001980                     l3112:
  3331   001980  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3332   001982  EFC7  F00C         	goto	u2110
  3333   001986  EFC5  F00C         	goto	u2111
  3334   00198A                     u2111:
  3335   00198A  EFCD  F00C         	goto	l3118
  3336   00198E                     u2110:
  3337   00198E  6C01               	negf	___awdiv@dividend^0,c
  3338   001990  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3339   001992  B0D8               	btfsc	status,0,c
  3340   001994  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3341   001996  0E01               	movlw	1
  3342   001998  1A06               	xorwf	___awdiv@sign^0,f,c
  3343   00199A                     l3118:
  3344   00199A  0E00               	movlw	0
  3345   00199C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3346   00199E  0E00               	movlw	0
  3347   0019A0  6E07               	movwf	___awdiv@quotient^0,c
  3348   0019A2  5003               	movf	___awdiv@divisor^0,w,c
  3349   0019A4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3350   0019A6  B4D8               	btfsc	status,2,c
  3351   0019A8  EFD8  F00C         	goto	u2121
  3352   0019AC  EFDA  F00C         	goto	u2120
  3353   0019B0                     u2121:
  3354   0019B0  EF02  F00D         	goto	l3140
  3355   0019B4                     u2120:
  3356   0019B4  0E01               	movlw	1
  3357   0019B6  6E05               	movwf	___awdiv@counter^0,c
  3358   0019B8  EFE2  F00C         	goto	l3126
  3359   0019BC                     l3124:
  3360   0019BC  90D8               	bcf	status,0,c
  3361   0019BE  3603               	rlcf	___awdiv@divisor^0,f,c
  3362   0019C0  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3363   0019C2  2A05               	incf	___awdiv@counter^0,f,c
  3364   0019C4                     l3126:
  3365   0019C4  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3366   0019C6  EFE7  F00C         	goto	u2131
  3367   0019CA  EFE9  F00C         	goto	u2130
  3368   0019CE                     u2131:
  3369   0019CE  EFDE  F00C         	goto	l3124
  3370   0019D2                     u2130:
  3371   0019D2                     l3128:
  3372   0019D2  90D8               	bcf	status,0,c
  3373   0019D4  3607               	rlcf	___awdiv@quotient^0,f,c
  3374   0019D6  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3375   0019D8  5003               	movf	___awdiv@divisor^0,w,c
  3376   0019DA  5C01               	subwf	___awdiv@dividend^0,w,c
  3377   0019DC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3378   0019DE  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3379   0019E0  A0D8               	btfss	status,0,c
  3380   0019E2  EFF5  F00C         	goto	u2141
  3381   0019E6  EFF7  F00C         	goto	u2140
  3382   0019EA                     u2141:
  3383   0019EA  EFFC  F00C         	goto	l3136
  3384   0019EE                     u2140:
  3385   0019EE  5003               	movf	___awdiv@divisor^0,w,c
  3386   0019F0  5E01               	subwf	___awdiv@dividend^0,f,c
  3387   0019F2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3388   0019F4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3389   0019F6  8007               	bsf	___awdiv@quotient^0,0,c
  3390   0019F8                     l3136:
  3391   0019F8  90D8               	bcf	status,0,c
  3392   0019FA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3393   0019FC  3203               	rrcf	___awdiv@divisor^0,f,c
  3394   0019FE  2E05               	decfsz	___awdiv@counter^0,f,c
  3395   001A00  EFE9  F00C         	goto	l3128
  3396   001A04                     l3140:
  3397   001A04  5006               	movf	___awdiv@sign^0,w,c
  3398   001A06  B4D8               	btfsc	status,2,c
  3399   001A08  EF08  F00D         	goto	u2151
  3400   001A0C  EF0A  F00D         	goto	u2150
  3401   001A10                     u2151:
  3402   001A10  EF0E  F00D         	goto	l3144
  3403   001A14                     u2150:
  3404   001A14  6C07               	negf	___awdiv@quotient^0,c
  3405   001A16  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3406   001A18  B0D8               	btfsc	status,0,c
  3407   001A1A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3408   001A1C                     l3144:
  3409   001A1C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3410   001A20  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3411   001A24  0012               	return		;funcret
  3412   001A26                     __end_of___awdiv:
  3413                           	callstack 0
  3414                           
  3415 ;; *************** function _menu *****************
  3416 ;; Defined at:
  3417 ;;		line 21 in file "menu.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  key             1    wreg     unsigned char 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  key             1   16[COMRAM] unsigned char 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3431 ;;      Params:         0       0       0       0       0       0       0
  3432 ;;      Locals:         1       0       0       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0       0       0
  3434 ;;      Totals:         1       0       0       0       0       0       0
  3435 ;;Total ram usage:        1 bytes
  3436 ;; Hardware stack levels used: 1
  3437 ;; Hardware stack levels required when called: 3
  3438 ;; This function calls:
  3439 ;;		_clcd_print
  3440 ;;		_clcd_putch
  3441 ;;		_clcd_write
  3442 ;; This function is called by:
  3443 ;;		_main
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text9
  3448   00141C                     __ptext9:
  3449                           	callstack 0
  3450   00141C                     _menu:
  3451                           	callstack 27
  3452                           
  3453                           ;incstack = 0
  3454                           ;menu@key stored from wreg
  3455   00141C  6E11               	movwf	menu@key^0,c
  3456   00141E                     
  3457                           ;menu.c: 21: void menu(char key);menu.c: 22: {;menu.c: 23:     clcd_print(logs[log_index
      +                          ], (0x80 + (2)));
  3458   00141E  5052               	movf	_log_index^0,w,c
  3459   001420  0D02               	mullw	2
  3460   001422  50F3               	movf	243,w,c
  3461   001424  0FB4               	addlw	low _logs
  3462   001426  6ED9               	movwf	fsr2l,c
  3463   001428  6ADA               	clrf	fsr2h,c
  3464   00142A  CFDE F003          	movff	postinc2,clcd_print@data
  3465   00142E  CFDD F004          	movff	postdec2,clcd_print@data+1
  3466   001432  0E82               	movlw	130
  3467   001434  6E05               	movwf	clcd_print@addr^0,c
  3468   001436  EC9F  F00F         	call	_clcd_print	;wreg free
  3469                           
  3470                           ;menu.c: 24:     clcd_print(logs[(log_index+1)], (0xC0 + (2)));
  3471   00143A  5052               	movf	_log_index^0,w,c
  3472   00143C  0D02               	mullw	2
  3473   00143E  50F3               	movf	243,w,c
  3474   001440  0FB6               	addlw	low (_logs+2)
  3475   001442  6ED9               	movwf	fsr2l,c
  3476   001444  6ADA               	clrf	fsr2h,c
  3477   001446  CFDE F003          	movff	postinc2,clcd_print@data
  3478   00144A  CFDD F004          	movff	postdec2,clcd_print@data+1
  3479   00144E  0EC2               	movlw	194
  3480   001450  6E05               	movwf	clcd_print@addr^0,c
  3481   001452  EC9F  F00F         	call	_clcd_print	;wreg free
  3482   001456                     
  3483                           ;menu.c: 26:     if(star_flag==0)
  3484   001456  5054               	movf	_star_flag^0,w,c
  3485   001458  A4D8               	btfss	status,2,c
  3486   00145A  EF31  F00A         	goto	u2431
  3487   00145E  EF33  F00A         	goto	u2430
  3488   001462                     u2431:
  3489   001462  EF3F  F00A         	goto	l3348
  3490   001466                     u2430:
  3491   001466                     
  3492                           ;menu.c: 27:     {;menu.c: 28:         clcd_putch('*',(0x80 + (0)));
  3493   001466  0E80               	movlw	128
  3494   001468  6E0F               	movwf	clcd_putch@addr^0,c
  3495   00146A  0E2A               	movlw	42
  3496   00146C  EC5D  F011         	call	_clcd_putch
  3497                           
  3498                           ;menu.c: 29:         clcd_putch(' ',(0xC0 + (0)));
  3499   001470  0EC0               	movlw	192
  3500   001472  6E0F               	movwf	clcd_putch@addr^0,c
  3501   001474  0E20               	movlw	32
  3502   001476  EC5D  F011         	call	_clcd_putch
  3503                           
  3504                           ;menu.c: 30:     }
  3505   00147A  EF49  F00A         	goto	l3350
  3506   00147E                     l3348:
  3507                           
  3508                           ;menu.c: 32:     {;menu.c: 33:         clcd_putch(' ',(0x80 + (0)));
  3509   00147E  0E80               	movlw	128
  3510   001480  6E0F               	movwf	clcd_putch@addr^0,c
  3511   001482  0E20               	movlw	32
  3512   001484  EC5D  F011         	call	_clcd_putch
  3513                           
  3514                           ;menu.c: 34:         clcd_putch('*',(0xC0 + (0)));
  3515   001488  0EC0               	movlw	192
  3516   00148A  6E0F               	movwf	clcd_putch@addr^0,c
  3517   00148C  0E2A               	movlw	42
  3518   00148E  EC5D  F011         	call	_clcd_putch
  3519   001492                     l3350:
  3520                           
  3521                           ;menu.c: 38:     if(key==5 )
  3522   001492  0E05               	movlw	5
  3523   001494  1811               	xorwf	menu@key^0,w,c
  3524   001496  A4D8               	btfss	status,2,c
  3525   001498  EF50  F00A         	goto	u2441
  3526   00149C  EF52  F00A         	goto	u2440
  3527   0014A0                     u2441:
  3528   0014A0  EF69  F00A         	goto	l3362
  3529   0014A4                     u2440:
  3530   0014A4                     
  3531                           ;menu.c: 39:     {;menu.c: 40:         if(star_flag==0)
  3532   0014A4  5054               	movf	_star_flag^0,w,c
  3533   0014A6  A4D8               	btfss	status,2,c
  3534   0014A8  EF58  F00A         	goto	u2451
  3535   0014AC  EF5A  F00A         	goto	u2450
  3536   0014B0                     u2451:
  3537   0014B0  EF5F  F00A         	goto	l3358
  3538   0014B4                     u2450:
  3539   0014B4                     
  3540                           ;menu.c: 41:         {;menu.c: 42:             star_flag=1;
  3541   0014B4  0E01               	movlw	1
  3542   0014B6  6E54               	movwf	_star_flag^0,c
  3543   0014B8                     
  3544                           ;menu.c: 43:             star_index++;
  3545   0014B8  2A53               	incf	_star_index^0,f,c
  3546                           
  3547                           ;menu.c: 44:         }
  3548   0014BA  EF69  F00A         	goto	l3362
  3549   0014BE                     l3358:
  3550   0014BE  0E03               	movlw	3
  3551   0014C0  6052               	cpfslt	_log_index^0,c
  3552   0014C2  EF65  F00A         	goto	u2461
  3553   0014C6  EF67  F00A         	goto	u2460
  3554   0014CA                     u2461:
  3555   0014CA  EF69  F00A         	goto	l3362
  3556   0014CE                     u2460:
  3557   0014CE                     
  3558                           ;menu.c: 46:         {;menu.c: 47:             log_index++;
  3559   0014CE  2A52               	incf	_log_index^0,f,c
  3560                           
  3561                           ;menu.c: 48:             star_index++;
  3562   0014D0  2A53               	incf	_star_index^0,f,c
  3563   0014D2                     l3362:
  3564                           
  3565                           ;menu.c: 52:     if(key==6 )
  3566   0014D2  0E06               	movlw	6
  3567   0014D4  1811               	xorwf	menu@key^0,w,c
  3568   0014D6  A4D8               	btfss	status,2,c
  3569   0014D8  EF70  F00A         	goto	u2471
  3570   0014DC  EF72  F00A         	goto	u2470
  3571   0014E0                     u2471:
  3572   0014E0  EF89  F00A         	goto	l3374
  3573   0014E4                     u2470:
  3574   0014E4                     
  3575                           ;menu.c: 53:     {;menu.c: 54:          if(star_flag==1)
  3576   0014E4  0454               	decf	_star_flag^0,w,c
  3577   0014E6  A4D8               	btfss	status,2,c
  3578   0014E8  EF78  F00A         	goto	u2481
  3579   0014EC  EF7A  F00A         	goto	u2480
  3580   0014F0                     u2481:
  3581   0014F0  EF7F  F00A         	goto	l3370
  3582   0014F4                     u2480:
  3583   0014F4                     
  3584                           ;menu.c: 55:          {;menu.c: 56:            star_flag=0;
  3585   0014F4  0E00               	movlw	0
  3586   0014F6  6E54               	movwf	_star_flag^0,c
  3587   0014F8                     
  3588                           ;menu.c: 57:            star_index--;
  3589   0014F8  0653               	decf	_star_index^0,f,c
  3590                           
  3591                           ;menu.c: 58:          }
  3592   0014FA  EF89  F00A         	goto	l3374
  3593   0014FE                     l3370:
  3594   0014FE  5052               	movf	_log_index^0,w,c
  3595   001500  B4D8               	btfsc	status,2,c
  3596   001502  EF85  F00A         	goto	u2491
  3597   001506  EF87  F00A         	goto	u2490
  3598   00150A                     u2491:
  3599   00150A  EF89  F00A         	goto	l3374
  3600   00150E                     u2490:
  3601   00150E                     
  3602                           ;menu.c: 61:         {;menu.c: 62:             log_index--;
  3603   00150E  0652               	decf	_log_index^0,f,c
  3604                           
  3605                           ;menu.c: 63:             star_index--;
  3606   001510  0653               	decf	_star_index^0,f,c
  3607   001512                     l3374:
  3608                           
  3609                           ;menu.c: 68:     if(key==15)
  3610   001512  0E0F               	movlw	15
  3611   001514  1811               	xorwf	menu@key^0,w,c
  3612   001516  A4D8               	btfss	status,2,c
  3613   001518  EF90  F00A         	goto	u2501
  3614   00151C  EF92  F00A         	goto	u2500
  3615   001520                     u2501:
  3616   001520  EF9B  F00A         	goto	l3382
  3617   001524                     u2500:
  3618   001524                     
  3619                           ;menu.c: 69:     {;menu.c: 70:         clcd_write(0x01, 0);
  3620   001524  0E00               	movlw	0
  3621   001526  6E01               	movwf	clcd_write@control_bit^0,c
  3622   001528  0E01               	movlw	1
  3623   00152A  ECCF  F010         	call	_clcd_write
  3624   00152E                     
  3625                           ;menu.c: 71:         main_f=3;
  3626   00152E  0E03               	movlw	3
  3627   001530  6E59               	movwf	_main_f^0,c
  3628   001532                     
  3629                           ;menu.c: 72:         menu_f=star_index;
  3630   001532  C053  F058         	movff	_star_index,_menu_f
  3631   001536                     l3382:
  3632                           
  3633                           ;menu.c: 74:     if(key==16)
  3634   001536  0E10               	movlw	16
  3635   001538  1811               	xorwf	menu@key^0,w,c
  3636   00153A  A4D8               	btfss	status,2,c
  3637   00153C  EFA2  F00A         	goto	u2511
  3638   001540  EFA4  F00A         	goto	u2510
  3639   001544                     u2511:
  3640   001544  EFAB  F00A         	goto	l478
  3641   001548                     u2510:
  3642   001548                     
  3643                           ;menu.c: 75:     {;menu.c: 76:         clcd_write(0x01, 0);
  3644   001548  0E00               	movlw	0
  3645   00154A  6E01               	movwf	clcd_write@control_bit^0,c
  3646   00154C  0E01               	movlw	1
  3647   00154E  ECCF  F010         	call	_clcd_write
  3648   001552                     
  3649                           ;menu.c: 77:         main_f=0;
  3650   001552  0E00               	movlw	0
  3651   001554  6E59               	movwf	_main_f^0,c
  3652   001556                     l478:
  3653   001556  0012               	return		;funcret
  3654   001558                     __end_of_menu:
  3655                           	callstack 0
  3656                           
  3657 ;; *************** function _init_config *****************
  3658 ;; Defined at:
  3659 ;;		line 22 in file "main.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;  j               2    5[COMRAM] int 
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3673 ;;      Params:         0       0       0       0       0       0       0
  3674 ;;      Locals:         2       0       0       0       0       0       0
  3675 ;;      Temps:          0       0       0       0       0       0       0
  3676 ;;      Totals:         2       0       0       0       0       0       0
  3677 ;;Total ram usage:        2 bytes
  3678 ;; Hardware stack levels used: 1
  3679 ;; Hardware stack levels required when called: 6
  3680 ;; This function calls:
  3681 ;;		_init_adc
  3682 ;;		_init_clcd
  3683 ;;		_init_ds1307
  3684 ;;		_init_i2c
  3685 ;;		_init_matrix_keypad
  3686 ;;		_init_timer0
  3687 ;;		_init_uart
  3688 ;;		_read_external_eeprom
  3689 ;;		_write_external_eeprom
  3690 ;; This function is called by:
  3691 ;;		_main
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text10
  3696   001C42                     __ptext10:
  3697                           	callstack 0
  3698   001C42                     _init_config:
  3699                           	callstack 24
  3700   001C42                     
  3701                           ;main.c: 23:     init_clcd();
  3702   001C42  ECCD  F00D         	call	_init_clcd	;wreg free
  3703                           
  3704                           ;main.c: 24:     init_matrix_keypad();
  3705   001C46  EC92  F011         	call	_init_matrix_keypad	;wreg free
  3706   001C4A                     
  3707                           ;main.c: 25:     init_adc();
  3708   001C4A  EC31  F011         	call	_init_adc	;wreg free
  3709   001C4E                     
  3710                           ;main.c: 26:     init_i2c();
  3711   001C4E  EC69  F011         	call	_init_i2c	;wreg free
  3712                           
  3713                           ;main.c: 27:     init_ds1307();
  3714   001C52  EC68  F010         	call	_init_ds1307	;wreg free
  3715   001C56                     
  3716                           ;main.c: 28:     init_timer0();
  3717   001C56  EC7F  F011         	call	_init_timer0	;wreg free
  3718   001C5A                     
  3719                           ;main.c: 29:     init_uart();
  3720   001C5A  EC89  F011         	call	_init_uart	;wreg free
  3721                           
  3722                           ;main.c: 33:     write_external_eeprom(200, '0');
  3723   001C5E  0E30               	movlw	48
  3724   001C60  6E02               	movwf	write_external_eeprom@data^0,c
  3725   001C62  0EC8               	movlw	200
  3726   001C64  ECAF  F010         	call	_write_external_eeprom
  3727                           
  3728                           ;main.c: 34:     write_external_eeprom(201, '0');
  3729   001C68  0E30               	movlw	48
  3730   001C6A  6E02               	movwf	write_external_eeprom@data^0,c
  3731   001C6C  0EC9               	movlw	201
  3732   001C6E  ECAF  F010         	call	_write_external_eeprom
  3733                           
  3734                           ;main.c: 35:     write_external_eeprom(202, '0');
  3735   001C72  0E30               	movlw	48
  3736   001C74  6E02               	movwf	write_external_eeprom@data^0,c
  3737   001C76  0ECA               	movlw	202
  3738   001C78  ECAF  F010         	call	_write_external_eeprom
  3739                           
  3740                           ;main.c: 36:     write_external_eeprom(203, '0');
  3741   001C7C  0E30               	movlw	48
  3742   001C7E  6E02               	movwf	write_external_eeprom@data^0,c
  3743   001C80  0ECB               	movlw	203
  3744   001C82  ECAF  F010         	call	_write_external_eeprom
  3745   001C86                     
  3746                           ;main.c: 39:     for (int j = 0; j < 4; j++) {
  3747   001C86  0E00               	movlw	0
  3748   001C88  6E07               	movwf	(init_config@j+1)^0,c
  3749   001C8A  0E00               	movlw	0
  3750   001C8C  6E06               	movwf	init_config@j^0,c
  3751   001C8E                     l3210:
  3752                           
  3753                           ;main.c: 40:         pass[j] = read_external_eeprom(j + 200);
  3754   001C8E  5006               	movf	init_config@j^0,w,c
  3755   001C90  0F9F               	addlw	low _pass
  3756   001C92  6ED9               	movwf	fsr2l,c
  3757   001C94  6ADA               	clrf	fsr2h,c
  3758   001C96  5006               	movf	init_config@j^0,w,c
  3759   001C98  0FC8               	addlw	200
  3760   001C9A  EC07  F011         	call	_read_external_eeprom
  3761   001C9E  6EDF               	movwf	indf2,c
  3762   001CA0                     
  3763                           ;main.c: 41:     }
  3764   001CA0  4A06               	infsnz	init_config@j^0,f,c
  3765   001CA2  2A07               	incf	(init_config@j+1)^0,f,c
  3766   001CA4  BE07               	btfsc	(init_config@j+1)^0,7,c
  3767   001CA6  EF5E  F00E         	goto	u2231
  3768   001CAA  5007               	movf	(init_config@j+1)^0,w,c
  3769   001CAC  E109               	bnz	u2230
  3770   001CAE  0E04               	movlw	4
  3771   001CB0  5C06               	subwf	init_config@j^0,w,c
  3772   001CB2  A0D8               	btfss	status,0,c
  3773   001CB4  EF5E  F00E         	goto	u2231
  3774   001CB8  EF60  F00E         	goto	u2230
  3775   001CBC                     u2231:
  3776   001CBC  EF47  F00E         	goto	l3210
  3777   001CC0                     u2230:
  3778   001CC0                     
  3779                           ;main.c: 42:     pass[4] = '\0';
  3780   001CC0  0E00               	movlw	0
  3781   001CC2  0100               	movlb	0	; () banked
  3782   001CC4  6FA3               	movwf	(_pass+4)& (0+255),b
  3783   001CC6                     
  3784                           ; BSR set to: 0
  3785   001CC6  0012               	return		;funcret
  3786   001CC8                     __end_of_init_config:
  3787                           	callstack 0
  3788                           
  3789 ;; *************** function _init_uart *****************
  3790 ;; Defined at:
  3791 ;;		line 4 in file "uart.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;		None
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;		None
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1    wreg      void 
  3798 ;; Registers used:
  3799 ;;		wreg, status,2
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3805 ;;      Params:         0       0       0       0       0       0       0
  3806 ;;      Locals:         0       0       0       0       0       0       0
  3807 ;;      Temps:          0       0       0       0       0       0       0
  3808 ;;      Totals:         0       0       0       0       0       0       0
  3809 ;;Total ram usage:        0 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; Hardware stack levels required when called: 1
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_init_config
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text11
  3820   002312                     __ptext11:
  3821                           	callstack 0
  3822   002312                     _init_uart:
  3823                           	callstack 28
  3824   002312                     
  3825                           ;uart.c: 7:  TRISC7 = 1;
  3826   002312  8E94               	bsf	3988,7,c	;volatile
  3827                           
  3828                           ;uart.c: 8:  TRISC6 = 0;
  3829   002314  9C94               	bcf	3988,6,c	;volatile
  3830                           
  3831                           ;uart.c: 11:  BRGH = 1;
  3832   002316  84AC               	bsf	4012,2,c	;volatile
  3833                           
  3834                           ;uart.c: 12:  SPEN = 1;
  3835   002318  8EAB               	bsf	4011,7,c	;volatile
  3836                           
  3837                           ;uart.c: 16:  CREN = 1;
  3838   00231A  88AB               	bsf	4011,4,c	;volatile
  3839   00231C                     
  3840                           ;uart.c: 22:  SPBRG = 129;
  3841   00231C  0E81               	movlw	129
  3842   00231E  6EAF               	movwf	175,c	;volatile
  3843   002320                     
  3844                           ;uart.c: 24:     RCIE = 1;
  3845   002320  8A9D               	bsf	3997,5,c	;volatile
  3846   002322  0012               	return		;funcret
  3847   002324                     __end_of_init_uart:
  3848                           	callstack 0
  3849                           
  3850 ;; *************** function _init_timer0 *****************
  3851 ;; Defined at:
  3852 ;;		line 4 in file "timer0.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;		None
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;		None
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, status,2
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3866 ;;      Params:         0       0       0       0       0       0       0
  3867 ;;      Locals:         0       0       0       0       0       0       0
  3868 ;;      Temps:          0       0       0       0       0       0       0
  3869 ;;      Totals:         0       0       0       0       0       0       0
  3870 ;;Total ram usage:        0 bytes
  3871 ;; Hardware stack levels used: 1
  3872 ;; Hardware stack levels required when called: 1
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_init_config
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text12
  3881   0022FE                     __ptext12:
  3882                           	callstack 0
  3883   0022FE                     _init_timer0:
  3884                           	callstack 28
  3885   0022FE                     
  3886                           ;timer0.c: 12:  T08BIT = 1;
  3887   0022FE  8CD5               	bsf	4053,6,c	;volatile
  3888                           
  3889                           ;timer0.c: 15:  T0CS = 0;
  3890   002300  9AD5               	bcf	4053,5,c	;volatile
  3891                           
  3892                           ;timer0.c: 18:  TMR0ON = 1;
  3893   002302  8ED5               	bsf	4053,7,c	;volatile
  3894                           
  3895                           ;timer0.c: 21:  PSA = 1;
  3896   002304  86D5               	bsf	4053,3,c	;volatile
  3897   002306                     
  3898                           ;timer0.c: 24:  TMR0 = 6;
  3899   002306  0E00               	movlw	0
  3900   002308  6ED7               	movwf	215,c	;volatile
  3901   00230A  0E06               	movlw	6
  3902   00230C  6ED6               	movwf	214,c	;volatile
  3903   00230E                     
  3904                           ;timer0.c: 27:  TMR0IF = 0;
  3905   00230E  94F2               	bcf	4082,2,c	;volatile
  3906   002310  0012               	return		;funcret
  3907   002312                     __end_of_init_timer0:
  3908                           	callstack 0
  3909                           
  3910 ;; *************** function _init_matrix_keypad *****************
  3911 ;; Defined at:
  3912 ;;		line 5 in file "matrix_keypad.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;		None
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3926 ;;      Params:         0       0       0       0       0       0       0
  3927 ;;      Locals:         0       0       0       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0       0       0
  3929 ;;      Totals:         0       0       0       0       0       0       0
  3930 ;;Total ram usage:        0 bytes
  3931 ;; Hardware stack levels used: 1
  3932 ;; Hardware stack levels required when called: 1
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_init_config
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text13
  3941   002324                     __ptext13:
  3942                           	callstack 0
  3943   002324                     _init_matrix_keypad:
  3944                           	callstack 28
  3945   002324                     
  3946                           ;matrix_keypad.c: 8:  ADCON1 = 0x0F;
  3947   002324  0E0F               	movlw	15
  3948   002326  6EC1               	movwf	193,c	;volatile
  3949                           
  3950                           ;matrix_keypad.c: 11:  TRISB = 0x1E;
  3951   002328  0E1E               	movlw	30
  3952   00232A  6E93               	movwf	147,c	;volatile
  3953   00232C                     
  3954                           ;matrix_keypad.c: 14:  RBPU = 0;
  3955   00232C  9EF1               	bcf	4081,7,c	;volatile
  3956   00232E                     
  3957                           ;matrix_keypad.c: 16:  PORTB = PORTB | 0xE0;
  3958   00232E  5081               	movf	129,w,c	;volatile
  3959   002330  09E0               	iorlw	224
  3960   002332  6E81               	movwf	129,c	;volatile
  3961   002334  0012               	return		;funcret
  3962   002336                     __end_of_init_matrix_keypad:
  3963                           	callstack 0
  3964                           
  3965 ;; *************** function _init_i2c *****************
  3966 ;; Defined at:
  3967 ;;		line 4 in file "i2c.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;		None
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;		None
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      void 
  3974 ;; Registers used:
  3975 ;;		wreg, status,2
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3981 ;;      Params:         0       0       0       0       0       0       0
  3982 ;;      Locals:         0       0       0       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0
  3984 ;;      Totals:         0       0       0       0       0       0       0
  3985 ;;Total ram usage:        0 bytes
  3986 ;; Hardware stack levels used: 1
  3987 ;; Hardware stack levels required when called: 1
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_init_config
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text14
  3996   0022D2                     __ptext14:
  3997                           	callstack 0
  3998   0022D2                     _init_i2c:
  3999                           	callstack 28
  4000   0022D2  8694               	bsf	3988,3,c	;volatile
  4001   0022D4  8894               	bsf	3988,4,c	;volatile
  4002   0022D6  0E28               	movlw	40
  4003   0022D8  6EC6               	movwf	198,c	;volatile
  4004   0022DA  0E31               	movlw	49
  4005   0022DC  6EC8               	movwf	200,c	;volatile
  4006   0022DE  9CC7               	bcf	4039,6,c	;volatile
  4007   0022E0  8EC7               	bsf	4039,7,c	;volatile
  4008   0022E2  969E               	bcf	3998,3,c	;volatile
  4009   0022E4  96A1               	bcf	4001,3,c	;volatile
  4010   0022E6  0012               	return		;funcret
  4011   0022E8                     __end_of_init_i2c:
  4012                           	callstack 0
  4013                           
  4014 ;; *************** function _init_ds1307 *****************
  4015 ;; Defined at:
  4016 ;;		line 13 in file "ds1307.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;		None
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  dummy           1    3[COMRAM] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0, cstack
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4030 ;;      Params:         0       0       0       0       0       0       0
  4031 ;;      Locals:         1       0       0       0       0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0
  4033 ;;      Totals:         1       0       0       0       0       0       0
  4034 ;;Total ram usage:        1 bytes
  4035 ;; Hardware stack levels used: 1
  4036 ;; Hardware stack levels required when called: 5
  4037 ;; This function calls:
  4038 ;;		_read_ds1307
  4039 ;;		_write_ds1307
  4040 ;; This function is called by:
  4041 ;;		_init_config
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           	psect	text15
  4046   0020D0                     __ptext15:
  4047                           	callstack 0
  4048   0020D0                     _init_ds1307:
  4049                           	callstack 24
  4050   0020D0                     
  4051                           ;ds1307.c: 15:  unsigned char dummy;;ds1307.c: 18:  dummy = read_ds1307(0x00);
  4052   0020D0  0E00               	movlw	0
  4053   0020D2  EC1C  F011         	call	_read_ds1307
  4054   0020D6  6E04               	movwf	init_ds1307@dummy^0,c
  4055   0020D8                     
  4056                           ;ds1307.c: 19:  write_ds1307(0x00, dummy | 0x80);
  4057   0020D8  5004               	movf	init_ds1307@dummy^0,w,c
  4058   0020DA  0980               	iorlw	128
  4059   0020DC  6E02               	movwf	write_ds1307@data^0,c
  4060   0020DE  0E00               	movlw	0
  4061   0020E0  EC41  F011         	call	_write_ds1307
  4062   0020E4                     
  4063                           ;ds1307.c: 22:  dummy = read_ds1307(0x02);
  4064   0020E4  0E02               	movlw	2
  4065   0020E6  EC1C  F011         	call	_read_ds1307
  4066   0020EA  6E04               	movwf	init_ds1307@dummy^0,c
  4067                           
  4068                           ;ds1307.c: 23:  write_ds1307(0x02, dummy | 0x40);
  4069   0020EC  5004               	movf	init_ds1307@dummy^0,w,c
  4070   0020EE  0940               	iorlw	64
  4071   0020F0  6E02               	movwf	write_ds1307@data^0,c
  4072   0020F2  0E02               	movlw	2
  4073   0020F4  EC41  F011         	call	_write_ds1307
  4074   0020F8                     
  4075                           ;ds1307.c: 38:  write_ds1307(0x07, 0x93);
  4076   0020F8  0E93               	movlw	147
  4077   0020FA  6E02               	movwf	write_ds1307@data^0,c
  4078   0020FC  0E07               	movlw	7
  4079   0020FE  EC41  F011         	call	_write_ds1307
  4080   002102                     
  4081                           ;ds1307.c: 41:  dummy = read_ds1307(0x00);
  4082   002102  0E00               	movlw	0
  4083   002104  EC1C  F011         	call	_read_ds1307
  4084   002108  6E04               	movwf	init_ds1307@dummy^0,c
  4085                           
  4086                           ;ds1307.c: 42:  write_ds1307(0x00, dummy & 0x7F);
  4087   00210A  5004               	movf	init_ds1307@dummy^0,w,c
  4088   00210C  0B7F               	andlw	127
  4089   00210E  6E02               	movwf	write_ds1307@data^0,c
  4090   002110  0E00               	movlw	0
  4091   002112  EC41  F011         	call	_write_ds1307
  4092   002116  0012               	return		;funcret
  4093   002118                     __end_of_init_ds1307:
  4094                           	callstack 0
  4095                           
  4096 ;; *************** function _write_ds1307 *****************
  4097 ;; Defined at:
  4098 ;;		line 46 in file "ds1307.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  address         1    wreg     unsigned char 
  4101 ;;  data            1    1[COMRAM] unsigned char 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  address         1    2[COMRAM] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1    wreg      void 
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4113 ;;      Params:         1       0       0       0       0       0       0
  4114 ;;      Locals:         1       0       0       0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0
  4116 ;;      Totals:         2       0       0       0       0       0       0
  4117 ;;Total ram usage:        2 bytes
  4118 ;; Hardware stack levels used: 1
  4119 ;; Hardware stack levels required when called: 3
  4120 ;; This function calls:
  4121 ;;		_i2c_start
  4122 ;;		_i2c_stop
  4123 ;;		_i2c_write
  4124 ;; This function is called by:
  4125 ;;		_init_ds1307
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text16
  4130   002282                     __ptext16:
  4131                           	callstack 0
  4132   002282                     _write_ds1307:
  4133                           	callstack 25
  4134                           
  4135                           ;incstack = 0
  4136                           ;write_ds1307@address stored from wreg
  4137   002282  6E03               	movwf	write_ds1307@address^0,c
  4138   002284                     
  4139                           ;ds1307.c: 46: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 47
      +                          : {;ds1307.c: 48:  i2c_start();
  4140   002284  ECC4  F011         	call	_i2c_start	;wreg free
  4141   002288                     
  4142                           ;ds1307.c: 49:  i2c_write(0xD0);
  4143   002288  0ED0               	movlw	208
  4144   00228A  ECB2  F011         	call	_i2c_write
  4145   00228E                     
  4146                           ;ds1307.c: 50:  i2c_write(address);
  4147   00228E  5003               	movf	write_ds1307@address^0,w,c
  4148   002290  ECB2  F011         	call	_i2c_write
  4149   002294                     
  4150                           ;ds1307.c: 51:  i2c_write(data);
  4151   002294  5002               	movf	write_ds1307@data^0,w,c
  4152   002296  ECB2  F011         	call	_i2c_write
  4153   00229A                     
  4154                           ;ds1307.c: 52:  i2c_stop();
  4155   00229A  ECC0  F011         	call	_i2c_stop	;wreg free
  4156   00229E  0012               	return		;funcret
  4157   0022A0                     __end_of_write_ds1307:
  4158                           	callstack 0
  4159                           
  4160 ;; *************** function _init_clcd *****************
  4161 ;; Defined at:
  4162 ;;		line 28 in file "clcd.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;		None
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, status,2, status,0, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4176 ;;      Params:         0       0       0       0       0       0       0
  4177 ;;      Locals:         0       0       0       0       0       0       0
  4178 ;;      Temps:          1       0       0       0       0       0       0
  4179 ;;      Totals:         1       0       0       0       0       0       0
  4180 ;;Total ram usage:        1 bytes
  4181 ;; Hardware stack levels used: 1
  4182 ;; Hardware stack levels required when called: 2
  4183 ;; This function calls:
  4184 ;;		_clcd_write
  4185 ;; This function is called by:
  4186 ;;		_init_config
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           	psect	text17
  4191   001B9A                     __ptext17:
  4192                           	callstack 0
  4193   001B9A                     _init_clcd:
  4194                           	callstack 27
  4195   001B9A                     
  4196                           ;clcd.c: 31:  TRISD = 0x00;
  4197   001B9A  0E00               	movlw	0
  4198   001B9C  6E95               	movwf	149,c	;volatile
  4199   001B9E                     
  4200                           ;clcd.c: 33:  TRISC = TRISC & 0xF8;
  4201   001B9E  5094               	movf	148,w,c	;volatile
  4202   001BA0  0BF8               	andlw	248
  4203   001BA2  6E94               	movwf	148,c	;volatile
  4204   001BA4                     
  4205                           ;clcd.c: 35:  RC0 = 0;
  4206   001BA4  9082               	bcf	3970,0,c	;volatile
  4207   001BA6                     
  4208                           ;clcd.c: 39:     _delay((unsigned long)((30)*(20000000/4000.0)));
  4209   001BA6  0EC3               	movlw	195
  4210   001BA8  6E03               	movwf	??_init_clcd^0,c
  4211   001BAA  0ECD               	movlw	205
  4212   001BAC                     u3557:
  4213   001BAC  2EE8               	decfsz	wreg,f,c
  4214   001BAE  D7FE               	bra	u3557
  4215   001BB0  2E03               	decfsz	??_init_clcd^0,f,c
  4216   001BB2  D7FC               	bra	u3557
  4217   001BB4  0000               	nop	
  4218   001BB6                     
  4219                           ;clcd.c: 42:     clcd_write(0x33, 0 );
  4220   001BB6  0E00               	movlw	0
  4221   001BB8  6E01               	movwf	clcd_write@control_bit^0,c
  4222   001BBA  0E33               	movlw	51
  4223   001BBC  ECCF  F010         	call	_clcd_write
  4224   001BC0                     
  4225                           ;clcd.c: 43:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4226   001BC0  0E1B               	movlw	27
  4227   001BC2  6E03               	movwf	??_init_clcd^0,c
  4228   001BC4  0E9E               	movlw	158
  4229   001BC6                     u3567:
  4230   001BC6  2EE8               	decfsz	wreg,f,c
  4231   001BC8  D7FE               	bra	u3567
  4232   001BCA  2E03               	decfsz	??_init_clcd^0,f,c
  4233   001BCC  D7FC               	bra	u3567
  4234   001BCE  D000               	nop2	
  4235   001BD0                     
  4236                           ;clcd.c: 44:     clcd_write(0x33, 0 );
  4237   001BD0  0E00               	movlw	0
  4238   001BD2  6E01               	movwf	clcd_write@control_bit^0,c
  4239   001BD4  0E33               	movlw	51
  4240   001BD6  ECCF  F010         	call	_clcd_write
  4241   001BDA                     
  4242                           ;clcd.c: 45:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4243   001BDA  0EA6               	movlw	166
  4244   001BDC                     u3577:
  4245   001BDC  2EE8               	decfsz	wreg,f,c
  4246   001BDE  D7FE               	bra	u3577
  4247   001BE0  D000               	nop2	
  4248   001BE2                     
  4249                           ;clcd.c: 46:     clcd_write(0x33, 0 );
  4250   001BE2  0E00               	movlw	0
  4251   001BE4  6E01               	movwf	clcd_write@control_bit^0,c
  4252   001BE6  0E33               	movlw	51
  4253   001BE8  ECCF  F010         	call	_clcd_write
  4254   001BEC                     
  4255                           ;clcd.c: 47:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4256   001BEC  D000               	nop2		;2 cycle nop
  4257   001BEE  D000               	nop2		;2 cycle nop
  4258   001BF0  0000               	nop	
  4259   001BF2                     
  4260                           ;clcd.c: 49:     clcd_write(0x02, 0);
  4261   001BF2  0E00               	movlw	0
  4262   001BF4  6E01               	movwf	clcd_write@control_bit^0,c
  4263   001BF6  0E02               	movlw	2
  4264   001BF8  ECCF  F010         	call	_clcd_write
  4265   001BFC                     
  4266                           ;clcd.c: 50:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4267   001BFC  0EA6               	movlw	166
  4268   001BFE                     u3587:
  4269   001BFE  2EE8               	decfsz	wreg,f,c
  4270   001C00  D7FE               	bra	u3587
  4271   001C02  D000               	nop2	
  4272   001C04                     
  4273                           ;clcd.c: 51:     clcd_write(0x38, 0);
  4274   001C04  0E00               	movlw	0
  4275   001C06  6E01               	movwf	clcd_write@control_bit^0,c
  4276   001C08  0E38               	movlw	56
  4277   001C0A  ECCF  F010         	call	_clcd_write
  4278   001C0E                     
  4279                           ;clcd.c: 52:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4280   001C0E  0EA6               	movlw	166
  4281   001C10                     u3597:
  4282   001C10  2EE8               	decfsz	wreg,f,c
  4283   001C12  D7FE               	bra	u3597
  4284   001C14  D000               	nop2	
  4285   001C16                     
  4286                           ;clcd.c: 53:     clcd_write(0x01, 0);
  4287   001C16  0E00               	movlw	0
  4288   001C18  6E01               	movwf	clcd_write@control_bit^0,c
  4289   001C1A  0E01               	movlw	1
  4290   001C1C  ECCF  F010         	call	_clcd_write
  4291   001C20                     
  4292                           ;clcd.c: 54:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  4293   001C20  0E04               	movlw	4
  4294   001C22  6E03               	movwf	??_init_clcd^0,c
  4295   001C24  0E3E               	movlw	62
  4296   001C26                     u3607:
  4297   001C26  2EE8               	decfsz	wreg,f,c
  4298   001C28  D7FE               	bra	u3607
  4299   001C2A  2E03               	decfsz	??_init_clcd^0,f,c
  4300   001C2C  D7FC               	bra	u3607
  4301   001C2E                     
  4302                           ;clcd.c: 55:     clcd_write(0x0C, 0);
  4303   001C2E  0E00               	movlw	0
  4304   001C30  6E01               	movwf	clcd_write@control_bit^0,c
  4305   001C32  0E0C               	movlw	12
  4306   001C34  ECCF  F010         	call	_clcd_write
  4307   001C38                     
  4308                           ;clcd.c: 56:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4309   001C38  0EA6               	movlw	166
  4310   001C3A                     u3617:
  4311   001C3A  2EE8               	decfsz	wreg,f,c
  4312   001C3C  D7FE               	bra	u3617
  4313   001C3E  D000               	nop2	
  4314   001C40  0012               	return		;funcret
  4315   001C42                     __end_of_init_clcd:
  4316                           	callstack 0
  4317                           
  4318 ;; *************** function _init_adc *****************
  4319 ;; Defined at:
  4320 ;;		line 4 in file "adc.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      void 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4334 ;;      Params:         0       0       0       0       0       0       0
  4335 ;;      Locals:         0       0       0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0
  4337 ;;      Totals:         0       0       0       0       0       0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used: 1
  4340 ;; Hardware stack levels required when called: 1
  4341 ;; This function calls:
  4342 ;;		Nothing
  4343 ;; This function is called by:
  4344 ;;		_init_config
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           	psect	text18
  4349   002262                     __ptext18:
  4350                           	callstack 0
  4351   002262                     _init_adc:
  4352                           	callstack 28
  4353   002262                     
  4354                           ;adc.c: 7:  ADFM = 1;
  4355   002262  8EC0               	bsf	4032,7,c	;volatile
  4356                           
  4357                           ;adc.c: 13:  ACQT2 = 0;
  4358   002264  9AC0               	bcf	4032,5,c	;volatile
  4359                           
  4360                           ;adc.c: 14:  ACQT1 = 1;
  4361   002266  88C0               	bsf	4032,4,c	;volatile
  4362                           
  4363                           ;adc.c: 15:  ACQT0 = 0;
  4364   002268  96C0               	bcf	4032,3,c	;volatile
  4365                           
  4366                           ;adc.c: 21:  ADCS0 = 0;
  4367   00226A  90C0               	bcf	4032,0,c	;volatile
  4368                           
  4369                           ;adc.c: 22:  ADCS1 = 1;
  4370   00226C  82C0               	bsf	4032,1,c	;volatile
  4371                           
  4372                           ;adc.c: 23:  ADCS2 = 0;
  4373   00226E  94C0               	bcf	4032,2,c	;volatile
  4374                           
  4375                           ;adc.c: 26:  GODONE = 0;
  4376   002270  92C2               	bcf	4034,1,c	;volatile
  4377                           
  4378                           ;adc.c: 31:  VCFG1 = 0;
  4379   002272  9AC1               	bcf	4033,5,c	;volatile
  4380                           
  4381                           ;adc.c: 33:  VCFG0 = 0;
  4382   002274  98C1               	bcf	4033,4,c	;volatile
  4383   002276                     
  4384                           ;adc.c: 36:  ADRESH = 0;
  4385   002276  0E00               	movlw	0
  4386   002278  6EC4               	movwf	196,c	;volatile
  4387                           
  4388                           ;adc.c: 37:  ADRESL = 0;
  4389   00227A  0E00               	movlw	0
  4390   00227C  6EC3               	movwf	195,c	;volatile
  4391   00227E                     
  4392                           ;adc.c: 40:  ADON = 1;
  4393   00227E  80C2               	bsf	4034,0,c	;volatile
  4394   002280  0012               	return		;funcret
  4395   002282                     __end_of_init_adc:
  4396                           	callstack 0
  4397                           
  4398 ;; *************** function _download_log *****************
  4399 ;; Defined at:
  4400 ;;		line 26 in file "download_log.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;		None
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  j               2   14[COMRAM] int 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4414 ;;      Params:         0       0       0       0       0       0       0
  4415 ;;      Locals:         2       0       0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0
  4417 ;;      Totals:         2       0       0       0       0       0       0
  4418 ;;Total ram usage:        2 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; Hardware stack levels required when called: 5
  4421 ;; This function calls:
  4422 ;;		___awmod
  4423 ;;		_clcd_print
  4424 ;;		_putch
  4425 ;;		_puts
  4426 ;;		_read_external_eeprom
  4427 ;; This function is called by:
  4428 ;;		_main
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text19
  4433   0012D8                     __ptext19:
  4434                           	callstack 0
  4435   0012D8                     _download_log:
  4436                           	callstack 25
  4437   0012D8                     
  4438                           ;download_log.c: 27:     clcd_print("  Download Log   ", (0x80 + (0)));
  4439   0012D8  0EDF               	movlw	low STR_23
  4440   0012DA  6E03               	movwf	clcd_print@data^0,c
  4441   0012DC  0E2E               	movlw	high STR_23
  4442   0012DE  6E04               	movwf	(clcd_print@data+1)^0,c
  4443   0012E0  0E80               	movlw	128
  4444   0012E2  6E05               	movwf	clcd_print@addr^0,c
  4445   0012E4  EC9F  F00F         	call	_clcd_print	;wreg free
  4446                           
  4447                           ;download_log.c: 28:     clcd_print(" SUCCESSFULL ", (0xC0 + (3)));
  4448   0012E8  0ED8               	movlw	low STR_24
  4449   0012EA  6E03               	movwf	clcd_print@data^0,c
  4450   0012EC  0E2F               	movlw	high STR_24
  4451   0012EE  6E04               	movwf	(clcd_print@data+1)^0,c
  4452   0012F0  0EC3               	movlw	195
  4453   0012F2  6E05               	movwf	clcd_print@addr^0,c
  4454   0012F4  EC9F  F00F         	call	_clcd_print	;wreg free
  4455   0012F8                     
  4456                           ;download_log.c: 32:     if (overflow == 1) {
  4457   0012F8  0450               	decf	_overflow^0,w,c
  4458   0012FA  A4D8               	btfss	status,2,c
  4459   0012FC  EF82  F009         	goto	u2661
  4460   001300  EF84  F009         	goto	u2660
  4461   001304                     u2661:
  4462   001304  EF86  F009         	goto	l580
  4463   001308                     u2660:
  4464   001308                     
  4465                           ;download_log.c: 33:         var = 10;
  4466   001308  0E0A               	movlw	10
  4467   00130A  6E4C               	movwf	_var^0,c
  4468   00130C                     l580:
  4469                           
  4470                           ;download_log.c: 35:     if (overflow == 0) {
  4471   00130C  5050               	movf	_overflow^0,w,c
  4472   00130E  A4D8               	btfss	status,2,c
  4473   001310  EF8C  F009         	goto	u2671
  4474   001314  EF8E  F009         	goto	u2670
  4475   001318                     u2671:
  4476   001318  EF90  F009         	goto	l3498
  4477   00131C                     u2670:
  4478   00131C                     
  4479                           ;download_log.c: 36:         var = lap;
  4480   00131C  C051  F04C         	movff	_lap,_var
  4481   001320                     l3498:
  4482                           
  4483                           ;download_log.c: 39:     puts("# TIME   EV   SP \n\r");
  4484   001320  0E94               	movlw	low STR_25
  4485   001322  6E02               	movwf	puts@s^0,c
  4486   001324  0E2E               	movlw	high STR_25
  4487   001326  6E03               	movwf	(puts@s+1)^0,c
  4488   001328  ECEC  F010         	call	_puts	;wreg free
  4489   00132C                     
  4490                           ;download_log.c: 41:     for (last = 0; last < var; last++) {
  4491   00132C  0E00               	movlw	0
  4492   00132E  6E4B               	movwf	_last^0,c
  4493   001330  EFFD  F009         	goto	l3536
  4494   001334                     l3502:
  4495                           
  4496                           ;download_log.c: 44:         for (int j = 0; j < 10; j++) {
  4497   001334  0E00               	movlw	0
  4498   001336  6E10               	movwf	(download_log@j+1)^0,c
  4499   001338  0E00               	movlw	0
  4500   00133A  6E0F               	movwf	download_log@j^0,c
  4501   00133C                     l3508:
  4502                           
  4503                           ;download_log.c: 45:             download_array[j] = read_external_eeprom((start + last)
      +                           % 10 * 10 + j);
  4504   00133C  500F               	movf	download_log@j^0,w,c
  4505   00133E  0F60               	addlw	low _download_array
  4506   001340  6ED9               	movwf	fsr2l,c
  4507   001342  6ADA               	clrf	fsr2h,c
  4508   001344  C04B  F009         	movff	_last,___awmod@dividend
  4509   001348  6A0A               	clrf	(___awmod@dividend+1)^0,c
  4510   00134A  0E00               	movlw	0
  4511   00134C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4512   00134E  0E0A               	movlw	10
  4513   001350  6E0B               	movwf	___awmod@divisor^0,c
  4514   001352  EC75  F00D         	call	___awmod	;wreg free
  4515   001356  5009               	movf	?___awmod^0,w,c
  4516   001358  0D0A               	mullw	10
  4517   00135A  50F3               	movf	243,w,c
  4518   00135C  240F               	addwf	download_log@j^0,w,c
  4519   00135E  EC07  F011         	call	_read_external_eeprom
  4520   001362  6EDF               	movwf	indf2,c
  4521   001364                     
  4522                           ;download_log.c: 46:         }
  4523   001364  4A0F               	infsnz	download_log@j^0,f,c
  4524   001366  2A10               	incf	(download_log@j+1)^0,f,c
  4525   001368  BE10               	btfsc	(download_log@j+1)^0,7,c
  4526   00136A  EFC0  F009         	goto	u2681
  4527   00136E  5010               	movf	(download_log@j+1)^0,w,c
  4528   001370  E109               	bnz	u2680
  4529   001372  0E0A               	movlw	10
  4530   001374  5C0F               	subwf	download_log@j^0,w,c
  4531   001376  A0D8               	btfss	status,0,c
  4532   001378  EFC0  F009         	goto	u2681
  4533   00137C  EFC2  F009         	goto	u2680
  4534   001380                     u2681:
  4535   001380  EF9E  F009         	goto	l3508
  4536   001384                     u2680:
  4537   001384                     
  4538                           ;download_log.c: 48:         putch(download_array[0]);
  4539   001384  0100               	movlb	0	; () banked
  4540   001386  5160               	movf	_download_array& (0+255),w,b
  4541   001388  EC74  F011         	call	_putch
  4542                           
  4543                           ;download_log.c: 49:         putch(download_array[1]);
  4544   00138C  0100               	movlb	0	; () banked
  4545   00138E  5161               	movf	(_download_array+1)& (0+255),w,b
  4546   001390  EC74  F011         	call	_putch
  4547   001394                     
  4548                           ;download_log.c: 50:         putch(':');
  4549   001394  0E3A               	movlw	58
  4550   001396  EC74  F011         	call	_putch
  4551   00139A                     
  4552                           ;download_log.c: 51:         putch(download_array[2]);
  4553   00139A  0100               	movlb	0	; () banked
  4554   00139C  5162               	movf	(_download_array+2)& (0+255),w,b
  4555   00139E  EC74  F011         	call	_putch
  4556   0013A2                     
  4557                           ;download_log.c: 52:         putch(download_array[3]);
  4558   0013A2  0100               	movlb	0	; () banked
  4559   0013A4  5163               	movf	(_download_array+3)& (0+255),w,b
  4560   0013A6  EC74  F011         	call	_putch
  4561   0013AA                     
  4562                           ;download_log.c: 53:         putch(':');
  4563   0013AA  0E3A               	movlw	58
  4564   0013AC  EC74  F011         	call	_putch
  4565                           
  4566                           ;download_log.c: 54:         putch(download_array[4]);
  4567   0013B0  0100               	movlb	0	; () banked
  4568   0013B2  5164               	movf	(_download_array+4)& (0+255),w,b
  4569   0013B4  EC74  F011         	call	_putch
  4570                           
  4571                           ;download_log.c: 55:         putch(download_array[5]);
  4572   0013B8  0100               	movlb	0	; () banked
  4573   0013BA  5165               	movf	(_download_array+5)& (0+255),w,b
  4574   0013BC  EC74  F011         	call	_putch
  4575   0013C0                     
  4576                           ;download_log.c: 56:         putch(' ');
  4577   0013C0  0E20               	movlw	32
  4578   0013C2  EC74  F011         	call	_putch
  4579   0013C6                     
  4580                           ;download_log.c: 59:         putch(download_array[6]);
  4581   0013C6  0100               	movlb	0	; () banked
  4582   0013C8  5166               	movf	(_download_array+6)& (0+255),w,b
  4583   0013CA  EC74  F011         	call	_putch
  4584   0013CE                     
  4585                           ;download_log.c: 60:         putch(download_array[7]);
  4586   0013CE  0100               	movlb	0	; () banked
  4587   0013D0  5167               	movf	(_download_array+7)& (0+255),w,b
  4588   0013D2  EC74  F011         	call	_putch
  4589   0013D6                     
  4590                           ;download_log.c: 61:         putch(' ');
  4591   0013D6  0E20               	movlw	32
  4592   0013D8  EC74  F011         	call	_putch
  4593                           
  4594                           ;download_log.c: 64:         putch(download_array[8]);
  4595   0013DC  0100               	movlb	0	; () banked
  4596   0013DE  5168               	movf	(_download_array+8)& (0+255),w,b
  4597   0013E0  EC74  F011         	call	_putch
  4598                           
  4599                           ;download_log.c: 65:         putch(download_array[9]);
  4600   0013E4  0100               	movlb	0	; () banked
  4601   0013E6  5169               	movf	(_download_array+9)& (0+255),w,b
  4602   0013E8  EC74  F011         	call	_putch
  4603   0013EC                     
  4604                           ;download_log.c: 67:         puts("\n\r");
  4605   0013EC  0EA5               	movlw	low (STR_25+17)
  4606   0013EE  6E02               	movwf	puts@s^0,c
  4607   0013F0  0E2E               	movlw	high (STR_25+17)
  4608   0013F2  6E03               	movwf	(puts@s+1)^0,c
  4609   0013F4  ECEC  F010         	call	_puts	;wreg free
  4610   0013F8                     
  4611                           ;download_log.c: 69:     }
  4612   0013F8  2A4B               	incf	_last^0,f,c
  4613   0013FA                     l3536:
  4614   0013FA  504C               	movf	_var^0,w,c
  4615   0013FC  5C4B               	subwf	_last^0,w,c
  4616   0013FE  A0D8               	btfss	status,0,c
  4617   001400  EF04  F00A         	goto	u2691
  4618   001404  EF06  F00A         	goto	u2690
  4619   001408                     u2691:
  4620   001408  EF9A  F009         	goto	l3502
  4621   00140C                     u2690:
  4622   00140C                     
  4623                           ;download_log.c: 71:     store[6]='D';
  4624   00140C  0E44               	movlw	68
  4625   00140E  0100               	movlb	0	; () banked
  4626   001410  6F7C               	movwf	(_store+6)& (0+255),b
  4627                           
  4628                           ;download_log.c: 72:     store[7]='L';
  4629   001412  0E4C               	movlw	76
  4630   001414  6F7D               	movwf	(_store+7)& (0+255),b
  4631                           
  4632                           ;download_log.c: 74:     main_f = 2;
  4633   001416  0E02               	movlw	2
  4634   001418  6E59               	movwf	_main_f^0,c
  4635   00141A                     
  4636                           ; BSR set to: 0
  4637   00141A  0012               	return		;funcret
  4638   00141C                     __end_of_download_log:
  4639                           	callstack 0
  4640                           
  4641 ;; *************** function _read_external_eeprom *****************
  4642 ;; Defined at:
  4643 ;;		line 24 in file "external_eeprom.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  address         1    wreg     unsigned char 
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;  address         1    1[COMRAM] unsigned char 
  4648 ;;  data            1    2[COMRAM] unsigned char 
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      unsigned char 
  4651 ;; Registers used:
  4652 ;;		wreg, status,2, cstack
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4658 ;;      Params:         0       0       0       0       0       0       0
  4659 ;;      Locals:         2       0       0       0       0       0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0
  4661 ;;      Totals:         2       0       0       0       0       0       0
  4662 ;;Total ram usage:        2 bytes
  4663 ;; Hardware stack levels used: 1
  4664 ;; Hardware stack levels required when called: 4
  4665 ;; This function calls:
  4666 ;;		_i2c_read
  4667 ;;		_i2c_rep_start
  4668 ;;		_i2c_start
  4669 ;;		_i2c_stop
  4670 ;;		_i2c_write
  4671 ;; This function is called by:
  4672 ;;		_init_config
  4673 ;;		_view_log
  4674 ;;		_download_log
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text20
  4679   00220E                     __ptext20:
  4680                           	callstack 0
  4681   00220E                     _read_external_eeprom:
  4682                           	callstack 25
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;incstack = 0
  4686                           ;read_external_eeprom@address stored from wreg
  4687   00220E  6E02               	movwf	read_external_eeprom@address^0,c
  4688   002210                     
  4689                           ;external_eeprom.c: 24: unsigned char read_external_eeprom(unsigned char address);extern
      +                          al_eeprom.c: 25: {;external_eeprom.c: 26:  unsigned char data;;external_eeprom.c: 28:  i
      +                          2c_start();
  4690   002210  ECC4  F011         	call	_i2c_start	;wreg free
  4691   002214                     
  4692                           ;external_eeprom.c: 29:  i2c_write(0xA0);
  4693   002214  0EA0               	movlw	160
  4694   002216  ECB2  F011         	call	_i2c_write
  4695   00221A                     
  4696                           ;external_eeprom.c: 30:  i2c_write(address);
  4697   00221A  5002               	movf	read_external_eeprom@address^0,w,c
  4698   00221C  ECB2  F011         	call	_i2c_write
  4699   002220                     
  4700                           ;external_eeprom.c: 31:  i2c_rep_start();
  4701   002220  ECB8  F011         	call	_i2c_rep_start	;wreg free
  4702   002224                     
  4703                           ;external_eeprom.c: 32:  i2c_write(0xA1);
  4704   002224  0EA1               	movlw	161
  4705   002226  ECB2  F011         	call	_i2c_write
  4706                           
  4707                           ;external_eeprom.c: 33:  data = i2c_read();
  4708   00222A  ECAC  F011         	call	_i2c_read	;wreg free
  4709   00222E  6E03               	movwf	read_external_eeprom@data^0,c
  4710   002230                     
  4711                           ;external_eeprom.c: 34:  i2c_stop();
  4712   002230  ECC0  F011         	call	_i2c_stop	;wreg free
  4713                           
  4714                           ;external_eeprom.c: 36:  return data;
  4715   002234  5003               	movf	read_external_eeprom@data^0,w,c
  4716   002236  0012               	return		;funcret
  4717   002238                     __end_of_read_external_eeprom:
  4718                           	callstack 0
  4719                           
  4720 ;; *************** function _puts *****************
  4721 ;; Defined at:
  4722 ;;		line 40 in file "uart.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;  s               2    1[COMRAM] PTR const unsigned char 
  4725 ;;		 -> STR_26(3), STR_25(20), 
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  2    1[COMRAM] int 
  4730 ;; Registers used:
  4731 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4737 ;;      Params:         2       0       0       0       0       0       0
  4738 ;;      Locals:         0       0       0       0       0       0       0
  4739 ;;      Temps:          0       0       0       0       0       0       0
  4740 ;;      Totals:         2       0       0       0       0       0       0
  4741 ;;Total ram usage:        2 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; Hardware stack levels required when called: 2
  4744 ;; This function calls:
  4745 ;;		_putch
  4746 ;; This function is called by:
  4747 ;;		_download_log
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           	psect	text21
  4752   0021D8                     __ptext21:
  4753                           	callstack 0
  4754   0021D8                     _puts:
  4755                           	callstack 27
  4756   0021D8                     
  4757                           ;uart.c: 40: int puts(const char *s);uart.c: 41: {;uart.c: 42:  while(*s)
  4758   0021D8  EFF8  F010         	goto	l3092
  4759   0021DC                     l3088:
  4760                           
  4761                           ;uart.c: 43:  {;uart.c: 44:   putch(*s++);
  4762   0021DC  C002  FFF6         	movff	puts@s,tblptrl
  4763   0021E0  C003  FFF7         	movff	puts@s+1,tblptrh
  4764   0021E4                     	if	0	;tblptru may be non-zero
  4765   0021E4                     	endif
  4766   0021E4                     	if	0	;tblptru may be non-zero
  4767   0021E4                     	endif
  4768   0021E4  0008               	tblrd		*
  4769   0021E6  50F5               	movf	tablat,w,c
  4770   0021E8  EC74  F011         	call	_putch
  4771   0021EC  4A02               	infsnz	puts@s^0,f,c
  4772   0021EE  2A03               	incf	(puts@s+1)^0,f,c
  4773   0021F0                     l3092:
  4774                           
  4775                           ;uart.c: 42:  while(*s)
  4776   0021F0  C002  FFF6         	movff	puts@s,tblptrl
  4777   0021F4  C003  FFF7         	movff	puts@s+1,tblptrh
  4778   0021F8                     	if	0	;tblptru may be non-zero
  4779   0021F8                     	endif
  4780   0021F8                     	if	0	;tblptru may be non-zero
  4781   0021F8                     	endif
  4782   0021F8  0008               	tblrd		*
  4783   0021FA  50F5               	movf	tablat,w,c
  4784   0021FC  0900               	iorlw	0
  4785   0021FE  A4D8               	btfss	status,2,c
  4786   002200  EF04  F011         	goto	u2071
  4787   002204  EF06  F011         	goto	u2070
  4788   002208                     u2071:
  4789   002208  EFEE  F010         	goto	l3088
  4790   00220C                     u2070:
  4791   00220C  0012               	return		;funcret
  4792   00220E                     __end_of_puts:
  4793                           	callstack 0
  4794                           
  4795 ;; *************** function _putch *****************
  4796 ;; Defined at:
  4797 ;;		line 28 in file "uart.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  byte            1    wreg     unsigned char 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;  byte            1    0[COMRAM] unsigned char 
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      void 
  4804 ;; Registers used:
  4805 ;;		wreg
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4811 ;;      Params:         0       0       0       0       0       0       0
  4812 ;;      Locals:         1       0       0       0       0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0       0
  4814 ;;      Totals:         1       0       0       0       0       0       0
  4815 ;;Total ram usage:        1 bytes
  4816 ;; Hardware stack levels used: 1
  4817 ;; Hardware stack levels required when called: 1
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_download_log
  4822 ;;		_puts
  4823 ;;		_getche
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text22
  4828   0022E8                     __ptext22:
  4829                           	callstack 0
  4830   0022E8                     _putch:
  4831                           	callstack 27
  4832                           
  4833                           ;incstack = 0
  4834                           ;putch@byte stored from wreg
  4835   0022E8  6E01               	movwf	putch@byte^0,c
  4836   0022EA                     l615:
  4837                           
  4838                           ;uart.c: 33:  while(!TXIF)
  4839   0022EA  A89E               	btfss	3998,4,c	;volatile
  4840   0022EC  EF7A  F011         	goto	u1951
  4841   0022F0  EF7C  F011         	goto	u1950
  4842   0022F4                     u1951:
  4843   0022F4  EF75  F011         	goto	l615
  4844   0022F8                     u1950:
  4845   0022F8                     
  4846                           ;uart.c: 37:  TXREG = byte;
  4847   0022F8  C001  FFAD         	movff	putch@byte,4013	;volatile
  4848   0022FC  0012               	return		;funcret
  4849   0022FE                     __end_of_putch:
  4850                           	callstack 0
  4851                           
  4852 ;; *************** function ___awmod *****************
  4853 ;; Defined at:
  4854 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  dividend        2    8[COMRAM] int 
  4857 ;;  divisor         2   10[COMRAM] int 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  sign            1   13[COMRAM] unsigned char 
  4860 ;;  counter         1   12[COMRAM] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  2    8[COMRAM] int 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4870 ;;      Params:         4       0       0       0       0       0       0
  4871 ;;      Locals:         2       0       0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0
  4873 ;;      Totals:         6       0       0       0       0       0       0
  4874 ;;Total ram usage:        6 bytes
  4875 ;; Hardware stack levels used: 1
  4876 ;; Hardware stack levels required when called: 1
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_password
  4881 ;;		_view_log
  4882 ;;		_download_log
  4883 ;;		_settime
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text23
  4888   001AEA                     __ptext23:
  4889                           	callstack 0
  4890   001AEA                     ___awmod:
  4891                           	callstack 28
  4892   001AEA  0E00               	movlw	0
  4893   001AEC  6E0E               	movwf	___awmod@sign^0,c
  4894   001AEE  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4895   001AF0  EF7E  F00D         	goto	u2160
  4896   001AF4  EF7C  F00D         	goto	u2161
  4897   001AF8                     u2161:
  4898   001AF8  EF84  F00D         	goto	l3156
  4899   001AFC                     u2160:
  4900   001AFC  6C09               	negf	___awmod@dividend^0,c
  4901   001AFE  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4902   001B00  B0D8               	btfsc	status,0,c
  4903   001B02  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4904   001B04  0E01               	movlw	1
  4905   001B06  6E0E               	movwf	___awmod@sign^0,c
  4906   001B08                     l3156:
  4907   001B08  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  4908   001B0A  EF8B  F00D         	goto	u2170
  4909   001B0E  EF89  F00D         	goto	u2171
  4910   001B12                     u2171:
  4911   001B12  EF8F  F00D         	goto	l3160
  4912   001B16                     u2170:
  4913   001B16  6C0B               	negf	___awmod@divisor^0,c
  4914   001B18  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  4915   001B1A  B0D8               	btfsc	status,0,c
  4916   001B1C  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  4917   001B1E                     l3160:
  4918   001B1E  500B               	movf	___awmod@divisor^0,w,c
  4919   001B20  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  4920   001B22  B4D8               	btfsc	status,2,c
  4921   001B24  EF96  F00D         	goto	u2181
  4922   001B28  EF98  F00D         	goto	u2180
  4923   001B2C                     u2181:
  4924   001B2C  EFBC  F00D         	goto	l3176
  4925   001B30                     u2180:
  4926   001B30  0E01               	movlw	1
  4927   001B32  6E0D               	movwf	___awmod@counter^0,c
  4928   001B34  EFA0  F00D         	goto	l3166
  4929   001B38                     l3164:
  4930   001B38  90D8               	bcf	status,0,c
  4931   001B3A  360B               	rlcf	___awmod@divisor^0,f,c
  4932   001B3C  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  4933   001B3E  2A0D               	incf	___awmod@counter^0,f,c
  4934   001B40                     l3166:
  4935   001B40  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  4936   001B42  EFA5  F00D         	goto	u2191
  4937   001B46  EFA7  F00D         	goto	u2190
  4938   001B4A                     u2191:
  4939   001B4A  EF9C  F00D         	goto	l3164
  4940   001B4E                     u2190:
  4941   001B4E                     l3168:
  4942   001B4E  500B               	movf	___awmod@divisor^0,w,c
  4943   001B50  5C09               	subwf	___awmod@dividend^0,w,c
  4944   001B52  500C               	movf	(___awmod@divisor+1)^0,w,c
  4945   001B54  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  4946   001B56  A0D8               	btfss	status,0,c
  4947   001B58  EFB0  F00D         	goto	u2201
  4948   001B5C  EFB2  F00D         	goto	u2200
  4949   001B60                     u2201:
  4950   001B60  EFB6  F00D         	goto	l3172
  4951   001B64                     u2200:
  4952   001B64  500B               	movf	___awmod@divisor^0,w,c
  4953   001B66  5E09               	subwf	___awmod@dividend^0,f,c
  4954   001B68  500C               	movf	(___awmod@divisor+1)^0,w,c
  4955   001B6A  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  4956   001B6C                     l3172:
  4957   001B6C  90D8               	bcf	status,0,c
  4958   001B6E  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  4959   001B70  320B               	rrcf	___awmod@divisor^0,f,c
  4960   001B72  2E0D               	decfsz	___awmod@counter^0,f,c
  4961   001B74  EFA7  F00D         	goto	l3168
  4962   001B78                     l3176:
  4963   001B78  500E               	movf	___awmod@sign^0,w,c
  4964   001B7A  B4D8               	btfsc	status,2,c
  4965   001B7C  EFC2  F00D         	goto	u2211
  4966   001B80  EFC4  F00D         	goto	u2210
  4967   001B84                     u2211:
  4968   001B84  EFC8  F00D         	goto	l3180
  4969   001B88                     u2210:
  4970   001B88  6C09               	negf	___awmod@dividend^0,c
  4971   001B8A  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4972   001B8C  B0D8               	btfsc	status,0,c
  4973   001B8E  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4974   001B90                     l3180:
  4975   001B90  C009  F009         	movff	___awmod@dividend,?___awmod
  4976   001B94  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  4977   001B98  0012               	return		;funcret
  4978   001B9A                     __end_of___awmod:
  4979                           	callstack 0
  4980                           
  4981 ;; *************** function _dashboard *****************
  4982 ;; Defined at:
  4983 ;;		line 51 in file "dashboard.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;		None
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;		None
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      void 
  4990 ;; Registers used:
  4991 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4997 ;;      Params:         0       0       0       0       0       0       0
  4998 ;;      Locals:         0       0       0       0       0       0       0
  4999 ;;      Temps:          0       0       0       0       0       0       0
  5000 ;;      Totals:         0       0       0       0       0       0       0
  5001 ;;Total ram usage:        0 bytes
  5002 ;; Hardware stack levels used: 1
  5003 ;; Hardware stack levels required when called: 6
  5004 ;; This function calls:
  5005 ;;		___lwdiv
  5006 ;;		___lwmod
  5007 ;;		_clcd_print
  5008 ;;		_clcd_putch
  5009 ;;		_display_time
  5010 ;;		_get_time
  5011 ;;		_store_event
  5012 ;; This function is called by:
  5013 ;;		_main
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           	psect	text24
  5018   001558                     __ptext24:
  5019                           	callstack 0
  5020   001558                     _dashboard:
  5021                           	callstack 24
  5022   001558                     
  5023                           ;dashboard.c: 53:     clcd_print("  TIME    EV  SP", (0x80 + (0)));
  5024   001558  0E6A               	movlw	low STR_9
  5025   00155A  6E03               	movwf	clcd_print@data^0,c
  5026   00155C  0E2F               	movlw	high STR_9
  5027   00155E  6E04               	movwf	(clcd_print@data+1)^0,c
  5028   001560  0E80               	movlw	128
  5029   001562  6E05               	movwf	clcd_print@addr^0,c
  5030   001564  EC9F  F00F         	call	_clcd_print	;wreg free
  5031   001568                     
  5032                           ;dashboard.c: 59:     clcd_print(events[i], (0xC0 + (10)));
  5033   001568  5056               	movf	_i^0,w,c
  5034   00156A  0D02               	mullw	2
  5035   00156C  50F3               	movf	243,w,c
  5036   00156E  0FA4               	addlw	low _events
  5037   001570  6ED9               	movwf	fsr2l,c
  5038   001572  6ADA               	clrf	fsr2h,c
  5039   001574  CFDE F003          	movff	postinc2,clcd_print@data
  5040   001578  CFDD F004          	movff	postdec2,clcd_print@data+1
  5041   00157C  0ECA               	movlw	202
  5042   00157E  6E05               	movwf	clcd_print@addr^0,c
  5043   001580  EC9F  F00F         	call	_clcd_print	;wreg free
  5044   001584                     
  5045                           ;dashboard.c: 62:     if (key == 2 && i < 6) {
  5046   001584  0E02               	movlw	2
  5047   001586  185B               	xorwf	_key^0,w,c
  5048   001588  A4D8               	btfss	status,2,c
  5049   00158A  EFC9  F00A         	goto	u2241
  5050   00158E  EFCB  F00A         	goto	u2240
  5051   001592                     u2241:
  5052   001592  EFD6  F00A         	goto	l3230
  5053   001596                     u2240:
  5054   001596  0E06               	movlw	6
  5055   001598  6056               	cpfslt	_i^0,c
  5056   00159A  EFD1  F00A         	goto	u2251
  5057   00159E  EFD3  F00A         	goto	u2250
  5058   0015A2                     u2251:
  5059   0015A2  EFD6  F00A         	goto	l3230
  5060   0015A6                     u2250:
  5061   0015A6                     
  5062                           ;dashboard.c: 63:             i++;
  5063   0015A6  2A56               	incf	_i^0,f,c
  5064   0015A8                     
  5065                           ;dashboard.c: 64:             store_event();
  5066   0015A8  EC41  F00C         	call	_store_event	;wreg free
  5067   0015AC                     l3230:
  5068                           
  5069                           ;dashboard.c: 68:     if (key == 3 && i != 7) {
  5070   0015AC  0E03               	movlw	3
  5071   0015AE  185B               	xorwf	_key^0,w,c
  5072   0015B0  A4D8               	btfss	status,2,c
  5073   0015B2  EFDD  F00A         	goto	u2261
  5074   0015B6  EFDF  F00A         	goto	u2260
  5075   0015BA                     u2261:
  5076   0015BA  EFF3  F00A         	goto	l3240
  5077   0015BE                     u2260:
  5078   0015BE  0E07               	movlw	7
  5079   0015C0  1856               	xorwf	_i^0,w,c
  5080   0015C2  B4D8               	btfsc	status,2,c
  5081   0015C4  EFE6  F00A         	goto	u2271
  5082   0015C8  EFE8  F00A         	goto	u2270
  5083   0015CC                     u2271:
  5084   0015CC  EFF3  F00A         	goto	l3240
  5085   0015D0                     u2270:
  5086   0015D0                     
  5087                           ;dashboard.c: 69:         if (i > 1) {
  5088   0015D0  0E01               	movlw	1
  5089   0015D2  6456               	cpfsgt	_i^0,c
  5090   0015D4  EFEE  F00A         	goto	u2281
  5091   0015D8  EFF0  F00A         	goto	u2280
  5092   0015DC                     u2281:
  5093   0015DC  EFF3  F00A         	goto	l3240
  5094   0015E0                     u2280:
  5095   0015E0                     
  5096                           ;dashboard.c: 70:             i--;
  5097   0015E0  0656               	decf	_i^0,f,c
  5098   0015E2                     
  5099                           ;dashboard.c: 71:             store_event();
  5100   0015E2  EC41  F00C         	call	_store_event	;wreg free
  5101   0015E6                     l3240:
  5102                           
  5103                           ;dashboard.c: 75:     if (key == 1 ) {
  5104   0015E6  045B               	decf	_key^0,w,c
  5105   0015E8  A4D8               	btfss	status,2,c
  5106   0015EA  EFF9  F00A         	goto	u2291
  5107   0015EE  EFFB  F00A         	goto	u2290
  5108   0015F2                     u2291:
  5109   0015F2  EFFF  F00A         	goto	l3246
  5110   0015F6                     u2290:
  5111   0015F6                     
  5112                           ;dashboard.c: 76:         i = 7;
  5113   0015F6  0E07               	movlw	7
  5114   0015F8  6E56               	movwf	_i^0,c
  5115   0015FA                     
  5116                           ;dashboard.c: 77:         store_event();
  5117   0015FA  EC41  F00C         	call	_store_event	;wreg free
  5118   0015FE                     l3246:
  5119                           
  5120                           ;dashboard.c: 80:     if (i == 7 && key == 2) {
  5121   0015FE  0E07               	movlw	7
  5122   001600  1856               	xorwf	_i^0,w,c
  5123   001602  A4D8               	btfss	status,2,c
  5124   001604  EF06  F00B         	goto	u2301
  5125   001608  EF08  F00B         	goto	u2300
  5126   00160C                     u2301:
  5127   00160C  EF15  F00B         	goto	l3254
  5128   001610                     u2300:
  5129   001610  0E02               	movlw	2
  5130   001612  185B               	xorwf	_key^0,w,c
  5131   001614  A4D8               	btfss	status,2,c
  5132   001616  EF0F  F00B         	goto	u2311
  5133   00161A  EF11  F00B         	goto	u2310
  5134   00161E                     u2311:
  5135   00161E  EF15  F00B         	goto	l3254
  5136   001622                     u2310:
  5137   001622                     
  5138                           ;dashboard.c: 81:         i = 2;
  5139   001622  0E02               	movlw	2
  5140   001624  6E56               	movwf	_i^0,c
  5141   001626                     
  5142                           ;dashboard.c: 82:         store_event();
  5143   001626  EC41  F00C         	call	_store_event	;wreg free
  5144   00162A                     l3254:
  5145                           
  5146                           ;dashboard.c: 87:         clcd_putch(((adc_reg_val / 10) + 48), (0xC0 + (14)));
  5147   00162A  0ECE               	movlw	206
  5148   00162C  6E0F               	movwf	clcd_putch@addr^0,c
  5149   00162E  C042  F001         	movff	_adc_reg_val,___lwdiv@dividend
  5150   001632  C043  F002         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  5151   001636  0E00               	movlw	0
  5152   001638  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  5153   00163A  0E0A               	movlw	10
  5154   00163C  6E03               	movwf	___lwdiv@divisor^0,c
  5155   00163E  EC65  F00F         	call	___lwdiv	;wreg free
  5156   001642  5001               	movf	?___lwdiv^0,w,c
  5157   001644  0F30               	addlw	48
  5158   001646  EC5D  F011         	call	_clcd_putch
  5159   00164A                     
  5160                           ;dashboard.c: 88:         clcd_putch(((adc_reg_val % 10) + 48), (0xC0 + (15)));
  5161   00164A  0ECF               	movlw	207
  5162   00164C  6E0F               	movwf	clcd_putch@addr^0,c
  5163   00164E  C042  F001         	movff	_adc_reg_val,___lwmod@dividend
  5164   001652  C043  F002         	movff	_adc_reg_val+1,___lwmod@dividend+1
  5165   001656  0E00               	movlw	0
  5166   001658  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5167   00165A  0E0A               	movlw	10
  5168   00165C  6E03               	movwf	___lwmod@divisor^0,c
  5169   00165E  EC07  F010         	call	___lwmod	;wreg free
  5170   001662  5001               	movf	?___lwmod^0,w,c
  5171   001664  0F30               	addlw	48
  5172   001666  EC5D  F011         	call	_clcd_putch
  5173   00166A                     
  5174                           ;dashboard.c: 92:     get_time();
  5175   00166A  ECA6  F00E         	call	_get_time	;wreg free
  5176   00166E                     
  5177                           ;dashboard.c: 93:     display_time();
  5178   00166E  ECA4  F011         	call	_display_time	;wreg free
  5179   001672  0012               	return		;funcret
  5180   001674                     __end_of_dashboard:
  5181                           	callstack 0
  5182                           
  5183 ;; *************** function _store_event *****************
  5184 ;; Defined at:
  5185 ;;		line 22 in file "store_event.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;		None
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  k               1    9[COMRAM] unsigned char 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  1    wreg      void 
  5192 ;; Registers used:
  5193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5199 ;;      Params:         0       0       0       0       0       0       0
  5200 ;;      Locals:         1       0       0       0       0       0       0
  5201 ;;      Temps:          2       0       0       0       0       0       0
  5202 ;;      Totals:         3       0       0       0       0       0       0
  5203 ;;Total ram usage:        3 bytes
  5204 ;; Hardware stack levels used: 1
  5205 ;; Hardware stack levels required when called: 4
  5206 ;; This function calls:
  5207 ;;		___lwdiv
  5208 ;;		___lwmod
  5209 ;;		_write_external_eeprom
  5210 ;; This function is called by:
  5211 ;;		_dashboard
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text25
  5216   001882                     __ptext25:
  5217                           	callstack 0
  5218   001882                     _store_event:
  5219                           	callstack 25
  5220   001882                     
  5221                           ;store_event.c: 25:     store[0]=time[0];
  5222   001882  C087  F076         	movff	_time,_store
  5223                           
  5224                           ;store_event.c: 26:     store[1]=time[1];
  5225   001886  C088  F077         	movff	_time+1,_store+1
  5226                           
  5227                           ;store_event.c: 27:     store[2]=time[3];
  5228   00188A  C08A  F078         	movff	_time+3,_store+2
  5229                           
  5230                           ;store_event.c: 28:     store[3]=time[4];
  5231   00188E  C08B  F079         	movff	_time+4,_store+3
  5232                           
  5233                           ;store_event.c: 29:     store[4]=time[6];
  5234   001892  C08D  F07A         	movff	_time+6,_store+4
  5235                           
  5236                           ;store_event.c: 30:     store[5]=time[7];
  5237   001896  C08E  F07B         	movff	_time+7,_store+5
  5238   00189A                     
  5239                           ;store_event.c: 33:     store[6]=events[i][0];
  5240   00189A  5056               	movf	_i^0,w,c
  5241   00189C  0D02               	mullw	2
  5242   00189E  50F3               	movf	243,w,c
  5243   0018A0  0FA4               	addlw	low _events
  5244   0018A2  6ED9               	movwf	fsr2l,c
  5245   0018A4  6ADA               	clrf	fsr2h,c
  5246   0018A6  CFDE FFF6          	movff	postinc2,tblptrl
  5247   0018AA  CFDD FFF7          	movff	postdec2,tblptrh
  5248   0018AE                     	if	0	;tblptru may be non-zero
  5249   0018AE                     	endif
  5250   0018AE                     	if	0	;tblptru may be non-zero
  5251   0018AE                     	endif
  5252   0018AE  0008               	tblrd		*
  5253   0018B0  CFF5 F07C          	movff	tablat,_store+6
  5254                           
  5255                           ;store_event.c: 34:     store[7]=events[i][1];
  5256   0018B4  5056               	movf	_i^0,w,c
  5257   0018B6  0D02               	mullw	2
  5258   0018B8  50F3               	movf	243,w,c
  5259   0018BA  0FA4               	addlw	low _events
  5260   0018BC  6ED9               	movwf	fsr2l,c
  5261   0018BE  6ADA               	clrf	fsr2h,c
  5262   0018C0  CFDE F008          	movff	postinc2,??_store_event
  5263   0018C4  CFDD F009          	movff	postdec2,??_store_event+1
  5264   0018C8  0E01               	movlw	1
  5265   0018CA  2608               	addwf	??_store_event^0,f,c
  5266   0018CC  0E00               	movlw	0
  5267   0018CE  2209               	addwfc	(??_store_event+1)^0,f,c
  5268   0018D0  C008  FFF6         	movff	??_store_event,tblptrl
  5269   0018D4  C009  FFF7         	movff	??_store_event+1,tblptrh
  5270   0018D8                     	if	0	;tblptru may be non-zero
  5271   0018D8                     	endif
  5272   0018D8                     	if	0	;tblptru may be non-zero
  5273   0018D8                     	endif
  5274   0018D8  0008               	tblrd		*
  5275   0018DA  CFF5 F07D          	movff	tablat,_store+7
  5276   0018DE                     
  5277                           ;store_event.c: 38:         store[8]=(adc_reg_val / 10) + 48;
  5278   0018DE  C042  F001         	movff	_adc_reg_val,___lwdiv@dividend
  5279   0018E2  C043  F002         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  5280   0018E6  0E00               	movlw	0
  5281   0018E8  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  5282   0018EA  0E0A               	movlw	10
  5283   0018EC  6E03               	movwf	___lwdiv@divisor^0,c
  5284   0018EE  EC65  F00F         	call	___lwdiv	;wreg free
  5285   0018F2  5001               	movf	?___lwdiv^0,w,c
  5286   0018F4  0F30               	addlw	48
  5287   0018F6  0100               	movlb	0	; () banked
  5288   0018F8  6F7E               	movwf	(_store+8)& (0+255),b
  5289   0018FA                     
  5290                           ; BSR set to: 0
  5291                           ;store_event.c: 39:         store[9]=(adc_reg_val % 10) + 48;
  5292   0018FA  C042  F001         	movff	_adc_reg_val,___lwmod@dividend
  5293   0018FE  C043  F002         	movff	_adc_reg_val+1,___lwmod@dividend+1
  5294   001902  0E00               	movlw	0
  5295   001904  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5296   001906  0E0A               	movlw	10
  5297   001908  6E03               	movwf	___lwmod@divisor^0,c
  5298   00190A  EC07  F010         	call	___lwmod	;wreg free
  5299   00190E  5001               	movf	?___lwmod^0,w,c
  5300   001910  0F30               	addlw	48
  5301   001912  0100               	movlb	0	; () banked
  5302   001914  6F7F               	movwf	(_store+9)& (0+255),b
  5303   001916                     
  5304                           ; BSR set to: 0
  5305                           ;store_event.c: 41:     for(char k=0; k<10; k++)
  5306   001916  0E00               	movlw	0
  5307   001918  6E0A               	movwf	store_event@k^0,c
  5308   00191A                     l3064:
  5309                           
  5310                           ;store_event.c: 42:     {;store_event.c: 43:         write_external_eeprom( (lap*10+k),s
      +                          tore[k]);
  5311   00191A  500A               	movf	store_event@k^0,w,c
  5312   00191C  0F76               	addlw	low _store
  5313   00191E  6ED9               	movwf	fsr2l,c
  5314   001920  6ADA               	clrf	fsr2h,c
  5315   001922  50DF               	movf	indf2,w,c
  5316   001924  6E02               	movwf	write_external_eeprom@data^0,c
  5317   001926  5051               	movf	_lap^0,w,c
  5318   001928  0D0A               	mullw	10
  5319   00192A  50F3               	movf	243,w,c
  5320   00192C  240A               	addwf	store_event@k^0,w,c
  5321   00192E  ECAF  F010         	call	_write_external_eeprom
  5322   001932                     
  5323                           ;store_event.c: 44:     }
  5324   001932  2A0A               	incf	store_event@k^0,f,c
  5325   001934  0E09               	movlw	9
  5326   001936  640A               	cpfsgt	store_event@k^0,c
  5327   001938  EFA0  F00C         	goto	u2031
  5328   00193C  EFA2  F00C         	goto	u2030
  5329   001940                     u2031:
  5330   001940  EF8D  F00C         	goto	l3064
  5331   001944                     u2030:
  5332   001944                     
  5333                           ;store_event.c: 46:     lap++;
  5334   001944  2A51               	incf	_lap^0,f,c
  5335   001946                     
  5336                           ;store_event.c: 47:     if(lap==10)
  5337   001946  0E0A               	movlw	10
  5338   001948  1851               	xorwf	_lap^0,w,c
  5339   00194A  A4D8               	btfss	status,2,c
  5340   00194C  EFAA  F00C         	goto	u2041
  5341   001950  EFAC  F00C         	goto	u2040
  5342   001954                     u2041:
  5343   001954  EFB0  F00C         	goto	l500
  5344   001958                     u2040:
  5345   001958                     
  5346                           ;store_event.c: 48:     {;store_event.c: 49:         lap=0;
  5347   001958  0E00               	movlw	0
  5348   00195A  6E51               	movwf	_lap^0,c
  5349                           
  5350                           ;store_event.c: 50:         overflow=1;
  5351   00195C  0E01               	movlw	1
  5352   00195E  6E50               	movwf	_overflow^0,c
  5353   001960                     l500:
  5354   001960  0012               	return		;funcret
  5355   001962                     __end_of_store_event:
  5356                           	callstack 0
  5357                           
  5358 ;; *************** function _get_time *****************
  5359 ;; Defined at:
  5360 ;;		line 30 in file "dashboard.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;		None
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;		None
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  1    wreg      void 
  5367 ;; Registers used:
  5368 ;;		wreg, status,2, status,0, cstack
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5374 ;;      Params:         0       0       0       0       0       0       0
  5375 ;;      Locals:         0       0       0       0       0       0       0
  5376 ;;      Temps:          0       0       0       0       0       0       0
  5377 ;;      Totals:         0       0       0       0       0       0       0
  5378 ;;Total ram usage:        0 bytes
  5379 ;; Hardware stack levels used: 1
  5380 ;; Hardware stack levels required when called: 5
  5381 ;; This function calls:
  5382 ;;		_read_ds1307
  5383 ;; This function is called by:
  5384 ;;		_dashboard
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text26
  5389   001D4C                     __ptext26:
  5390                           	callstack 0
  5391   001D4C                     _get_time:
  5392                           	callstack 24
  5393   001D4C                     
  5394                           ;dashboard.c: 31:     clock_reg[0] = read_ds1307(0x02);
  5395   001D4C  0E02               	movlw	2
  5396   001D4E  EC1C  F011         	call	_read_ds1307
  5397   001D52  6E39               	movwf	_clock_reg^0,c
  5398                           
  5399                           ;dashboard.c: 32:     clock_reg[1] = read_ds1307(0x01);
  5400   001D54  0E01               	movlw	1
  5401   001D56  EC1C  F011         	call	_read_ds1307
  5402   001D5A  6E3A               	movwf	(_clock_reg+1)^0,c
  5403                           
  5404                           ;dashboard.c: 33:     clock_reg[2] = read_ds1307(0x00);
  5405   001D5C  0E00               	movlw	0
  5406   001D5E  EC1C  F011         	call	_read_ds1307
  5407   001D62  6E3B               	movwf	(_clock_reg+2)^0,c
  5408   001D64                     
  5409                           ;dashboard.c: 35:     if (clock_reg[0] & 0x40) {
  5410   001D64  AC39               	btfss	_clock_reg^0,6,c
  5411   001D66  EFB7  F00E         	goto	u2021
  5412   001D6A  EFB9  F00E         	goto	u2020
  5413   001D6E                     u2021:
  5414   001D6E  EFC5  F00E         	goto	l3038
  5415   001D72                     u2020:
  5416   001D72                     
  5417                           ;dashboard.c: 36:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  5418   001D72  3839               	swapf	_clock_reg^0,w,c
  5419   001D74  0B0F               	andlw	15
  5420   001D76  0B01               	andlw	1
  5421   001D78  0F30               	addlw	48
  5422   001D7A  0100               	movlb	0	; () banked
  5423   001D7C  6F87               	movwf	_time& (0+255),b
  5424                           
  5425                           ;dashboard.c: 37:         time[1] = '0' + (clock_reg[0] & 0x0F);
  5426   001D7E  5039               	movf	_clock_reg^0,w,c
  5427   001D80  0B0F               	andlw	15
  5428   001D82  0F30               	addlw	48
  5429   001D84  6F88               	movwf	(_time+1)& (0+255),b
  5430                           
  5431                           ;dashboard.c: 38:     } else {
  5432   001D86  EFCF  F00E         	goto	l3040
  5433   001D8A                     l3038:
  5434                           
  5435                           ;dashboard.c: 39:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  5436   001D8A  3839               	swapf	_clock_reg^0,w,c
  5437   001D8C  0B0F               	andlw	15
  5438   001D8E  0B03               	andlw	3
  5439   001D90  0F30               	addlw	48
  5440   001D92  0100               	movlb	0	; () banked
  5441   001D94  6F87               	movwf	_time& (0+255),b
  5442                           
  5443                           ;dashboard.c: 40:         time[1] = '0' + (clock_reg[0] & 0x0F);
  5444   001D96  5039               	movf	_clock_reg^0,w,c
  5445   001D98  0B0F               	andlw	15
  5446   001D9A  0F30               	addlw	48
  5447   001D9C  6F88               	movwf	(_time+1)& (0+255),b
  5448   001D9E                     l3040:
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;dashboard.c: 42:     time[2] = ':';
  5452   001D9E  0E3A               	movlw	58
  5453   001DA0  6F89               	movwf	(_time+2)& (0+255),b
  5454   001DA2                     
  5455                           ; BSR set to: 0
  5456                           ;dashboard.c: 43:     time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  5457   001DA2  383A               	swapf	(_clock_reg+1)^0,w,c
  5458   001DA4  0B0F               	andlw	15
  5459   001DA6  0B0F               	andlw	15
  5460   001DA8  0F30               	addlw	48
  5461   001DAA  6F8A               	movwf	(_time+3)& (0+255),b
  5462   001DAC                     
  5463                           ; BSR set to: 0
  5464                           ;dashboard.c: 44:     time[4] = '0' + (clock_reg[1] & 0x0F);
  5465   001DAC  503A               	movf	(_clock_reg+1)^0,w,c
  5466   001DAE  0B0F               	andlw	15
  5467   001DB0  0F30               	addlw	48
  5468   001DB2  6F8B               	movwf	(_time+4)& (0+255),b
  5469   001DB4                     
  5470                           ; BSR set to: 0
  5471                           ;dashboard.c: 45:     time[5] = ':';
  5472   001DB4  0E3A               	movlw	58
  5473   001DB6  6F8C               	movwf	(_time+5)& (0+255),b
  5474                           
  5475                           ;dashboard.c: 46:     time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  5476   001DB8  383B               	swapf	(_clock_reg+2)^0,w,c
  5477   001DBA  0B0F               	andlw	15
  5478   001DBC  0B0F               	andlw	15
  5479   001DBE  0F30               	addlw	48
  5480   001DC0  6F8D               	movwf	(_time+6)& (0+255),b
  5481                           
  5482                           ;dashboard.c: 47:     time[7] = '0' + (clock_reg[2] & 0x0F);
  5483   001DC2  503B               	movf	(_clock_reg+2)^0,w,c
  5484   001DC4  0B0F               	andlw	15
  5485   001DC6  0F30               	addlw	48
  5486   001DC8  6F8E               	movwf	(_time+7)& (0+255),b
  5487   001DCA                     
  5488                           ; BSR set to: 0
  5489                           ;dashboard.c: 48:     time[8] = '\0';
  5490   001DCA  0E00               	movlw	0
  5491   001DCC  6F8F               	movwf	(_time+8)& (0+255),b
  5492   001DCE                     
  5493                           ; BSR set to: 0
  5494   001DCE  0012               	return		;funcret
  5495   001DD0                     __end_of_get_time:
  5496                           	callstack 0
  5497                           
  5498 ;; *************** function _read_ds1307 *****************
  5499 ;; Defined at:
  5500 ;;		line 55 in file "ds1307.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;  address         1    wreg     unsigned char 
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;  address         1    1[COMRAM] unsigned char 
  5505 ;;  data            1    2[COMRAM] unsigned char 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      unsigned char 
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, cstack
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5515 ;;      Params:         0       0       0       0       0       0       0
  5516 ;;      Locals:         2       0       0       0       0       0       0
  5517 ;;      Temps:          0       0       0       0       0       0       0
  5518 ;;      Totals:         2       0       0       0       0       0       0
  5519 ;;Total ram usage:        2 bytes
  5520 ;; Hardware stack levels used: 1
  5521 ;; Hardware stack levels required when called: 4
  5522 ;; This function calls:
  5523 ;;		_i2c_read
  5524 ;;		_i2c_rep_start
  5525 ;;		_i2c_start
  5526 ;;		_i2c_stop
  5527 ;;		_i2c_write
  5528 ;; This function is called by:
  5529 ;;		_get_time
  5530 ;;		_init_ds1307
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text27
  5535   002238                     __ptext27:
  5536                           	callstack 0
  5537   002238                     _read_ds1307:
  5538                           	callstack 24
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;incstack = 0
  5542                           ;read_ds1307@address stored from wreg
  5543   002238  6E02               	movwf	read_ds1307@address^0,c
  5544   00223A                     
  5545                           ;ds1307.c: 55: unsigned char read_ds1307(unsigned char address);ds1307.c: 56: {;ds1307.c
      +                          : 57:  unsigned char data;;ds1307.c: 59:  i2c_start();
  5546   00223A  ECC4  F011         	call	_i2c_start	;wreg free
  5547   00223E                     
  5548                           ;ds1307.c: 60:  i2c_write(0xD0);
  5549   00223E  0ED0               	movlw	208
  5550   002240  ECB2  F011         	call	_i2c_write
  5551   002244                     
  5552                           ;ds1307.c: 61:  i2c_write(address);
  5553   002244  5002               	movf	read_ds1307@address^0,w,c
  5554   002246  ECB2  F011         	call	_i2c_write
  5555   00224A                     
  5556                           ;ds1307.c: 62:  i2c_rep_start();
  5557   00224A  ECB8  F011         	call	_i2c_rep_start	;wreg free
  5558   00224E                     
  5559                           ;ds1307.c: 63:  i2c_write(0xD1);
  5560   00224E  0ED1               	movlw	209
  5561   002250  ECB2  F011         	call	_i2c_write
  5562                           
  5563                           ;ds1307.c: 64:  data = i2c_read();
  5564   002254  ECAC  F011         	call	_i2c_read	;wreg free
  5565   002258  6E03               	movwf	read_ds1307@data^0,c
  5566   00225A                     
  5567                           ;ds1307.c: 65:  i2c_stop();
  5568   00225A  ECC0  F011         	call	_i2c_stop	;wreg free
  5569                           
  5570                           ;ds1307.c: 67:  return data;
  5571   00225E  5003               	movf	read_ds1307@data^0,w,c
  5572   002260  0012               	return		;funcret
  5573   002262                     __end_of_read_ds1307:
  5574                           	callstack 0
  5575                           
  5576 ;; *************** function _i2c_rep_start *****************
  5577 ;; Defined at:
  5578 ;;		line 49 in file "i2c.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      void 
  5585 ;; Registers used:
  5586 ;;		cstack
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5592 ;;      Params:         0       0       0       0       0       0       0
  5593 ;;      Locals:         0       0       0       0       0       0       0
  5594 ;;      Temps:          0       0       0       0       0       0       0
  5595 ;;      Totals:         0       0       0       0       0       0       0
  5596 ;;Total ram usage:        0 bytes
  5597 ;; Hardware stack levels used: 1
  5598 ;; Hardware stack levels required when called: 2
  5599 ;; This function calls:
  5600 ;;		_i2c_idle
  5601 ;; This function is called by:
  5602 ;;		_read_ds1307
  5603 ;;		_read_external_eeprom
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           	psect	text28
  5608   002370                     __ptext28:
  5609                           	callstack 0
  5610   002370                     _i2c_rep_start:
  5611                           	callstack 26
  5612   002370  82C5               	bsf	4037,1,c	;volatile
  5613   002372  EC9B  F011         	call	_i2c_idle	;wreg free
  5614   002376  0012               	return		;funcret
  5615   002378                     __end_of_i2c_rep_start:
  5616                           	callstack 0
  5617                           
  5618 ;; *************** function _i2c_read *****************
  5619 ;; Defined at:
  5620 ;;		line 73 in file "i2c.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;		None
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      unsigned char 
  5627 ;; Registers used:
  5628 ;;		wreg, status,2, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5634 ;;      Params:         0       0       0       0       0       0       0
  5635 ;;      Locals:         0       0       0       0       0       0       0
  5636 ;;      Temps:          0       0       0       0       0       0       0
  5637 ;;      Totals:         0       0       0       0       0       0       0
  5638 ;;Total ram usage:        0 bytes
  5639 ;; Hardware stack levels used: 1
  5640 ;; Hardware stack levels required when called: 3
  5641 ;; This function calls:
  5642 ;;		_i2c_no_ack
  5643 ;;		_i2c_rx_mode
  5644 ;; This function is called by:
  5645 ;;		_read_ds1307
  5646 ;;		_read_external_eeprom
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text29
  5651   002358                     __ptext29:
  5652                           	callstack 0
  5653   002358                     _i2c_read:
  5654                           	callstack 25
  5655   002358  ECBC  F011         	call	_i2c_rx_mode	;wreg free
  5656   00235C  ECC8  F011         	call	_i2c_no_ack	;wreg free
  5657   002360  50C9               	movf	201,w,c	;volatile
  5658   002362  0012               	return		;funcret
  5659   002364                     __end_of_i2c_read:
  5660                           	callstack 0
  5661                           
  5662 ;; *************** function _i2c_rx_mode *****************
  5663 ;; Defined at:
  5664 ;;		line 61 in file "i2c.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;		None
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;		None
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  1    wreg      void 
  5671 ;; Registers used:
  5672 ;;		cstack
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5678 ;;      Params:         0       0       0       0       0       0       0
  5679 ;;      Locals:         0       0       0       0       0       0       0
  5680 ;;      Temps:          0       0       0       0       0       0       0
  5681 ;;      Totals:         0       0       0       0       0       0       0
  5682 ;;Total ram usage:        0 bytes
  5683 ;; Hardware stack levels used: 1
  5684 ;; Hardware stack levels required when called: 2
  5685 ;; This function calls:
  5686 ;;		_i2c_idle
  5687 ;; This function is called by:
  5688 ;;		_i2c_read
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text30
  5693   002378                     __ptext30:
  5694                           	callstack 0
  5695   002378                     _i2c_rx_mode:
  5696                           	callstack 25
  5697   002378  86C5               	bsf	4037,3,c	;volatile
  5698   00237A  EC9B  F011         	call	_i2c_idle	;wreg free
  5699   00237E  0012               	return		;funcret
  5700   002380                     __end_of_i2c_rx_mode:
  5701                           	callstack 0
  5702                           
  5703 ;; *************** function _i2c_no_ack *****************
  5704 ;; Defined at:
  5705 ;;		line 67 in file "i2c.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;		None
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;		None
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  1    wreg      void 
  5712 ;; Registers used:
  5713 ;;		None
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5719 ;;      Params:         0       0       0       0       0       0       0
  5720 ;;      Locals:         0       0       0       0       0       0       0
  5721 ;;      Temps:          0       0       0       0       0       0       0
  5722 ;;      Totals:         0       0       0       0       0       0       0
  5723 ;;Total ram usage:        0 bytes
  5724 ;; Hardware stack levels used: 1
  5725 ;; Hardware stack levels required when called: 1
  5726 ;; This function calls:
  5727 ;;		Nothing
  5728 ;; This function is called by:
  5729 ;;		_i2c_read
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text31
  5734   002390                     __ptext31:
  5735                           	callstack 0
  5736   002390                     _i2c_no_ack:
  5737                           	callstack 26
  5738   002390  8AC5               	bsf	4037,5,c	;volatile
  5739   002392  88C5               	bsf	4037,4,c	;volatile
  5740   002394  0012               	return		;funcret
  5741   002396                     __end_of_i2c_no_ack:
  5742                           	callstack 0
  5743                           
  5744 ;; *************** function _display_time *****************
  5745 ;; Defined at:
  5746 ;;		line 26 in file "dashboard.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5760 ;;      Params:         0       0       0       0       0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0
  5763 ;;      Totals:         0       0       0       0       0       0       0
  5764 ;;Total ram usage:        0 bytes
  5765 ;; Hardware stack levels used: 1
  5766 ;; Hardware stack levels required when called: 3
  5767 ;; This function calls:
  5768 ;;		_clcd_print
  5769 ;; This function is called by:
  5770 ;;		_dashboard
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text32
  5775   002348                     __ptext32:
  5776                           	callstack 0
  5777   002348                     _display_time:
  5778                           	callstack 26
  5779   002348                     
  5780                           ;dashboard.c: 27:     clcd_print(time, (0xC0 + (0)));
  5781   002348  0E87               	movlw	low _time
  5782   00234A  6E03               	movwf	clcd_print@data^0,c
  5783   00234C  6A04               	clrf	(clcd_print@data+1)^0,c
  5784   00234E  0EC0               	movlw	192
  5785   002350  6E05               	movwf	clcd_print@addr^0,c
  5786   002352  EC9F  F00F         	call	_clcd_print	;wreg free
  5787   002356  0012               	return		;funcret
  5788   002358                     __end_of_display_time:
  5789                           	callstack 0
  5790                           
  5791 ;; *************** function _clear_log *****************
  5792 ;; Defined at:
  5793 ;;		line 21 in file "clear_log.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  key             1    wreg     unsigned char 
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;  key             1    7[COMRAM] unsigned char 
  5798 ;;  k               1    8[COMRAM] unsigned char 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      void 
  5801 ;; Registers used:
  5802 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5808 ;;      Params:         0       0       0       0       0       0       0
  5809 ;;      Locals:         2       0       0       0       0       0       0
  5810 ;;      Temps:          0       0       0       0       0       0       0
  5811 ;;      Totals:         2       0       0       0       0       0       0
  5812 ;;Total ram usage:        2 bytes
  5813 ;; Hardware stack levels used: 1
  5814 ;; Hardware stack levels required when called: 4
  5815 ;; This function calls:
  5816 ;;		___lwdiv
  5817 ;;		___lwmod
  5818 ;;		_clcd_print
  5819 ;;		_write_external_eeprom
  5820 ;; This function is called by:
  5821 ;;		_main
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text33
  5826   001A26                     __ptext33:
  5827                           	callstack 0
  5828   001A26                     _clear_log:
  5829                           	callstack 26
  5830                           
  5831                           ;incstack = 0
  5832                           ;clear_log@key stored from wreg
  5833   001A26  6E08               	movwf	clear_log@key^0,c
  5834   001A28                     
  5835                           ;clear_log.c: 22:     lap = 0;
  5836   001A28  0E00               	movlw	0
  5837   001A2A  6E51               	movwf	_lap^0,c
  5838                           
  5839                           ;clear_log.c: 23:     overflow = 0;
  5840   001A2C  0E00               	movlw	0
  5841   001A2E  6E50               	movwf	_overflow^0,c
  5842   001A30                     
  5843                           ;clear_log.c: 26:     clcd_print("   LOG CLEARED   ", (0x80 + (0)));
  5844   001A30  0E03               	movlw	low STR_21
  5845   001A32  6E03               	movwf	clcd_print@data^0,c
  5846   001A34  0E2F               	movlw	high STR_21
  5847   001A36  6E04               	movwf	(clcd_print@data+1)^0,c
  5848   001A38  0E80               	movlw	128
  5849   001A3A  6E05               	movwf	clcd_print@addr^0,c
  5850   001A3C  EC9F  F00F         	call	_clcd_print	;wreg free
  5851   001A40                     
  5852                           ;clear_log.c: 27:     clcd_print("                 ", (0xC0 + (0)));
  5853   001A40  0EF1               	movlw	low STR_22
  5854   001A42  6E03               	movwf	clcd_print@data^0,c
  5855   001A44  0E2E               	movlw	high STR_22
  5856   001A46  6E04               	movwf	(clcd_print@data+1)^0,c
  5857   001A48  0EC0               	movlw	192
  5858   001A4A  6E05               	movwf	clcd_print@addr^0,c
  5859   001A4C  EC9F  F00F         	call	_clcd_print	;wreg free
  5860   001A50                     
  5861                           ;clear_log.c: 30:     if (key == 16) {
  5862   001A50  0E10               	movlw	16
  5863   001A52  1808               	xorwf	clear_log@key^0,w,c
  5864   001A54  A4D8               	btfss	status,2,c
  5865   001A56  EF2F  F00D         	goto	u2641
  5866   001A5A  EF31  F00D         	goto	u2640
  5867   001A5E                     u2641:
  5868   001A5E  EF74  F00D         	goto	l553
  5869   001A62                     u2640:
  5870   001A62                     
  5871                           ;clear_log.c: 34:     store[0] = time[0];
  5872   001A62  C087  F076         	movff	_time,_store
  5873                           
  5874                           ;clear_log.c: 35:     store[1] = time[1];
  5875   001A66  C088  F077         	movff	_time+1,_store+1
  5876                           
  5877                           ;clear_log.c: 36:     store[2] = time[3];
  5878   001A6A  C08A  F078         	movff	_time+3,_store+2
  5879                           
  5880                           ;clear_log.c: 37:     store[3] = time[4];
  5881   001A6E  C08B  F079         	movff	_time+4,_store+3
  5882                           
  5883                           ;clear_log.c: 38:     store[4] = time[6];
  5884   001A72  C08D  F07A         	movff	_time+6,_store+4
  5885                           
  5886                           ;clear_log.c: 39:     store[5] = time[7];
  5887   001A76  C08E  F07B         	movff	_time+7,_store+5
  5888   001A7A                     
  5889                           ;clear_log.c: 42:     store[6] = 'C';
  5890   001A7A  0E43               	movlw	67
  5891   001A7C  0100               	movlb	0	; () banked
  5892   001A7E  6F7C               	movwf	(_store+6)& (0+255),b
  5893                           
  5894                           ;clear_log.c: 43:     store[7] = 'L';
  5895   001A80  0E4C               	movlw	76
  5896   001A82  6F7D               	movwf	(_store+7)& (0+255),b
  5897   001A84                     
  5898                           ; BSR set to: 0
  5899                           ;clear_log.c: 47:     store[8] = (adc_reg_val / 10) + 48;
  5900   001A84  C042  F001         	movff	_adc_reg_val,___lwdiv@dividend
  5901   001A88  C043  F002         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  5902   001A8C  0E00               	movlw	0
  5903   001A8E  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  5904   001A90  0E0A               	movlw	10
  5905   001A92  6E03               	movwf	___lwdiv@divisor^0,c
  5906   001A94  EC65  F00F         	call	___lwdiv	;wreg free
  5907   001A98  5001               	movf	?___lwdiv^0,w,c
  5908   001A9A  0F30               	addlw	48
  5909   001A9C  0100               	movlb	0	; () banked
  5910   001A9E  6F7E               	movwf	(_store+8)& (0+255),b
  5911   001AA0                     
  5912                           ; BSR set to: 0
  5913                           ;clear_log.c: 48:     store[9] = (adc_reg_val % 10) + 48;
  5914   001AA0  C042  F001         	movff	_adc_reg_val,___lwmod@dividend
  5915   001AA4  C043  F002         	movff	_adc_reg_val+1,___lwmod@dividend+1
  5916   001AA8  0E00               	movlw	0
  5917   001AAA  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5918   001AAC  0E0A               	movlw	10
  5919   001AAE  6E03               	movwf	___lwmod@divisor^0,c
  5920   001AB0  EC07  F010         	call	___lwmod	;wreg free
  5921   001AB4  5001               	movf	?___lwmod^0,w,c
  5922   001AB6  0F30               	addlw	48
  5923   001AB8  0100               	movlb	0	; () banked
  5924   001ABA  6F7F               	movwf	(_store+9)& (0+255),b
  5925                           
  5926                           ;clear_log.c: 52:     for (char k = 0; k < 10; k++) {
  5927   001ABC  0E00               	movlw	0
  5928   001ABE  6E09               	movwf	clear_log@k^0,c
  5929   001AC0                     l3482:
  5930                           
  5931                           ;clear_log.c: 53:         write_external_eeprom((k), store[k]);
  5932   001AC0  5009               	movf	clear_log@k^0,w,c
  5933   001AC2  0F76               	addlw	low _store
  5934   001AC4  6ED9               	movwf	fsr2l,c
  5935   001AC6  6ADA               	clrf	fsr2h,c
  5936   001AC8  50DF               	movf	indf2,w,c
  5937   001ACA  6E02               	movwf	write_external_eeprom@data^0,c
  5938   001ACC  5009               	movf	clear_log@k^0,w,c
  5939   001ACE  ECAF  F010         	call	_write_external_eeprom
  5940   001AD2                     
  5941                           ;clear_log.c: 54:     }
  5942   001AD2  2A09               	incf	clear_log@k^0,f,c
  5943   001AD4  0E09               	movlw	9
  5944   001AD6  6409               	cpfsgt	clear_log@k^0,c
  5945   001AD8  EF70  F00D         	goto	u2651
  5946   001ADC  EF72  F00D         	goto	u2650
  5947   001AE0                     u2651:
  5948   001AE0  EF60  F00D         	goto	l3482
  5949   001AE4                     u2650:
  5950   001AE4                     
  5951                           ;clear_log.c: 55:     main_f = 2;
  5952   001AE4  0E02               	movlw	2
  5953   001AE6  6E59               	movwf	_main_f^0,c
  5954   001AE8                     l553:
  5955   001AE8  0012               	return		;funcret
  5956   001AEA                     __end_of_clear_log:
  5957                           	callstack 0
  5958                           
  5959 ;; *************** function _change_pass *****************
  5960 ;; Defined at:
  5961 ;;		line 38 in file "change_password.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  key             1    wreg     unsigned char 
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  key             1   22[COMRAM] unsigned char 
  5966 ;;  k               1   23[COMRAM] unsigned char 
  5967 ;;  delay           4   18[COMRAM] unsigned long 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  1    wreg      void 
  5970 ;; Registers used:
  5971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5977 ;;      Params:         0       0       0       0       0       0       0
  5978 ;;      Locals:         6       0       0       0       0       0       0
  5979 ;;      Temps:          2       0       0       0       0       0       0
  5980 ;;      Totals:         8       0       0       0       0       0       0
  5981 ;;Total ram usage:        8 bytes
  5982 ;; Hardware stack levels used: 1
  5983 ;; Hardware stack levels required when called: 4
  5984 ;; This function calls:
  5985 ;;		___lwdiv
  5986 ;;		___lwmod
  5987 ;;		_clcd_print
  5988 ;;		_clcd_putch
  5989 ;;		_clcd_write
  5990 ;;		_my_strcp
  5991 ;;		_write_external_eeprom
  5992 ;; This function is called by:
  5993 ;;		_main
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text34
  5998   0003AC                     __ptext34:
  5999                           	callstack 0
  6000   0003AC                     _change_pass:
  6001                           	callstack 26
  6002                           
  6003                           ;incstack = 0
  6004                           ;change_pass@key stored from wreg
  6005   0003AC  6E17               	movwf	change_pass@key^0,c
  6006   0003AE                     
  6007                           ;change_password.c: 39:     if (reset_flag == 0) {
  6008   0003AE  5049               	movf	_reset_flag^0,w,c
  6009   0003B0  A4D8               	btfss	status,2,c
  6010   0003B2  EFDD  F001         	goto	u2701
  6011   0003B6  EFDF  F001         	goto	u2700
  6012   0003BA                     u2701:
  6013   0003BA  EF73  F002         	goto	l3582
  6014   0003BE                     u2700:
  6015   0003BE                     
  6016                           ;change_password.c: 40:         clcd_print("  New Password : ", (0x80 + (0)));
  6017   0003BE  0ECD               	movlw	low STR_27
  6018   0003C0  6E03               	movwf	clcd_print@data^0,c
  6019   0003C2  0E2E               	movlw	high STR_27
  6020   0003C4  6E04               	movwf	(clcd_print@data+1)^0,c
  6021   0003C6  0E80               	movlw	128
  6022   0003C8  6E05               	movwf	clcd_print@addr^0,c
  6023   0003CA  EC9F  F00F         	call	_clcd_print	;wreg free
  6024   0003CE                     
  6025                           ;change_password.c: 43:         if (del++ < 500) {
  6026   0003CE  503C               	movf	_del^0,w,c
  6027   0003D0  6E11               	movwf	??_change_pass^0,c
  6028   0003D2  503D               	movf	(_del+1)^0,w,c
  6029   0003D4  6E12               	movwf	(??_change_pass+1)^0,c
  6030   0003D6  4A3C               	infsnz	_del^0,f,c
  6031   0003D8  2A3D               	incf	(_del+1)^0,f,c
  6032   0003DA  BE12               	btfsc	(??_change_pass+1)^0,7,c
  6033   0003DC  EFFB  F001         	goto	u2710
  6034   0003E0  0EF4               	movlw	244
  6035   0003E2  5C11               	subwf	??_change_pass^0,w,c
  6036   0003E4  0E01               	movlw	1
  6037   0003E6  5812               	subwfb	(??_change_pass+1)^0,w,c
  6038   0003E8  B0D8               	btfsc	status,0,c
  6039   0003EA  EFF9  F001         	goto	u2711
  6040   0003EE  EFFB  F001         	goto	u2710
  6041   0003F2                     u2711:
  6042   0003F2  EF03  F002         	goto	l3548
  6043   0003F6                     u2710:
  6044   0003F6                     
  6045                           ;change_password.c: 44:             clcd_putch('_', (0xC0 + (ind)));
  6046   0003F6  504A               	movf	_ind^0,w,c
  6047   0003F8  0FC0               	addlw	192
  6048   0003FA  6E0F               	movwf	clcd_putch@addr^0,c
  6049   0003FC  0E5F               	movlw	95
  6050   0003FE  EC5D  F011         	call	_clcd_putch
  6051                           
  6052                           ;change_password.c: 45:         } else if (del > 500 && del < 1000) {
  6053   000402  EF2B  F002         	goto	l3556
  6054   000406                     l3548:
  6055   000406  BE3D               	btfsc	(_del+1)^0,7,c
  6056   000408  EF0F  F002         	goto	u2721
  6057   00040C  0EF5               	movlw	245
  6058   00040E  5C3C               	subwf	_del^0,w,c
  6059   000410  0E01               	movlw	1
  6060   000412  583D               	subwfb	(_del+1)^0,w,c
  6061   000414  A0D8               	btfss	status,0,c
  6062   000416  EF0F  F002         	goto	u2721
  6063   00041A  EF11  F002         	goto	u2720
  6064   00041E                     u2721:
  6065   00041E  EF27  F002         	goto	l3554
  6066   000422                     u2720:
  6067   000422  BE3D               	btfsc	(_del+1)^0,7,c
  6068   000424  EF1F  F002         	goto	u2730
  6069   000428  0EE8               	movlw	232
  6070   00042A  5C3C               	subwf	_del^0,w,c
  6071   00042C  0E03               	movlw	3
  6072   00042E  583D               	subwfb	(_del+1)^0,w,c
  6073   000430  B0D8               	btfsc	status,0,c
  6074   000432  EF1D  F002         	goto	u2731
  6075   000436  EF1F  F002         	goto	u2730
  6076   00043A                     u2731:
  6077   00043A  EF27  F002         	goto	l3554
  6078   00043E                     u2730:
  6079   00043E                     
  6080                           ;change_password.c: 46:             clcd_putch(' ', (0xC0 + (ind)));
  6081   00043E  504A               	movf	_ind^0,w,c
  6082   000440  0FC0               	addlw	192
  6083   000442  6E0F               	movwf	clcd_putch@addr^0,c
  6084   000444  0E20               	movlw	32
  6085   000446  EC5D  F011         	call	_clcd_putch
  6086                           
  6087                           ;change_password.c: 47:         } else
  6088   00044A  EF2B  F002         	goto	l3556
  6089   00044E                     l3554:
  6090                           
  6091                           ;change_password.c: 48:             del = 0;
  6092   00044E  0E00               	movlw	0
  6093   000450  6E3D               	movwf	(_del+1)^0,c
  6094   000452  0E00               	movlw	0
  6095   000454  6E3C               	movwf	_del^0,c
  6096   000456                     l3556:
  6097                           
  6098                           ;change_password.c: 50:         if (key == 5) {
  6099   000456  0E05               	movlw	5
  6100   000458  1817               	xorwf	change_pass@key^0,w,c
  6101   00045A  A4D8               	btfss	status,2,c
  6102   00045C  EF32  F002         	goto	u2741
  6103   000460  EF34  F002         	goto	u2740
  6104   000464                     u2741:
  6105   000464  EF43  F002         	goto	l3564
  6106   000468                     u2740:
  6107   000468                     
  6108                           ;change_password.c: 51:             temp1[ind] = '0';
  6109   000468  504A               	movf	_ind^0,w,c
  6110   00046A  0F95               	addlw	low _temp1
  6111   00046C  6ED9               	movwf	fsr2l,c
  6112   00046E  6ADA               	clrf	fsr2h,c
  6113   000470  0E30               	movlw	48
  6114   000472  6EDF               	movwf	indf2,c
  6115   000474                     
  6116                           ;change_password.c: 52:             clcd_putch('*', (0xC0 + (ind)));
  6117   000474  504A               	movf	_ind^0,w,c
  6118   000476  0FC0               	addlw	192
  6119   000478  6E0F               	movwf	clcd_putch@addr^0,c
  6120   00047A  0E2A               	movlw	42
  6121   00047C  EC5D  F011         	call	_clcd_putch
  6122   000480                     l3562:
  6123                           
  6124                           ;change_password.c: 53:             ind++;
  6125   000480  2A4A               	incf	_ind^0,f,c
  6126                           
  6127                           ;change_password.c: 54:         } else if (key == 6) {
  6128   000482  EF5A  F002         	goto	l3572
  6129   000486                     l3564:
  6130   000486  0E06               	movlw	6
  6131   000488  1817               	xorwf	change_pass@key^0,w,c
  6132   00048A  A4D8               	btfss	status,2,c
  6133   00048C  EF4A  F002         	goto	u2751
  6134   000490  EF4C  F002         	goto	u2750
  6135   000494                     u2751:
  6136   000494  EF5A  F002         	goto	l3572
  6137   000498                     u2750:
  6138   000498                     
  6139                           ;change_password.c: 55:             temp1[ind] = '1';
  6140   000498  504A               	movf	_ind^0,w,c
  6141   00049A  0F95               	addlw	low _temp1
  6142   00049C  6ED9               	movwf	fsr2l,c
  6143   00049E  6ADA               	clrf	fsr2h,c
  6144   0004A0  0E31               	movlw	49
  6145   0004A2  6EDF               	movwf	indf2,c
  6146   0004A4                     
  6147                           ;change_password.c: 56:             clcd_putch('*', (0xC0 + (ind)));
  6148   0004A4  504A               	movf	_ind^0,w,c
  6149   0004A6  0FC0               	addlw	192
  6150   0004A8  6E0F               	movwf	clcd_putch@addr^0,c
  6151   0004AA  0E2A               	movlw	42
  6152   0004AC  EC5D  F011         	call	_clcd_putch
  6153   0004B0  EF40  F002         	goto	l3562
  6154   0004B4                     l3572:
  6155                           
  6156                           ;change_password.c: 59:         if (ind == 4) {
  6157   0004B4  0E04               	movlw	4
  6158   0004B6  184A               	xorwf	_ind^0,w,c
  6159   0004B8  A4D8               	btfss	status,2,c
  6160   0004BA  EF61  F002         	goto	u2761
  6161   0004BE  EF63  F002         	goto	u2760
  6162   0004C2                     u2761:
  6163   0004C2  EFA1  F003         	goto	l697
  6164   0004C6                     u2760:
  6165   0004C6                     
  6166                           ;change_password.c: 60:             temp1[ind] = '\0';
  6167   0004C6  504A               	movf	_ind^0,w,c
  6168   0004C8  0F95               	addlw	low _temp1
  6169   0004CA  6ED9               	movwf	fsr2l,c
  6170   0004CC  6ADA               	clrf	fsr2h,c
  6171   0004CE  6ADF               	clrf	indf2,c
  6172   0004D0                     
  6173                           ;change_password.c: 61:             reset_flag = 1;
  6174   0004D0  0E01               	movlw	1
  6175   0004D2  6E49               	movwf	_reset_flag^0,c
  6176   0004D4                     
  6177                           ;change_password.c: 62:             ind = 0;
  6178   0004D4  0E00               	movlw	0
  6179   0004D6  6E4A               	movwf	_ind^0,c
  6180   0004D8                     
  6181                           ;change_password.c: 63:             clcd_write(0x01, 0);
  6182   0004D8  0E00               	movlw	0
  6183   0004DA  6E01               	movwf	clcd_write@control_bit^0,c
  6184   0004DC  0E01               	movlw	1
  6185   0004DE  ECCF  F010         	call	_clcd_write
  6186   0004E2  EFA1  F003         	goto	l697
  6187   0004E6                     l3582:
  6188   0004E6  0449               	decf	_reset_flag^0,w,c
  6189   0004E8  A4D8               	btfss	status,2,c
  6190   0004EA  EF79  F002         	goto	u2771
  6191   0004EE  EF7B  F002         	goto	u2770
  6192   0004F2                     u2771:
  6193   0004F2  EFA1  F003         	goto	l697
  6194   0004F6                     u2770:
  6195   0004F6                     
  6196                           ;change_password.c: 66:         clcd_print("  Retype Password : ", (0x80 + (0)));
  6197   0004F6  0E7F               	movlw	low STR_28
  6198   0004F8  6E03               	movwf	clcd_print@data^0,c
  6199   0004FA  0E2E               	movlw	high STR_28
  6200   0004FC  6E04               	movwf	(clcd_print@data+1)^0,c
  6201   0004FE  0E80               	movlw	128
  6202   000500  6E05               	movwf	clcd_print@addr^0,c
  6203   000502  EC9F  F00F         	call	_clcd_print	;wreg free
  6204   000506                     
  6205                           ;change_password.c: 68:         if (del++ < 500) {
  6206   000506  503C               	movf	_del^0,w,c
  6207   000508  6E11               	movwf	??_change_pass^0,c
  6208   00050A  503D               	movf	(_del+1)^0,w,c
  6209   00050C  6E12               	movwf	(??_change_pass+1)^0,c
  6210   00050E  4A3C               	infsnz	_del^0,f,c
  6211   000510  2A3D               	incf	(_del+1)^0,f,c
  6212   000512  BE12               	btfsc	(??_change_pass+1)^0,7,c
  6213   000514  EF97  F002         	goto	u2780
  6214   000518  0EF4               	movlw	244
  6215   00051A  5C11               	subwf	??_change_pass^0,w,c
  6216   00051C  0E01               	movlw	1
  6217   00051E  5812               	subwfb	(??_change_pass+1)^0,w,c
  6218   000520  B0D8               	btfsc	status,0,c
  6219   000522  EF95  F002         	goto	u2781
  6220   000526  EF97  F002         	goto	u2780
  6221   00052A                     u2781:
  6222   00052A  EF9F  F002         	goto	l3590
  6223   00052E                     u2780:
  6224   00052E                     
  6225                           ;change_password.c: 69:             clcd_putch('_', (0xC0 + (ind)));
  6226   00052E  504A               	movf	_ind^0,w,c
  6227   000530  0FC0               	addlw	192
  6228   000532  6E0F               	movwf	clcd_putch@addr^0,c
  6229   000534  0E5F               	movlw	95
  6230   000536  EC5D  F011         	call	_clcd_putch
  6231                           
  6232                           ;change_password.c: 70:         } else if (del > 500 && del < 1000) {
  6233   00053A  EFC7  F002         	goto	l3598
  6234   00053E                     l3590:
  6235   00053E  BE3D               	btfsc	(_del+1)^0,7,c
  6236   000540  EFAB  F002         	goto	u2791
  6237   000544  0EF5               	movlw	245
  6238   000546  5C3C               	subwf	_del^0,w,c
  6239   000548  0E01               	movlw	1
  6240   00054A  583D               	subwfb	(_del+1)^0,w,c
  6241   00054C  A0D8               	btfss	status,0,c
  6242   00054E  EFAB  F002         	goto	u2791
  6243   000552  EFAD  F002         	goto	u2790
  6244   000556                     u2791:
  6245   000556  EFC3  F002         	goto	l3596
  6246   00055A                     u2790:
  6247   00055A  BE3D               	btfsc	(_del+1)^0,7,c
  6248   00055C  EFBB  F002         	goto	u2800
  6249   000560  0EE8               	movlw	232
  6250   000562  5C3C               	subwf	_del^0,w,c
  6251   000564  0E03               	movlw	3
  6252   000566  583D               	subwfb	(_del+1)^0,w,c
  6253   000568  B0D8               	btfsc	status,0,c
  6254   00056A  EFB9  F002         	goto	u2801
  6255   00056E  EFBB  F002         	goto	u2800
  6256   000572                     u2801:
  6257   000572  EFC3  F002         	goto	l3596
  6258   000576                     u2800:
  6259   000576                     
  6260                           ;change_password.c: 71:             clcd_putch(' ', (0xC0 + (ind)));
  6261   000576  504A               	movf	_ind^0,w,c
  6262   000578  0FC0               	addlw	192
  6263   00057A  6E0F               	movwf	clcd_putch@addr^0,c
  6264   00057C  0E20               	movlw	32
  6265   00057E  EC5D  F011         	call	_clcd_putch
  6266                           
  6267                           ;change_password.c: 72:         } else
  6268   000582  EFC7  F002         	goto	l3598
  6269   000586                     l3596:
  6270                           
  6271                           ;change_password.c: 73:             del = 0;
  6272   000586  0E00               	movlw	0
  6273   000588  6E3D               	movwf	(_del+1)^0,c
  6274   00058A  0E00               	movlw	0
  6275   00058C  6E3C               	movwf	_del^0,c
  6276   00058E                     l3598:
  6277                           
  6278                           ;change_password.c: 75:         if (key == 5) {
  6279   00058E  0E05               	movlw	5
  6280   000590  1817               	xorwf	change_pass@key^0,w,c
  6281   000592  A4D8               	btfss	status,2,c
  6282   000594  EFCE  F002         	goto	u2811
  6283   000598  EFD0  F002         	goto	u2810
  6284   00059C                     u2811:
  6285   00059C  EFDF  F002         	goto	l3606
  6286   0005A0                     u2810:
  6287   0005A0                     
  6288                           ;change_password.c: 76:             temp2[ind] = '0';
  6289   0005A0  504A               	movf	_ind^0,w,c
  6290   0005A2  0F90               	addlw	low _temp2
  6291   0005A4  6ED9               	movwf	fsr2l,c
  6292   0005A6  6ADA               	clrf	fsr2h,c
  6293   0005A8  0E30               	movlw	48
  6294   0005AA  6EDF               	movwf	indf2,c
  6295   0005AC                     
  6296                           ;change_password.c: 77:             clcd_putch('*', (0xC0 + (ind)));
  6297   0005AC  504A               	movf	_ind^0,w,c
  6298   0005AE  0FC0               	addlw	192
  6299   0005B0  6E0F               	movwf	clcd_putch@addr^0,c
  6300   0005B2  0E2A               	movlw	42
  6301   0005B4  EC5D  F011         	call	_clcd_putch
  6302   0005B8                     l3604:
  6303                           
  6304                           ;change_password.c: 78:             ind++;
  6305   0005B8  2A4A               	incf	_ind^0,f,c
  6306                           
  6307                           ;change_password.c: 79:         } else if (key == 6) {
  6308   0005BA  EFF6  F002         	goto	l3614
  6309   0005BE                     l3606:
  6310   0005BE  0E06               	movlw	6
  6311   0005C0  1817               	xorwf	change_pass@key^0,w,c
  6312   0005C2  A4D8               	btfss	status,2,c
  6313   0005C4  EFE6  F002         	goto	u2821
  6314   0005C8  EFE8  F002         	goto	u2820
  6315   0005CC                     u2821:
  6316   0005CC  EFF6  F002         	goto	l3614
  6317   0005D0                     u2820:
  6318   0005D0                     
  6319                           ;change_password.c: 80:             temp2[ind] = '1';
  6320   0005D0  504A               	movf	_ind^0,w,c
  6321   0005D2  0F90               	addlw	low _temp2
  6322   0005D4  6ED9               	movwf	fsr2l,c
  6323   0005D6  6ADA               	clrf	fsr2h,c
  6324   0005D8  0E31               	movlw	49
  6325   0005DA  6EDF               	movwf	indf2,c
  6326   0005DC                     
  6327                           ;change_password.c: 81:             clcd_putch('*', (0xC0 + (ind)));
  6328   0005DC  504A               	movf	_ind^0,w,c
  6329   0005DE  0FC0               	addlw	192
  6330   0005E0  6E0F               	movwf	clcd_putch@addr^0,c
  6331   0005E2  0E2A               	movlw	42
  6332   0005E4  EC5D  F011         	call	_clcd_putch
  6333   0005E8  EFDC  F002         	goto	l3604
  6334   0005EC                     l3614:
  6335                           
  6336                           ;change_password.c: 84:         if (ind == 4) {
  6337   0005EC  0E04               	movlw	4
  6338   0005EE  184A               	xorwf	_ind^0,w,c
  6339   0005F0  A4D8               	btfss	status,2,c
  6340   0005F2  EFFD  F002         	goto	u2831
  6341   0005F6  EFFF  F002         	goto	u2830
  6342   0005FA                     u2831:
  6343   0005FA  EFA1  F003         	goto	l697
  6344   0005FE                     u2830:
  6345   0005FE                     
  6346                           ;change_password.c: 85:             temp2[ind] = '\0';
  6347   0005FE  504A               	movf	_ind^0,w,c
  6348   000600  0F90               	addlw	low _temp2
  6349   000602  6ED9               	movwf	fsr2l,c
  6350   000604  6ADA               	clrf	fsr2h,c
  6351   000606  6ADF               	clrf	indf2,c
  6352   000608                     
  6353                           ;change_password.c: 86:             if (my_strcp(temp1, temp2) == 0) {
  6354   000608  0E95               	movlw	low _temp1
  6355   00060A  6E01               	movwf	my_strcp@one^0,c
  6356   00060C  0E90               	movlw	low _temp2
  6357   00060E  6E02               	movwf	my_strcp@two^0,c
  6358   000610  ECE8  F00E         	call	_my_strcp	;wreg free
  6359   000614  5001               	movf	?_my_strcp^0,w,c
  6360   000616  1002               	iorwf	(?_my_strcp+1)^0,w,c
  6361   000618  A4D8               	btfss	status,2,c
  6362   00061A  EF11  F003         	goto	u2841
  6363   00061E  EF13  F003         	goto	u2840
  6364   000622                     u2841:
  6365   000622  EF9F  F003         	goto	l3666
  6366   000626                     u2840:
  6367   000626                     
  6368                           ;change_password.c: 87:                 pass[0] = temp1[0];
  6369   000626  C095  F09F         	movff	_temp1,_pass
  6370   00062A                     
  6371                           ;change_password.c: 88:                 write_external_eeprom((200), temp1[0]);
  6372   00062A  C095  F002         	movff	_temp1,write_external_eeprom@data
  6373   00062E  0EC8               	movlw	200
  6374   000630  ECAF  F010         	call	_write_external_eeprom
  6375   000634                     
  6376                           ;change_password.c: 89:                 pass[1] = temp1[1];
  6377   000634  C096  F0A0         	movff	_temp1+1,_pass+1
  6378                           
  6379                           ;change_password.c: 90:                 write_external_eeprom((201), temp1[1]);
  6380   000638  C096  F002         	movff	_temp1+1,write_external_eeprom@data
  6381   00063C  0EC9               	movlw	201
  6382   00063E  ECAF  F010         	call	_write_external_eeprom
  6383   000642                     
  6384                           ;change_password.c: 91:                 pass[2] = temp1[2];
  6385   000642  C097  F0A1         	movff	_temp1+2,_pass+2
  6386                           
  6387                           ;change_password.c: 92:                 write_external_eeprom((202), temp1[2]);
  6388   000646  C097  F002         	movff	_temp1+2,write_external_eeprom@data
  6389   00064A  0ECA               	movlw	202
  6390   00064C  ECAF  F010         	call	_write_external_eeprom
  6391   000650                     
  6392                           ;change_password.c: 93:                 pass[3] = temp1[3];
  6393   000650  C098  F0A2         	movff	_temp1+3,_pass+3
  6394                           
  6395                           ;change_password.c: 94:                 write_external_eeprom((203), temp1[3]);
  6396   000654  C098  F002         	movff	_temp1+3,write_external_eeprom@data
  6397   000658  0ECB               	movlw	203
  6398   00065A  ECAF  F010         	call	_write_external_eeprom
  6399   00065E                     
  6400                           ;change_password.c: 96:                 clcd_print(" Password Change  ", (0x80 + (0)));
  6401   00065E  0EA8               	movlw	low STR_29
  6402   000660  6E03               	movwf	clcd_print@data^0,c
  6403   000662  0E2E               	movlw	high STR_29
  6404   000664  6E04               	movwf	(clcd_print@data+1)^0,c
  6405   000666  0E80               	movlw	128
  6406   000668  6E05               	movwf	clcd_print@addr^0,c
  6407   00066A  EC9F  F00F         	call	_clcd_print	;wreg free
  6408   00066E                     
  6409                           ;change_password.c: 97:                 clcd_print("   SUCCESSFULL  ", (0xC0 + (0)));
  6410   00066E  0E15               	movlw	low STR_30
  6411   000670  6E03               	movwf	clcd_print@data^0,c
  6412   000672  0E2F               	movlw	high STR_30
  6413   000674  6E04               	movwf	(clcd_print@data+1)^0,c
  6414   000676  0EC0               	movlw	192
  6415   000678  6E05               	movwf	clcd_print@addr^0,c
  6416   00067A  EC9F  F00F         	call	_clcd_print	;wreg free
  6417   00067E                     
  6418                           ;change_password.c: 98:                 for (unsigned long int delay = 200000; delay--;)
      +                          ;
  6419   00067E  0E40               	movlw	64
  6420   000680  6E13               	movwf	change_pass@delay^0,c
  6421   000682  0E0D               	movlw	13
  6422   000684  6E14               	movwf	(change_pass@delay+1)^0,c
  6423   000686  0E03               	movlw	3
  6424   000688  6E15               	movwf	(change_pass@delay+2)^0,c
  6425   00068A  0E00               	movlw	0
  6426   00068C  6E16               	movwf	(change_pass@delay+3)^0,c
  6427   00068E                     l3636:
  6428   00068E  0613               	decf	change_pass@delay^0,f,c
  6429   000690  0E00               	movlw	0
  6430   000692  5A14               	subwfb	(change_pass@delay+1)^0,f,c
  6431   000694  5A15               	subwfb	(change_pass@delay+2)^0,f,c
  6432   000696  5A16               	subwfb	(change_pass@delay+3)^0,f,c
  6433   000698  2813               	incf	change_pass@delay^0,w,c
  6434   00069A  E10A               	bnz	u2851
  6435   00069C  2814               	incf	(change_pass@delay+1)^0,w,c
  6436   00069E  E108               	bnz	u2851
  6437   0006A0  2815               	incf	(change_pass@delay+2)^0,w,c
  6438   0006A2  E106               	bnz	u2851
  6439   0006A4  2816               	incf	(change_pass@delay+3)^0,w,c
  6440   0006A6  A4D8               	btfss	status,2,c
  6441   0006A8  EF58  F003         	goto	u2851
  6442   0006AC  EF5A  F003         	goto	u2850
  6443   0006B0                     u2851:
  6444   0006B0  EF47  F003         	goto	l3636
  6445   0006B4                     u2850:
  6446   0006B4                     
  6447                           ;change_password.c: 99:                 ind = 0;
  6448   0006B4  0E00               	movlw	0
  6449   0006B6  6E4A               	movwf	_ind^0,c
  6450                           
  6451                           ;change_password.c: 100:                 reset_flag = 0;
  6452   0006B8  0E00               	movlw	0
  6453   0006BA  6E49               	movwf	_reset_flag^0,c
  6454   0006BC                     
  6455                           ;change_password.c: 106:                 store[0] = time[0];
  6456   0006BC  C087  F076         	movff	_time,_store
  6457   0006C0                     
  6458                           ;change_password.c: 107:                 store[1] = time[1];
  6459   0006C0  C088  F077         	movff	_time+1,_store+1
  6460   0006C4                     
  6461                           ;change_password.c: 108:                 store[2] = time[3];
  6462   0006C4  C08A  F078         	movff	_time+3,_store+2
  6463   0006C8                     
  6464                           ;change_password.c: 109:                 store[3] = time[4];
  6465   0006C8  C08B  F079         	movff	_time+4,_store+3
  6466   0006CC                     
  6467                           ;change_password.c: 110:                 store[4] = time[6];
  6468   0006CC  C08D  F07A         	movff	_time+6,_store+4
  6469   0006D0                     
  6470                           ;change_password.c: 111:                 store[5] = time[7];
  6471   0006D0  C08E  F07B         	movff	_time+7,_store+5
  6472                           
  6473                           ;change_password.c: 114:                 store[6] = 'C';
  6474   0006D4  0E43               	movlw	67
  6475   0006D6  0100               	movlb	0	; () banked
  6476   0006D8  6F7C               	movwf	(_store+6)& (0+255),b
  6477                           
  6478                           ;change_password.c: 115:                 store[7] = 'L';
  6479   0006DA  0E4C               	movlw	76
  6480   0006DC  6F7D               	movwf	(_store+7)& (0+255),b
  6481   0006DE                     
  6482                           ; BSR set to: 0
  6483                           ;change_password.c: 119:                 store[8] = (adc_reg_val / 10) + 48;
  6484   0006DE  C042  F001         	movff	_adc_reg_val,___lwdiv@dividend
  6485   0006E2  C043  F002         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  6486   0006E6  0E00               	movlw	0
  6487   0006E8  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  6488   0006EA  0E0A               	movlw	10
  6489   0006EC  6E03               	movwf	___lwdiv@divisor^0,c
  6490   0006EE  EC65  F00F         	call	___lwdiv	;wreg free
  6491   0006F2  5001               	movf	?___lwdiv^0,w,c
  6492   0006F4  0F30               	addlw	48
  6493   0006F6  0100               	movlb	0	; () banked
  6494   0006F8  6F7E               	movwf	(_store+8)& (0+255),b
  6495   0006FA                     
  6496                           ; BSR set to: 0
  6497                           ;change_password.c: 120:                 store[9] = (adc_reg_val % 10) + 48;
  6498   0006FA  C042  F001         	movff	_adc_reg_val,___lwmod@dividend
  6499   0006FE  C043  F002         	movff	_adc_reg_val+1,___lwmod@dividend+1
  6500   000702  0E00               	movlw	0
  6501   000704  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6502   000706  0E0A               	movlw	10
  6503   000708  6E03               	movwf	___lwmod@divisor^0,c
  6504   00070A  EC07  F010         	call	___lwmod	;wreg free
  6505   00070E  5001               	movf	?___lwmod^0,w,c
  6506   000710  0F30               	addlw	48
  6507   000712  0100               	movlb	0	; () banked
  6508   000714  6F7F               	movwf	(_store+9)& (0+255),b
  6509                           
  6510                           ;change_password.c: 122:                 for (char k = 0; k < 10; k++) {
  6511   000716  0E00               	movlw	0
  6512   000718  6E18               	movwf	change_pass@k^0,c
  6513   00071A                     l3660:
  6514                           
  6515                           ;change_password.c: 123:                     write_external_eeprom((k), store[k]);
  6516   00071A  5018               	movf	change_pass@k^0,w,c
  6517   00071C  0F76               	addlw	low _store
  6518   00071E  6ED9               	movwf	fsr2l,c
  6519   000720  6ADA               	clrf	fsr2h,c
  6520   000722  50DF               	movf	indf2,w,c
  6521   000724  6E02               	movwf	write_external_eeprom@data^0,c
  6522   000726  5018               	movf	change_pass@k^0,w,c
  6523   000728  ECAF  F010         	call	_write_external_eeprom
  6524   00072C                     
  6525                           ;change_password.c: 124:                 }
  6526   00072C  2A18               	incf	change_pass@k^0,f,c
  6527   00072E  0E09               	movlw	9
  6528   000730  6418               	cpfsgt	change_pass@k^0,c
  6529   000732  EF9D  F003         	goto	u2861
  6530   000736  EF9F  F003         	goto	u2860
  6531   00073A                     u2861:
  6532   00073A  EF8D  F003         	goto	l3660
  6533   00073E                     u2860:
  6534   00073E                     l3666:
  6535                           
  6536                           ;change_password.c: 128:                 main_f = 2;
  6537   00073E  0E02               	movlw	2
  6538   000740  6E59               	movwf	_main_f^0,c
  6539   000742                     l697:
  6540   000742  0012               	return		;funcret
  6541   000744                     __end_of_change_pass:
  6542                           	callstack 0
  6543                           
  6544 ;; *************** function _write_external_eeprom *****************
  6545 ;; Defined at:
  6546 ;;		line 14 in file "external_eeprom.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;  address         1    wreg     unsigned char 
  6549 ;;  data            1    1[COMRAM] unsigned char 
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;  address         1    4[COMRAM] unsigned char 
  6552 ;;  i               2    2[COMRAM] int 
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  1    wreg      void 
  6555 ;; Registers used:
  6556 ;;		wreg, status,2, status,0, cstack
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6562 ;;      Params:         1       0       0       0       0       0       0
  6563 ;;      Locals:         3       0       0       0       0       0       0
  6564 ;;      Temps:          0       0       0       0       0       0       0
  6565 ;;      Totals:         4       0       0       0       0       0       0
  6566 ;;Total ram usage:        4 bytes
  6567 ;; Hardware stack levels used: 1
  6568 ;; Hardware stack levels required when called: 3
  6569 ;; This function calls:
  6570 ;;		_i2c_start
  6571 ;;		_i2c_stop
  6572 ;;		_i2c_write
  6573 ;; This function is called by:
  6574 ;;		_init_config
  6575 ;;		_store_event
  6576 ;;		_clear_log
  6577 ;;		_change_pass
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           	psect	text35
  6582   00215E                     __ptext35:
  6583                           	callstack 0
  6584   00215E                     _write_external_eeprom:
  6585                           	callstack 26
  6586                           
  6587                           ;incstack = 0
  6588                           ;write_external_eeprom@address stored from wreg
  6589   00215E  6E05               	movwf	write_external_eeprom@address^0,c
  6590   002160                     
  6591                           ;external_eeprom.c: 14: void write_external_eeprom(unsigned char address, unsigned char 
      +                          data);external_eeprom.c: 15: {;external_eeprom.c: 16:  i2c_start();
  6592   002160  ECC4  F011         	call	_i2c_start	;wreg free
  6593   002164                     
  6594                           ;external_eeprom.c: 17:  i2c_write(0xA0);
  6595   002164  0EA0               	movlw	160
  6596   002166  ECB2  F011         	call	_i2c_write
  6597   00216A                     
  6598                           ;external_eeprom.c: 18:  i2c_write(address);
  6599   00216A  5005               	movf	write_external_eeprom@address^0,w,c
  6600   00216C  ECB2  F011         	call	_i2c_write
  6601   002170                     
  6602                           ;external_eeprom.c: 19:  i2c_write(data);
  6603   002170  5002               	movf	write_external_eeprom@data^0,w,c
  6604   002172  ECB2  F011         	call	_i2c_write
  6605   002176                     
  6606                           ;external_eeprom.c: 20:  i2c_stop();
  6607   002176  ECC0  F011         	call	_i2c_stop	;wreg free
  6608   00217A                     
  6609                           ;external_eeprom.c: 21:     for(int i=3000; i--;);
  6610   00217A  0E0B               	movlw	11
  6611   00217C  6E04               	movwf	(write_external_eeprom@i+1)^0,c
  6612   00217E  0EB8               	movlw	184
  6613   002180  6E03               	movwf	write_external_eeprom@i^0,c
  6614   002182                     l2864:
  6615   002182  0603               	decf	write_external_eeprom@i^0,f,c
  6616   002184  A0D8               	btfss	status,0,c
  6617   002186  0604               	decf	(write_external_eeprom@i+1)^0,f,c
  6618   002188  2803               	incf	write_external_eeprom@i^0,w,c
  6619   00218A  E106               	bnz	u1941
  6620   00218C  2804               	incf	(write_external_eeprom@i+1)^0,w,c
  6621   00218E  A4D8               	btfss	status,2,c
  6622   002190  EFCC  F010         	goto	u1941
  6623   002194  EFCE  F010         	goto	u1940
  6624   002198                     u1941:
  6625   002198  EFC1  F010         	goto	l2864
  6626   00219C                     u1940:
  6627   00219C  0012               	return		;funcret
  6628   00219E                     __end_of_write_external_eeprom:
  6629                           	callstack 0
  6630                           
  6631 ;; *************** function _i2c_write *****************
  6632 ;; Defined at:
  6633 ;;		line 55 in file "i2c.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  data            1    wreg     unsigned char 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  data            1    0[COMRAM] unsigned char 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6647 ;;      Params:         0       0       0       0       0       0       0
  6648 ;;      Locals:         1       0       0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0
  6650 ;;      Totals:         1       0       0       0       0       0       0
  6651 ;;Total ram usage:        1 bytes
  6652 ;; Hardware stack levels used: 1
  6653 ;; Hardware stack levels required when called: 2
  6654 ;; This function calls:
  6655 ;;		_i2c_idle
  6656 ;; This function is called by:
  6657 ;;		_write_ds1307
  6658 ;;		_read_ds1307
  6659 ;;		_write_external_eeprom
  6660 ;;		_read_external_eeprom
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text36
  6665   002364                     __ptext36:
  6666                           	callstack 0
  6667   002364                     _i2c_write:
  6668                           	callstack 26
  6669                           
  6670                           ;incstack = 0
  6671                           ;i2c_write@data stored from wreg
  6672   002364  6E01               	movwf	i2c_write@data^0,c
  6673   002366  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  6674   00236A  EC9B  F011         	call	_i2c_idle	;wreg free
  6675   00236E  0012               	return		;funcret
  6676   002370                     __end_of_i2c_write:
  6677                           	callstack 0
  6678                           
  6679 ;; *************** function _i2c_stop *****************
  6680 ;; Defined at:
  6681 ;;		line 43 in file "i2c.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  1    wreg      void 
  6688 ;; Registers used:
  6689 ;;		cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6695 ;;      Params:         0       0       0       0       0       0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0
  6697 ;;      Temps:          0       0       0       0       0       0       0
  6698 ;;      Totals:         0       0       0       0       0       0       0
  6699 ;;Total ram usage:        0 bytes
  6700 ;; Hardware stack levels used: 1
  6701 ;; Hardware stack levels required when called: 2
  6702 ;; This function calls:
  6703 ;;		_i2c_idle
  6704 ;; This function is called by:
  6705 ;;		_write_ds1307
  6706 ;;		_read_ds1307
  6707 ;;		_write_external_eeprom
  6708 ;;		_read_external_eeprom
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text37
  6713   002380                     __ptext37:
  6714                           	callstack 0
  6715   002380                     _i2c_stop:
  6716                           	callstack 26
  6717   002380  84C5               	bsf	4037,2,c	;volatile
  6718   002382  EC9B  F011         	call	_i2c_idle	;wreg free
  6719   002386  0012               	return		;funcret
  6720   002388                     __end_of_i2c_stop:
  6721                           	callstack 0
  6722                           
  6723 ;; *************** function _i2c_start *****************
  6724 ;; Defined at:
  6725 ;;		line 37 in file "i2c.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;		None
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;		None
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  1    wreg      void 
  6732 ;; Registers used:
  6733 ;;		cstack
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6739 ;;      Params:         0       0       0       0       0       0       0
  6740 ;;      Locals:         0       0       0       0       0       0       0
  6741 ;;      Temps:          0       0       0       0       0       0       0
  6742 ;;      Totals:         0       0       0       0       0       0       0
  6743 ;;Total ram usage:        0 bytes
  6744 ;; Hardware stack levels used: 1
  6745 ;; Hardware stack levels required when called: 2
  6746 ;; This function calls:
  6747 ;;		_i2c_idle
  6748 ;; This function is called by:
  6749 ;;		_write_ds1307
  6750 ;;		_read_ds1307
  6751 ;;		_write_external_eeprom
  6752 ;;		_read_external_eeprom
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756                           	psect	text38
  6757   002388                     __ptext38:
  6758                           	callstack 0
  6759   002388                     _i2c_start:
  6760                           	callstack 26
  6761   002388  80C5               	bsf	4037,0,c	;volatile
  6762   00238A  EC9B  F011         	call	_i2c_idle	;wreg free
  6763   00238E  0012               	return		;funcret
  6764   002390                     __end_of_i2c_start:
  6765                           	callstack 0
  6766                           
  6767 ;; *************** function _i2c_idle *****************
  6768 ;; Defined at:
  6769 ;;		line 23 in file "i2c.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;		None
  6772 ;; Auto vars:     Size  Location     Type
  6773 ;;		None
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  1    wreg      void 
  6776 ;; Registers used:
  6777 ;;		None
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6783 ;;      Params:         0       0       0       0       0       0       0
  6784 ;;      Locals:         0       0       0       0       0       0       0
  6785 ;;      Temps:          0       0       0       0       0       0       0
  6786 ;;      Totals:         0       0       0       0       0       0       0
  6787 ;;Total ram usage:        0 bytes
  6788 ;; Hardware stack levels used: 1
  6789 ;; Hardware stack levels required when called: 1
  6790 ;; This function calls:
  6791 ;;		Nothing
  6792 ;; This function is called by:
  6793 ;;		_i2c_start
  6794 ;;		_i2c_stop
  6795 ;;		_i2c_rep_start
  6796 ;;		_i2c_write
  6797 ;;		_i2c_rx_mode
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	text39
  6802   002336                     __ptext39:
  6803                           	callstack 0
  6804   002336                     _i2c_idle:
  6805                           	callstack 26
  6806   002336                     l366:
  6807   002336  A69E               	btfss	3998,3,c	;volatile
  6808   002338  EFA0  F011         	goto	u1871
  6809   00233C  EFA2  F011         	goto	u1870
  6810   002340                     u1871:
  6811   002340  EF9B  F011         	goto	l366
  6812   002344                     u1870:
  6813   002344  969E               	bcf	3998,3,c	;volatile
  6814   002346  0012               	return		;funcret
  6815   002348                     __end_of_i2c_idle:
  6816                           	callstack 0
  6817                           
  6818 ;; *************** function _my_strcp *****************
  6819 ;; Defined at:
  6820 ;;		line 26 in file "change_password.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;  one             1    0[COMRAM] PTR unsigned char 
  6823 ;;		 -> temp1(5), 
  6824 ;;  two             1    1[COMRAM] PTR unsigned char 
  6825 ;;		 -> temp2(5), 
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;  k               2    6[COMRAM] int 
  6828 ;;  last            2    4[COMRAM] int 
  6829 ;; Return value:  Size  Location     Type
  6830 ;;                  2    0[COMRAM] int 
  6831 ;; Registers used:
  6832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6833 ;; Tracked objects:
  6834 ;;		On entry : 0/0
  6835 ;;		On exit  : 0/0
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6838 ;;      Params:         2       0       0       0       0       0       0
  6839 ;;      Locals:         4       0       0       0       0       0       0
  6840 ;;      Temps:          2       0       0       0       0       0       0
  6841 ;;      Totals:         8       0       0       0       0       0       0
  6842 ;;Total ram usage:        8 bytes
  6843 ;; Hardware stack levels used: 1
  6844 ;; Hardware stack levels required when called: 1
  6845 ;; This function calls:
  6846 ;;		Nothing
  6847 ;; This function is called by:
  6848 ;;		_change_pass
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           	psect	text40
  6853   001DD0                     __ptext40:
  6854                           	callstack 0
  6855   001DD0                     _my_strcp:
  6856                           	callstack 28
  6857   001DD0                     
  6858                           ;change_password.c: 27:     int k = 0, last = 0;
  6859   001DD0  0E00               	movlw	0
  6860   001DD2  6E08               	movwf	(my_strcp@k+1)^0,c
  6861   001DD4  0E00               	movlw	0
  6862   001DD6  6E07               	movwf	my_strcp@k^0,c
  6863   001DD8  0E00               	movlw	0
  6864   001DDA  6E06               	movwf	(my_strcp@last+1)^0,c
  6865   001DDC  0E00               	movlw	0
  6866   001DDE  6E05               	movwf	my_strcp@last^0,c
  6867                           
  6868                           ;change_password.c: 28:     while (one[k] != '\0') {
  6869   001DE0  EF19  F00F         	goto	l3102
  6870   001DE4                     l3096:
  6871                           
  6872                           ;change_password.c: 29:         if (one[k] != two[k]) {
  6873   001DE4  5002               	movf	my_strcp@two^0,w,c
  6874   001DE6  2407               	addwf	my_strcp@k^0,w,c
  6875   001DE8  6ED9               	movwf	fsr2l,c
  6876   001DEA  6ADA               	clrf	fsr2h,c
  6877   001DEC  5001               	movf	my_strcp@one^0,w,c
  6878   001DEE  2407               	addwf	my_strcp@k^0,w,c
  6879   001DF0  6EE1               	movwf	fsr1l,c
  6880   001DF2  6AE2               	clrf	fsr1h,c
  6881   001DF4  50DE               	movf	postinc2,w,c
  6882   001DF6  18E6               	xorwf	postinc1,w,c
  6883   001DF8  B4D8               	btfsc	status,2,c
  6884   001DFA  EF01  F00F         	goto	u2081
  6885   001DFE  EF03  F00F         	goto	u2080
  6886   001E02                     u2081:
  6887   001E02  EF17  F00F         	goto	l3100
  6888   001E06                     u2080:
  6889   001E06                     
  6890                           ;change_password.c: 30:             last = one[k] - two[k];
  6891   001E06  5001               	movf	my_strcp@one^0,w,c
  6892   001E08  2407               	addwf	my_strcp@k^0,w,c
  6893   001E0A  6ED9               	movwf	fsr2l,c
  6894   001E0C  6ADA               	clrf	fsr2h,c
  6895   001E0E  50DF               	movf	indf2,w,c
  6896   001E10  6E03               	movwf	??_my_strcp^0,c
  6897   001E12  5002               	movf	my_strcp@two^0,w,c
  6898   001E14  2407               	addwf	my_strcp@k^0,w,c
  6899   001E16  6ED9               	movwf	fsr2l,c
  6900   001E18  6ADA               	clrf	fsr2h,c
  6901   001E1A  50DF               	movf	indf2,w,c
  6902   001E1C  6E04               	movwf	(??_my_strcp+1)^0,c
  6903   001E1E  5004               	movf	(??_my_strcp+1)^0,w,c
  6904   001E20  5C03               	subwf	??_my_strcp^0,w,c
  6905   001E22  6E05               	movwf	my_strcp@last^0,c
  6906   001E24  6A06               	clrf	(my_strcp@last+1)^0,c
  6907   001E26  A0D8               	btfss	status,0,c
  6908   001E28  0606               	decf	(my_strcp@last+1)^0,f,c
  6909                           
  6910                           ;change_password.c: 31:             break;
  6911   001E2A  EF25  F00F         	goto	l667
  6912   001E2E                     l3100:
  6913                           
  6914                           ;change_password.c: 33:         k++;
  6915   001E2E  4A07               	infsnz	my_strcp@k^0,f,c
  6916   001E30  2A08               	incf	(my_strcp@k+1)^0,f,c
  6917   001E32                     l3102:
  6918                           
  6919                           ;change_password.c: 28:     while (one[k] != '\0') {
  6920   001E32  5001               	movf	my_strcp@one^0,w,c
  6921   001E34  2407               	addwf	my_strcp@k^0,w,c
  6922   001E36  6ED9               	movwf	fsr2l,c
  6923   001E38  6ADA               	clrf	fsr2h,c
  6924   001E3A  50DF               	movf	indf2,w,c
  6925   001E3C  A4D8               	btfss	status,2,c
  6926   001E3E  EF23  F00F         	goto	u2091
  6927   001E42  EF25  F00F         	goto	u2090
  6928   001E46                     u2091:
  6929   001E46  EFF2  F00E         	goto	l3096
  6930   001E4A                     u2090:
  6931   001E4A                     l667:
  6932                           
  6933                           ;change_password.c: 35:     return last;
  6934   001E4A  C005  F001         	movff	my_strcp@last,?_my_strcp
  6935   001E4E  C006  F002         	movff	my_strcp@last+1,?_my_strcp+1
  6936   001E52  0012               	return		;funcret
  6937   001E54                     __end_of_my_strcp:
  6938                           	callstack 0
  6939                           
  6940 ;; *************** function _clcd_putch *****************
  6941 ;; Defined at:
  6942 ;;		line 68 in file "clcd.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  data            1    wreg     const unsigned char 
  6945 ;;  addr            1   14[COMRAM] unsigned char 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;  data            1   15[COMRAM] const unsigned char 
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1    wreg      void 
  6950 ;; Registers used:
  6951 ;;		wreg, status,2, cstack
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6957 ;;      Params:         1       0       0       0       0       0       0
  6958 ;;      Locals:         1       0       0       0       0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0
  6960 ;;      Totals:         2       0       0       0       0       0       0
  6961 ;;Total ram usage:        2 bytes
  6962 ;; Hardware stack levels used: 1
  6963 ;; Hardware stack levels required when called: 2
  6964 ;; This function calls:
  6965 ;;		_clcd_write
  6966 ;; This function is called by:
  6967 ;;		_dashboard
  6968 ;;		_password
  6969 ;;		_menu
  6970 ;;		_view_log
  6971 ;;		_change_pass
  6972 ;;		_settime
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text41
  6977   0022BA                     __ptext41:
  6978                           	callstack 0
  6979   0022BA                     _clcd_putch:
  6980                           	callstack 27
  6981                           
  6982                           ;incstack = 0
  6983                           ;clcd_putch@data stored from wreg
  6984   0022BA  6E10               	movwf	clcd_putch@data^0,c
  6985   0022BC                     
  6986                           ;clcd.c: 68: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 69: {
      +                          ;clcd.c: 70:  clcd_write(addr, 0);
  6987   0022BC  0E00               	movlw	0
  6988   0022BE  6E01               	movwf	clcd_write@control_bit^0,c
  6989   0022C0  500F               	movf	clcd_putch@addr^0,w,c
  6990   0022C2  ECCF  F010         	call	_clcd_write
  6991                           
  6992                           ;clcd.c: 71:  clcd_write(data, 1);
  6993   0022C6  0E01               	movlw	1
  6994   0022C8  6E01               	movwf	clcd_write@control_bit^0,c
  6995   0022CA  5010               	movf	clcd_putch@data^0,w,c
  6996   0022CC  ECCF  F010         	call	_clcd_write
  6997   0022D0  0012               	return		;funcret
  6998   0022D2                     __end_of_clcd_putch:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function _clcd_print *****************
  7002 ;; Defined at:
  7003 ;;		line 59 in file "clcd.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  data            2    2[COMRAM] PTR const unsigned char 
  7006 ;;		 -> STR_31(18), STR_30(17), STR_29(19), STR_28(21), 
  7007 ;;		 -> STR_27(18), STR_24(14), STR_23(18), STR_22(18), 
  7008 ;;		 -> STR_21(18), STR_20(17), STR_19(15), STR_18(16), 
  7009 ;;		 -> STR_17(17), STR_16(16), STR_15(15), STR_14(15), 
  7010 ;;		 -> STR_13(17), STR_12(6), STR_11(16), STR_10(17), 
  7011 ;;		 -> STR_9(17), time(9), STR_8(3), STR_7(3), 
  7012 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(3), 
  7013 ;;		 -> STR_2(3), STR_1(3), 
  7014 ;;  addr            1    4[COMRAM] unsigned char 
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;		None
  7017 ;; Return value:  Size  Location     Type
  7018 ;;                  1    wreg      void 
  7019 ;; Registers used:
  7020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7021 ;; Tracked objects:
  7022 ;;		On entry : 0/0
  7023 ;;		On exit  : 0/0
  7024 ;;		Unchanged: 0/0
  7025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7026 ;;      Params:         3       0       0       0       0       0       0
  7027 ;;      Locals:         0       0       0       0       0       0       0
  7028 ;;      Temps:          0       0       0       0       0       0       0
  7029 ;;      Totals:         3       0       0       0       0       0       0
  7030 ;;Total ram usage:        3 bytes
  7031 ;; Hardware stack levels used: 1
  7032 ;; Hardware stack levels required when called: 2
  7033 ;; This function calls:
  7034 ;;		_clcd_write
  7035 ;; This function is called by:
  7036 ;;		_display_time
  7037 ;;		_dashboard
  7038 ;;		_password
  7039 ;;		_menu
  7040 ;;		_view_log
  7041 ;;		_clear_log
  7042 ;;		_download_log
  7043 ;;		_change_pass
  7044 ;;		_settime
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text42
  7049   001F3E                     __ptext42:
  7050                           	callstack 0
  7051   001F3E                     _clcd_print:
  7052                           	callstack 27
  7053   001F3E                     
  7054                           ;clcd.c: 59: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 60: 
      +                          {;clcd.c: 61:  clcd_write(addr, 0);
  7055   001F3E  0E00               	movlw	0
  7056   001F40  6E01               	movwf	clcd_write@control_bit^0,c
  7057   001F42  5005               	movf	clcd_print@addr^0,w,c
  7058   001F44  ECCF  F010         	call	_clcd_write
  7059                           
  7060                           ;clcd.c: 62:  while (*data != '\0')
  7061   001F48  EFBC  F00F         	goto	l2850
  7062   001F4C                     l2846:
  7063                           
  7064                           ;clcd.c: 63:  {;clcd.c: 64:   clcd_write(*data++, 1);
  7065   001F4C  0E01               	movlw	1
  7066   001F4E  6E01               	movwf	clcd_write@control_bit^0,c
  7067   001F50  C003  FFF6         	movff	clcd_print@data,tblptrl
  7068   001F54  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  7069   001F58  6AF8               	clrf	tblptru,c
  7070   001F5A  0E05               	movlw	(high __ramtop+-1)
  7071   001F5C  64F7               	cpfsgt	tblptrh,c
  7072   001F5E  D003               	bra	u1917
  7073   001F60  0008               	tblrd		*
  7074   001F62  50F5               	movf	tablat,w,c
  7075   001F64  D005               	bra	u1910
  7076   001F66                     u1917:
  7077   001F66  CFF6 FFE9          	movff	tblptrl,fsr0l
  7078   001F6A  CFF7 FFEA          	movff	tblptrh,fsr0h
  7079   001F6E  50EF               	movf	indf0,w,c
  7080   001F70                     u1910:
  7081   001F70  ECCF  F010         	call	_clcd_write
  7082   001F74  4A03               	infsnz	clcd_print@data^0,f,c
  7083   001F76  2A04               	incf	(clcd_print@data+1)^0,f,c
  7084   001F78                     l2850:
  7085                           
  7086                           ;clcd.c: 62:  while (*data != '\0')
  7087   001F78  C003  FFF6         	movff	clcd_print@data,tblptrl
  7088   001F7C  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  7089   001F80  6AF8               	clrf	tblptru,c
  7090   001F82  0E05               	movlw	(high __ramtop+-1)
  7091   001F84  64F7               	cpfsgt	tblptrh,c
  7092   001F86  D003               	bra	u1927
  7093   001F88  0008               	tblrd		*
  7094   001F8A  50F5               	movf	tablat,w,c
  7095   001F8C  D005               	bra	u1920
  7096   001F8E                     u1927:
  7097   001F8E  CFF6 FFE9          	movff	tblptrl,fsr0l
  7098   001F92  CFF7 FFEA          	movff	tblptrh,fsr0h
  7099   001F96  50EF               	movf	indf0,w,c
  7100   001F98                     u1920:
  7101   001F98  0900               	iorlw	0
  7102   001F9A  A4D8               	btfss	status,2,c
  7103   001F9C  EFD2  F00F         	goto	u1931
  7104   001FA0  EFD4  F00F         	goto	u1930
  7105   001FA4                     u1931:
  7106   001FA4  EFA6  F00F         	goto	l2846
  7107   001FA8                     u1930:
  7108   001FA8  0012               	return		;funcret
  7109   001FAA                     __end_of_clcd_print:
  7110                           	callstack 0
  7111                           
  7112 ;; *************** function _clcd_write *****************
  7113 ;; Defined at:
  7114 ;;		line 5 in file "clcd.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  byte            1    wreg     unsigned char 
  7117 ;;  control_bit     1    0[COMRAM] unsigned char 
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;  byte            1    1[COMRAM] unsigned char 
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1    wreg      void 
  7122 ;; Registers used:
  7123 ;;		wreg
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7129 ;;      Params:         1       0       0       0       0       0       0
  7130 ;;      Locals:         1       0       0       0       0       0       0
  7131 ;;      Temps:          0       0       0       0       0       0       0
  7132 ;;      Totals:         2       0       0       0       0       0       0
  7133 ;;Total ram usage:        2 bytes
  7134 ;; Hardware stack levels used: 1
  7135 ;; Hardware stack levels required when called: 1
  7136 ;; This function calls:
  7137 ;;		Nothing
  7138 ;; This function is called by:
  7139 ;;		_init_clcd
  7140 ;;		_clcd_print
  7141 ;;		_clcd_putch
  7142 ;;		_main
  7143 ;;		_password
  7144 ;;		_menu
  7145 ;;		_change_pass
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text43
  7150   00219E                     __ptext43:
  7151                           	callstack 0
  7152   00219E                     _clcd_write:
  7153                           	callstack 27
  7154                           
  7155                           ;incstack = 0
  7156                           ;clcd_write@byte stored from wreg
  7157   00219E  6E02               	movwf	clcd_write@byte^0,c
  7158   0021A0                     
  7159                           ;clcd.c: 5: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 6: {;
      +                          clcd.c: 7:  RC1 = control_bit;
  7160   0021A0  B001               	btfsc	clcd_write@control_bit^0,0,c
  7161   0021A2  EFD5  F010         	goto	u1881
  7162   0021A6  EFD8  F010         	goto	u1880
  7163   0021AA                     u1881:
  7164   0021AA  8282               	bsf	3970,1,c	;volatile
  7165   0021AC  EFD9  F010         	goto	u1895
  7166   0021B0                     u1880:
  7167   0021B0  9282               	bcf	3970,1,c	;volatile
  7168   0021B2                     u1895:
  7169   0021B2                     
  7170                           ;clcd.c: 8:  PORTD = byte;
  7171   0021B2  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  7172   0021B6                     
  7173                           ;clcd.c: 11:  RC2 = 1;
  7174   0021B6  8482               	bsf	3970,2,c	;volatile
  7175   0021B8                     
  7176                           ;clcd.c: 12:  RC2 = 0;
  7177   0021B8  9482               	bcf	3970,2,c	;volatile
  7178   0021BA                     
  7179                           ;clcd.c: 14:  TRISD7 = 0xFF;
  7180   0021BA  8E95               	bsf	3989,7,c	;volatile
  7181   0021BC                     
  7182                           ;clcd.c: 15:  RC0 = 1;
  7183   0021BC  8082               	bsf	3970,0,c	;volatile
  7184   0021BE                     
  7185                           ;clcd.c: 16:  RC1 = 0;
  7186   0021BE  9282               	bcf	3970,1,c	;volatile
  7187   0021C0                     l2816:
  7188                           
  7189                           ;clcd.c: 19:  {;clcd.c: 20:   RC2 = 1;
  7190   0021C0  8482               	bsf	3970,2,c	;volatile
  7191   0021C2                     
  7192                           ;clcd.c: 21:   RC2 = 0;
  7193   0021C2  9482               	bcf	3970,2,c	;volatile
  7194   0021C4                     
  7195                           ;clcd.c: 22:  } while (RD7);
  7196   0021C4  BE83               	btfsc	3971,7,c	;volatile
  7197   0021C6  EFE7  F010         	goto	u1901
  7198   0021CA  EFE9  F010         	goto	u1900
  7199   0021CE                     u1901:
  7200   0021CE  EFE0  F010         	goto	l2816
  7201   0021D2                     u1900:
  7202   0021D2                     
  7203                           ;clcd.c: 24:  RC0 = 0;
  7204   0021D2  9082               	bcf	3970,0,c	;volatile
  7205                           
  7206                           ;clcd.c: 25:  TRISD7 = 0x00;
  7207   0021D4  9E95               	bcf	3989,7,c	;volatile
  7208   0021D6  0012               	return		;funcret
  7209   0021D8                     __end_of_clcd_write:
  7210                           	callstack 0
  7211                           
  7212 ;; *************** function ___lwmod *****************
  7213 ;; Defined at:
  7214 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  dividend        2    0[COMRAM] unsigned int 
  7217 ;;  divisor         2    2[COMRAM] unsigned int 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  counter         1    4[COMRAM] unsigned char 
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  2    0[COMRAM] unsigned int 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7229 ;;      Params:         4       0       0       0       0       0       0
  7230 ;;      Locals:         1       0       0       0       0       0       0
  7231 ;;      Temps:          0       0       0       0       0       0       0
  7232 ;;      Totals:         5       0       0       0       0       0       0
  7233 ;;Total ram usage:        5 bytes
  7234 ;; Hardware stack levels used: 1
  7235 ;; Hardware stack levels required when called: 1
  7236 ;; This function calls:
  7237 ;;		Nothing
  7238 ;; This function is called by:
  7239 ;;		_dashboard
  7240 ;;		_store_event
  7241 ;;		_clear_log
  7242 ;;		_change_pass
  7243 ;;		_settime
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text44
  7248   00200E                     __ptext44:
  7249                           	callstack 0
  7250   00200E                     ___lwmod:
  7251                           	callstack 28
  7252   00200E  5003               	movf	___lwmod@divisor^0,w,c
  7253   002010  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  7254   002012  B4D8               	btfsc	status,2,c
  7255   002014  EF0E  F010         	goto	u1991
  7256   002018  EF10  F010         	goto	u1990
  7257   00201C                     u1991:
  7258   00201C  EF34  F010         	goto	l1244
  7259   002020                     u1990:
  7260   002020  0E01               	movlw	1
  7261   002022  6E05               	movwf	___lwmod@counter^0,c
  7262   002024  EF18  F010         	goto	l2922
  7263   002028                     l2920:
  7264   002028  90D8               	bcf	status,0,c
  7265   00202A  3603               	rlcf	___lwmod@divisor^0,f,c
  7266   00202C  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  7267   00202E  2A05               	incf	___lwmod@counter^0,f,c
  7268   002030                     l2922:
  7269   002030  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  7270   002032  EF1D  F010         	goto	u2001
  7271   002036  EF1F  F010         	goto	u2000
  7272   00203A                     u2001:
  7273   00203A  EF14  F010         	goto	l2920
  7274   00203E                     u2000:
  7275   00203E                     l2924:
  7276   00203E  5003               	movf	___lwmod@divisor^0,w,c
  7277   002040  5C01               	subwf	___lwmod@dividend^0,w,c
  7278   002042  5004               	movf	(___lwmod@divisor+1)^0,w,c
  7279   002044  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  7280   002046  A0D8               	btfss	status,0,c
  7281   002048  EF28  F010         	goto	u2011
  7282   00204C  EF2A  F010         	goto	u2010
  7283   002050                     u2011:
  7284   002050  EF2E  F010         	goto	l2928
  7285   002054                     u2010:
  7286   002054  5003               	movf	___lwmod@divisor^0,w,c
  7287   002056  5E01               	subwf	___lwmod@dividend^0,f,c
  7288   002058  5004               	movf	(___lwmod@divisor+1)^0,w,c
  7289   00205A  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  7290   00205C                     l2928:
  7291   00205C  90D8               	bcf	status,0,c
  7292   00205E  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  7293   002060  3203               	rrcf	___lwmod@divisor^0,f,c
  7294   002062  2E05               	decfsz	___lwmod@counter^0,f,c
  7295   002064  EF1F  F010         	goto	l2924
  7296   002068                     l1244:
  7297   002068  C001  F001         	movff	___lwmod@dividend,?___lwmod
  7298   00206C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  7299   002070  0012               	return		;funcret
  7300   002072                     __end_of___lwmod:
  7301                           	callstack 0
  7302                           
  7303 ;; *************** function ___lwdiv *****************
  7304 ;; Defined at:
  7305 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;  dividend        2    0[COMRAM] unsigned int 
  7308 ;;  divisor         2    2[COMRAM] unsigned int 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  quotient        2    4[COMRAM] unsigned int 
  7311 ;;  counter         1    6[COMRAM] unsigned char 
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  2    0[COMRAM] unsigned int 
  7314 ;; Registers used:
  7315 ;;		wreg, status,2, status,0
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7321 ;;      Params:         4       0       0       0       0       0       0
  7322 ;;      Locals:         3       0       0       0       0       0       0
  7323 ;;      Temps:          0       0       0       0       0       0       0
  7324 ;;      Totals:         7       0       0       0       0       0       0
  7325 ;;Total ram usage:        7 bytes
  7326 ;; Hardware stack levels used: 1
  7327 ;; Hardware stack levels required when called: 1
  7328 ;; This function calls:
  7329 ;;		Nothing
  7330 ;; This function is called by:
  7331 ;;		_dashboard
  7332 ;;		_store_event
  7333 ;;		_clear_log
  7334 ;;		_change_pass
  7335 ;;		_settime
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text45
  7340   001ECA                     __ptext45:
  7341                           	callstack 0
  7342   001ECA                     ___lwdiv:
  7343                           	callstack 28
  7344   001ECA  0E00               	movlw	0
  7345   001ECC  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  7346   001ECE  0E00               	movlw	0
  7347   001ED0  6E05               	movwf	___lwdiv@quotient^0,c
  7348   001ED2  5003               	movf	___lwdiv@divisor^0,w,c
  7349   001ED4  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7350   001ED6  B4D8               	btfsc	status,2,c
  7351   001ED8  EF70  F00F         	goto	u1961
  7352   001EDC  EF72  F00F         	goto	u1960
  7353   001EE0                     u1961:
  7354   001EE0  EF9A  F00F         	goto	l1234
  7355   001EE4                     u1960:
  7356   001EE4  0E01               	movlw	1
  7357   001EE6  6E07               	movwf	___lwdiv@counter^0,c
  7358   001EE8  EF7A  F00F         	goto	l2902
  7359   001EEC                     l2900:
  7360   001EEC  90D8               	bcf	status,0,c
  7361   001EEE  3603               	rlcf	___lwdiv@divisor^0,f,c
  7362   001EF0  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7363   001EF2  2A07               	incf	___lwdiv@counter^0,f,c
  7364   001EF4                     l2902:
  7365   001EF4  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  7366   001EF6  EF7F  F00F         	goto	u1971
  7367   001EFA  EF81  F00F         	goto	u1970
  7368   001EFE                     u1971:
  7369   001EFE  EF76  F00F         	goto	l2900
  7370   001F02                     u1970:
  7371   001F02                     l2904:
  7372   001F02  90D8               	bcf	status,0,c
  7373   001F04  3605               	rlcf	___lwdiv@quotient^0,f,c
  7374   001F06  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7375   001F08  5003               	movf	___lwdiv@divisor^0,w,c
  7376   001F0A  5C01               	subwf	___lwdiv@dividend^0,w,c
  7377   001F0C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  7378   001F0E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7379   001F10  A0D8               	btfss	status,0,c
  7380   001F12  EF8D  F00F         	goto	u1981
  7381   001F16  EF8F  F00F         	goto	u1980
  7382   001F1A                     u1981:
  7383   001F1A  EF94  F00F         	goto	l2912
  7384   001F1E                     u1980:
  7385   001F1E  5003               	movf	___lwdiv@divisor^0,w,c
  7386   001F20  5E01               	subwf	___lwdiv@dividend^0,f,c
  7387   001F22  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  7388   001F24  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7389   001F26  8005               	bsf	___lwdiv@quotient^0,0,c
  7390   001F28                     l2912:
  7391   001F28  90D8               	bcf	status,0,c
  7392   001F2A  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7393   001F2C  3203               	rrcf	___lwdiv@divisor^0,f,c
  7394   001F2E  2E07               	decfsz	___lwdiv@counter^0,f,c
  7395   001F30  EF81  F00F         	goto	l2904
  7396   001F34                     l1234:
  7397   001F34  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  7398   001F38  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7399   001F3C  0012               	return		;funcret
  7400   001F3E                     __end_of___lwdiv:
  7401                           	callstack 0
  7402                           
  7403 ;; *************** function ___xxtofl *****************
  7404 ;; Defined at:
  7405 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  sign            1    wreg     unsigned char 
  7408 ;;  val             4    7[COMRAM] long 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;  sign            1   15[COMRAM] unsigned char 
  7411 ;;  arg             4   17[COMRAM] unsigned long 
  7412 ;;  exp             1   16[COMRAM] unsigned char 
  7413 ;; Return value:  Size  Location     Type
  7414 ;;                  4    7[COMRAM] unsigned char 
  7415 ;; Registers used:
  7416 ;;		wreg, status,2, status,0
  7417 ;; Tracked objects:
  7418 ;;		On entry : 0/0
  7419 ;;		On exit  : 0/0
  7420 ;;		Unchanged: 0/0
  7421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7422 ;;      Params:         4       0       0       0       0       0       0
  7423 ;;      Locals:         6       0       0       0       0       0       0
  7424 ;;      Temps:          4       0       0       0       0       0       0
  7425 ;;      Totals:        14       0       0       0       0       0       0
  7426 ;;Total ram usage:       14 bytes
  7427 ;; Hardware stack levels used: 1
  7428 ;; Hardware stack levels required when called: 1
  7429 ;; This function calls:
  7430 ;;		Nothing
  7431 ;; This function is called by:
  7432 ;;		_main
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436                           	psect	text46
  7437   001124                     __ptext46:
  7438                           	callstack 0
  7439   001124                     ___xxtofl:
  7440                           	callstack 29
  7441                           
  7442                           ;incstack = 0
  7443                           ;___xxtofl@sign stored from wreg
  7444   001124  6E10               	movwf	___xxtofl@sign^0,c
  7445   001126  5010               	movf	___xxtofl@sign^0,w,c
  7446   001128  B4D8               	btfsc	status,2,c
  7447   00112A  EF99  F008         	goto	u3291
  7448   00112E  EF9B  F008         	goto	u3290
  7449   001132                     u3291:
  7450   001132  EFBD  F008         	goto	l1398
  7451   001136                     u3290:
  7452   001136  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  7453   001138  EFA2  F008         	goto	u3300
  7454   00113C  EFA0  F008         	goto	u3301
  7455   001140                     u3301:
  7456   001140  EFBD  F008         	goto	l1398
  7457   001144                     u3300:
  7458   001144  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  7459   001148  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  7460   00114C  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  7461   001150  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  7462   001154  1E0C               	comf	??___xxtofl^0,f,c
  7463   001156  1E0D               	comf	(??___xxtofl+1)^0,f,c
  7464   001158  1E0E               	comf	(??___xxtofl+2)^0,f,c
  7465   00115A  1E0F               	comf	(??___xxtofl+3)^0,f,c
  7466   00115C  2A0C               	incf	??___xxtofl^0,f,c
  7467   00115E  0E00               	movlw	0
  7468   001160  220D               	addwfc	(??___xxtofl+1)^0,f,c
  7469   001162  220E               	addwfc	(??___xxtofl+2)^0,f,c
  7470   001164  220F               	addwfc	(??___xxtofl+3)^0,f,c
  7471   001166  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  7472   00116A  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  7473   00116E  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  7474   001172  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  7475   001176  EFC5  F008         	goto	l3942
  7476   00117A                     l1398:
  7477   00117A  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  7478   00117E  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7479   001182  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7480   001186  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7481   00118A                     l3942:
  7482   00118A  5008               	movf	___xxtofl@val^0,w,c
  7483   00118C  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  7484   00118E  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  7485   001190  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  7486   001192  A4D8               	btfss	status,2,c
  7487   001194  EFCE  F008         	goto	u3311
  7488   001198  EFD0  F008         	goto	u3310
  7489   00119C                     u3311:
  7490   00119C  EFDA  F008         	goto	l3948
  7491   0011A0                     u3310:
  7492   0011A0  0E00               	movlw	0
  7493   0011A2  6E08               	movwf	?___xxtofl^0,c
  7494   0011A4  0E00               	movlw	0
  7495   0011A6  6E09               	movwf	(?___xxtofl+1)^0,c
  7496   0011A8  0E00               	movlw	0
  7497   0011AA  6E0A               	movwf	(?___xxtofl+2)^0,c
  7498   0011AC  0E00               	movlw	0
  7499   0011AE  6E0B               	movwf	(?___xxtofl+3)^0,c
  7500   0011B0  EF6B  F009         	goto	l1401
  7501   0011B4                     l3948:
  7502   0011B4  0E96               	movlw	150
  7503   0011B6  6E11               	movwf	___xxtofl@exp^0,c
  7504   0011B8  EFE4  F008         	goto	l3952
  7505   0011BC                     l3950:
  7506   0011BC  2A11               	incf	___xxtofl@exp^0,f,c
  7507   0011BE  90D8               	bcf	status,0,c
  7508   0011C0  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  7509   0011C2  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  7510   0011C4  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  7511   0011C6  3212               	rrcf	___xxtofl@arg^0,f,c
  7512   0011C8                     l3952:
  7513   0011C8  0E00               	movlw	0
  7514   0011CA  1412               	andwf	___xxtofl@arg^0,w,c
  7515   0011CC  6E0C               	movwf	??___xxtofl^0,c
  7516   0011CE  0E00               	movlw	0
  7517   0011D0  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  7518   0011D2  6E0D               	movwf	(??___xxtofl+1)^0,c
  7519   0011D4  0E00               	movlw	0
  7520   0011D6  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  7521   0011D8  6E0E               	movwf	(??___xxtofl+2)^0,c
  7522   0011DA  0EFE               	movlw	254
  7523   0011DC  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  7524   0011DE  6E0F               	movwf	(??___xxtofl+3)^0,c
  7525   0011E0  500C               	movf	??___xxtofl^0,w,c
  7526   0011E2  100D               	iorwf	(??___xxtofl+1)^0,w,c
  7527   0011E4  100E               	iorwf	(??___xxtofl+2)^0,w,c
  7528   0011E6  100F               	iorwf	(??___xxtofl+3)^0,w,c
  7529   0011E8  A4D8               	btfss	status,2,c
  7530   0011EA  EFF9  F008         	goto	u3321
  7531   0011EE  EFFB  F008         	goto	u3320
  7532   0011F2                     u3321:
  7533   0011F2  EFDE  F008         	goto	l3950
  7534   0011F6                     u3320:
  7535   0011F6  EF09  F009         	goto	l1405
  7536   0011FA                     l3954:
  7537   0011FA  2A11               	incf	___xxtofl@exp^0,f,c
  7538   0011FC  0E01               	movlw	1
  7539   0011FE  2612               	addwf	___xxtofl@arg^0,f,c
  7540   001200  0E00               	movlw	0
  7541   001202  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  7542   001204  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  7543   001206  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  7544   001208  90D8               	bcf	status,0,c
  7545   00120A  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  7546   00120C  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  7547   00120E  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  7548   001210  3212               	rrcf	___xxtofl@arg^0,f,c
  7549   001212                     l1405:
  7550   001212  0E00               	movlw	0
  7551   001214  1412               	andwf	___xxtofl@arg^0,w,c
  7552   001216  6E0C               	movwf	??___xxtofl^0,c
  7553   001218  0E00               	movlw	0
  7554   00121A  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  7555   00121C  6E0D               	movwf	(??___xxtofl+1)^0,c
  7556   00121E  0E00               	movlw	0
  7557   001220  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  7558   001222  6E0E               	movwf	(??___xxtofl+2)^0,c
  7559   001224  0EFF               	movlw	255
  7560   001226  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  7561   001228  6E0F               	movwf	(??___xxtofl+3)^0,c
  7562   00122A  500C               	movf	??___xxtofl^0,w,c
  7563   00122C  100D               	iorwf	(??___xxtofl+1)^0,w,c
  7564   00122E  100E               	iorwf	(??___xxtofl+2)^0,w,c
  7565   001230  100F               	iorwf	(??___xxtofl+3)^0,w,c
  7566   001232  A4D8               	btfss	status,2,c
  7567   001234  EF1E  F009         	goto	u3331
  7568   001238  EF20  F009         	goto	u3330
  7569   00123C                     u3331:
  7570   00123C  EFFD  F008         	goto	l3954
  7571   001240                     u3330:
  7572   001240  EF28  F009         	goto	l3962
  7573   001244                     l3960:
  7574   001244  0611               	decf	___xxtofl@exp^0,f,c
  7575   001246  90D8               	bcf	status,0,c
  7576   001248  3612               	rlcf	___xxtofl@arg^0,f,c
  7577   00124A  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  7578   00124C  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  7579   00124E  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  7580   001250                     l3962:
  7581   001250  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  7582   001252  EF2D  F009         	goto	u3341
  7583   001256  EF2F  F009         	goto	u3340
  7584   00125A                     u3341:
  7585   00125A  EF37  F009         	goto	l1412
  7586   00125E                     u3340:
  7587   00125E  0E02               	movlw	2
  7588   001260  6011               	cpfslt	___xxtofl@exp^0,c
  7589   001262  EF35  F009         	goto	u3351
  7590   001266  EF37  F009         	goto	u3350
  7591   00126A                     u3351:
  7592   00126A  EF22  F009         	goto	l3960
  7593   00126E                     u3350:
  7594   00126E                     l1412:
  7595   00126E  B011               	btfsc	___xxtofl@exp^0,0,c
  7596   001270  EF3C  F009         	goto	u3361
  7597   001274  EF3E  F009         	goto	u3360
  7598   001278                     u3361:
  7599   001278  EF3F  F009         	goto	l3968
  7600   00127C                     u3360:
  7601   00127C  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  7602   00127E                     l3968:
  7603   00127E  90D8               	bcf	status,0,c
  7604   001280  3211               	rrcf	___xxtofl@exp^0,f,c
  7605   001282  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  7606   001286  6A0D               	clrf	(??___xxtofl+1)^0,c
  7607   001288  6A0E               	clrf	(??___xxtofl+2)^0,c
  7608   00128A  6A0F               	clrf	(??___xxtofl+3)^0,c
  7609   00128C  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  7610   001290  6A0E               	clrf	(??___xxtofl+2)^0,c
  7611   001292  6A0D               	clrf	(??___xxtofl+1)^0,c
  7612   001294  6A0C               	clrf	??___xxtofl^0,c
  7613   001296  500C               	movf	??___xxtofl^0,w,c
  7614   001298  1212               	iorwf	___xxtofl@arg^0,f,c
  7615   00129A  500D               	movf	(??___xxtofl+1)^0,w,c
  7616   00129C  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  7617   00129E  500E               	movf	(??___xxtofl+2)^0,w,c
  7618   0012A0  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  7619   0012A2  500F               	movf	(??___xxtofl+3)^0,w,c
  7620   0012A4  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  7621   0012A6  5010               	movf	___xxtofl@sign^0,w,c
  7622   0012A8  B4D8               	btfsc	status,2,c
  7623   0012AA  EF59  F009         	goto	u3371
  7624   0012AE  EF5B  F009         	goto	u3370
  7625   0012B2                     u3371:
  7626   0012B2  EF63  F009         	goto	l3978
  7627   0012B6                     u3370:
  7628   0012B6  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  7629   0012B8  EF62  F009         	goto	u3380
  7630   0012BC  EF60  F009         	goto	u3381
  7631   0012C0                     u3381:
  7632   0012C0  EF63  F009         	goto	l3978
  7633   0012C4                     u3380:
  7634   0012C4  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  7635   0012C6                     l3978:
  7636   0012C6  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  7637   0012CA  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  7638   0012CE  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  7639   0012D2  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  7640   0012D6                     l1401:
  7641   0012D6  0012               	return		;funcret
  7642   0012D8                     __end_of___xxtofl:
  7643                           	callstack 0
  7644                           
  7645 ;; *************** function ___fltol *****************
  7646 ;; Defined at:
  7647 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  7648 ;; Parameters:    Size  Location     Type
  7649 ;;  f1              4   46[COMRAM] unsigned char 
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;  exp1            1   55[COMRAM] unsigned char 
  7652 ;;  sign1           1   54[COMRAM] unsigned char 
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  4   46[COMRAM] long 
  7655 ;; Registers used:
  7656 ;;		wreg, status,2, status,0
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7662 ;;      Params:         4       0       0       0       0       0       0
  7663 ;;      Locals:         2       0       0       0       0       0       0
  7664 ;;      Temps:          4       0       0       0       0       0       0
  7665 ;;      Totals:        10       0       0       0       0       0       0
  7666 ;;Total ram usage:       10 bytes
  7667 ;; Hardware stack levels used: 1
  7668 ;; Hardware stack levels required when called: 1
  7669 ;; This function calls:
  7670 ;;		Nothing
  7671 ;; This function is called by:
  7672 ;;		_main
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text47
  7677   00177C                     __ptext47:
  7678                           	callstack 0
  7679   00177C                     ___fltol:
  7680                           	callstack 29
  7681   00177C  3431               	rlcf	(___fltol@f1+2)^0,w,c
  7682   00177E  3432               	rlcf	(___fltol@f1+3)^0,w,c
  7683   001780  6E38               	movwf	___fltol@exp1^0,c
  7684   001782  5038               	movf	___fltol@exp1^0,w,c
  7685   001784  A4D8               	btfss	status,2,c
  7686   001786  EFC7  F00B         	goto	u3221
  7687   00178A  EFC9  F00B         	goto	u3220
  7688   00178E                     u3221:
  7689   00178E  EFD3  F00B         	goto	l3898
  7690   001792                     u3220:
  7691   001792                     l3894:
  7692   001792  0E00               	movlw	0
  7693   001794  6E2F               	movwf	?___fltol^0,c
  7694   001796  0E00               	movlw	0
  7695   001798  6E30               	movwf	(?___fltol+1)^0,c
  7696   00179A  0E00               	movlw	0
  7697   00179C  6E31               	movwf	(?___fltol+2)^0,c
  7698   00179E  0E00               	movlw	0
  7699   0017A0  6E32               	movwf	(?___fltol+3)^0,c
  7700   0017A2  EF40  F00C         	goto	l1040
  7701   0017A6                     l3898:
  7702   0017A6  C02F  F033         	movff	___fltol@f1,??___fltol
  7703   0017AA  C030  F034         	movff	___fltol@f1+1,??___fltol+1
  7704   0017AE  C031  F035         	movff	___fltol@f1+2,??___fltol+2
  7705   0017B2  C032  F036         	movff	___fltol@f1+3,??___fltol+3
  7706   0017B6  0E20               	movlw	32
  7707   0017B8  EFE3  F00B         	goto	u3230
  7708   0017BC                     u3235:
  7709   0017BC  90D8               	bcf	status,0,c
  7710   0017BE  3236               	rrcf	(??___fltol+3)^0,f,c
  7711   0017C0  3235               	rrcf	(??___fltol+2)^0,f,c
  7712   0017C2  3234               	rrcf	(??___fltol+1)^0,f,c
  7713   0017C4  3233               	rrcf	??___fltol^0,f,c
  7714   0017C6                     u3230:
  7715   0017C6  2EE8               	decfsz	wreg,f,c
  7716   0017C8  EFDE  F00B         	goto	u3235
  7717   0017CC  5033               	movf	??___fltol^0,w,c
  7718   0017CE  6E37               	movwf	___fltol@sign1^0,c
  7719   0017D0  8E31               	bsf	(___fltol@f1+2)^0,7,c
  7720   0017D2  0EFF               	movlw	255
  7721   0017D4  162F               	andwf	___fltol@f1^0,f,c
  7722   0017D6  0EFF               	movlw	255
  7723   0017D8  1630               	andwf	(___fltol@f1+1)^0,f,c
  7724   0017DA  0EFF               	movlw	255
  7725   0017DC  1631               	andwf	(___fltol@f1+2)^0,f,c
  7726   0017DE  0E00               	movlw	0
  7727   0017E0  1632               	andwf	(___fltol@f1+3)^0,f,c
  7728   0017E2  0E96               	movlw	150
  7729   0017E4  5E38               	subwf	___fltol@exp1^0,f,c
  7730   0017E6  BE38               	btfsc	___fltol@exp1^0,7,c
  7731   0017E8  EFFA  F00B         	goto	u3240
  7732   0017EC  EFF8  F00B         	goto	u3241
  7733   0017F0                     u3241:
  7734   0017F0  EF10  F00C         	goto	l3918
  7735   0017F4                     u3240:
  7736   0017F4  5038               	movf	___fltol@exp1^0,w,c
  7737   0017F6  0A80               	xorlw	128
  7738   0017F8  0F97               	addlw	151
  7739   0017FA  B0D8               	btfsc	status,0,c
  7740   0017FC  EF02  F00C         	goto	u3251
  7741   001800  EF04  F00C         	goto	u3250
  7742   001804                     u3251:
  7743   001804  EF06  F00C         	goto	l3914
  7744   001808                     u3250:
  7745   001808  EFC9  F00B         	goto	l3894
  7746   00180C                     l3914:
  7747   00180C  90D8               	bcf	status,0,c
  7748   00180E  3232               	rrcf	(___fltol@f1+3)^0,f,c
  7749   001810  3231               	rrcf	(___fltol@f1+2)^0,f,c
  7750   001812  3230               	rrcf	(___fltol@f1+1)^0,f,c
  7751   001814  322F               	rrcf	___fltol@f1^0,f,c
  7752   001816  3E38               	incfsz	___fltol@exp1^0,f,c
  7753   001818  EF06  F00C         	goto	l3914
  7754   00181C  EF28  F00C         	goto	l3928
  7755   001820                     l3918:
  7756   001820  0E1F               	movlw	31
  7757   001822  6438               	cpfsgt	___fltol@exp1^0,c
  7758   001824  EF16  F00C         	goto	u3261
  7759   001828  EF18  F00C         	goto	u3260
  7760   00182C                     u3261:
  7761   00182C  EF20  F00C         	goto	l3926
  7762   001830                     u3260:
  7763   001830  EFC9  F00B         	goto	l3894
  7764   001834                     l3924:
  7765   001834  90D8               	bcf	status,0,c
  7766   001836  362F               	rlcf	___fltol@f1^0,f,c
  7767   001838  3630               	rlcf	(___fltol@f1+1)^0,f,c
  7768   00183A  3631               	rlcf	(___fltol@f1+2)^0,f,c
  7769   00183C  3632               	rlcf	(___fltol@f1+3)^0,f,c
  7770   00183E  0638               	decf	___fltol@exp1^0,f,c
  7771   001840                     l3926:
  7772   001840  5038               	movf	___fltol@exp1^0,w,c
  7773   001842  A4D8               	btfss	status,2,c
  7774   001844  EF26  F00C         	goto	u3271
  7775   001848  EF28  F00C         	goto	u3270
  7776   00184C                     u3271:
  7777   00184C  EF1A  F00C         	goto	l3924
  7778   001850                     u3270:
  7779   001850                     l3928:
  7780   001850  5037               	movf	___fltol@sign1^0,w,c
  7781   001852  B4D8               	btfsc	status,2,c
  7782   001854  EF2E  F00C         	goto	u3281
  7783   001858  EF30  F00C         	goto	u3280
  7784   00185C                     u3281:
  7785   00185C  EF38  F00C         	goto	l3932
  7786   001860                     u3280:
  7787   001860  1E32               	comf	(___fltol@f1+3)^0,f,c
  7788   001862  1E31               	comf	(___fltol@f1+2)^0,f,c
  7789   001864  1E30               	comf	(___fltol@f1+1)^0,f,c
  7790   001866  6C2F               	negf	___fltol@f1^0,c
  7791   001868  0E00               	movlw	0
  7792   00186A  2230               	addwfc	(___fltol@f1+1)^0,f,c
  7793   00186C  2231               	addwfc	(___fltol@f1+2)^0,f,c
  7794   00186E  2232               	addwfc	(___fltol@f1+3)^0,f,c
  7795   001870                     l3932:
  7796   001870  C02F  F02F         	movff	___fltol@f1,?___fltol
  7797   001874  C030  F030         	movff	___fltol@f1+1,?___fltol+1
  7798   001878  C031  F031         	movff	___fltol@f1+2,?___fltol+2
  7799   00187C  C032  F032         	movff	___fltol@f1+3,?___fltol+3
  7800   001880                     l1040:
  7801   001880  0012               	return		;funcret
  7802   001882                     __end_of___fltol:
  7803                           	callstack 0
  7804                           
  7805 ;; *************** function ___fldiv *****************
  7806 ;; Defined at:
  7807 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  b               4   21[COMRAM] long 
  7810 ;;  a               4   25[COMRAM] long 
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  grs             4   40[COMRAM] unsigned long 
  7813 ;;  rem             4   33[COMRAM] unsigned long 
  7814 ;;  new_exp         2   38[COMRAM] short 
  7815 ;;  aexp            1   45[COMRAM] unsigned char 
  7816 ;;  bexp            1   44[COMRAM] unsigned char 
  7817 ;;  sign            1   37[COMRAM] unsigned char 
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  4   21[COMRAM] unsigned char 
  7820 ;; Registers used:
  7821 ;;		wreg, status,2, status,0
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7827 ;;      Params:         8       0       0       0       0       0       0
  7828 ;;      Locals:        13       0       0       0       0       0       0
  7829 ;;      Temps:          4       0       0       0       0       0       0
  7830 ;;      Totals:        25       0       0       0       0       0       0
  7831 ;;Total ram usage:       25 bytes
  7832 ;; Hardware stack levels used: 1
  7833 ;; Hardware stack levels required when called: 1
  7834 ;; This function calls:
  7835 ;;		Nothing
  7836 ;; This function is called by:
  7837 ;;		_main
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           	psect	text48
  7842   000012                     __ptext48:
  7843                           	callstack 0
  7844   000012                     ___fldiv:
  7845                           	callstack 29
  7846   000012  5019               	movf	(___fldiv@b+3)^0,w,c
  7847   000014  0B80               	andlw	128
  7848   000016  6E26               	movwf	___fldiv@sign^0,c
  7849   000018  5019               	movf	(___fldiv@b+3)^0,w,c
  7850   00001A  2419               	addwf	(___fldiv@b+3)^0,w,c
  7851   00001C  6E2D               	movwf	___fldiv@bexp^0,c
  7852   00001E  AE18               	btfss	(___fldiv@b+2)^0,7,c
  7853   000020  EF14  F000         	goto	u2991
  7854   000024  EF16  F000         	goto	u2990
  7855   000028                     u2991:
  7856   000028  EF17  F000         	goto	l3760
  7857   00002C                     u2990:
  7858   00002C  802D               	bsf	___fldiv@bexp^0,0,c
  7859   00002E                     l3760:
  7860   00002E  502D               	movf	___fldiv@bexp^0,w,c
  7861   000030  B4D8               	btfsc	status,2,c
  7862   000032  EF1D  F000         	goto	u3001
  7863   000036  EF1F  F000         	goto	u3000
  7864   00003A                     u3001:
  7865   00003A  EF34  F000         	goto	l3770
  7866   00003E                     u3000:
  7867   00003E  282D               	incf	___fldiv@bexp^0,w,c
  7868   000040  A4D8               	btfss	status,2,c
  7869   000042  EF25  F000         	goto	u3011
  7870   000046  EF27  F000         	goto	u3010
  7871   00004A                     u3011:
  7872   00004A  EF2F  F000         	goto	l3766
  7873   00004E                     u3010:
  7874   00004E  0E00               	movlw	0
  7875   000050  6E16               	movwf	___fldiv@b^0,c
  7876   000052  0E00               	movlw	0
  7877   000054  6E17               	movwf	(___fldiv@b+1)^0,c
  7878   000056  0E00               	movlw	0
  7879   000058  6E18               	movwf	(___fldiv@b+2)^0,c
  7880   00005A  0E00               	movlw	0
  7881   00005C  6E19               	movwf	(___fldiv@b+3)^0,c
  7882   00005E                     l3766:
  7883   00005E  8E18               	bsf	(___fldiv@b+2)^0,7,c
  7884   000060  0E00               	movlw	0
  7885   000062  6E19               	movwf	(___fldiv@b+3)^0,c
  7886   000064  EF3C  F000         	goto	l3772
  7887   000068                     l3770:
  7888   000068  0E00               	movlw	0
  7889   00006A  6E16               	movwf	___fldiv@b^0,c
  7890   00006C  0E00               	movlw	0
  7891   00006E  6E17               	movwf	(___fldiv@b+1)^0,c
  7892   000070  0E00               	movlw	0
  7893   000072  6E18               	movwf	(___fldiv@b+2)^0,c
  7894   000074  0E00               	movlw	0
  7895   000076  6E19               	movwf	(___fldiv@b+3)^0,c
  7896   000078                     l3772:
  7897   000078  501D               	movf	(___fldiv@a+3)^0,w,c
  7898   00007A  0B80               	andlw	128
  7899   00007C  1A26               	xorwf	___fldiv@sign^0,f,c
  7900   00007E  501D               	movf	(___fldiv@a+3)^0,w,c
  7901   000080  241D               	addwf	(___fldiv@a+3)^0,w,c
  7902   000082  6E2E               	movwf	___fldiv@aexp^0,c
  7903   000084  AE1C               	btfss	(___fldiv@a+2)^0,7,c
  7904   000086  EF47  F000         	goto	u3021
  7905   00008A  EF49  F000         	goto	u3020
  7906   00008E                     u3021:
  7907   00008E  EF4A  F000         	goto	l3780
  7908   000092                     u3020:
  7909   000092  802E               	bsf	___fldiv@aexp^0,0,c
  7910   000094                     l3780:
  7911   000094  502E               	movf	___fldiv@aexp^0,w,c
  7912   000096  B4D8               	btfsc	status,2,c
  7913   000098  EF50  F000         	goto	u3031
  7914   00009C  EF52  F000         	goto	u3030
  7915   0000A0                     u3031:
  7916   0000A0  EF67  F000         	goto	l3790
  7917   0000A4                     u3030:
  7918   0000A4  282E               	incf	___fldiv@aexp^0,w,c
  7919   0000A6  A4D8               	btfss	status,2,c
  7920   0000A8  EF58  F000         	goto	u3041
  7921   0000AC  EF5A  F000         	goto	u3040
  7922   0000B0                     u3041:
  7923   0000B0  EF62  F000         	goto	l3786
  7924   0000B4                     u3040:
  7925   0000B4  0E00               	movlw	0
  7926   0000B6  6E1A               	movwf	___fldiv@a^0,c
  7927   0000B8  0E00               	movlw	0
  7928   0000BA  6E1B               	movwf	(___fldiv@a+1)^0,c
  7929   0000BC  0E00               	movlw	0
  7930   0000BE  6E1C               	movwf	(___fldiv@a+2)^0,c
  7931   0000C0  0E00               	movlw	0
  7932   0000C2  6E1D               	movwf	(___fldiv@a+3)^0,c
  7933   0000C4                     l3786:
  7934   0000C4  8E1C               	bsf	(___fldiv@a+2)^0,7,c
  7935   0000C6  0E00               	movlw	0
  7936   0000C8  6E1D               	movwf	(___fldiv@a+3)^0,c
  7937   0000CA  EF6F  F000         	goto	l3792
  7938   0000CE                     l3790:
  7939   0000CE  0E00               	movlw	0
  7940   0000D0  6E1A               	movwf	___fldiv@a^0,c
  7941   0000D2  0E00               	movlw	0
  7942   0000D4  6E1B               	movwf	(___fldiv@a+1)^0,c
  7943   0000D6  0E00               	movlw	0
  7944   0000D8  6E1C               	movwf	(___fldiv@a+2)^0,c
  7945   0000DA  0E00               	movlw	0
  7946   0000DC  6E1D               	movwf	(___fldiv@a+3)^0,c
  7947   0000DE                     l3792:
  7948   0000DE  501A               	movf	___fldiv@a^0,w,c
  7949   0000E0  101B               	iorwf	(___fldiv@a+1)^0,w,c
  7950   0000E2  101C               	iorwf	(___fldiv@a+2)^0,w,c
  7951   0000E4  101D               	iorwf	(___fldiv@a+3)^0,w,c
  7952   0000E6  A4D8               	btfss	status,2,c
  7953   0000E8  EF78  F000         	goto	u3051
  7954   0000EC  EF7A  F000         	goto	u3050
  7955   0000F0                     u3051:
  7956   0000F0  EF92  F000         	goto	l3804
  7957   0000F4                     u3050:
  7958   0000F4  0E00               	movlw	0
  7959   0000F6  6E16               	movwf	___fldiv@b^0,c
  7960   0000F8  0E00               	movlw	0
  7961   0000FA  6E17               	movwf	(___fldiv@b+1)^0,c
  7962   0000FC  0E00               	movlw	0
  7963   0000FE  6E18               	movwf	(___fldiv@b+2)^0,c
  7964   000100  0E00               	movlw	0
  7965   000102  6E19               	movwf	(___fldiv@b+3)^0,c
  7966   000104  0E80               	movlw	128
  7967   000106  1218               	iorwf	(___fldiv@b+2)^0,f,c
  7968   000108  0E7F               	movlw	127
  7969   00010A  1219               	iorwf	(___fldiv@b+3)^0,f,c
  7970   00010C                     l3798:
  7971   00010C  5026               	movf	___fldiv@sign^0,w,c
  7972   00010E  1219               	iorwf	(___fldiv@b+3)^0,f,c
  7973   000110  C016  F016         	movff	___fldiv@b,?___fldiv
  7974   000114  C017  F017         	movff	___fldiv@b+1,?___fldiv+1
  7975   000118  C018  F018         	movff	___fldiv@b+2,?___fldiv+2
  7976   00011C  C019  F019         	movff	___fldiv@b+3,?___fldiv+3
  7977   000120  EFD5  F001         	goto	l1325
  7978   000124                     l3804:
  7979   000124  502D               	movf	___fldiv@bexp^0,w,c
  7980   000126  A4D8               	btfss	status,2,c
  7981   000128  EF98  F000         	goto	u3061
  7982   00012C  EF9A  F000         	goto	u3060
  7983   000130                     u3061:
  7984   000130  EFA4  F000         	goto	l3812
  7985   000134                     u3060:
  7986   000134  0E00               	movlw	0
  7987   000136  6E16               	movwf	?___fldiv^0,c
  7988   000138  0E00               	movlw	0
  7989   00013A  6E17               	movwf	(?___fldiv+1)^0,c
  7990   00013C  0E00               	movlw	0
  7991   00013E  6E18               	movwf	(?___fldiv+2)^0,c
  7992   000140  0E00               	movlw	0
  7993   000142  6E19               	movwf	(?___fldiv+3)^0,c
  7994   000144  EFD5  F001         	goto	l1325
  7995   000148                     l3812:
  7996   000148  502E               	movf	___fldiv@aexp^0,w,c
  7997   00014A  C02D  F01E         	movff	___fldiv@bexp,??___fldiv
  7998   00014E  6A1F               	clrf	(??___fldiv+1)^0,c
  7999   000150  5E1E               	subwf	??___fldiv^0,f,c
  8000   000152  0E00               	movlw	0
  8001   000154  5A1F               	subwfb	(??___fldiv+1)^0,f,c
  8002   000156  0E7F               	movlw	127
  8003   000158  241E               	addwf	??___fldiv^0,w,c
  8004   00015A  6E27               	movwf	___fldiv@new_exp^0,c
  8005   00015C  0E00               	movlw	0
  8006   00015E  201F               	addwfc	(??___fldiv+1)^0,w,c
  8007   000160  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  8008   000162  C016  F022         	movff	___fldiv@b,___fldiv@rem
  8009   000166  C017  F023         	movff	___fldiv@b+1,___fldiv@rem+1
  8010   00016A  C018  F024         	movff	___fldiv@b+2,___fldiv@rem+2
  8011   00016E  C019  F025         	movff	___fldiv@b+3,___fldiv@rem+3
  8012   000172  0E00               	movlw	0
  8013   000174  6E16               	movwf	___fldiv@b^0,c
  8014   000176  0E00               	movlw	0
  8015   000178  6E17               	movwf	(___fldiv@b+1)^0,c
  8016   00017A  0E00               	movlw	0
  8017   00017C  6E18               	movwf	(___fldiv@b+2)^0,c
  8018   00017E  0E00               	movlw	0
  8019   000180  6E19               	movwf	(___fldiv@b+3)^0,c
  8020   000182  0E00               	movlw	0
  8021   000184  6E29               	movwf	___fldiv@grs^0,c
  8022   000186  0E00               	movlw	0
  8023   000188  6E2A               	movwf	(___fldiv@grs+1)^0,c
  8024   00018A  0E00               	movlw	0
  8025   00018C  6E2B               	movwf	(___fldiv@grs+2)^0,c
  8026   00018E  0E00               	movlw	0
  8027   000190  6E2C               	movwf	(___fldiv@grs+3)^0,c
  8028   000192  0E00               	movlw	0
  8029   000194  6E2E               	movwf	___fldiv@aexp^0,c
  8030   000196  EF05  F001         	goto	l1327
  8031   00019A                     l3822:
  8032   00019A  502E               	movf	___fldiv@aexp^0,w,c
  8033   00019C  B4D8               	btfsc	status,2,c
  8034   00019E  EFD3  F000         	goto	u3071
  8035   0001A2  EFD5  F000         	goto	u3070
  8036   0001A6                     u3071:
  8037   0001A6  EFEC  F000         	goto	l3830
  8038   0001AA                     u3070:
  8039   0001AA  90D8               	bcf	status,0,c
  8040   0001AC  3622               	rlcf	___fldiv@rem^0,f,c
  8041   0001AE  3623               	rlcf	(___fldiv@rem+1)^0,f,c
  8042   0001B0  3624               	rlcf	(___fldiv@rem+2)^0,f,c
  8043   0001B2  3625               	rlcf	(___fldiv@rem+3)^0,f,c
  8044   0001B4  90D8               	bcf	status,0,c
  8045   0001B6  3616               	rlcf	___fldiv@b^0,f,c
  8046   0001B8  3617               	rlcf	(___fldiv@b+1)^0,f,c
  8047   0001BA  3618               	rlcf	(___fldiv@b+2)^0,f,c
  8048   0001BC  3619               	rlcf	(___fldiv@b+3)^0,f,c
  8049   0001BE  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  8050   0001C0  EFE4  F000         	goto	u3081
  8051   0001C4  EFE6  F000         	goto	u3080
  8052   0001C8                     u3081:
  8053   0001C8  EFE7  F000         	goto	l1330
  8054   0001CC                     u3080:
  8055   0001CC  8016               	bsf	___fldiv@b^0,0,c
  8056   0001CE                     l1330:
  8057   0001CE  90D8               	bcf	status,0,c
  8058   0001D0  3629               	rlcf	___fldiv@grs^0,f,c
  8059   0001D2  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  8060   0001D4  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  8061   0001D6  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  8062   0001D8                     l3830:
  8063   0001D8  501A               	movf	___fldiv@a^0,w,c
  8064   0001DA  5C22               	subwf	___fldiv@rem^0,w,c
  8065   0001DC  501B               	movf	(___fldiv@a+1)^0,w,c
  8066   0001DE  5823               	subwfb	(___fldiv@rem+1)^0,w,c
  8067   0001E0  501C               	movf	(___fldiv@a+2)^0,w,c
  8068   0001E2  5824               	subwfb	(___fldiv@rem+2)^0,w,c
  8069   0001E4  501D               	movf	(___fldiv@a+3)^0,w,c
  8070   0001E6  5825               	subwfb	(___fldiv@rem+3)^0,w,c
  8071   0001E8  A0D8               	btfss	status,0,c
  8072   0001EA  EFF9  F000         	goto	u3091
  8073   0001EE  EFFB  F000         	goto	u3090
  8074   0001F2                     u3091:
  8075   0001F2  EF04  F001         	goto	l3836
  8076   0001F6                     u3090:
  8077   0001F6  8C2C               	bsf	(___fldiv@grs+3)^0,6,c
  8078   0001F8  501A               	movf	___fldiv@a^0,w,c
  8079   0001FA  5E22               	subwf	___fldiv@rem^0,f,c
  8080   0001FC  501B               	movf	(___fldiv@a+1)^0,w,c
  8081   0001FE  5A23               	subwfb	(___fldiv@rem+1)^0,f,c
  8082   000200  501C               	movf	(___fldiv@a+2)^0,w,c
  8083   000202  5A24               	subwfb	(___fldiv@rem+2)^0,f,c
  8084   000204  501D               	movf	(___fldiv@a+3)^0,w,c
  8085   000206  5A25               	subwfb	(___fldiv@rem+3)^0,f,c
  8086   000208                     l3836:
  8087   000208  2A2E               	incf	___fldiv@aexp^0,f,c
  8088   00020A                     l1327:
  8089   00020A  0E19               	movlw	25
  8090   00020C  642E               	cpfsgt	___fldiv@aexp^0,c
  8091   00020E  EF0B  F001         	goto	u3101
  8092   000212  EF0D  F001         	goto	u3100
  8093   000216                     u3101:
  8094   000216  EFCD  F000         	goto	l3822
  8095   00021A                     u3100:
  8096   00021A  5022               	movf	___fldiv@rem^0,w,c
  8097   00021C  1023               	iorwf	(___fldiv@rem+1)^0,w,c
  8098   00021E  1024               	iorwf	(___fldiv@rem+2)^0,w,c
  8099   000220  1025               	iorwf	(___fldiv@rem+3)^0,w,c
  8100   000222  B4D8               	btfsc	status,2,c
  8101   000224  EF16  F001         	goto	u3111
  8102   000228  EF18  F001         	goto	u3110
  8103   00022C                     u3111:
  8104   00022C  EF30  F001         	goto	l3848
  8105   000230                     u3110:
  8106   000230  8029               	bsf	___fldiv@grs^0,0,c
  8107   000232  EF30  F001         	goto	l3848
  8108   000236                     l3842:
  8109   000236  90D8               	bcf	status,0,c
  8110   000238  3616               	rlcf	___fldiv@b^0,f,c
  8111   00023A  3617               	rlcf	(___fldiv@b+1)^0,f,c
  8112   00023C  3618               	rlcf	(___fldiv@b+2)^0,f,c
  8113   00023E  3619               	rlcf	(___fldiv@b+3)^0,f,c
  8114   000240  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  8115   000242  EF25  F001         	goto	u3121
  8116   000246  EF27  F001         	goto	u3120
  8117   00024A                     u3121:
  8118   00024A  EF28  F001         	goto	l1336
  8119   00024E                     u3120:
  8120   00024E  8016               	bsf	___fldiv@b^0,0,c
  8121   000250                     l1336:
  8122   000250  90D8               	bcf	status,0,c
  8123   000252  3629               	rlcf	___fldiv@grs^0,f,c
  8124   000254  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  8125   000256  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  8126   000258  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  8127   00025A  0627               	decf	___fldiv@new_exp^0,f,c
  8128   00025C  A0D8               	btfss	status,0,c
  8129   00025E  0628               	decf	(___fldiv@new_exp+1)^0,f,c
  8130   000260                     l3848:
  8131   000260  AE18               	btfss	(___fldiv@b+2)^0,7,c
  8132   000262  EF35  F001         	goto	u3131
  8133   000266  EF37  F001         	goto	u3130
  8134   00026A                     u3131:
  8135   00026A  EF1B  F001         	goto	l3842
  8136   00026E                     u3130:
  8137   00026E  0E00               	movlw	0
  8138   000270  6E2E               	movwf	___fldiv@aexp^0,c
  8139   000272  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  8140   000274  EF3E  F001         	goto	u3141
  8141   000278  EF40  F001         	goto	u3140
  8142   00027C                     u3141:
  8143   00027C  EF64  F001         	goto	l1338
  8144   000280                     u3140:
  8145   000280  0EFF               	movlw	255
  8146   000282  1429               	andwf	___fldiv@grs^0,w,c
  8147   000284  6E1E               	movwf	??___fldiv^0,c
  8148   000286  0EFF               	movlw	255
  8149   000288  142A               	andwf	(___fldiv@grs+1)^0,w,c
  8150   00028A  6E1F               	movwf	(??___fldiv+1)^0,c
  8151   00028C  0EFF               	movlw	255
  8152   00028E  142B               	andwf	(___fldiv@grs+2)^0,w,c
  8153   000290  6E20               	movwf	(??___fldiv+2)^0,c
  8154   000292  0E7F               	movlw	127
  8155   000294  142C               	andwf	(___fldiv@grs+3)^0,w,c
  8156   000296  6E21               	movwf	(??___fldiv+3)^0,c
  8157   000298  501E               	movf	??___fldiv^0,w,c
  8158   00029A  101F               	iorwf	(??___fldiv+1)^0,w,c
  8159   00029C  1020               	iorwf	(??___fldiv+2)^0,w,c
  8160   00029E  1021               	iorwf	(??___fldiv+3)^0,w,c
  8161   0002A0  B4D8               	btfsc	status,2,c
  8162   0002A2  EF55  F001         	goto	u3151
  8163   0002A6  EF57  F001         	goto	u3150
  8164   0002AA                     u3151:
  8165   0002AA  EF5B  F001         	goto	l1339
  8166   0002AE                     u3150:
  8167   0002AE                     l3856:
  8168   0002AE  0E01               	movlw	1
  8169   0002B0  6E2E               	movwf	___fldiv@aexp^0,c
  8170   0002B2  EF64  F001         	goto	l1338
  8171   0002B6                     l1339:
  8172   0002B6  A016               	btfss	___fldiv@b^0,0,c
  8173   0002B8  EF60  F001         	goto	u3161
  8174   0002BC  EF62  F001         	goto	u3160
  8175   0002C0                     u3161:
  8176   0002C0  EF64  F001         	goto	l1338
  8177   0002C4                     u3160:
  8178   0002C4  EF57  F001         	goto	l3856
  8179   0002C8                     l1338:
  8180   0002C8  502E               	movf	___fldiv@aexp^0,w,c
  8181   0002CA  B4D8               	btfsc	status,2,c
  8182   0002CC  EF6A  F001         	goto	u3171
  8183   0002D0  EF6C  F001         	goto	u3170
  8184   0002D4                     u3171:
  8185   0002D4  EF90  F001         	goto	l3868
  8186   0002D8                     u3170:
  8187   0002D8  0E01               	movlw	1
  8188   0002DA  2616               	addwf	___fldiv@b^0,f,c
  8189   0002DC  0E00               	movlw	0
  8190   0002DE  2217               	addwfc	(___fldiv@b+1)^0,f,c
  8191   0002E0  2218               	addwfc	(___fldiv@b+2)^0,f,c
  8192   0002E2  2219               	addwfc	(___fldiv@b+3)^0,f,c
  8193   0002E4  A019               	btfss	(___fldiv@b+3)^0,0,c
  8194   0002E6  EF77  F001         	goto	u3181
  8195   0002EA  EF79  F001         	goto	u3180
  8196   0002EE                     u3181:
  8197   0002EE  EF90  F001         	goto	l3868
  8198   0002F2                     u3180:
  8199   0002F2  C016  F01E         	movff	___fldiv@b,??___fldiv
  8200   0002F6  C017  F01F         	movff	___fldiv@b+1,??___fldiv+1
  8201   0002FA  C018  F020         	movff	___fldiv@b+2,??___fldiv+2
  8202   0002FE  C019  F021         	movff	___fldiv@b+3,??___fldiv+3
  8203   000302  3421               	rlcf	(??___fldiv+3)^0,w,c
  8204   000304  3221               	rrcf	(??___fldiv+3)^0,f,c
  8205   000306  3220               	rrcf	(??___fldiv+2)^0,f,c
  8206   000308  321F               	rrcf	(??___fldiv+1)^0,f,c
  8207   00030A  321E               	rrcf	??___fldiv^0,f,c
  8208   00030C  C01E  F016         	movff	??___fldiv,___fldiv@b
  8209   000310  C01F  F017         	movff	??___fldiv+1,___fldiv@b+1
  8210   000314  C020  F018         	movff	??___fldiv+2,___fldiv@b+2
  8211   000318  C021  F019         	movff	??___fldiv+3,___fldiv@b+3
  8212   00031C  4A27               	infsnz	___fldiv@new_exp^0,f,c
  8213   00031E  2A28               	incf	(___fldiv@new_exp+1)^0,f,c
  8214   000320                     l3868:
  8215   000320  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8216   000322  EF9B  F001         	goto	u3191
  8217   000326  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  8218   000328  E108               	bnz	u3190
  8219   00032A  2827               	incf	___fldiv@new_exp^0,w,c
  8220   00032C  A0D8               	btfss	status,0,c
  8221   00032E  EF9B  F001         	goto	u3191
  8222   000332  EF9D  F001         	goto	u3190
  8223   000336                     u3191:
  8224   000336  EFA8  F001         	goto	l3872
  8225   00033A                     u3190:
  8226   00033A  0E00               	movlw	0
  8227   00033C  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  8228   00033E  6827               	setf	___fldiv@new_exp^0,c
  8229   000340  0E00               	movlw	0
  8230   000342  6E16               	movwf	___fldiv@b^0,c
  8231   000344  0E00               	movlw	0
  8232   000346  6E17               	movwf	(___fldiv@b+1)^0,c
  8233   000348  0E00               	movlw	0
  8234   00034A  6E18               	movwf	(___fldiv@b+2)^0,c
  8235   00034C  0E00               	movlw	0
  8236   00034E  6E19               	movwf	(___fldiv@b+3)^0,c
  8237   000350                     l3872:
  8238   000350  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8239   000352  EFB5  F001         	goto	u3200
  8240   000356  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  8241   000358  E106               	bnz	u3201
  8242   00035A  0427               	decf	___fldiv@new_exp^0,w,c
  8243   00035C  B0D8               	btfsc	status,0,c
  8244   00035E  EFB3  F001         	goto	u3201
  8245   000362  EFB5  F001         	goto	u3200
  8246   000366                     u3201:
  8247   000366  EFC3  F001         	goto	l3876
  8248   00036A                     u3200:
  8249   00036A  0E00               	movlw	0
  8250   00036C  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  8251   00036E  0E00               	movlw	0
  8252   000370  6E27               	movwf	___fldiv@new_exp^0,c
  8253   000372  0E00               	movlw	0
  8254   000374  6E16               	movwf	___fldiv@b^0,c
  8255   000376  0E00               	movlw	0
  8256   000378  6E17               	movwf	(___fldiv@b+1)^0,c
  8257   00037A  0E00               	movlw	0
  8258   00037C  6E18               	movwf	(___fldiv@b+2)^0,c
  8259   00037E  0E00               	movlw	0
  8260   000380  6E19               	movwf	(___fldiv@b+3)^0,c
  8261   000382  0E00               	movlw	0
  8262   000384  6E26               	movwf	___fldiv@sign^0,c
  8263   000386                     l3876:
  8264   000386  C027  F02D         	movff	___fldiv@new_exp,___fldiv@bexp
  8265   00038A  A02D               	btfss	___fldiv@bexp^0,0,c
  8266   00038C  EFCA  F001         	goto	u3211
  8267   000390  EFCC  F001         	goto	u3210
  8268   000394                     u3211:
  8269   000394  EFCF  F001         	goto	l3882
  8270   000398                     u3210:
  8271   000398  8E18               	bsf	(___fldiv@b+2)^0,7,c
  8272   00039A  EFD0  F001         	goto	l3884
  8273   00039E                     l3882:
  8274   00039E  9E18               	bcf	(___fldiv@b+2)^0,7,c
  8275   0003A0                     l3884:
  8276   0003A0  90D8               	bcf	status,0,c
  8277   0003A2  302D               	rrcf	___fldiv@bexp^0,w,c
  8278   0003A4  6E19               	movwf	(___fldiv@b+3)^0,c
  8279   0003A6  EF86  F000         	goto	l3798
  8280   0003AA                     l1325:
  8281   0003AA  0012               	return		;funcret
  8282   0003AC                     __end_of___fldiv:
  8283                           	callstack 0
  8284                           
  8285 ;; *************** function _isr *****************
  8286 ;; Defined at:
  8287 ;;		line 6 in file "isr.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;		None
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;		None
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  1    wreg      void 
  8294 ;; Registers used:
  8295 ;;		wreg, status,2, status,0
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8301 ;;      Params:         0       0       0       0       0       0       0
  8302 ;;      Locals:         0       0       0       0       0       0       0
  8303 ;;      Temps:          0       0       0       0       0       0       0
  8304 ;;      Totals:         0       0       0       0       0       0       0
  8305 ;;Total ram usage:        0 bytes
  8306 ;; Hardware stack levels used: 1
  8307 ;; This function calls:
  8308 ;;		Nothing
  8309 ;; This function is called by:
  8310 ;;		Interrupt level 2
  8311 ;; This function uses a non-reentrant model
  8312 ;;
  8313                           
  8314                           	psect	intcode
  8315   000008                     __pintcode:
  8316                           	callstack 0
  8317   000008                     _isr:
  8318                           	callstack 24
  8319                           
  8320                           ;incstack = 0
  8321   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8322   00000A  ED39  F010         	call	int_func,f	;refresh shadow registers
  8323                           
  8324                           	psect	intcode_body
  8325   002072                     __pintcode_body:
  8326                           	callstack 24
  8327   002072                     int_func:
  8328                           	callstack 24
  8329   002072  0006               	pop		; remove dummy address from shadow register refresh
  8330   002074                     
  8331                           ;isr.c: 8:  static unsigned long count;;isr.c: 10:  if (TMR0IF)
  8332   002074  A4F2               	btfss	4082,2,c	;volatile
  8333   002076  EF3F  F010         	goto	i2u353_41
  8334   00207A  EF41  F010         	goto	i2u353_40
  8335   00207E                     i2u353_41:
  8336   00207E  EF66  F010         	goto	i2l428
  8337   002082                     i2u353_40:
  8338   002082                     
  8339                           ;isr.c: 11:  {;isr.c: 12:   TMR0 = TMR0 + 8;
  8340   002082  0E08               	movlw	8
  8341   002084  24D6               	addwf	214,w,c	;volatile
  8342   002086  6ED6               	movwf	214,c	;volatile
  8343   002088  0E00               	movlw	0
  8344   00208A  20D7               	addwfc	215,w,c	;volatile
  8345   00208C  6ED7               	movwf	215,c	;volatile
  8346                           
  8347                           ;isr.c: 14:   if (count++ == 20000)
  8348   00208E  0E01               	movlw	1
  8349   002090  0100               	movlb	0	; () banked
  8350   002092  2781               	addwf	isr@count& (0+255),f,b
  8351   002094  0E00               	movlw	0
  8352   002096  2382               	addwfc	(isr@count+1)& (0+255),f,b
  8353   002098  2383               	addwfc	(isr@count+2)& (0+255),f,b
  8354   00209A  2384               	addwfc	(isr@count+3)& (0+255),f,b
  8355   00209C  0E21               	movlw	33
  8356   00209E  1981               	xorwf	isr@count& (0+255),w,b
  8357   0020A0  E109               	bnz	i2u354_41
  8358   0020A2  0E4E               	movlw	78
  8359   0020A4  1982               	xorwf	(isr@count+1)& (0+255),w,b
  8360   0020A6  1183               	iorwf	(isr@count+2)& (0+255),w,b
  8361   0020A8  1184               	iorwf	(isr@count+3)& (0+255),w,b
  8362   0020AA  A4D8               	btfss	status,2,c
  8363   0020AC  EF5A  F010         	goto	i2u354_41
  8364   0020B0  EF5C  F010         	goto	i2u354_40
  8365   0020B4                     i2u354_41:
  8366   0020B4  EF65  F010         	goto	i2l4058
  8367   0020B8                     i2u354_40:
  8368   0020B8                     
  8369                           ; BSR set to: 0
  8370                           ;isr.c: 15:   {;isr.c: 17:    count = 0;
  8371   0020B8  0E00               	movlw	0
  8372   0020BA  6F81               	movwf	isr@count& (0+255),b
  8373   0020BC  0E00               	movlw	0
  8374   0020BE  6F82               	movwf	(isr@count+1)& (0+255),b
  8375   0020C0  0E00               	movlw	0
  8376   0020C2  6F83               	movwf	(isr@count+2)& (0+255),b
  8377   0020C4  0E00               	movlw	0
  8378   0020C6  6F84               	movwf	(isr@count+3)& (0+255),b
  8379   0020C8                     
  8380                           ; BSR set to: 0
  8381                           ;isr.c: 18:             tick_count--;
  8382   0020C8  065D               	decf	_tick_count^0,f,c
  8383   0020CA                     i2l4058:
  8384                           
  8385                           ; BSR set to: 0
  8386                           ;isr.c: 22:   TMR0IF = 0;
  8387   0020CA  94F2               	bcf	4082,2,c	;volatile
  8388   0020CC                     i2l428:
  8389   0020CC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8390   0020CE  0011               	retfie		f
  8391   0020D0                     __end_of_isr:
  8392                           	callstack 0
  8393                           
  8394                           	psect	rparam
  8395   000000                     
  8396                           	psect	temp
  8397   00005F                     btemp:
  8398                           	callstack 0
  8399   00005F                     	ds	1
  8400   000000                     int$flags	set	btemp
  8401   000000                     wtemp8	set	btemp+1
  8402   000000                     ttemp5	set	btemp+1
  8403   000000                     ttemp6	set	btemp+4
  8404   000000                     ttemp7	set	btemp+8
  8405                           
  8406                           	psect	idloc
  8407                           
  8408                           ;Config register IDLOC0 @ 0x200000
  8409                           ;	unspecified, using default values
  8410   200000                     	org	2097152
  8411   200000  FF                 	db	255
  8412                           
  8413                           ;Config register IDLOC1 @ 0x200001
  8414                           ;	unspecified, using default values
  8415   200001                     	org	2097153
  8416   200001  FF                 	db	255
  8417                           
  8418                           ;Config register IDLOC2 @ 0x200002
  8419                           ;	unspecified, using default values
  8420   200002                     	org	2097154
  8421   200002  FF                 	db	255
  8422                           
  8423                           ;Config register IDLOC3 @ 0x200003
  8424                           ;	unspecified, using default values
  8425   200003                     	org	2097155
  8426   200003  FF                 	db	255
  8427                           
  8428                           ;Config register IDLOC4 @ 0x200004
  8429                           ;	unspecified, using default values
  8430   200004                     	org	2097156
  8431   200004  FF                 	db	255
  8432                           
  8433                           ;Config register IDLOC5 @ 0x200005
  8434                           ;	unspecified, using default values
  8435   200005                     	org	2097157
  8436   200005  FF                 	db	255
  8437                           
  8438                           ;Config register IDLOC6 @ 0x200006
  8439                           ;	unspecified, using default values
  8440   200006                     	org	2097158
  8441   200006  FF                 	db	255
  8442                           
  8443                           ;Config register IDLOC7 @ 0x200007
  8444                           ;	unspecified, using default values
  8445   200007                     	org	2097159
  8446   200007  FF                 	db	255
  8447                           
  8448                           	psect	config
  8449                           
  8450                           ; Padding undefined space
  8451   300000                     	org	3145728
  8452   300000  FF                 	db	255
  8453                           
  8454                           ;Config register CONFIG1H @ 0x300001
  8455                           ;	unspecified, using default values
  8456                           ;	Oscillator Selection bits
  8457                           ;	OSC = 0x7, unprogrammed default
  8458                           ;	Fail-Safe Clock Monitor Enable bit
  8459                           ;	FCMEN = 0x0, unprogrammed default
  8460                           ;	Internal/External Oscillator Switchover bit
  8461                           ;	IESO = 0x0, unprogrammed default
  8462   300001                     	org	3145729
  8463   300001  07                 	db	7
  8464                           
  8465                           ;Config register CONFIG2L @ 0x300002
  8466                           ;	unspecified, using default values
  8467                           ;	Power-up Timer Enable bit
  8468                           ;	PWRT = 0x1, unprogrammed default
  8469                           ;	Brown-out Reset Enable bits
  8470                           ;	BOREN = 0x3, unprogrammed default
  8471                           ;	Brown-out Reset Voltage bits
  8472                           ;	BORV = 0x3, unprogrammed default
  8473   300002                     	org	3145730
  8474   300002  1F                 	db	31
  8475                           
  8476                           ;Config register CONFIG2H @ 0x300003
  8477                           ;	unspecified, using default values
  8478                           ;	Watchdog Timer Enable bit
  8479                           ;	WDT = 0x1, unprogrammed default
  8480                           ;	Watchdog Timer Postscale Select bits
  8481                           ;	WDTPS = 0xF, unprogrammed default
  8482   300003                     	org	3145731
  8483   300003  1F                 	db	31
  8484                           
  8485                           ; Padding undefined space
  8486   300004                     	org	3145732
  8487   300004  FF                 	db	255
  8488                           
  8489                           ;Config register CONFIG3H @ 0x300005
  8490                           ;	unspecified, using default values
  8491                           ;	PORTB A/D Enable bit
  8492                           ;	PBADEN = 0x1, unprogrammed default
  8493                           ;	Low-Power Timer 1 Oscillator Enable bit
  8494                           ;	LPT1OSC = 0x0, unprogrammed default
  8495                           ;	MCLR Pin Enable bit
  8496                           ;	MCLRE = 0x1, unprogrammed default
  8497   300005                     	org	3145733
  8498   300005  82                 	db	130
  8499                           
  8500                           ;Config register CONFIG4L @ 0x300006
  8501                           ;	unspecified, using default values
  8502                           ;	Stack Full/Underflow Reset Enable bit
  8503                           ;	STVREN = 0x1, unprogrammed default
  8504                           ;	Single-Supply ICSP Enable bit
  8505                           ;	LVP = 0x1, unprogrammed default
  8506                           ;	Boot Block Size Select bit
  8507                           ;	BBSIZ = 0x0, unprogrammed default
  8508                           ;	Extended Instruction Set Enable bit
  8509                           ;	XINST = 0x0, unprogrammed default
  8510                           ;	Background Debugger Enable bit
  8511                           ;	DEBUG = 0x1, unprogrammed default
  8512   300006                     	org	3145734
  8513   300006  85                 	db	133
  8514                           
  8515                           ; Padding undefined space
  8516   300007                     	org	3145735
  8517   300007  FF                 	db	255
  8518                           
  8519                           ;Config register CONFIG5L @ 0x300008
  8520                           ;	unspecified, using default values
  8521                           ;	Code Protection bit
  8522                           ;	CP0 = 0x1, unprogrammed default
  8523                           ;	Code Protection bit
  8524                           ;	CP1 = 0x1, unprogrammed default
  8525                           ;	Code Protection bit
  8526                           ;	CP2 = 0x1, unprogrammed default
  8527                           ;	Code Protection bit
  8528                           ;	CP3 = 0x1, unprogrammed default
  8529   300008                     	org	3145736
  8530   300008  0F                 	db	15
  8531                           
  8532                           ;Config register CONFIG5H @ 0x300009
  8533                           ;	unspecified, using default values
  8534                           ;	Boot Block Code Protection bit
  8535                           ;	CPB = 0x1, unprogrammed default
  8536                           ;	Data EEPROM Code Protection bit
  8537                           ;	CPD = 0x1, unprogrammed default
  8538   300009                     	org	3145737
  8539   300009  C0                 	db	192
  8540                           
  8541                           ;Config register CONFIG6L @ 0x30000A
  8542                           ;	unspecified, using default values
  8543                           ;	Write Protection bit
  8544                           ;	WRT0 = 0x1, unprogrammed default
  8545                           ;	Write Protection bit
  8546                           ;	WRT1 = 0x1, unprogrammed default
  8547                           ;	Write Protection bit
  8548                           ;	WRT2 = 0x1, unprogrammed default
  8549                           ;	Write Protection bit
  8550                           ;	WRT3 = 0x1, unprogrammed default
  8551   30000A                     	org	3145738
  8552   30000A  0F                 	db	15
  8553                           
  8554                           ;Config register CONFIG6H @ 0x30000B
  8555                           ;	unspecified, using default values
  8556                           ;	Configuration Register Write Protection bit
  8557                           ;	WRTC = 0x1, unprogrammed default
  8558                           ;	Boot Block Write Protection bit
  8559                           ;	WRTB = 0x1, unprogrammed default
  8560                           ;	Data EEPROM Write Protection bit
  8561                           ;	WRTD = 0x1, unprogrammed default
  8562   30000B                     	org	3145739
  8563   30000B  E0                 	db	224
  8564                           
  8565                           ;Config register CONFIG7L @ 0x30000C
  8566                           ;	unspecified, using default values
  8567                           ;	Table Read Protection bit
  8568                           ;	EBTR0 = 0x1, unprogrammed default
  8569                           ;	Table Read Protection bit
  8570                           ;	EBTR1 = 0x1, unprogrammed default
  8571                           ;	Table Read Protection bit
  8572                           ;	EBTR2 = 0x1, unprogrammed default
  8573                           ;	Table Read Protection bit
  8574                           ;	EBTR3 = 0x1, unprogrammed default
  8575   30000C                     	org	3145740
  8576   30000C  0F                 	db	15
  8577                           
  8578                           ;Config register CONFIG7H @ 0x30000D
  8579                           ;	unspecified, using default values
  8580                           ;	Boot Block Table Read Protection bit
  8581                           ;	EBTRB = 0x1, unprogrammed default
  8582   30000D                     	org	3145741
  8583   30000D  40                 	db	64
  8584                           tosu	equ	0xFFF
  8585                           tosh	equ	0xFFE
  8586                           tosl	equ	0xFFD
  8587                           stkptr	equ	0xFFC
  8588                           pclatu	equ	0xFFB
  8589                           pclath	equ	0xFFA
  8590                           pcl	equ	0xFF9
  8591                           tblptru	equ	0xFF8
  8592                           tblptrh	equ	0xFF7
  8593                           tblptrl	equ	0xFF6
  8594                           tablat	equ	0xFF5
  8595                           prodh	equ	0xFF4
  8596                           prodl	equ	0xFF3
  8597                           indf0	equ	0xFEF
  8598                           postinc0	equ	0xFEE
  8599                           postdec0	equ	0xFED
  8600                           preinc0	equ	0xFEC
  8601                           plusw0	equ	0xFEB
  8602                           fsr0h	equ	0xFEA
  8603                           fsr0l	equ	0xFE9
  8604                           wreg	equ	0xFE8
  8605                           indf1	equ	0xFE7
  8606                           postinc1	equ	0xFE6
  8607                           postdec1	equ	0xFE5
  8608                           preinc1	equ	0xFE4
  8609                           plusw1	equ	0xFE3
  8610                           fsr1h	equ	0xFE2
  8611                           fsr1l	equ	0xFE1
  8612                           bsr	equ	0xFE0
  8613                           indf2	equ	0xFDF
  8614                           postinc2	equ	0xFDE
  8615                           postdec2	equ	0xFDD
  8616                           preinc2	equ	0xFDC
  8617                           plusw2	equ	0xFDB
  8618                           fsr2h	equ	0xFDA
  8619                           fsr2l	equ	0xFD9
  8620                           status	equ	0xFD8

Data Sizes:
    Strings     383
    Constant    0
    Data        29
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      94
    BANK0           160      0      94
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[3]), STR_10(CODE[17]), STR_11(CODE[16]), STR_12(CODE[6]), 
		 -> STR_13(CODE[17]), STR_14(CODE[15]), STR_15(CODE[15]), STR_16(CODE[16]), 
		 -> STR_17(CODE[17]), STR_18(CODE[16]), STR_19(CODE[15]), STR_2(CODE[3]), 
		 -> STR_20(CODE[17]), STR_21(CODE[18]), STR_22(CODE[18]), STR_23(CODE[18]), 
		 -> STR_24(CODE[14]), STR_27(CODE[18]), STR_28(CODE[21]), STR_29(CODE[19]), 
		 -> STR_3(CODE[3]), STR_30(CODE[17]), STR_31(CODE[18]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), 
		 -> STR_9(CODE[17]), time(BANK0[9]), 

    events	PTR unsigned char [8] size(2) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), 

    logs	PTR unsigned char [5] size(2) Largest target is 17
		 -> STR_15(CODE[15]), STR_16(CODE[16]), STR_17(CODE[17]), STR_18(CODE[16]), 
		 -> STR_19(CODE[15]), 

    my_strcmp@one	PTR unsigned char  size(1) Largest target is 5
		 -> pass(BANK0[5]), 

    my_strcmp@two	PTR unsigned char  size(1) Largest target is 5
		 -> temp_password(BANK0[5]), 

    my_strcp@one	PTR unsigned char  size(1) Largest target is 5
		 -> temp1(BANK0[5]), 

    my_strcp@two	PTR unsigned char  size(1) Largest target is 5
		 -> temp2(BANK0[5]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_25(CODE[20]), STR_26(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _view_log->_clcd_putch
    _settime->_clcd_putch
    _password->_clcd_putch
    _menu->_clcd_putch
    _init_config->_write_external_eeprom
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _download_log->___awmod
    _read_external_eeprom->_i2c_write
    _puts->_putch
    ___awmod->___awdiv
    _dashboard->_clcd_putch
    _store_event->___lwdiv
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_time->_clcd_print
    _clear_log->___lwdiv
    _change_pass->_clcd_putch
    _write_external_eeprom->_i2c_write
    _clcd_putch->___awmod
    _clcd_print->_clcd_write
    ___xxtofl->_read_adc
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  104313
                            ___fldiv
                            ___fltol
                           ___xxtofl
                        _change_pass
                         _clcd_write
                          _clear_log
                          _dashboard
                       _download_log
                        _init_config
                               _menu
                           _password
                           _read_adc
                      _read_switches
                            _settime
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                             8     8      0   11326
                                             16 COMRAM     8     8      0
                            ___awmod
                         _clcd_print
                         _clcd_putch
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _settime                                              3     3      0   14504
                                             16 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      30
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _password                                            15    15      0   14475
                                             16 COMRAM    15    15      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                          _my_strcmp
 ---------------------------------------------------------------------------------
 (2) _my_strcmp                                            8     6      2     398
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1516
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _menu                                                 1     1      0   10743
                                             16 COMRAM     1     1      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _init_config                                          2     2      0    3000
                                              5 COMRAM     2     2      0
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                        _init_timer0
                          _init_uart
               _read_external_eeprom
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     506
                                              3 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     370
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    1412
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _download_log                                         2     2      0    6733
                                             14 COMRAM     2     2      0
                            ___awmod
                         _clcd_print
                              _putch
                               _puts
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     219
                                              1 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1816
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _dashboard                                            0     0      0   18526
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                       _display_time
                           _get_time
                        _store_event
 ---------------------------------------------------------------------------------
 (2) _store_event                                          3     3      0    2856
                                              7 COMRAM     3     3      0
                            ___lwdiv
                            ___lwmod
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0    4519
                         _clcd_print
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            2     2      0    7397
                                              7 COMRAM     2     2      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _change_pass                                          8     8      0   14020
                                             16 COMRAM     8     8      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                           _my_strcp
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _write_external_eeprom                                4     3      1     925
                                              1 COMRAM     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _my_strcp                                             8     6      2     398
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    4724
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    4519
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           2     1      1    1412
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     919
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              7 COMRAM    14    10      4
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             46 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
       _read_adc (ARG)
     _read_adc (ARG)
   ___fltol
     ___fldiv (ARG)
     ___xxtofl (ARG)
     _read_adc (ARG)
   ___xxtofl
   _change_pass
     ___lwdiv
     ___lwmod
     _clcd_print
       _clcd_write
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
       _clcd_write (ARG)
     _clcd_write
     _my_strcp
     _write_external_eeprom
       _i2c_start
         _i2c_idle
       _i2c_stop
         _i2c_idle
       _i2c_write
         _i2c_idle
   _clcd_write
   _clear_log
     ___lwdiv
     ___lwmod
     _clcd_print
     _write_external_eeprom
   _dashboard
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_putch
     _display_time
       _clcd_print
     _get_time
       _read_ds1307
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
         _i2c_stop
         _i2c_write
     _store_event
       ___lwdiv
       ___lwmod
       _write_external_eeprom
   _download_log
     ___awmod
     _clcd_print
     _putch
     _puts
       _putch
     _read_external_eeprom
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_stop
       _i2c_write
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
     _init_matrix_keypad
     _init_timer0
     _init_uart
     _read_external_eeprom
     _write_external_eeprom
   _menu
     _clcd_print
     _clcd_putch
     _clcd_write
   _password
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _my_strcmp
   _read_adc
   _read_switches
     _scan_key
   _settime
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_putch
   _view_log
     ___awmod
     _clcd_print
     _clcd_putch
     _read_external_eeprom

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
BITBIGSFRll        281      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      5E       5       58.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     38      5E       1      100.0%
BITBIGSFRhhhlhh     19      0       0      17        0.0%
BITBIGSFRlhhhhh     10      0       0      19        0.0%
BITBIGSFRlhl         F      0       0      23        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRhhhlhh      B      0       0      18        0.0%
BITBIGSFRlhhhhl      9      0       0      20        0.0%
BITBIGSFRlhhl        7      0       0      22        0.0%
BITBIGSFRlhhhl       2      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BC      25        0.0%
DATA                 0      0      BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jun 02 13:25:51 2024

                 my_strcmp@one 0001                   my_strcmp@two 0002                   ___fldiv@aexp 002E  
                 ___fldiv@bexp 002D                              _i 0056                   ___fldiv@sign 0026  
        _write_external_eeprom 215E                 clcd_print@addr 0005                 clcd_print@data 0003  
                my_strcmp@last 0005                             l33 2280                             l36 2130  
                           l61 21D2                             l62 21D6                             l71 1FA8  
                           l39 215C                             l65 1C40                             l74 22D0  
                           _GO 7E11                   ___awdiv@sign 0006                             _hr 0048  
           _init_matrix_keypad 2324                            l121 1CC6                            l210 1EC8  
                          l305 0D2A                            l410 219C                            l242 1DCE  
                          l250 1672                            l322 2116                            l146 0E5A  
                          l500 1960                            l180 168E                            l237 2356  
                          l413 2236                            l325 229E                            l181 177A  
                          l190 16F8                            l182 16CA                            l183 16A2  
                          l328 2260                            l192 170C                            l177 2334  
                          l185 16B6                            l521 0F48                            l282 1D42  
                          l363 22E6                            l443 2310                            l283 1D4A  
                          l195 173C                            l531 1122                            l612 2322  
                          l188 16E4                            l197 1750                            l189 1720  
                          l366 2336                            l382 2376                            l198 1778  
                          l391 2394                            l615 22EA                            l295 0D2A  
                          l199 1764                            l368 2344                            l376 238E  
                          l624 220C                            l369 2346                            l385 236E  
                          l553 1AE8                            l394 2362                            l618 22FC  
                          l379 2386                            l388 237E                            l580 130C  
                          l740 0A42                            l478 1556                            l729 08F2  
                          l667 1E4A                            l587 141A                            l668 1E52  
                          _CKE 7E3E                            l697 0742                            l974 1A24  
                          l987 1B98                            _GIE 7F97                            _RC0 7C10  
                          _RC1 7C11                            _RC2 7C12                            _RD7 7C1F  
                          u200 16DE                            u201 16DA                            u210 16F2  
                          u211 16EE                            u220 1706                            u221 1702  
                          u230 171A                            u231 1716                            u240 1736  
                          u160 1688                            u241 1732                            u161 1684  
                          u250 174A                            u170 169C                            u251 1746  
                          u171 1698                            u260 175E                            u180 16B0  
                          u500 1E66                            u261 175A                            u181 16AC  
                          u501 1E62                            u270 1772                            u190 16C4  
                          u510 1E7C                            u271 176E                            u191 16C0  
                          u511 1E78                            u520 1E8C                            _PEN 7E2A  
                          u521 1E88                            u530 1EA6                            u531 1EA2  
                          u540 1EBE                            u541 1EBA                            _SEN 7E28  
                          _PSA 7EAB                            _SMP 7E3F                  ?_display_time 0001  
                  _start_index 004F                            _del 003C                            _lap 0051  
                          _ind 004A                            _key 005B                            _min 0047  
                          _sec 0046                            _isr 0008                            _var 004C  
               clcd_putch@addr 000F                 clcd_putch@data 0010                   ___awmod@sign 000E  
                          wreg 0FE8            ?_init_matrix_keypad 0001                   ___fltol@exp1 0038  
                         l1040 1880                           l3000 20F8                           l1401 12D6  
                         l1241 1F3C                           l1330 01CE                           l1234 1F34  
                         l3002 2102                           l3010 2312                           l1251 2070  
                         l1412 126E                           l1244 2068                           l3100 1E2E  
                         l3020 221A                           l3004 22FE                           l3012 231C  
                         l1325 03AA                           l1405 1212                           l3102 1E32  
                         l3030 2348                           l3022 2220                           l3006 2306  
                         l3014 2320                           l3110 197C                           l1327 020A  
                         l1336 0250                           l3040 1D9E                           l3032 1D4C  
                         l3024 2224                           l3016 2210                           l3008 230E  
                         l3200 1C56                           l3120 19A2                           l3112 1980  
                         l3104 1962                           l4000 0D92                           l1338 02C8  
                         l3042 1DA2                           l3034 1D64                           l3050 1882  
                         l3026 2230                           l3018 2214                           l3210 1C8E  
                         l3202 1C5A                           l3130 19D8                           l3122 19B4  
                         l3114 198E                           l3106 1966                           l4010 0E22  
                         l4002 0DAE                           l1339 02B6                           l3044 1DAC  
                         l3036 1D72                           l3052 189A                           l3220 1568  
                         l3212 1CA0                           l3204 1C86                           l3132 19EE  
                         l3124 19BC                           l3140 1A04                           l3116 1996  
                         l3108 1974                           l3300 0B80                           l4012 0E32  
                         l4020 0E5E                           l4004 0DB6                           l3046 1DB4  
                         l3038 1D8A                           l3070 1944                           l3054 18DE  
                         l3230 15AC                           l3222 1584                           l3150 1AEE  
                         l3214 1CA4                           l3142 1A14                           l3134 19F6  
                         l3126 19C4                           l3118 199A                           l3310 0BC2  
                         l3302 0B84                           l1710 175E                           l4030 0EA6  
                         l4022 0E6E                           l4014 0E36                           l4006 0DBE  
                         l3048 1DCA                           l3072 1946                           l3064 191A  
                         l3056 18FA                           l3232 15BE                           l3240 15E6  
                         l3224 1596                           l3160 1B1E                           l3152 1AFC  
                         l3216 1CC0                           l3144 1A1C                           l3136 19F8  
                         l3128 19D2                           l3080 1CFE                           l3320 0C66  
                         l3312 0BE0                           l3304 0B8C                           l1720 1778  
                         l1704 174A                           l3400 0FA0                           l4040 0EEC  
                         l4032 0EB6                           l4024 0E78                           l4016 0E48  
                         l4008 0DCA                           l3074 1958                           l3066 1932  
                         l3058 1916                           l3250 1622                           l3242 15F6  
                         l3234 15D0                           l3226 15A6                           l3218 1558  
                         l3170 1B64                           l3162 1B30                           l3154 1B04  
                         l3090 21EC                           l3138 19FE                           l3082 1D26  
                         l3330 0CA8                           l3322 0C76                           l3314 0C12  
                         l3306 0B9C                           l3410 0FDC                           l3402 0FB2  
                         l4042 0EF4                           l4034 0EC0                           l4026 0E8A  
                         l4018 0E52                           l3068 1934                           l3260 166E  
                         l3252 1626                           l3244 15FA                           l3236 15E0  
                         l3228 15A8                           l3180 1B90                           l3172 1B6C  
                         l3164 1B38                           l3156 1B08                           l3148 1AEA  
                         l3092 21F0                           l3500 132C                           l3084 1D2A  
                         l3076 1CC8                           l3340 0D1C                           l3332 0CB8  
                         l3324 0C7E                           l3316 0C30                           l3308 0BA2  
                         l1716 1772                           l1660 169C                           l1652 1674  
                         l3412 0FEE                           l3404 0FC2                           l4044 0F06  
                         l4036 0ED2                           l4028 0E94                           l1398 117A  
                         l3094 1DD0                           l3254 162A                           l3246 15FE  
                         l3238 15E2                           l3174 1B72                           l3166 1B40  
                         l3158 1B16                           l3086 21D8                           l3510 1364  
                         l3502 1334                           l3350 1492                           l3342 141E  
                         l3078 1CDC                           l3334 0CD8                           l3318 0C40  
                         l3326 0C8C                           l3270 0AAA                           l3262 0A46  
                         l3190 2154                           l1654 1688                           l3430 105A  
                         l3414 0FFE                           l3422 1026                           l3406 0FC8  
                         l4046 0F10                           l4038 0EDC                           l3096 1DE4  
                         l3600 05A0                           l2800 2390                           l3256 164A  
                         l3248 1610                           l3168 1B4E                           l3176 1B78  
                         l3088 21DC                           l3520 13A2                           l3512 1368  
                         l3360 14CE                           l3352 14A4                           l3344 1456  
                         l3336 0D16                           l3328 0C9C                           l3280 0AFC  
                         l3272 0AC6                           l3264 0A56                           l3184 211A  
                         l1672 16C4                           l1920 1E8C                           l1912 1E56  
                         l3440 10A2                           l3432 105E                           l3416 1000  
                         l3408 0FD8                           l4048 0F22                           l2810 21BA  
                         l2802 21A0                           l3098 1E06                           l3610 05DC  
                         l3602 05AC                           l3258 166A                           l3178 1B88  
                         l3530 13D6                           l3522 13AA                           l3514 1384  
                         l3194 1C42                           l3370 14FE                           l3354 14B4  
                         l3362 14D2                           l3346 1466                           l3338 0D18  
                         l3282 0B08                           l3274 0AD6                           l3266 0A7E  
                         l3186 212E                           l1682 16F2                           l1666 16B0  
                         l1914 1E66                           l1930 1EAE                           l3450 10DA  
                         l3442 10AE                           l3434 107A                           l3418 1012  
                         l2900 1EEC                           l2820 21C4                           l2812 21BC  
                         l2804 21B2                           l3620 0626                           l3604 05B8  
                         l3540 03AE                           l3532 13EC                           l3524 13C0  
                         l3516 1394                           l3508 133C                           l3196 1C4A  
                         l3380 1532                           l3372 150E                           l3364 14E4  
                         l3356 14B8                           l3348 147E                           l3292 0B3C  
                         l3284 0B0E                           l3276 0ADE                           l3268 0A8E  
                         l3188 213E                           l1676 16DE                           l1932 1EBE  
                         l1916 1E6C                           l3700 088A                           l3460 1116  
                         l3452 10E6                           l3444 10B8                           l3436 108A  
                         l3428 102E                           l2910 1F26                           l2902 1EF4  
                         l2814 21BE                           l2806 21B6                           l2822 2388  
                         l2830 2380                           l3630 065E                           l3622 062A  
                         l3614 05EC                           l3606 05BE                           l3550 0422  
                         l3542 03BE                           l3470 1A62                           l3462 1A28  
                         l3534 13F8                           l3526 13C6                           l3518 139A  
                         l3198 1C4E                           l3382 1536                           l3366 14F4  
                         l3374 1512                           l3358 14BE                           l3294 0B4E  
                         l3286 0B20                           l3278 0AF0                           l1694 171A  
                         l1918 1E7C                           l1926 1E96                           l3710 08BE  
                         l3702 0892                           l3454 10F2                           l3446 10C4  
                         l3438 1096                           l3390 0F44                           l3800 0110  
                         l2912 1F28                           l2904 1F02                           l2920 2028  
                         l2816 21C0                           l2808 21B8                           l2824 238A  
                         l2832 2382                           l3640 06BC                           l3632 066E  
                         l3624 0634                           l3616 05FE                           l3608 05D0  
                         l3560 0474                           l3552 043E                           l3544 03CE  
                         l3472 1A7A                           l3464 1A30                           l2840 2360  
                         l3528 13CE                           l3536 13FA                           l3384 1548  
                         l3376 1524                           l3368 14F8                           l3296 0B58  
                         l3288 0B2C                           l1688 1706                           l1928 1EA6  
                         l1936 1EC6                           l3712 08C4                           l3704 0898  
                         l3720 08F6                           l3456 10FE                           l3448 10D0  
                         l3392 0F58                           l2914 1F2E                           l2906 1F08  
                         l2930 2062                           l2922 2030                           l2818 21C2  
                         l2850 1F78                           l2826 2366                           l3650 06D0  
                         l3642 06C0                           l3634 067E                           l3626 0642  
                         l3618 0608                           l3562 0480                           l3554 044E  
                         l3546 03F6                           l3482 1AC0                           l3474 1A84  
                         l3466 1A40                           l2834 2370                           l3538 140C  
                         l3490 12D8                           l3386 1552                           l3378 152E  
                         l3298 0B76                           l1698 1736                           l3730 0932  
                         l3722 0908                           l3714 08D6                           l3706 08A8  
                         l3458 110A                           l3394 0F5C                           l3820 0192  
                         l3812 0148                           l3804 0124                           l3900 17D0  
                         l2908 1F1E                           l2924 203E                           l2916 200E  
                         l2844 1F3E                           l2828 236A                           l2860 2176  
                         l2852 2160                           l3660 071A                           l3652 06DE  
                         l3644 06C4                           l3636 068E                           l3628 0650  
                         l3580 04D8                           l3572 04B4                           l3564 0486  
                         l3556 0456                           l3548 0406                           l3484 1AD2  
                         l3476 1AA0                           l3468 1A50                           l2836 2372  
                         l3492 12F8                           l2932 2262                           l2940 1B9E  
                         l3740 09DE                           l3732 09CE                           l3724 090A  
                         l3716 08E8                           l3708 08BA                           l3396 0F6E  
                         l3388 0F32                           l3830 01D8                           l3822 019A  
                         l3814 0162                           l3806 0134                           l3902 17D2  
                         l2926 2054                           l2918 2020                           l2846 1F4C  
                         l2862 217A                           l2854 2164                           l3662 072C  
                         l3654 06FA                           l3646 06C8                           l3638 06B4  
                         l3590 053E                           l3574 04C6                           l3566 0498  
                         l3558 0468                           l3582 04E6                           l3486 1AD4  
                         l2838 2358                           l2870 2244                           l3494 1308  
                         l2934 2276                           l2950 1BD0                           l2942 1BA4  
                         l3742 09E2                           l3734 09D2                           l3750 0A2C  
                         l3726 091C                           l3718 08EC                           l3670 0746  
                         l3398 0F9E                           l3840 0230                           l3832 01F6  
                         l3824 01AA                           l3816 0172                           l3808 0134  
                         l3760 002E                           l3904 17E2                           l2928 205C  
                         l2848 1F74                           l2864 2182                           l2856 216A  
                         l3664 072E                           l3648 06CC                           l3592 055A  
                         l3584 04F6                           l3576 04D0                           l3568 04A4  
                         l3488 1AE4                           l2872 224A                           l3496 131C  
                         l2936 227E                           l2960 1BFC                           l2952 1BDA  
                         l2944 1BA6                           l2880 2284                           l3752 0A3E  
                         l3744 09E6                           l3736 09D6                           l3728 0920  
                         l3680 07AC                           l3672 0756                           l3850 026E  
                         l3842 0236                           l3834 01F8                           l3826 01BE  
                         l3818 0182                           l3762 003E                           l3770 0068  
                         l3754 0012                           l3930 1860                           l3914 180C  
                         l3906 17E6                           l2794 2336                           l2858 2170  
                         l3666 073E                           l3594 0576                           l3586 0506  
                         l3578 04D4                           l2874 224E                           l2866 223A  
                         l2890 22EA                           l3498 1320                           l2970 1C2E  
                         l2962 1C04                           l2954 1BE2                           l2946 1BB6  
                         l2938 1B9A                           l2882 2288                           l3746 09EC  
                         l3738 09DA                           l3690 081A                           l3682 07CA  
                         l3674 0766                           l3860 02D8                           l3852 0272  
                         l3844 0240                           l3836 0208                           l3828 01CC  
                         l3780 0094                           l3772 0078                           l3764 004E  
                         l3756 001E                           l3932 1870                           l3924 1834  
                         l3916 1816                           l3908 17F4                           l3940 1144  
                         l3596 0586                           l3588 052E                           l2796 2378  
                         l2876 225A                           l2868 223E                           l2892 22F8  
                         l2972 1C38                           l2964 1C0E                           l2956 1BEC  
                         l2948 1BC0                           l2884 228E                           l2980 232E  
                         l3748 0A28                           l3692 0838                           l3684 07D4  
                         l3676 078A                           l3870 033A                           l3862 02E4  
                         l3854 0280                           l3846 024E                           l3838 021A  
                         l3782 00A4                           l3790 00CE                           l3774 007E  
                         l3766 005E                           l3758 002C                           l3926 1840  
                         l3918 1820                           l3950 11BC                           l3942 118A  
                         l2894 1ECA                           l2974 22BC                           l3598 058E  
                         l2798 237A                           l2966 1C16                           l2958 1BF2  
                         l2886 2294                           l2990 22E2                           l2982 22D2  
                         l3694 0856                           l3686 07F2                           l3678 078E  
                         l3880 0398                           l3872 0350                           l3864 02F2  
                         l3856 02AE                           l3848 0260                           l3792 00DE  
                         l3784 00B4                           l3776 0084                           l3768 0060  
                         l3928 1850                           l3960 1244                           l3952 11C8  
                         l3944 11A0                           l3936 1126                           l2896 1ED2  
                         l2968 1C20                           l2888 229A                           l2992 22E4  
                         l2984 22D6                           l2976 2324                           l3696 0868  
                         l3688 0810                           l3882 039E                           l3874 036A  
                         l3866 031C                           l3794 00F4                           l3786 00C4  
                         l3778 0092                           l3970 1282                           l3962 1250  
                         l3954 11FA                           l3938 1136                           l2898 1EE4  
                         l2994 20D0                           l2986 22DE                           l2978 232C  
                         l3698 0878                           l3884 03A0                           l3876 0386  
                         l3868 0320                           l3796 0104                           l3788 00C6  
                         l3892 177C                           l3972 12A6                           l3964 125E  
                         l3956 11FC                           l3948 11B4                           l2996 20D8  
                         l2988 22E0                           l3878 038A                           l3798 010C  
                         l3894 1792                           l3974 12B6                           l3966 127C  
                         l3958 1208                           l2998 20E4                           l3990 0D4C  
                         l3982 0D2C                           l3976 12C4                           l3968 127E  
                         l3992 0D50                           l3984 0D30                           _ADFM 7E07  
                         l3898 17A6                           l3978 12C6                           l3994 0D66  
                         l3986 0D38                           l3996 0D70                           l3988 0D48  
                         ?_isr 0001                           l3998 0D78                           _ADON 7E10  
                         STR_1 2FF8                           STR_2 2FFB                           STR_3 2FF5  
                         STR_4 2FE9                           STR_5 2FEC                           STR_6 2FEF  
                         STR_7 2FF2                           STR_8 2FE6                           STR_9 2F6A  
                         _BRGH 7D62                           _CREN 7D5C                           _T0CS 7EAD  
                         u2000 203E                           u2001 203A                           u2010 2054  
                         u2011 2050                           u2020 1D72                           u2100 1974  
                         u2021 1D6E                           u2101 1970                           u2030 1944  
                         u2110 198E                           u2031 1940                           u2111 198A  
                         u3000 003E                           u2040 1958                           u2200 1B64  
                         u2120 19B4                           u3001 003A                           u2041 1954  
                         u2201 1B60                           u2121 19B0                           u3010 004E  
                         u2210 1B88                           u2130 19D2                           u2050 1CFE  
                         u3011 004A                           u2211 1B84                           u2131 19CE  
                         u2051 1CFA                           u3100 021A                           u3020 0092  
                         u2300 1610                           u2140 19EE                           u2060 1D42  
                         u2220 213E                           u3101 0216                           u3021 008E  
                         u2301 160C                           u2141 19EA                           u2061 1D3E  
                         u2221 213A                           u3110 0230                           u3030 00A4  
                         u2310 1622                           u2070 220C                           u2230 1CC0  
                         u2150 1A14                           u3111 022C                           u3031 00A0  
                         u2311 161E                           u2071 2208                           u2231 1CBC  
                         u2151 1A10                           u3200 036A                           u3120 024E  
                         u3040 00B4                           u2080 1E06                           u2240 1596  
                         u2160 1AFC                           u2400 0C66                           u2320 0A7E  
                         u3201 0366                           u3121 024A                           u3041 00B0  
                         u2081 1E02                           u2241 1592                           u2161 1AF8  
                         u2401 0C62                           u2321 0A7A                           u3210 0398  
                         u3130 026E                           u3050 00F4                           u2090 1E4A  
                         u2250 15A6                           u2170 1B16                           u2410 0C76  
                         u2330 0AAA                           u3211 0394                           u3131 026A  
                         u3051 00F0                           u2091 1E46                           u2251 15A2  
                         u2171 1B12                           u2411 0C72                           u2331 0AA6  
                         u3140 0280                           u3060 0134                           u3220 1792  
                         u3300 1144                           u2260 15BE                           u2180 1B30  
                         u2500 1524                           u2420 0D16                           u2340 0AC6  
                         u3141 027C                           u3061 0130                           u3221 178E  
                         u3301 1140                           u2261 15BA                           u2181 1B2C  
                         u2501 1520                           u2421 0D12                           u2341 0AC2  
                         u3150 02AE                           u3070 01AA                           u3230 17C6  
                         u3310 11A0                           u2270 15D0                           u2190 1B4E  
                         u2510 1548                           u2430 1466                           u2350 0AF0  
                         u3151 02AA                           u3071 01A6                           u3311 119C  
                         u2271 15CC                           u2191 1B4A                           u2511 1544  
                         u2431 1462                           u2351 0AEC                           u3160 02C4  
                         u3080 01CC                           u3240 17F4                           u3320 11F6  
                         u2280 15E0                           u2440 14A4                           u2360 0B20  
                         u2600 0FFE                           u2520 0F44                           u3400 0D66  
                         u3161 02C0                           u3081 01C8                           u3241 17F0  
                         u3321 11F2                           u2281 15DC                           u2441 14A0  
                         u2361 0B1C                           u2601 0FFA                           u2521 0F40  
                         u3401 0D62                           u3170 02D8                           u3090 01F6  
                         u3250 1808                           u3330 1240                           u2290 15F6  
                         u2450 14B4                           u2370 0B4E                           u2610 1012  
                         u2530 0F58                           u3410 0D92                           u3171 02D4  
                         u3091 01F2                           u3251 1804                           u3235 17BC  
                         u3331 123C                           u2291 15F2                           u2451 14B0  
                         u2371 0B4A                           u2611 100E                           u2531 0F54  
                         u3411 0D8E                           u3180 02F2                           u3260 1830  
                         u3340 125E                           u1900 21D2                           u2700 03BE  
                         u2460 14CE                           u2380 0B76                           u2620 1022  
                         u2540 0F6E                           u3500 0EEC                           u3420 0DAE  
                         u3181 02EE                           u3261 182C                           u3341 125A  
                         u1901 21CE                           u2701 03BA                           u2461 14CA  
                         u2381 0B72                           u2621 101E                           u2541 0F6A  
                         u3501 0EE8                           u3421 0DAA                           u3190 033A  
                         u3270 1850                           u3350 126E                           u1910 1F70  
                         u2710 03F6                           u2470 14E4                           u2390 0B9C  
                         u2630 107A                           u2550 0F9E                           u3510 0F06  
                         u3430 0E32                           u3191 0336                           u3271 184C  
                         u3351 126A                           u2711 03F2                           u2471 14E0  
                         u2391 0B98                           u2631 1076                           u2551 0F9A  
                         u3511 0F02                           u3431 0E2E                           u3280 1860  
                         u3360 127C                           u1920 1F98                           u2800 0576  
                         u2720 0422                           u2640 1A62                           u2480 14F4  
                         u2560 0FB2                           u3520 0F22                           u3440 0E48  
                         u3281 185C                           u3361 1278                           u2801 0572  
                         u2721 041E                           u2641 1A5E                           u2481 14F0  
                         u2561 0FAE                           u3521 0F1E                           u3441 0E44  
                         u3370 12B6                           u3290 1136                           u1930 1FA8  
                         u2810 05A0                           u2730 043E                           u2650 1AE4  
                         u2490 150E                           u2570 0FC2                           u3450 0E6E  
        ?_read_external_eeprom 0001                           u3371 12B2                           u3291 1132  
                         u1931 1FA4                           u2811 059C                           u2731 043A  
                         u2651 1AE0                           u2491 150A                           u2571 0FBE  
                         u3451 0E6A                           u3380 12C4                           u1940 219C  
                         u2820 05D0                           u2740 0468                           u2660 1308  
                         u2900 088A                           u2580 0FD8                           u3460 0E8A  
                         u3381 12C0                           u1917 1F66                           u1941 2198  
                         u2821 05CC                           u2741 0464                           u2661 1304  
                         u2901 0886                           u2581 0FD4                           u3461 0E86  
                         u1870 2344                           u2830 05FE                           u2750 0498  
                         u1950 22F8                           u2670 131C                           u2910 08A8  
                         u2590 0FEE                           u3470 0EA6                           u3390 0D48  
                         u1927 1F8E                           u1871 2340                           u2831 05FA  
                         u2751 0494                           u1951 22F4                           u2671 1318  
                         u3607 1C26                           u2911 08A4                           u2591 0FEA  
                         u3471 0EA2                           u3391 0D44                           u1960 1EE4  
                         u1880 21B0                           u2840 0626                           u2760 04C6  
                         u2680 1384                           u2920 08BA                           u3480 0EB6  
                         u1961 1EE0                           u1881 21AA                           u2841 0622  
                         u2761 04C2                           u2681 1380                           u3617 1C3A  
                         u2921 08B6                           u3481 0EB2                           u1970 1F02  
                         u2850 06B4                           u2770 04F6                           u2690 140C  
                         u2930 08D6                           u3490 0ED2                           u1971 1EFE  
                         u2851 06B0                           u2771 04F2                           u2691 1408  
                         u2931 08D2                           u3491 0ECE                           _PEIE 7F96  
                         u1980 1F1E                           u2860 073E                           u2780 052E  
                         u2940 08E8                           u1981 1F1A                           u2861 073A  
                         u2781 052A                           u3557 1BAC                           u2941 08E4  
                         u1990 2020                           u2790 055A                           u2950 0908  
                         u2870 0766                           u1991 201C                           u1895 21B2  
                         u2791 0556                           u3567 1BC6                           u2951 0904  
                         u2871 0762                           u2960 091C                           u2880 0868  
                         u3577 1BDC                           u2961 0918                           u2881 0864  
                         u2970 0932                           u2890 0878                           u3587 1BFE  
                         u2971 092E                           u2891 0874                           _RCIE 7CED  
                         u2980 0A3E                           _RCEN 7E2B                           _RCIF 7CF5  
                         u3597 1C10                           u2981 0A3A                           u2990 002C  
                         u2991 0028                           _RBPU 7F8F                           _TMR0 0FD6  
                         _SPEN 7D5F                           _RSEN 7E29                           _TXIF 7CF4  
                         _main 0D2C                           _last 004B                           _menu 141C  
                         _pass 009F                           _logs 00B4                           _time 0087  
                         fsr0h 0FEA                           fsr1h 0FE2                           indf0 0FEF  
                         fsr2h 0FDA                           fsr0l 0FE9                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           btemp 005F  
                         _puts 21D8                           prodl 0FF3                           start 000E  
              ___fldiv@new_exp 0027           ??_init_matrix_keypad 0001                   ___param_bank 0000  
               clcd_write@byte 0002                    _store_event 1882                  _i2c_rep_start 2370  
                ??_i2c_rx_mode 0001                          ??_isr 0001                   ?_init_ds1307 0001  
                ___fltol@sign1 0037                          _ADCS0 7E00                          _ADCS1 7E01  
                        _ADCS2 7E02                          ?_main 0001                   ?_read_ds1307 0001  
                        _ACKEN 7E2C                          _ACKDT 7E2D                 ??_display_time 0006  
                        ?_menu 0001                          _BCLIF 7D0B                __end_of___fldiv 03AC  
                        _ACQT0 7E03                          _ACQT1 7E04                          _ACQT2 7E05  
              __end_of___awdiv 1A26                          STR_10 2F59                          STR_11 2F9B  
                        STR_12 2EFD                          STR_20 2F26                          STR_13 2F48  
                        STR_21 2F03                          STR_14 2FC9                          STR_30 2F15  
                        STR_22 2EF1                          STR_23 2EDF                          STR_31 2EBB  
                        STR_15 2FAB                          STR_24 2FD8                          STR_16 2F8B  
                        STR_25 2E94                          STR_17 2F37                          STR_26 2EA5  
                        STR_18 2F7B                          STR_27 2ECD                          STR_19 2FBA  
                        STR_28 2E7F                __end_of___awmod 1B9A                          STR_29 2EA8  
              __end_of___fltol 1882                          ?_puts 0002                ___awdiv@divisor 0003  
              __end_of___lwdiv 1F3E                __end_of___lwmod 2072                   ?_init_config 0001  
                        i2l428 20CC                ___awdiv@counter 0005                          _VCFG0 7E0C  
                        _VCFG1 7E0D                          _RCREG 0FAE                          _SPBRG 0FAF  
                        _PORTB 0F81                          _PORTD 0F83                          _TRISB 0F93  
                        _TRISC 0F94                          _TRISD 0F95                          _SSPIF 7CF3  
                        _TXREG 0FAD                   ?_init_timer0 0001      write_external_eeprom@data 0002  
                        _delay 003E                          _index 0055                          _temp1 0095  
                        _temp2 0090                          _putch 22E8                          _start 004D  
                        _store 0076                          tablat 0FF5                __end_of_settime 0A44  
                        puts@s 0002                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 0FD8                          wtemp8 0060  
             init_ds1307@dummy 0004                     _i2c_no_ack 2390                __initialization 1FAA  
               ?_i2c_rep_start 0001         ?_write_external_eeprom 0002                   __end_of_main 0F30  
                 __end_of_menu 1558                   __end_of_puts 220E               __end_of_i2c_idle 2348  
             __end_of_i2c_read 2364               __end_of_i2c_stop 2388                  ?_download_log 0001  
                       ??_main 0039                         ??_menu 0011                         ??_puts 0004  
                __activetblptr 0002            __end_of_i2c_rx_mode 2380                         _ADCON0 0FC2  
                       _ADCON1 0FC1               read_switches@key 0057         ??_read_external_eeprom 0002  
                       _ADRESH 0FC4                         _ADRESL 0FC3                         _T08BIT 7EAE  
             ___awdiv@dividend 0001                         ?_putch 0001                         _GODONE 7E11  
                       i2l4050 2074                         i2l4052 2082                         i2l4054 20B8  
                       i2l4056 20C8                         i2l4058 20CA                   _write_ds1307 2282  
                       _TMR0IE 7F95                         _TMR0IF 7F92                         _TMR0ON 7EAF  
                       _SSPADD 0FC8                         _TRISC3 7CA3                         _TRISC4 7CA4  
                       _TRISC6 7CA6                         _TRISC7 7CA7                         _TRISD7 7CAF  
                       _SSPBUF 0FC9               __end_of___xxtofl 12D8               __end_of_get_time 1DD0  
                    ??___fldiv 001E                      ??___awdiv 0005                         _chance 005C  
                    ??___awmod 000D                      ??___fltol 0033                      ??___lwdiv 0005  
                    ??___lwmod 0005                         _main_f 0059               __end_of_init_i2c 22E8  
             __end_of_init_adc 2282                         _events 00A4                         _menu_f 0058  
             __end_of_read_adc 215E                         _t_flag 0044                         clear_0 1FEE  
                       clear_1 1FFA                 ??_download_log 000F               ___awdiv@quotient 0007  
              ___awmod@divisor 000B                         isa$std 0001               __end_of_scan_key 177C  
              ___awmod@counter 000D               __end_of_password 0D2C                   __pdataCOMRAM 005C  
                 __mediumconst 2E7E               __end_of_my_strcp 1E54                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8               __end_of_view_log 1124  
                    ??_settime 0011                   ___xxtofl@arg 0012                   ___xxtofl@exp 0011  
                 ___xxtofl@val 0008                     __accesstop 0060        __end_of__initialization 2000  
         __end_of_display_time 2358                  ___rparam_used 0001                     ___fltol@f1 002F  
              ??_i2c_rep_start 0001                    ?_i2c_no_ack 0001                 __pcstackCOMRAM 0001  
                 __pidataBANK0 22A0                    _i2c_rx_mode 2378                  __end_of_putch 22FE  
            __end_of_i2c_start 2390              __end_of_i2c_write 2370                        ??_putch 0001  
                   __pbssBANK0 0060         write_external_eeprom@i 0003                      ?_i2c_idle 0001  
                    ?_i2c_read 0001                      ?_i2c_stop 0001                     _clcd_print 1F3E  
                   _clcd_putch 22BA                     _clcd_write 219E   write_external_eeprom@address 0005  
                 ?_store_event 0001                read_ds1307@data 0003              read_switches@once 005E  
                      _ACKSTAT 7E2E                      ?___xxtofl 0008                    password@key 001F  
                      _SSPCON1 0FC6                      ?_get_time 0001                  _read_switches 1E54  
                   ??_i2c_idle 0001                     ??_i2c_read 0001              __end_of_dashboard 1674  
                   ??_i2c_stop 0001                      ?_init_i2c 0001           __end_of_download_log 141C  
                    ?_init_adc 0001                      ?_read_adc 0001              __end_of_clear_log 1AEA  
                    ?_scan_key 0001        ??_write_external_eeprom 0003                        __Hparam 0000  
                    ?_password 0001                        __Lparam 0000                      ?_my_strcp 0001  
                      ___fldiv 0012                        ___awdiv 1962                        ___awmod 1AEA  
                    ?_view_log 0001                        ___fltol 177C                        ___lwdiv 1ECA  
                 store_event@k 000A                        ___lwmod 200E                        __pcinit 1FAA  
                      __ramtop 0600                        __ptext0 0D2C                        __ptext1 0F30  
                      __ptext2 0744                        __ptext3 1E54                        __ptext4 1674  
                      __ptext5 2118                        __ptext6 0A44                        __ptext7 1CC8  
                      __ptext8 1962                        __ptext9 141C              __end_of_init_clcd 1C42  
                   ??___xxtofl 000C              __end_of_init_uart 2324               ___awmod@dividend 0009  
                ??_change_pass 0011                        _pre_key 005A                   init_config@j 0006  
                      _settime 0744                 ?_read_switches 0001                     ??_get_time 0004  
               __pintcode_body 2072           end_of_initialization 2000                     clear_log@k 0009  
                      menu@key 0011                     ??_init_i2c 0001                     ??_init_adc 0001  
                __Lmediumconst 2E7E                     ??_read_adc 0003                        int_func 2072  
                   ??_scan_key 0001                    ?_clcd_print 0003                    ?_clcd_putch 000F  
                  ?_clcd_write 0001              __end_of_my_strcmp 1D4C                     ??_password 0011  
                   _tick_count 005D                     _reset_flag 0049                     ??_my_strcp 0003  
                      postdec1 0FE5                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE                     ??_view_log 0011  
               _download_array 0060                      _PORTBbits 0F81                read_adc@channel 0007  
                password@delay 001B                   _display_time 2348                  i2c_write@data 0001  
                   _view_array 006B                  ___xxtofl@sign 0010                    my_strcp@one 0001  
                  my_strcp@two 0002                read_adc@reg_val 0005                    ___fldiv@grs 0029  
                  ___fldiv@rem 0022                     _star_index 0053            __end_of_change_pass 0744  
     read_external_eeprom@data 0003                   ??_i2c_no_ack 0001                   ?_i2c_rx_mode 0001  
                __pidataCOMRAM 2396                    _adc_reg_val 0042                    view_log@key 0018  
          start_initialization 1FAA                ??_read_switches 0001                      _i2c_start 2388  
             change_pass@delay 0013                    __end_of_isr 20D0                      _i2c_write 2364  
           __end_of_i2c_no_ack 2396          __end_of_i2c_rep_start 2378                  ??_init_ds1307 0004  
                  __pdataBANK0 00A4                  ??_read_ds1307 0002                   _download_log 12D8  
  read_switches@detection_type 0001                  ??_init_config 0006                      ___fldiv@a 001A  
                    ___fldiv@b 0016                  ??_init_timer0 0001                    __pbssCOMRAM 0039  
                  _change_pass 03AC                     ?_i2c_start 0001                     ?_i2c_write 0001  
               change_pass@key 0017                   change_pass@k 0018                      _dashboard 1558  
             ___lwdiv@dividend 0001  __end_of_write_external_eeprom 219E                      _clear_log 1A26  
                    __pintcode 0008                  __pmediumconst 2E7E                       ?___fldiv 0016  
                     ?___awdiv 0001                       ?___awmod 0009                       ?___fltol 002F  
           read_ds1307@address 0002                       ?___lwdiv 0001                      _clock_reg 0039  
                     ?___lwmod 0001                    _apend_index 004E            __end_of_init_ds1307 2118  
                     ?_settime 0001            __end_of_read_ds1307 2262               ___lwdiv@quotient 0005  
                    _init_clcd 1B9A            __end_of_init_config 1CC8                      _init_uart 2312  
                    _log_index 0052                  ?_write_ds1307 0002            __end_of_init_timer0 2312  
  read_external_eeprom@address 0002                   ??_clcd_print 0006                   ??_clcd_putch 0010  
   __end_of_init_matrix_keypad 2336                   ??_clcd_write 0002                     ?_dashboard 0001  
                     i2u353_40 2082                       i2u353_41 207E                       i2u354_40 20B8  
                     i2u354_41 20B4                     ?_clear_log 0001                      _my_strcmp 1CC8  
                 password@wait 0013                  download_log@j 000F          clcd_write@control_bit 0001  
                   my_strcmp@k 0007                      _star_flag 0054                     settime@key 0013  
                  ??_i2c_start 0001             __end_of_clcd_print 1FAA                    ??_i2c_write 0001  
           __end_of_clcd_putch 22D2             __end_of_clcd_write 21D8                     ?_init_clcd 0001  
                   ?_init_uart 0001                      copy_data0 1FBE                 ??_write_ds1307 0003  
                     _i2c_idle 2336                       _i2c_read 2358                       _i2c_stop 2380  
                _temp_password 009A                       __Hrparam 0000                   clear_log@key 0008  
                     __Lrparam 0000                     ?_my_strcmp 0001   __end_of_read_external_eeprom 2238  
                  _init_ds1307 20D0                    _read_ds1307 2238                    _init_config 1C42  
                     ___xxtofl 1124            write_ds1307@address 0003                    _init_timer0 22FE  
              ___lwdiv@divisor 0003                ___lwdiv@counter 0007                       __ptext10 1C42  
                     __ptext11 2312                       __ptext20 220E                       __ptext12 22FE  
                     __ptext21 21D8                       __ptext13 2324                       __ptext30 2378  
                     __ptext22 22E8                       __ptext14 22D2                       __ptext31 2390  
                     __ptext23 1AEA                       __ptext15 20D0                       __ptext40 1DD0  
                     __ptext32 2348                       __ptext24 1558                       __ptext16 2282  
                     __ptext41 22BA                       __ptext33 1A26                       __ptext25 1882  
                     __ptext17 1B9A                       __ptext42 1F3E                       __ptext34 03AC  
                     __ptext26 1D4C                       __ptext18 2262                       __ptext43 219E  
                     __ptext35 215E                       __ptext27 2238                       __ptext19 12D8  
                     __ptext44 200E                       __ptext36 2364                       __ptext28 2370  
                     __ptext45 1ECA                       __ptext37 2380                       __ptext29 2358  
                     __ptext46 1124                       __ptext38 2388                       __ptext47 177C  
                     __ptext39 2336                       __ptext48 0012                       _get_time 1D4C  
                     _init_i2c 22D2                       _init_adc 2262                       _read_adc 2118  
                     _key_time 0040                       _scan_key 1674                    ??_dashboard 0011  
                     _password 0A44                    ??_clear_log 0008                  ??_store_event 0008  
                     _pos_flag 0045                       isa$xinst 0000                       _my_strcp 1DD0  
                     _overflow 0050                       int$flags 005F                       _view_log 0F30  
                    my_strcp@k 0007                      view_log@j 0016                      putch@byte 0001  
                 ?_change_pass 0001                       isr@count 0081                    ??_init_clcd 0003  
        __end_of_read_switches 1ECA                    ??_init_uart 0001                       intlevel2 0000  
             ___lwmod@dividend 0001                    ??_my_strcmp 0003           __end_of_write_ds1307 22A0  
          __end_of_store_event 1962                ___lwmod@divisor 0003                ___lwmod@counter 0005  
                  _press_delay 0085               write_ds1307@data 0002           _read_external_eeprom 220E  
                 my_strcp@last 0005  
