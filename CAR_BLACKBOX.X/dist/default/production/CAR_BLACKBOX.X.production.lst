

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat May 25 21:21:54 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4580 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     
    90                           	psect	idataCOMRAM
    91   001518                     __pidataCOMRAM:
    92                           	callstack 0
    93                           
    94                           ;initializer for dashboard@F10501
    95   001518  95                 	db	low STR_3
    96   001519  98                 	db	low STR_4
    97   00151A  92                 	db	low STR_5
    98   00151B  86                 	db	low STR_6
    99   00151C  89                 	db	low STR_7
   100   00151D  8C                 	db	low STR_8
   101   00151E  8F                 	db	low STR_9
   102   00151F  83                 	db	low STR_10
   103                           
   104                           ;initializer for _chance
   105   001520  02                 	db	2
   106                           
   107                           ;initializer for _tick_count
   108   001521  B4                 	db	180
   109                           
   110                           ;initializer for read_switches@once
   111   001522  01                 	db	1
   112   000000                     _SSPADD	set	4040
   113   000000                     _SSPCON1	set	4038
   114   000000                     _ADRESL	set	4035
   115   000000                     _ADRESH	set	4036
   116   000000                     _ACKSTAT	set	32302
   117   000000                     _CKE	set	32318
   118   000000                     _RBPU	set	32655
   119   000000                     _VCFG1	set	32269
   120   000000                     _GODONE	set	32273
   121   000000                     _PORTBbits	set	3969
   122   000000                     _ADCON1	set	4033
   123   000000                     _TRISD	set	3989
   124   000000                     _ADCON0	set	4034
   125   000000                     _PSA	set	32427
   126   000000                     _TMR0ON	set	32431
   127   000000                     _T0CS	set	32429
   128   000000                     _TMR0IF	set	32658
   129   000000                     _ACKEN	set	32300
   130   000000                     _ACKDT	set	32301
   131   000000                     _RCEN	set	32299
   132   000000                     _RSEN	set	32297
   133   000000                     _PEN	set	32298
   134   000000                     _SEN	set	32296
   135   000000                     _SMP	set	32319
   136   000000                     _TRISC4	set	31908
   137   000000                     _TRISC3	set	31907
   138   000000                     _PEIE	set	32662
   139   000000                     _GIE	set	32663
   140   000000                     _RD7	set	31775
   141   000000                     _RC0	set	31760
   142   000000                     _RC2	set	31762
   143   000000                     _GO	set	32273
   144   000000                     _ADON	set	32272
   145   000000                     _VCFG0	set	32268
   146   000000                     _ADCS2	set	32258
   147   000000                     _ADCS1	set	32257
   148   000000                     _ADCS0	set	32256
   149   000000                     _ACQT0	set	32259
   150   000000                     _ACQT1	set	32260
   151   000000                     _ACQT2	set	32261
   152   000000                     _PORTB	set	3969
   153   000000                     _RC1	set	31761
   154   000000                     _ADFM	set	32263
   155   000000                     _TRISB	set	3987
   156   000000                     _TRISC	set	3988
   157   000000                     _PORTD	set	3971
   158   000000                     _TRISD7	set	31919
   159   000000                     _SSPIF	set	31987
   160   000000                     _TMR0IE	set	32661
   161   000000                     _TMR0	set	4054
   162   000000                     _SSPBUF	set	4041
   163   000000                     _T08BIT	set	32430
   164   000000                     _BCLIF	set	32011
   165                           
   166                           	psect	smallconst
   167   000600                     __psmallconst:
   168                           	callstack 0
   169   000600  00                 	db	0
   170   000601                     STR_13:
   171   000601  20                 	db	32
   172   000602  20                 	db	32
   173   000603  20                 	db	32
   174   000604  20                 	db	32
   175   000605  20                 	db	32
   176   000606  20                 	db	32
   177   000607  53                 	db	83	;'S'
   178   000608  55                 	db	85	;'U'
   179   000609  43                 	db	67	;'C'
   180   00060A  43                 	db	67	;'C'
   181   00060B  45                 	db	69	;'E'
   182   00060C  53                 	db	83	;'S'
   183   00060D  53                 	db	83	;'S'
   184   00060E  20                 	db	32
   185   00060F  20                 	db	32
   186   000610  20                 	db	32
   187   000611  20                 	db	32
   188   000612  20                 	db	32
   189   000613  00                 	db	0
   190   000614                     STR_16:
   191   000614  20                 	db	32
   192   000615  20                 	db	32
   193   000616  20                 	db	32
   194   000617  54                 	db	84	;'T'
   195   000618  72                 	db	114	;'r'
   196   000619  79                 	db	121	;'y'
   197   00061A  20                 	db	32
   198   00061B  41                 	db	65	;'A'
   199   00061C  67                 	db	103	;'g'
   200   00061D  61                 	db	97	;'a'
   201   00061E  69                 	db	105	;'i'
   202   00061F  6E                 	db	110	;'n'
   203   000620  20                 	db	32
   204   000621  20                 	db	32
   205   000622  20                 	db	32
   206   000623  20                 	db	32
   207   000624  00                 	db	0
   208   000625                     STR_11:
   209   000625  20                 	db	32
   210   000626  45                 	db	69	;'E'
   211   000627  6E                 	db	110	;'n'
   212   000628  74                 	db	116	;'t'
   213   000629  65                 	db	101	;'e'
   214   00062A  72                 	db	114	;'r'
   215   00062B  20                 	db	32
   216   00062C  50                 	db	80	;'P'
   217   00062D  61                 	db	97	;'a'
   218   00062E  73                 	db	115	;'s'
   219   00062F  73                 	db	115	;'s'
   220   000630  77                 	db	119	;'w'
   221   000631  6F                 	db	111	;'o'
   222   000632  72                 	db	114	;'r'
   223   000633  64                 	db	100	;'d'
   224   000634  20                 	db	32
   225   000635  00                 	db	0
   226   000636                     STR_2:
   227   000636  20                 	db	32
   228   000637  20                 	db	32
   229   000638  54                 	db	84	;'T'
   230   000639  49                 	db	73	;'I'
   231   00063A  4D                 	db	77	;'M'
   232   00063B  45                 	db	69	;'E'
   233   00063C  20                 	db	32
   234   00063D  20                 	db	32
   235   00063E  20                 	db	32
   236   00063F  20                 	db	32
   237   000640  45                 	db	69	;'E'
   238   000641  56                 	db	86	;'V'
   239   000642  20                 	db	32
   240   000643  20                 	db	32
   241   000644  53                 	db	83	;'S'
   242   000645  50                 	db	80	;'P'
   243   000646  00                 	db	0
   244   000647                     STR_12:
   245   000647  20                 	db	32
   246   000648  20                 	db	32
   247   000649  20                 	db	32
   248   00064A  20                 	db	32
   249   00064B  20                 	db	32
   250   00064C  20                 	db	32
   251   00064D  20                 	db	32
   252   00064E  20                 	db	32
   253   00064F  20                 	db	32
   254   000650  20                 	db	32
   255   000651  20                 	db	32
   256   000652  20                 	db	32
   257   000653  20                 	db	32
   258   000654  20                 	db	32
   259   000655  20                 	db	32
   260   000656  00                 	db	0
   261   000657                     STR_14:
   262   000657  20                 	db	32
   263   000658  53                 	db	83	;'S'
   264   000659  79                 	db	121	;'y'
   265   00065A  73                 	db	115	;'s'
   266   00065B  74                 	db	116	;'t'
   267   00065C  65                 	db	101	;'e'
   268   00065D  6D                 	db	109	;'m'
   269   00065E  20                 	db	32
   270   00065F  42                 	db	66	;'B'
   271   000660  6C                 	db	108	;'l'
   272   000661  6F                 	db	111	;'o'
   273   000662  63                 	db	99	;'c'
   274   000663  6B                 	db	107	;'k'
   275   000664  65                 	db	101	;'e'
   276   000665  64                 	db	100	;'d'
   277   000666  00                 	db	0
   278   000667                     STR_17:
   279   000667  20                 	db	32
   280   000668  43                 	db	67	;'C'
   281   000669  68                 	db	104	;'h'
   282   00066A  61                 	db	97	;'a'
   283   00066B  6E                 	db	110	;'n'
   284   00066C  63                 	db	99	;'c'
   285   00066D  65                 	db	101	;'e'
   286   00066E  73                 	db	115	;'s'
   287   00066F  20                 	db	32
   288   000670  4C                 	db	76	;'L'
   289   000671  65                 	db	101	;'e'
   290   000672  66                 	db	102	;'f'
   291   000673  74                 	db	116	;'t'
   292   000674  20                 	db	32
   293   000675  00                 	db	0
   294   000676                     STR_1:
   295   000676  4D                 	db	77	;'M'
   296   000677  65                 	db	101	;'e'
   297   000678  6E                 	db	110	;'n'
   298   000679  75                 	db	117	;'u'
   299   00067A  20                 	db	32
   300   00067B  45                 	db	69	;'E'
   301   00067C  6E                 	db	110	;'n'
   302   00067D  74                 	db	116	;'t'
   303   00067E  65                 	db	101	;'e'
   304   00067F  72                 	db	114	;'r'
   305   000680  65                 	db	101	;'e'
   306   000681  64                 	db	100	;'d'
   307   000682  00                 	db	0
   308   000683                     STR_10:
   309   000683  43                 	db	67	;'C'
   310   000684  20                 	db	32
   311   000685  00                 	db	0
   312   000686                     STR_6:
   313   000686  47                 	db	71	;'G'
   314   000687  31                 	db	49	;'1'
   315   000688  00                 	db	0
   316   000689                     STR_7:
   317   000689  47                 	db	71	;'G'
   318   00068A  32                 	db	50	;'2'
   319   00068B  00                 	db	0
   320   00068C                     STR_8:
   321   00068C  47                 	db	71	;'G'
   322   00068D  33                 	db	51	;'3'
   323   00068E  00                 	db	0
   324   00068F                     STR_9:
   325   00068F  47                 	db	71	;'G'
   326   000690  34                 	db	52	;'4'
   327   000691  00                 	db	0
   328   000692                     STR_5:
   329   000692  47                 	db	71	;'G'
   330   000693  4E                 	db	78	;'N'
   331   000694  00                 	db	0
   332   000695                     STR_3:
   333   000695  4F                 	db	79	;'O'
   334   000696  4E                 	db	78	;'N'
   335   000697  00                 	db	0
   336   000698                     STR_4:
   337   000698  47                 	db	71	;'G'
   338   000699  52                 	db	82	;'R'
   339   00069A  00                 	db	0
   340   00069B  00                 	db	0	; dummy byte at the end
   341   000000                     
   342                           ; #config settings
   343                           
   344                           	psect	cinit
   345   001384                     __pcinit:
   346                           	callstack 0
   347   001384                     start_initialization:
   348                           	callstack 0
   349   001384                     __initialization:
   350                           	callstack 0
   351                           
   352                           ; Initialize objects allocated to COMRAM (11 bytes)
   353                           ; load TBLPTR registers with __pidataCOMRAM
   354   001384  0E18               	movlw	low __pidataCOMRAM
   355   001386  6EF6               	movwf	tblptrl,c
   356   001388  0E15               	movlw	high __pidataCOMRAM
   357   00138A  6EF7               	movwf	tblptrh,c
   358   00138C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   359   00138E  6EF8               	movwf	tblptru,c
   360   001390  EE00  F044         	lfsr	0,__pdataCOMRAM
   361   001394  EE10 F00B          	lfsr	1,11
   362   001398                     copy_data0:
   363   001398  0009               	tblrd		*+
   364   00139A  CFF5 FFEE          	movff	tablat,postinc0
   365   00139E  50E5               	movf	postdec1,w,c
   366   0013A0  50E1               	movf	fsr1l,w,c
   367   0013A2  E1FA               	bnz	copy_data0
   368                           
   369                           ; Clear objects allocated to COMRAM (35 bytes)
   370   0013A4  EE00  F001         	lfsr	0,__pbssCOMRAM
   371   0013A8  0E23               	movlw	35
   372   0013AA                     clear_0:
   373   0013AA  6AEE               	clrf	postinc0,c
   374   0013AC  06E8               	decf	wreg,f,c
   375   0013AE  E1FD               	bnz	clear_0
   376   0013B0                     end_of_initialization:
   377                           	callstack 0
   378   0013B0                     __end_of__initialization:
   379                           	callstack 0
   380   0013B0  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   381   0013B2  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   382   0013B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   383   0013B6  6EF8               	movwf	tblptru,c
   384   0013B8  0100               	movlb	0
   385   0013BA  EF20  F006         	goto	_main	;jump to C main() function
   386                           
   387                           	psect	bssCOMRAM
   388   000001                     __pbssCOMRAM:
   389                           	callstack 0
   390   000001                     isr@count:
   391                           	callstack 0
   392   000001                     	ds	4
   393   000005                     _clock_reg:
   394                           	callstack 0
   395   000005                     	ds	3
   396   000008                     _delay:
   397                           	callstack 0
   398   000008                     	ds	2
   399   00000A                     _i:
   400                           	callstack 0
   401   00000A                     	ds	2
   402   00000C                     _adc_reg_val:
   403                           	callstack 0
   404   00000C                     	ds	2
   405   00000E                     read_switches@key:
   406                           	callstack 0
   407   00000E                     	ds	1
   408   00000F                     _key:
   409                           	callstack 0
   410   00000F                     	ds	1
   411   000010                     _flag:
   412                           	callstack 0
   413   000010                     	ds	1
   414   000011                     _time:
   415                           	callstack 0
   416   000011                     	ds	9
   417   00001A                     _temp_password:
   418                           	callstack 0
   419   00001A                     	ds	5
   420   00001F                     _pass:
   421                           	callstack 0
   422   00001F                     	ds	5
   423                           
   424                           	psect	dataCOMRAM
   425   000044                     __pdataCOMRAM:
   426                           	callstack 0
   427   000044                     dashboard@F10501:
   428                           	callstack 0
   429   000044                     	ds	8
   430   00004C                     _chance:
   431                           	callstack 0
   432   00004C                     	ds	1
   433   00004D                     _tick_count:
   434                           	callstack 0
   435   00004D                     	ds	1
   436   00004E                     read_switches@once:
   437                           	callstack 0
   438   00004E                     	ds	1
   439                           
   440                           	psect	cstackCOMRAM
   441   000024                     __pcstackCOMRAM:
   442                           	callstack 0
   443   000024                     ?_read_adc:
   444                           	callstack 0
   445   000024                     ?_my_strcmp:
   446                           	callstack 0
   447   000024                     ?___awdiv:
   448                           	callstack 0
   449   000024                     ?___lwdiv:
   450                           	callstack 0
   451   000024                     clcd_write@control_bit:
   452                           	callstack 0
   453   000024                     read_switches@detection_type:
   454                           	callstack 0
   455   000024                     my_strcmp@one:
   456                           	callstack 0
   457   000024                     i2c_write@data:
   458                           	callstack 0
   459   000024                     ___awdiv@dividend:
   460                           	callstack 0
   461   000024                     ___lwdiv@dividend:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x0
   465   000024                     	ds	1
   466   000025                     clcd_write@byte:
   467                           	callstack 0
   468   000025                     my_strcmp@two:
   469                           	callstack 0
   470   000025                     write_ds1307@data:
   471                           	callstack 0
   472   000025                     read_ds1307@address:
   473                           	callstack 0
   474   000025                     write_external_eeprom@data:
   475                           	callstack 0
   476   000025                     read_external_eeprom@address:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x1
   480   000025                     	ds	1
   481   000026                     ??_read_adc:
   482   000026                     ??_init_clcd:
   483   000026                     ??_my_strcmp:
   484   000026                     write_ds1307@address:
   485                           	callstack 0
   486   000026                     read_ds1307@data:
   487                           	callstack 0
   488   000026                     read_external_eeprom@data:
   489                           	callstack 0
   490   000026                     clcd_print@data:
   491                           	callstack 0
   492   000026                     write_external_eeprom@i:
   493                           	callstack 0
   494   000026                     ___awdiv@divisor:
   495                           	callstack 0
   496   000026                     ___lwdiv@divisor:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x2
   500   000026                     	ds	1
   501   000027                     init_ds1307@dummy:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x3
   505   000027                     	ds	1
   506   000028                     clcd_print@addr:
   507                           	callstack 0
   508   000028                     write_external_eeprom@address:
   509                           	callstack 0
   510   000028                     ___awdiv@counter:
   511                           	callstack 0
   512   000028                     read_adc@reg_val:
   513                           	callstack 0
   514   000028                     my_strcmp@last:
   515                           	callstack 0
   516   000028                     ___lwdiv@quotient:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x4
   520   000028                     	ds	1
   521   000029                     ___awdiv@sign:
   522                           	callstack 0
   523   000029                     init_config@j:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x5
   527   000029                     	ds	1
   528   00002A                     read_adc@channel:
   529                           	callstack 0
   530   00002A                     ___lwdiv@counter:
   531                           	callstack 0
   532   00002A                     my_strcmp@k:
   533                           	callstack 0
   534   00002A                     ___awdiv@quotient:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x6
   538   00002A                     	ds	1
   539   00002B                     ?___lwmod:
   540                           	callstack 0
   541   00002B                     ___lwmod@dividend:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x7
   545   00002B                     	ds	1
   546   00002C                     ?___awmod:
   547                           	callstack 0
   548   00002C                     ___awmod@dividend:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x8
   552   00002C                     	ds	1
   553   00002D                     ___lwmod@divisor:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x9
   557   00002D                     	ds	1
   558   00002E                     ___awmod@divisor:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0xA
   562   00002E                     	ds	1
   563   00002F                     ___lwmod@counter:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0xB
   567   00002F                     	ds	1
   568   000030                     ___awmod@counter:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0xC
   572   000030                     	ds	1
   573   000031                     ___awmod@sign:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0xD
   577   000031                     	ds	1
   578   000032                     clcd_putch@addr:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0xE
   582   000032                     	ds	1
   583   000033                     clcd_putch@data:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0xF
   587   000033                     	ds	1
   588   000034                     ??_dashboard:
   589   000034                     ??_password:
   590                           
   591                           ; 1 bytes @ 0x10
   592   000034                     	ds	1
   593   000035                     dashboard@events:
   594                           	callstack 0
   595                           
   596                           ; 8 bytes @ 0x11
   597   000035                     	ds	1
   598   000036                     password@wait:
   599                           	callstack 0
   600                           
   601                           ; 8 bytes @ 0x12
   602   000036                     	ds	8
   603   00003E                     password@delay:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0x1A
   607   00003E                     	ds	4
   608   000042                     password@key:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x1E
   612   000042                     	ds	1
   613   000043                     main@main_f:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x1F
   617   000043                     	ds	1
   618                           
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 45 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  main_f          1   31[COMRAM] unsigned char 
   629 ;;  menu_f          1    0        unsigned char 
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   639 ;;      Params:         0       0       0       0       0       0       0
   640 ;;      Locals:         1       0       0       0       0       0       0
   641 ;;      Temps:          0       0       0       0       0       0       0
   642 ;;      Totals:         1       0       0       0       0       0       0
   643 ;;Total ram usage:        1 bytes
   644 ;; Hardware stack levels required when called: 7
   645 ;; This function calls:
   646 ;;		_clcd_print
   647 ;;		_clcd_write
   648 ;;		_dashboard
   649 ;;		_init_config
   650 ;;		_menu
   651 ;;		_password
   652 ;;		_read_adc
   653 ;;		_read_switches
   654 ;; This function is called by:
   655 ;;		Startup code after reset
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text0
   660   000C40                     __ptext0:
   661                           	callstack 0
   662   000C40                     _main:
   663                           	callstack 24
   664   000C40                     
   665                           ;main.c: 46:     init_config();
   666   000C40  EC13  F008         	call	_init_config	;wreg free
   667   000C44                     
   668                           ;main.c: 48:     char main_f = 0, menu_f = 0;
   669   000C44  0E00               	movlw	0
   670   000C46  6E43               	movwf	main@main_f^0,c
   671   000C48                     l2324:
   672                           
   673                           ;main.c: 51:         key = read_switches(1);
   674   000C48  0E01               	movlw	1
   675   000C4A  EC50  F008         	call	_read_switches
   676   000C4E  6E0F               	movwf	_key^0,c
   677   000C50                     
   678                           ;main.c: 52:         adc_reg_val = read_adc(0x04);
   679   000C50  0E04               	movlw	4
   680   000C52  EC7F  F009         	call	_read_adc
   681   000C56  C024  F00C         	movff	?_read_adc,_adc_reg_val
   682   000C5A  C025  F00D         	movff	?_read_adc+1,_adc_reg_val+1
   683   000C5E                     
   684                           ;main.c: 54:         if (main_f == 0) {
   685   000C5E  5043               	movf	main@main_f^0,w,c
   686   000C60  A4D8               	btfss	status,2,c
   687   000C62  EF35  F006         	goto	u1461
   688   000C66  EF37  F006         	goto	u1460
   689   000C6A                     u1461:
   690   000C6A  EF4B  F006         	goto	l2338
   691   000C6E                     u1460:
   692   000C6E                     
   693                           ;main.c: 55:             dashboard();
   694   000C6E  ECDF  F004         	call	_dashboard	;wreg free
   695   000C72                     
   696                           ;main.c: 56:             if (key == 5) {
   697   000C72  0E05               	movlw	5
   698   000C74  180F               	xorwf	_key^0,w,c
   699   000C76  A4D8               	btfss	status,2,c
   700   000C78  EF40  F006         	goto	u1471
   701   000C7C  EF42  F006         	goto	u1470
   702   000C80                     u1471:
   703   000C80  EF24  F006         	goto	l2324
   704   000C84                     u1470:
   705   000C84                     
   706                           ;main.c: 57:                 clcd_write(0x01, 0);
   707   000C84  0E00               	movlw	0
   708   000C86  6E24               	movwf	clcd_write@control_bit^0,c
   709   000C88  0E01               	movlw	1
   710   000C8A  ECDF  F009         	call	_clcd_write
   711   000C8E                     
   712                           ;main.c: 58:                 main_f = 1;
   713   000C8E  0E01               	movlw	1
   714   000C90  6E43               	movwf	main@main_f^0,c
   715   000C92  EF24  F006         	goto	l2324
   716   000C96                     l2338:
   717   000C96  0443               	decf	main@main_f^0,w,c
   718   000C98  A4D8               	btfss	status,2,c
   719   000C9A  EF51  F006         	goto	u1481
   720   000C9E  EF53  F006         	goto	u1480
   721   000CA2                     u1481:
   722   000CA2  EF67  F006         	goto	l2348
   723   000CA6                     u1480:
   724   000CA6                     
   725                           ;main.c: 61:             password(key);
   726   000CA6  500F               	movf	_key^0,w,c
   727   000CA8  EC4E  F003         	call	_password
   728   000CAC                     
   729                           ;main.c: 62:             if(flag==1)
   730   000CAC  0410               	decf	_flag^0,w,c
   731   000CAE  A4D8               	btfss	status,2,c
   732   000CB0  EF5C  F006         	goto	u1491
   733   000CB4  EF5E  F006         	goto	u1490
   734   000CB8                     u1491:
   735   000CB8  EF7F  F006         	goto	l125
   736   000CBC                     u1490:
   737   000CBC                     
   738                           ;main.c: 63:             {;main.c: 64:                 clcd_write(0x01, 0);
   739   000CBC  0E00               	movlw	0
   740   000CBE  6E24               	movwf	clcd_write@control_bit^0,c
   741   000CC0  0E01               	movlw	1
   742   000CC2  ECDF  F009         	call	_clcd_write
   743   000CC6                     
   744                           ;main.c: 65:                 main_f=2;
   745   000CC6  0E02               	movlw	2
   746   000CC8  6E43               	movwf	main@main_f^0,c
   747   000CCA  EF24  F006         	goto	l2324
   748   000CCE                     l2348:
   749   000CCE  0E02               	movlw	2
   750   000CD0  1843               	xorwf	main@main_f^0,w,c
   751   000CD2  A4D8               	btfss	status,2,c
   752   000CD4  EF6E  F006         	goto	u1501
   753   000CD8  EF70  F006         	goto	u1500
   754   000CDC                     u1501:
   755   000CDC  EF7F  F006         	goto	l125
   756   000CE0                     u1500:
   757   000CE0                     
   758                           ;main.c: 69:         {;main.c: 70:             menu(key);
   759   000CE0  500F               	movf	_key^0,w,c
   760   000CE2  ECA5  F00A         	call	_menu
   761   000CE6                     
   762                           ;main.c: 71:             clcd_print("Menu Entered", (0x80 + (0)));
   763   000CE6  0E76               	movlw	low STR_1
   764   000CE8  6E26               	movwf	clcd_print@data^0,c
   765   000CEA  5026               	movf	clcd_print@data^0,w,c
   766   000CEC  A4D8               	btfss	status,2,c
   767   000CEE  0E06               	movlw	high __smallconst
   768   000CF0  6E27               	movwf	(clcd_print@data+1)^0,c
   769   000CF2  0E80               	movlw	128
   770   000CF4  6E28               	movwf	clcd_print@addr^0,c
   771   000CF6  ECC5  F008         	call	_clcd_print	;wreg free
   772   000CFA  EF24  F006         	goto	l2324
   773   000CFE                     l125:
   774   000CFE  EF24  F006         	goto	l2324
   775   000D02  EF07  F000         	goto	start
   776   000D06                     __end_of_main:
   777                           	callstack 0
   778                           
   779 ;; *************** function _read_switches *****************
   780 ;; Defined at:
   781 ;;		line 89 in file "matrix_keypad.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;  detection_ty    1    wreg     unsigned char 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  detection_ty    1    0[COMRAM] unsigned char 
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      unsigned char 
   788 ;; Registers used:
   789 ;;		wreg, status,2, status,0, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   795 ;;      Params:         0       0       0       0       0       0       0
   796 ;;      Locals:         1       0       0       0       0       0       0
   797 ;;      Temps:          0       0       0       0       0       0       0
   798 ;;      Totals:         1       0       0       0       0       0       0
   799 ;;Total ram usage:        1 bytes
   800 ;; Hardware stack levels used: 1
   801 ;; Hardware stack levels required when called: 2
   802 ;; This function calls:
   803 ;;		_scan_key
   804 ;; This function is called by:
   805 ;;		_main
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text1
   810   0010A0                     __ptext1:
   811                           	callstack 0
   812   0010A0                     _read_switches:
   813                           	callstack 28
   814                           
   815                           ;incstack = 0
   816                           ;read_switches@detection_type stored from wreg
   817   0010A0  6E24               	movwf	read_switches@detection_type^0,c
   818   0010A2                     
   819                           ;matrix_keypad.c: 89: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 90: {;matrix_keypad.c: 91:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 93:  if (detection_type == 1)
   820   0010A2  0424               	decf	read_switches@detection_type^0,w,c
   821   0010A4  A4D8               	btfss	status,2,c
   822   0010A6  EF57  F008         	goto	u1201
   823   0010AA  EF59  F008         	goto	u1200
   824   0010AE                     u1201:
   825   0010AE  EF7D  F008         	goto	l2190
   826   0010B2                     u1200:
   827   0010B2                     
   828                           ;matrix_keypad.c: 94:  {;matrix_keypad.c: 95:   key = scan_key();
   829   0010B2  EC9C  F005         	call	_scan_key	;wreg free
   830   0010B6  6E0E               	movwf	read_switches@key^0,c
   831   0010B8                     
   832                           ;matrix_keypad.c: 96:   if(key != 0xFF && once )
   833   0010B8  280E               	incf	read_switches@key^0,w,c
   834   0010BA  B4D8               	btfsc	status,2,c
   835   0010BC  EF62  F008         	goto	u1211
   836   0010C0  EF64  F008         	goto	u1210
   837   0010C4                     u1211:
   838   0010C4  EF71  F008         	goto	l2186
   839   0010C8                     u1210:
   840   0010C8  504E               	movf	read_switches@once^0,w,c
   841   0010CA  B4D8               	btfsc	status,2,c
   842   0010CC  EF6A  F008         	goto	u1221
   843   0010D0  EF6C  F008         	goto	u1220
   844   0010D4                     u1221:
   845   0010D4  EF71  F008         	goto	l2186
   846   0010D8                     u1220:
   847   0010D8                     
   848                           ;matrix_keypad.c: 97:   {;matrix_keypad.c: 98:    once = 0;
   849   0010D8  0E00               	movlw	0
   850   0010DA  6E4E               	movwf	read_switches@once^0,c
   851                           
   852                           ;matrix_keypad.c: 99:    return key;
   853   0010DC  500E               	movf	read_switches@key^0,w,c
   854   0010DE  EF8A  F008         	goto	l178
   855   0010E2                     l2186:
   856   0010E2  280E               	incf	read_switches@key^0,w,c
   857   0010E4  A4D8               	btfss	status,2,c
   858   0010E6  EF77  F008         	goto	u1231
   859   0010EA  EF79  F008         	goto	u1230
   860   0010EE                     u1231:
   861   0010EE  EF89  F008         	goto	l2196
   862   0010F2                     u1230:
   863   0010F2                     
   864                           ;matrix_keypad.c: 102:   {;matrix_keypad.c: 103:    once = 1;
   865   0010F2  0E01               	movlw	1
   866   0010F4  6E4E               	movwf	read_switches@once^0,c
   867   0010F6  EF89  F008         	goto	l2196
   868   0010FA                     l2190:
   869   0010FA  5024               	movf	read_switches@detection_type^0,w,c
   870   0010FC  A4D8               	btfss	status,2,c
   871   0010FE  EF83  F008         	goto	u1241
   872   001102  EF85  F008         	goto	u1240
   873   001106                     u1241:
   874   001106  EF89  F008         	goto	l2196
   875   00110A                     u1240:
   876   00110A                     
   877                           ;matrix_keypad.c: 107:  {;matrix_keypad.c: 108:   return scan_key();
   878   00110A  EC9C  F005         	call	_scan_key	;wreg free
   879   00110E  EF8A  F008         	goto	l178
   880   001112                     l2196:
   881                           
   882                           ;matrix_keypad.c: 111:  return 0xFF;
   883   001112  0EFF               	movlw	255
   884   001114                     l178:
   885   001114  0012               	return		;funcret
   886   001116                     __end_of_read_switches:
   887                           	callstack 0
   888                           
   889 ;; *************** function _scan_key *****************
   890 ;; Defined at:
   891 ;;		line 19 in file "matrix_keypad.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      unsigned char 
   898 ;; Registers used:
   899 ;;		wreg
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   905 ;;      Params:         0       0       0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0
   908 ;;      Totals:         0       0       0       0       0       0       0
   909 ;;Total ram usage:        0 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_read_switches
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text2
   920   000B38                     __ptext2:
   921                           	callstack 0
   922   000B38                     _scan_key:
   923                           	callstack 28
   924   000B38                     
   925                           ;matrix_keypad.c: 21:  PORTBbits.RB5 = 0;
   926   000B38  9A81               	bcf	129,5,c	;volatile
   927                           
   928                           ;matrix_keypad.c: 22:  PORTBbits.RB6 = 1;
   929   000B3A  8C81               	bsf	129,6,c	;volatile
   930                           
   931                           ;matrix_keypad.c: 23:  PORTBbits.RB7 = 1;
   932   000B3C  8E81               	bsf	129,7,c	;volatile
   933                           
   934                           ;matrix_keypad.c: 25:  if (PORTBbits.RB1 == 0)
   935   000B3E  B281               	btfsc	129,1,c	;volatile
   936   000B40  EFA4  F005         	goto	u851
   937   000B44  EFA6  F005         	goto	u850
   938   000B48                     u851:
   939   000B48  EFA9  F005         	goto	l148
   940   000B4C                     u850:
   941   000B4C                     
   942                           ;matrix_keypad.c: 26:  {;matrix_keypad.c: 27:   return 1;
   943   000B4C  0E01               	movlw	1
   944   000B4E  EF1F  F006         	goto	l149
   945   000B52                     l148:
   946   000B52  B481               	btfsc	129,2,c	;volatile
   947   000B54  EFAE  F005         	goto	u861
   948   000B58  EFB0  F005         	goto	u860
   949   000B5C                     u861:
   950   000B5C  EFB3  F005         	goto	l151
   951   000B60                     u860:
   952   000B60                     
   953                           ;matrix_keypad.c: 30:  {;matrix_keypad.c: 31:   return 4;
   954   000B60  0E04               	movlw	4
   955   000B62  EF1F  F006         	goto	l149
   956   000B66                     l151:
   957   000B66  B681               	btfsc	129,3,c	;volatile
   958   000B68  EFB8  F005         	goto	u871
   959   000B6C  EFBA  F005         	goto	u870
   960   000B70                     u871:
   961   000B70  EFBD  F005         	goto	l153
   962   000B74                     u870:
   963   000B74                     
   964                           ;matrix_keypad.c: 34:  {;matrix_keypad.c: 35:   return 7;
   965   000B74  0E07               	movlw	7
   966   000B76  EF1F  F006         	goto	l149
   967   000B7A                     l153:
   968   000B7A  B881               	btfsc	129,4,c	;volatile
   969   000B7C  EFC2  F005         	goto	u881
   970   000B80  EFC4  F005         	goto	u880
   971   000B84                     u881:
   972   000B84  EFC7  F005         	goto	l150
   973   000B88                     u880:
   974   000B88                     
   975                           ;matrix_keypad.c: 38:  {;matrix_keypad.c: 39:   return 10;
   976   000B88  0E0A               	movlw	10
   977   000B8A  EF1F  F006         	goto	l149
   978   000B8E                     l150:
   979                           
   980                           ;matrix_keypad.c: 42:  PORTBbits.RB5 = 1;
   981   000B8E  8A81               	bsf	129,5,c	;volatile
   982                           
   983                           ;matrix_keypad.c: 43:  PORTBbits.RB6 = 0;
   984   000B90  9C81               	bcf	129,6,c	;volatile
   985                           
   986                           ;matrix_keypad.c: 44:  PORTBbits.RB7 = 1;
   987   000B92  8E81               	bsf	129,7,c	;volatile
   988                           
   989                           ;matrix_keypad.c: 46:  if (PORTBbits.RB1 == 0)
   990   000B94  B281               	btfsc	129,1,c	;volatile
   991   000B96  EFCF  F005         	goto	u891
   992   000B9A  EFD1  F005         	goto	u890
   993   000B9E                     u891:
   994   000B9E  EFD4  F005         	goto	l156
   995   000BA2                     u890:
   996   000BA2                     
   997                           ;matrix_keypad.c: 47:  {;matrix_keypad.c: 48:   return 2;
   998   000BA2  0E02               	movlw	2
   999   000BA4  EF1F  F006         	goto	l149
  1000   000BA8                     l156:
  1001   000BA8  B481               	btfsc	129,2,c	;volatile
  1002   000BAA  EFD9  F005         	goto	u901
  1003   000BAE  EFDB  F005         	goto	u900
  1004   000BB2                     u901:
  1005   000BB2  EFDE  F005         	goto	l158
  1006   000BB6                     u900:
  1007   000BB6                     
  1008                           ;matrix_keypad.c: 51:  {;matrix_keypad.c: 52:   return 5;
  1009   000BB6  0E05               	movlw	5
  1010   000BB8  EF1F  F006         	goto	l149
  1011   000BBC                     l158:
  1012   000BBC  B681               	btfsc	129,3,c	;volatile
  1013   000BBE  EFE3  F005         	goto	u911
  1014   000BC2  EFE5  F005         	goto	u910
  1015   000BC6                     u911:
  1016   000BC6  EFE8  F005         	goto	l160
  1017   000BCA                     u910:
  1018   000BCA                     
  1019                           ;matrix_keypad.c: 55:  {;matrix_keypad.c: 56:   return 8;
  1020   000BCA  0E08               	movlw	8
  1021   000BCC  EF1F  F006         	goto	l149
  1022   000BD0                     l160:
  1023   000BD0  B881               	btfsc	129,4,c	;volatile
  1024   000BD2  EFED  F005         	goto	u921
  1025   000BD6  EFEF  F005         	goto	u920
  1026   000BDA                     u921:
  1027   000BDA  EFF2  F005         	goto	l157
  1028   000BDE                     u920:
  1029   000BDE                     
  1030                           ;matrix_keypad.c: 59:  {;matrix_keypad.c: 60:   return 11;
  1031   000BDE  0E0B               	movlw	11
  1032   000BE0  EF1F  F006         	goto	l149
  1033   000BE4                     l157:
  1034                           
  1035                           ;matrix_keypad.c: 63:  PORTBbits.RB5 = 1;
  1036   000BE4  8A81               	bsf	129,5,c	;volatile
  1037                           
  1038                           ;matrix_keypad.c: 64:  PORTBbits.RB6 = 1;
  1039   000BE6  8C81               	bsf	129,6,c	;volatile
  1040                           
  1041                           ;matrix_keypad.c: 65:  PORTBbits.RB7 = 0;
  1042   000BE8  9E81               	bcf	129,7,c	;volatile
  1043                           
  1044                           ;matrix_keypad.c: 67:  PORTBbits.RB7 = 0;
  1045   000BEA  9E81               	bcf	129,7,c	;volatile
  1046                           
  1047                           ;matrix_keypad.c: 69:  if (PORTBbits.RB1 == 0)
  1048   000BEC  B281               	btfsc	129,1,c	;volatile
  1049   000BEE  EFFB  F005         	goto	u931
  1050   000BF2  EFFD  F005         	goto	u930
  1051   000BF6                     u931:
  1052   000BF6  EF00  F006         	goto	l163
  1053   000BFA                     u930:
  1054   000BFA                     
  1055                           ;matrix_keypad.c: 70:  {;matrix_keypad.c: 71:   return 3;
  1056   000BFA  0E03               	movlw	3
  1057   000BFC  EF1F  F006         	goto	l149
  1058   000C00                     l163:
  1059   000C00  B481               	btfsc	129,2,c	;volatile
  1060   000C02  EF05  F006         	goto	u941
  1061   000C06  EF07  F006         	goto	u940
  1062   000C0A                     u941:
  1063   000C0A  EF0A  F006         	goto	l165
  1064   000C0E                     u940:
  1065   000C0E                     
  1066                           ;matrix_keypad.c: 74:  {;matrix_keypad.c: 75:   return 6;
  1067   000C0E  0E06               	movlw	6
  1068   000C10  EF1F  F006         	goto	l149
  1069   000C14                     l165:
  1070   000C14  B681               	btfsc	129,3,c	;volatile
  1071   000C16  EF0F  F006         	goto	u951
  1072   000C1A  EF11  F006         	goto	u950
  1073   000C1E                     u951:
  1074   000C1E  EF14  F006         	goto	l167
  1075   000C22                     u950:
  1076   000C22                     
  1077                           ;matrix_keypad.c: 78:  {;matrix_keypad.c: 79:   return 9;
  1078   000C22  0E09               	movlw	9
  1079   000C24  EF1F  F006         	goto	l149
  1080   000C28                     l167:
  1081   000C28  B881               	btfsc	129,4,c	;volatile
  1082   000C2A  EF19  F006         	goto	u961
  1083   000C2E  EF1B  F006         	goto	u960
  1084   000C32                     u961:
  1085   000C32  EF1E  F006         	goto	l166
  1086   000C36                     u960:
  1087   000C36                     
  1088                           ;matrix_keypad.c: 82:  {;matrix_keypad.c: 83:   return 12;
  1089   000C36  0E0C               	movlw	12
  1090   000C38  EF1F  F006         	goto	l149
  1091   000C3C                     l166:
  1092   000C3C                     
  1093                           ;matrix_keypad.c: 86:  return 0xFF;
  1094   000C3C  0EFF               	movlw	255
  1095   000C3E                     l149:
  1096   000C3E  0012               	return		;funcret
  1097   000C40                     __end_of_scan_key:
  1098                           	callstack 0
  1099                           
  1100 ;; *************** function _read_adc *****************
  1101 ;; Defined at:
  1102 ;;		line 43 in file "adc.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  channel         1    wreg     unsigned char 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  channel         1    6[COMRAM] unsigned char 
  1107 ;;  reg_val         2    4[COMRAM] unsigned short 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  2    0[COMRAM] unsigned short 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1117 ;;      Params:         2       0       0       0       0       0       0
  1118 ;;      Locals:         3       0       0       0       0       0       0
  1119 ;;      Temps:          2       0       0       0       0       0       0
  1120 ;;      Totals:         7       0       0       0       0       0       0
  1121 ;;Total ram usage:        7 bytes
  1122 ;; Hardware stack levels used: 1
  1123 ;; Hardware stack levels required when called: 1
  1124 ;; This function calls:
  1125 ;;		Nothing
  1126 ;; This function is called by:
  1127 ;;		_main
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text3
  1132   0012FE                     __ptext3:
  1133                           	callstack 0
  1134   0012FE                     _read_adc:
  1135                           	callstack 29
  1136                           
  1137                           ;incstack = 0
  1138                           ;read_adc@channel stored from wreg
  1139   0012FE  6E2A               	movwf	read_adc@channel^0,c
  1140   001300                     
  1141                           ;adc.c: 43: unsigned short read_adc(unsigned char channel);adc.c: 44: {;adc.c: 45:  unsi
      +                          gned short reg_val;;adc.c: 48:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  1142   001300  C02A  F026         	movff	read_adc@channel,??_read_adc
  1143   001304  90D8               	bcf	status,0,c
  1144   001306  3626               	rlcf	??_read_adc^0,f,c
  1145   001308  90D8               	bcf	status,0,c
  1146   00130A  3626               	rlcf	??_read_adc^0,f,c
  1147   00130C  50C2               	movf	194,w,c	;volatile
  1148   00130E  0BC3               	andlw	195
  1149   001310  1026               	iorwf	??_read_adc^0,w,c
  1150   001312  6EC2               	movwf	194,c	;volatile
  1151   001314                     
  1152                           ;adc.c: 51:  GO = 1;
  1153   001314  82C2               	bsf	4034,1,c	;volatile
  1154   001316                     l36:
  1155   001316  B2C2               	btfsc	4034,1,c	;volatile
  1156   001318  EF90  F009         	goto	u1181
  1157   00131C  EF92  F009         	goto	u1180
  1158   001320                     u1181:
  1159   001320  EF8B  F009         	goto	l36
  1160   001324                     u1180:
  1161   001324                     
  1162                           ;adc.c: 53:  reg_val = (ADRESH << 8) | ADRESL;
  1163   001324  50C3               	movf	195,w,c	;volatile
  1164   001326  CFC4 F026          	movff	4036,??_read_adc	;volatile
  1165   00132A  6A27               	clrf	(??_read_adc+1)^0,c
  1166   00132C  C026  F027         	movff	??_read_adc,??_read_adc+1
  1167   001330  6A26               	clrf	??_read_adc^0,c
  1168   001332  1026               	iorwf	??_read_adc^0,w,c
  1169   001334  6E28               	movwf	read_adc@reg_val^0,c
  1170   001336  5027               	movf	(??_read_adc+1)^0,w,c
  1171   001338  6E29               	movwf	(read_adc@reg_val+1)^0,c
  1172   00133A                     
  1173                           ;adc.c: 55:  return reg_val;
  1174   00133A  C028  F024         	movff	read_adc@reg_val,?_read_adc
  1175   00133E  C029  F025         	movff	read_adc@reg_val+1,?_read_adc+1
  1176   001342  0012               	return		;funcret
  1177   001344                     __end_of_read_adc:
  1178                           	callstack 0
  1179                           
  1180 ;; *************** function _password *****************
  1181 ;; Defined at:
  1182 ;;		line 37 in file "password.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  key             1    wreg     unsigned char 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  key             1   30[COMRAM] unsigned char 
  1187 ;;  wait            8   18[COMRAM] unsigned long long 
  1188 ;;  delay           4   26[COMRAM] unsigned long 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1198 ;;      Params:         0       0       0       0       0       0       0
  1199 ;;      Locals:        13       0       0       0       0       0       0
  1200 ;;      Temps:          2       0       0       0       0       0       0
  1201 ;;      Totals:        15       0       0       0       0       0       0
  1202 ;;Total ram usage:       15 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; Hardware stack levels required when called: 3
  1205 ;; This function calls:
  1206 ;;		___awdiv
  1207 ;;		___awmod
  1208 ;;		_clcd_print
  1209 ;;		_clcd_putch
  1210 ;;		_clcd_write
  1211 ;;		_my_strcmp
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text4
  1218   00069C                     __ptext4:
  1219                           	callstack 0
  1220   00069C                     _password:
  1221                           	callstack 27
  1222                           
  1223                           ;incstack = 0
  1224                           ;password@key stored from wreg
  1225   00069C  6E42               	movwf	password@key^0,c
  1226   00069E                     
  1227                           ;password.c: 39:     clcd_print(" Enter Password ", (0x80 + (0)));
  1228   00069E  0E25               	movlw	low STR_11
  1229   0006A0  6E26               	movwf	clcd_print@data^0,c
  1230   0006A2  5026               	movf	clcd_print@data^0,w,c
  1231   0006A4  A4D8               	btfss	status,2,c
  1232   0006A6  0E06               	movlw	high __smallconst
  1233   0006A8  6E27               	movwf	(clcd_print@data+1)^0,c
  1234   0006AA  0E80               	movlw	128
  1235   0006AC  6E28               	movwf	clcd_print@addr^0,c
  1236   0006AE  ECC5  F008         	call	_clcd_print	;wreg free
  1237   0006B2                     
  1238                           ;password.c: 42:     if (delay++ < 500) {
  1239   0006B2  5008               	movf	_delay^0,w,c
  1240   0006B4  6E34               	movwf	??_password^0,c
  1241   0006B6  5009               	movf	(_delay+1)^0,w,c
  1242   0006B8  6E35               	movwf	(??_password+1)^0,c
  1243   0006BA  4A08               	infsnz	_delay^0,f,c
  1244   0006BC  2A09               	incf	(_delay+1)^0,f,c
  1245   0006BE  BE35               	btfsc	(??_password+1)^0,7,c
  1246   0006C0  EF6D  F003         	goto	u1350
  1247   0006C4  0EF4               	movlw	244
  1248   0006C6  5C34               	subwf	??_password^0,w,c
  1249   0006C8  0E01               	movlw	1
  1250   0006CA  5835               	subwfb	(??_password+1)^0,w,c
  1251   0006CC  B0D8               	btfsc	status,0,c
  1252   0006CE  EF6B  F003         	goto	u1351
  1253   0006D2  EF6D  F003         	goto	u1350
  1254   0006D6                     u1351:
  1255   0006D6  EF75  F003         	goto	l2242
  1256   0006DA                     u1350:
  1257   0006DA                     
  1258                           ;password.c: 43:         clcd_putch('_', (0xC0 + (i)));
  1259   0006DA  500A               	movf	_i^0,w,c
  1260   0006DC  0FC0               	addlw	192
  1261   0006DE  6E32               	movwf	clcd_putch@addr^0,c
  1262   0006E0  0E5F               	movlw	95
  1263   0006E2  EC45  F00A         	call	_clcd_putch
  1264                           
  1265                           ;password.c: 44:     } else if (delay > 500 && delay < 1000) {
  1266   0006E6  EF9D  F003         	goto	l2250
  1267   0006EA                     l2242:
  1268   0006EA  BE09               	btfsc	(_delay+1)^0,7,c
  1269   0006EC  EF81  F003         	goto	u1361
  1270   0006F0  0EF5               	movlw	245
  1271   0006F2  5C08               	subwf	_delay^0,w,c
  1272   0006F4  0E01               	movlw	1
  1273   0006F6  5809               	subwfb	(_delay+1)^0,w,c
  1274   0006F8  A0D8               	btfss	status,0,c
  1275   0006FA  EF81  F003         	goto	u1361
  1276   0006FE  EF83  F003         	goto	u1360
  1277   000702                     u1361:
  1278   000702  EF99  F003         	goto	l2248
  1279   000706                     u1360:
  1280   000706  BE09               	btfsc	(_delay+1)^0,7,c
  1281   000708  EF91  F003         	goto	u1370
  1282   00070C  0EE8               	movlw	232
  1283   00070E  5C08               	subwf	_delay^0,w,c
  1284   000710  0E03               	movlw	3
  1285   000712  5809               	subwfb	(_delay+1)^0,w,c
  1286   000714  B0D8               	btfsc	status,0,c
  1287   000716  EF8F  F003         	goto	u1371
  1288   00071A  EF91  F003         	goto	u1370
  1289   00071E                     u1371:
  1290   00071E  EF99  F003         	goto	l2248
  1291   000722                     u1370:
  1292   000722                     
  1293                           ;password.c: 45:         clcd_putch(' ', (0xC0 + (i)));
  1294   000722  500A               	movf	_i^0,w,c
  1295   000724  0FC0               	addlw	192
  1296   000726  6E32               	movwf	clcd_putch@addr^0,c
  1297   000728  0E20               	movlw	32
  1298   00072A  EC45  F00A         	call	_clcd_putch
  1299                           
  1300                           ;password.c: 46:     } else
  1301   00072E  EF9D  F003         	goto	l2250
  1302   000732                     l2248:
  1303                           
  1304                           ;password.c: 47:         delay = 0;
  1305   000732  0E00               	movlw	0
  1306   000734  6E09               	movwf	(_delay+1)^0,c
  1307   000736  0E00               	movlw	0
  1308   000738  6E08               	movwf	_delay^0,c
  1309   00073A                     l2250:
  1310                           
  1311                           ;password.c: 49:     if (key == 5) {
  1312   00073A  0E05               	movlw	5
  1313   00073C  1842               	xorwf	password@key^0,w,c
  1314   00073E  A4D8               	btfss	status,2,c
  1315   000740  EFA4  F003         	goto	u1381
  1316   000744  EFA6  F003         	goto	u1380
  1317   000748                     u1381:
  1318   000748  EFB6  F003         	goto	l2258
  1319   00074C                     u1380:
  1320   00074C                     
  1321                           ;password.c: 50:         temp_password[i] = '0';
  1322   00074C  500A               	movf	_i^0,w,c
  1323   00074E  0F1A               	addlw	low _temp_password
  1324   000750  6ED9               	movwf	fsr2l,c
  1325   000752  6ADA               	clrf	fsr2h,c
  1326   000754  0E30               	movlw	48
  1327   000756  6EDF               	movwf	indf2,c
  1328   000758                     
  1329                           ;password.c: 51:         clcd_putch('*', (0xC0 + (i)));
  1330   000758  500A               	movf	_i^0,w,c
  1331   00075A  0FC0               	addlw	192
  1332   00075C  6E32               	movwf	clcd_putch@addr^0,c
  1333   00075E  0E2A               	movlw	42
  1334   000760  EC45  F00A         	call	_clcd_putch
  1335   000764                     l2256:
  1336                           
  1337                           ;password.c: 52:         i++;
  1338   000764  4A0A               	infsnz	_i^0,f,c
  1339   000766  2A0B               	incf	(_i+1)^0,f,c
  1340                           
  1341                           ;password.c: 54:     } else if (key == 6) {
  1342   000768  EFCD  F003         	goto	l2266
  1343   00076C                     l2258:
  1344   00076C  0E06               	movlw	6
  1345   00076E  1842               	xorwf	password@key^0,w,c
  1346   000770  A4D8               	btfss	status,2,c
  1347   000772  EFBD  F003         	goto	u1391
  1348   000776  EFBF  F003         	goto	u1390
  1349   00077A                     u1391:
  1350   00077A  EFCD  F003         	goto	l2266
  1351   00077E                     u1390:
  1352   00077E                     
  1353                           ;password.c: 55:         temp_password[i] = '1';
  1354   00077E  500A               	movf	_i^0,w,c
  1355   000780  0F1A               	addlw	low _temp_password
  1356   000782  6ED9               	movwf	fsr2l,c
  1357   000784  6ADA               	clrf	fsr2h,c
  1358   000786  0E31               	movlw	49
  1359   000788  6EDF               	movwf	indf2,c
  1360   00078A                     
  1361                           ;password.c: 56:         clcd_putch('*', (0xC0 + (i)));
  1362   00078A  500A               	movf	_i^0,w,c
  1363   00078C  0FC0               	addlw	192
  1364   00078E  6E32               	movwf	clcd_putch@addr^0,c
  1365   000790  0E2A               	movlw	42
  1366   000792  EC45  F00A         	call	_clcd_putch
  1367   000796  EFB2  F003         	goto	l2256
  1368   00079A                     l2266:
  1369                           
  1370                           ;password.c: 61:     if (i == 4) {
  1371   00079A  0E04               	movlw	4
  1372   00079C  180A               	xorwf	_i^0,w,c
  1373   00079E  100B               	iorwf	(_i+1)^0,w,c
  1374   0007A0  A4D8               	btfss	status,2,c
  1375   0007A2  EFD5  F003         	goto	u1401
  1376   0007A6  EFD7  F003         	goto	u1400
  1377   0007AA                     u1401:
  1378   0007AA  EFDE  F004         	goto	l263
  1379   0007AE                     u1400:
  1380   0007AE                     
  1381                           ;password.c: 62:         temp_password[i] = '\0';
  1382   0007AE  500A               	movf	_i^0,w,c
  1383   0007B0  0F1A               	addlw	low _temp_password
  1384   0007B2  6ED9               	movwf	fsr2l,c
  1385   0007B4  6ADA               	clrf	fsr2h,c
  1386   0007B6  6ADF               	clrf	indf2,c
  1387   0007B8                     
  1388                           ;password.c: 63:         if (my_strcmp(pass,temp_password) == 0) {
  1389   0007B8  0E1F               	movlw	low _pass
  1390   0007BA  6E24               	movwf	my_strcmp@one^0,c
  1391   0007BC  0E1A               	movlw	low _temp_password
  1392   0007BE  6E25               	movwf	my_strcmp@two^0,c
  1393   0007C0  EC91  F007         	call	_my_strcmp	;wreg free
  1394   0007C4  5024               	movf	?_my_strcmp^0,w,c
  1395   0007C6  1025               	iorwf	(?_my_strcmp+1)^0,w,c
  1396   0007C8  A4D8               	btfss	status,2,c
  1397   0007CA  EFE9  F003         	goto	u1411
  1398   0007CE  EFEB  F003         	goto	u1410
  1399   0007D2                     u1411:
  1400   0007D2  EF05  F004         	goto	l2280
  1401   0007D6                     u1410:
  1402   0007D6                     
  1403                           ;password.c: 65:             clcd_print("               ", (0x80 + (0)));
  1404   0007D6  0E47               	movlw	low STR_12
  1405   0007D8  6E26               	movwf	clcd_print@data^0,c
  1406   0007DA  5026               	movf	clcd_print@data^0,w,c
  1407   0007DC  A4D8               	btfss	status,2,c
  1408   0007DE  0E06               	movlw	high __smallconst
  1409   0007E0  6E27               	movwf	(clcd_print@data+1)^0,c
  1410   0007E2  0E80               	movlw	128
  1411   0007E4  6E28               	movwf	clcd_print@addr^0,c
  1412   0007E6  ECC5  F008         	call	_clcd_print	;wreg free
  1413                           
  1414                           ;password.c: 66:             clcd_print("      SUCCESS     ", (0xC0 + (0)));
  1415   0007EA  0E01               	movlw	low STR_13
  1416   0007EC  6E26               	movwf	clcd_print@data^0,c
  1417   0007EE  5026               	movf	clcd_print@data^0,w,c
  1418   0007F0  A4D8               	btfss	status,2,c
  1419   0007F2  0E06               	movlw	high __smallconst
  1420   0007F4  6E27               	movwf	(clcd_print@data+1)^0,c
  1421   0007F6  0EC0               	movlw	192
  1422   0007F8  6E28               	movwf	clcd_print@addr^0,c
  1423   0007FA  ECC5  F008         	call	_clcd_print	;wreg free
  1424   0007FE                     
  1425                           ;password.c: 67:             flag = 1;
  1426   0007FE  0E01               	movlw	1
  1427   000800  6E10               	movwf	_flag^0,c
  1428   000802  EFDE  F004         	goto	l263
  1429   000806                     l2276:
  1430                           
  1431                           ;password.c: 68:             return;
  1432   000806  EFDE  F004         	goto	l263
  1433   00080A                     l2280:
  1434                           
  1435                           ;password.c: 73:             if (chance == 0) {
  1436   00080A  504C               	movf	_chance^0,w,c
  1437   00080C  A4D8               	btfss	status,2,c
  1438   00080E  EF0B  F004         	goto	u1421
  1439   000812  EF0D  F004         	goto	u1420
  1440   000816                     u1421:
  1441   000816  EF8B  F004         	goto	l2302
  1442   00081A                     u1420:
  1443   00081A                     
  1444                           ;password.c: 76:                 TMR0IE = 1;
  1445   00081A  8AF2               	bsf	4082,5,c	;volatile
  1446                           
  1447                           ;password.c: 77:                 GIE = 1;
  1448   00081C  8EF2               	bsf	4082,7,c	;volatile
  1449                           
  1450                           ;password.c: 78:                 PEIE = 1;
  1451   00081E  8CF2               	bsf	4082,6,c	;volatile
  1452   000820                     
  1453                           ;password.c: 80:                 clcd_print(" System Blocked", (0x80 + (0)));
  1454   000820  0E57               	movlw	low STR_14
  1455   000822  6E26               	movwf	clcd_print@data^0,c
  1456   000824  5026               	movf	clcd_print@data^0,w,c
  1457   000826  A4D8               	btfss	status,2,c
  1458   000828  0E06               	movlw	high __smallconst
  1459   00082A  6E27               	movwf	(clcd_print@data+1)^0,c
  1460   00082C  0E80               	movlw	128
  1461   00082E  6E28               	movwf	clcd_print@addr^0,c
  1462   000830  ECC5  F008         	call	_clcd_print	;wreg free
  1463                           
  1464                           ;password.c: 81:                 clcd_print("     ", (0xC0 + (0)));
  1465   000834  0E51               	movlw	low (STR_12+10)
  1466   000836  6E26               	movwf	clcd_print@data^0,c
  1467   000838  5026               	movf	clcd_print@data^0,w,c
  1468   00083A  A4D8               	btfss	status,2,c
  1469   00083C  0E06               	movlw	high __smallconst
  1470   00083E  6E27               	movwf	(clcd_print@data+1)^0,c
  1471   000840  0EC0               	movlw	192
  1472   000842  6E28               	movwf	clcd_print@addr^0,c
  1473   000844  ECC5  F008         	call	_clcd_print	;wreg free
  1474   000848                     
  1475                           ;password.c: 82:                 clcd_putch('0' + (tick_count / 100), (0xC0 + (5)));
  1476   000848  0EC5               	movlw	197
  1477   00084A  6E32               	movwf	clcd_putch@addr^0,c
  1478   00084C  C04D  F024         	movff	_tick_count,___awdiv@dividend
  1479   000850  6A25               	clrf	(___awdiv@dividend+1)^0,c
  1480   000852  0E00               	movlw	0
  1481   000854  6E27               	movwf	(___awdiv@divisor+1)^0,c
  1482   000856  0E64               	movlw	100
  1483   000858  6E26               	movwf	___awdiv@divisor^0,c
  1484   00085A  EC83  F006         	call	___awdiv	;wreg free
  1485   00085E  5024               	movf	?___awdiv^0,w,c
  1486   000860  0F30               	addlw	48
  1487   000862  EC45  F00A         	call	_clcd_putch
  1488   000866                     
  1489                           ;password.c: 83:                 clcd_putch('0' + (tick_count / 10) % 10, (0xC0 + (6)));
  1490   000866  0EC6               	movlw	198
  1491   000868  6E32               	movwf	clcd_putch@addr^0,c
  1492   00086A  0E00               	movlw	0
  1493   00086C  6E27               	movwf	(___awdiv@divisor+1)^0,c
  1494   00086E  0E0A               	movlw	10
  1495   000870  6E26               	movwf	___awdiv@divisor^0,c
  1496   000872  C04D  F024         	movff	_tick_count,___awdiv@dividend
  1497   000876  6A25               	clrf	(___awdiv@dividend+1)^0,c
  1498   000878  EC83  F006         	call	___awdiv	;wreg free
  1499   00087C  C024  F02C         	movff	?___awdiv,___awmod@dividend
  1500   000880  C025  F02D         	movff	?___awdiv+1,___awmod@dividend+1
  1501   000884  0E00               	movlw	0
  1502   000886  6E2F               	movwf	(___awmod@divisor+1)^0,c
  1503   000888  0E0A               	movlw	10
  1504   00088A  6E2E               	movwf	___awmod@divisor^0,c
  1505   00088C  ECE5  F006         	call	___awmod	;wreg free
  1506   000890  502C               	movf	?___awmod^0,w,c
  1507   000892  0F30               	addlw	48
  1508   000894  EC45  F00A         	call	_clcd_putch
  1509   000898                     
  1510                           ;password.c: 84:                 clcd_putch('0' + (tick_count % 10), (0xC0 + (7)));
  1511   000898  0EC7               	movlw	199
  1512   00089A  6E32               	movwf	clcd_putch@addr^0,c
  1513   00089C  C04D  F02C         	movff	_tick_count,___awmod@dividend
  1514   0008A0  6A2D               	clrf	(___awmod@dividend+1)^0,c
  1515   0008A2  0E00               	movlw	0
  1516   0008A4  6E2F               	movwf	(___awmod@divisor+1)^0,c
  1517   0008A6  0E0A               	movlw	10
  1518   0008A8  6E2E               	movwf	___awmod@divisor^0,c
  1519   0008AA  ECE5  F006         	call	___awmod	;wreg free
  1520   0008AE  502C               	movf	?___awmod^0,w,c
  1521   0008B0  0F30               	addlw	48
  1522   0008B2  EC45  F00A         	call	_clcd_putch
  1523   0008B6                     
  1524                           ;password.c: 85:                 for (unsigned long int delay = 200000; delay--;);
  1525   0008B6  0E40               	movlw	64
  1526   0008B8  6E3E               	movwf	password@delay^0,c
  1527   0008BA  0E0D               	movlw	13
  1528   0008BC  6E3F               	movwf	(password@delay+1)^0,c
  1529   0008BE  0E03               	movlw	3
  1530   0008C0  6E40               	movwf	(password@delay+2)^0,c
  1531   0008C2  0E00               	movlw	0
  1532   0008C4  6E41               	movwf	(password@delay+3)^0,c
  1533   0008C6                     l2294:
  1534   0008C6  063E               	decf	password@delay^0,f,c
  1535   0008C8  0E00               	movlw	0
  1536   0008CA  5A3F               	subwfb	(password@delay+1)^0,f,c
  1537   0008CC  5A40               	subwfb	(password@delay+2)^0,f,c
  1538   0008CE  5A41               	subwfb	(password@delay+3)^0,f,c
  1539   0008D0  283E               	incf	password@delay^0,w,c
  1540   0008D2  E10A               	bnz	u1431
  1541   0008D4  283F               	incf	(password@delay+1)^0,w,c
  1542   0008D6  E108               	bnz	u1431
  1543   0008D8  2840               	incf	(password@delay+2)^0,w,c
  1544   0008DA  E106               	bnz	u1431
  1545   0008DC  2841               	incf	(password@delay+3)^0,w,c
  1546   0008DE  A4D8               	btfss	status,2,c
  1547   0008E0  EF74  F004         	goto	u1431
  1548   0008E4  EF76  F004         	goto	u1430
  1549   0008E8                     u1431:
  1550   0008E8  EF63  F004         	goto	l2294
  1551   0008EC                     u1430:
  1552   0008EC                     
  1553                           ;password.c: 87:                 if (tick_count == 0) {
  1554   0008EC  504D               	movf	_tick_count^0,w,c
  1555   0008EE  A4D8               	btfss	status,2,c
  1556   0008F0  EF7C  F004         	goto	u1441
  1557   0008F4  EF7E  F004         	goto	u1440
  1558   0008F8                     u1441:
  1559   0008F8  EF03  F004         	goto	l2276
  1560   0008FC                     u1440:
  1561   0008FC                     
  1562                           ;password.c: 88:                     chance = 2;
  1563   0008FC  0E02               	movlw	2
  1564   0008FE  6E4C               	movwf	_chance^0,c
  1565                           
  1566                           ;password.c: 89:                     i = 0;
  1567   000900  0E00               	movlw	0
  1568   000902  6E0B               	movwf	(_i+1)^0,c
  1569   000904  0E00               	movlw	0
  1570   000906  6E0A               	movwf	_i^0,c
  1571   000908                     
  1572                           ;password.c: 90:                     clcd_write(0x01, 0);
  1573   000908  0E00               	movlw	0
  1574   00090A  6E24               	movwf	clcd_write@control_bit^0,c
  1575   00090C  0E01               	movlw	1
  1576   00090E  ECDF  F009         	call	_clcd_write
  1577   000912  EFDE  F004         	goto	l263
  1578   000916                     l2302:
  1579                           
  1580                           ;password.c: 95:                 clcd_print("   Try Again    ", (0x80 + (0)));
  1581   000916  0E14               	movlw	low STR_16
  1582   000918  6E26               	movwf	clcd_print@data^0,c
  1583   00091A  5026               	movf	clcd_print@data^0,w,c
  1584   00091C  A4D8               	btfss	status,2,c
  1585   00091E  0E06               	movlw	high __smallconst
  1586   000920  6E27               	movwf	(clcd_print@data+1)^0,c
  1587   000922  0E80               	movlw	128
  1588   000924  6E28               	movwf	clcd_print@addr^0,c
  1589   000926  ECC5  F008         	call	_clcd_print	;wreg free
  1590   00092A                     
  1591                           ;password.c: 96:                 clcd_putch('0' + chance, (0xC0 + (0)));
  1592   00092A  0EC0               	movlw	192
  1593   00092C  6E32               	movwf	clcd_putch@addr^0,c
  1594   00092E  504C               	movf	_chance^0,w,c
  1595   000930  0F30               	addlw	48
  1596   000932  EC45  F00A         	call	_clcd_putch
  1597   000936                     
  1598                           ;password.c: 97:                 clcd_print(" Chances Left ", (0xC0 + (1)));
  1599   000936  0E67               	movlw	low STR_17
  1600   000938  6E26               	movwf	clcd_print@data^0,c
  1601   00093A  5026               	movf	clcd_print@data^0,w,c
  1602   00093C  A4D8               	btfss	status,2,c
  1603   00093E  0E06               	movlw	high __smallconst
  1604   000940  6E27               	movwf	(clcd_print@data+1)^0,c
  1605   000942  0EC1               	movlw	193
  1606   000944  6E28               	movwf	clcd_print@addr^0,c
  1607   000946  ECC5  F008         	call	_clcd_print	;wreg free
  1608   00094A                     
  1609                           ;password.c: 98:                 for (unsigned long long int wait = 400000; wait--;);
  1610   00094A  0E80               	movlw	128
  1611   00094C  6E36               	movwf	password@wait^0,c
  1612   00094E  0E1A               	movlw	26
  1613   000950  6E37               	movwf	(password@wait+1)^0,c
  1614   000952  0E06               	movlw	6
  1615   000954  6E38               	movwf	(password@wait+2)^0,c
  1616   000956  0E00               	movlw	0
  1617   000958  6E39               	movwf	(password@wait+3)^0,c
  1618   00095A  0E00               	movlw	0
  1619   00095C  6E3A               	movwf	(password@wait+4)^0,c
  1620   00095E  0E00               	movlw	0
  1621   000960  6E3B               	movwf	(password@wait+5)^0,c
  1622   000962  0E00               	movlw	0
  1623   000964  6E3C               	movwf	(password@wait+6)^0,c
  1624   000966  0E00               	movlw	0
  1625   000968  6E3D               	movwf	(password@wait+7)^0,c
  1626   00096A                     l2310:
  1627   00096A  0636               	decf	password@wait^0,f,c
  1628   00096C  0E00               	movlw	0
  1629   00096E  5A37               	subwfb	(password@wait+1)^0,f,c
  1630   000970  5A38               	subwfb	(password@wait+2)^0,f,c
  1631   000972  5A39               	subwfb	(password@wait+3)^0,f,c
  1632   000974  5A3A               	subwfb	(password@wait+4)^0,f,c
  1633   000976  5A3B               	subwfb	(password@wait+5)^0,f,c
  1634   000978  5A3C               	subwfb	(password@wait+6)^0,f,c
  1635   00097A  5A3D               	subwfb	(password@wait+7)^0,f,c
  1636   00097C  2836               	incf	password@wait^0,w,c
  1637   00097E  E112               	bnz	u1451
  1638   000980  2837               	incf	(password@wait+1)^0,w,c
  1639   000982  E110               	bnz	u1451
  1640   000984  2838               	incf	(password@wait+2)^0,w,c
  1641   000986  E10E               	bnz	u1451
  1642   000988  2839               	incf	(password@wait+3)^0,w,c
  1643   00098A  E10C               	bnz	u1451
  1644   00098C  283A               	incf	(password@wait+4)^0,w,c
  1645   00098E  E10A               	bnz	u1451
  1646   000990  283B               	incf	(password@wait+5)^0,w,c
  1647   000992  E108               	bnz	u1451
  1648   000994  283C               	incf	(password@wait+6)^0,w,c
  1649   000996  E106               	bnz	u1451
  1650   000998  283D               	incf	(password@wait+7)^0,w,c
  1651   00099A  A4D8               	btfss	status,2,c
  1652   00099C  EFD2  F004         	goto	u1451
  1653   0009A0  EFD4  F004         	goto	u1450
  1654   0009A4                     u1451:
  1655   0009A4  EFB5  F004         	goto	l2310
  1656   0009A8                     u1450:
  1657   0009A8                     
  1658                           ;password.c: 99:                 chance--;
  1659   0009A8  064C               	decf	_chance^0,f,c
  1660   0009AA                     
  1661                           ;password.c: 100:                 i = 0;
  1662   0009AA  0E00               	movlw	0
  1663   0009AC  6E0B               	movwf	(_i+1)^0,c
  1664   0009AE  0E00               	movlw	0
  1665   0009B0  6E0A               	movwf	_i^0,c
  1666   0009B2                     
  1667                           ;password.c: 101:                 clcd_write(0x01, 0);
  1668   0009B2  0E00               	movlw	0
  1669   0009B4  6E24               	movwf	clcd_write@control_bit^0,c
  1670   0009B6  0E01               	movlw	1
  1671   0009B8  ECDF  F009         	call	_clcd_write
  1672   0009BC                     l263:
  1673   0009BC  0012               	return		;funcret
  1674   0009BE                     __end_of_password:
  1675                           	callstack 0
  1676                           
  1677 ;; *************** function _my_strcmp *****************
  1678 ;; Defined at:
  1679 ;;		line 20 in file "password.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  one             1    0[COMRAM] PTR unsigned char 
  1682 ;;		 -> pass(5), 
  1683 ;;  two             1    1[COMRAM] PTR unsigned char 
  1684 ;;		 -> temp_password(5), 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  k               2    6[COMRAM] int 
  1687 ;;  last            2    4[COMRAM] int 
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  2    0[COMRAM] int 
  1690 ;; Registers used:
  1691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1697 ;;      Params:         2       0       0       0       0       0       0
  1698 ;;      Locals:         4       0       0       0       0       0       0
  1699 ;;      Temps:          2       0       0       0       0       0       0
  1700 ;;      Totals:         8       0       0       0       0       0       0
  1701 ;;Total ram usage:        8 bytes
  1702 ;; Hardware stack levels used: 1
  1703 ;; Hardware stack levels required when called: 1
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_password
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text5
  1712   000F22                     __ptext5:
  1713                           	callstack 0
  1714   000F22                     _my_strcmp:
  1715                           	callstack 28
  1716   000F22                     
  1717                           ;password.c: 21:     int k = 0, last = 0;
  1718   000F22  0E00               	movlw	0
  1719   000F24  6E2B               	movwf	(my_strcmp@k+1)^0,c
  1720   000F26  0E00               	movlw	0
  1721   000F28  6E2A               	movwf	my_strcmp@k^0,c
  1722   000F2A  0E00               	movlw	0
  1723   000F2C  6E29               	movwf	(my_strcmp@last+1)^0,c
  1724   000F2E  0E00               	movlw	0
  1725   000F30  6E28               	movwf	my_strcmp@last^0,c
  1726                           
  1727                           ;password.c: 22:     while (one[k] != '\0') {
  1728   000F32  EFC2  F007         	goto	l2016
  1729   000F36                     l2010:
  1730                           
  1731                           ;password.c: 23:         if (one[k] != two[k]) {
  1732   000F36  5025               	movf	my_strcmp@two^0,w,c
  1733   000F38  242A               	addwf	my_strcmp@k^0,w,c
  1734   000F3A  6ED9               	movwf	fsr2l,c
  1735   000F3C  6ADA               	clrf	fsr2h,c
  1736   000F3E  5024               	movf	my_strcmp@one^0,w,c
  1737   000F40  242A               	addwf	my_strcmp@k^0,w,c
  1738   000F42  6EE1               	movwf	fsr1l,c
  1739   000F44  6AE2               	clrf	fsr1h,c
  1740   000F46  50DE               	movf	postinc2,w,c
  1741   000F48  18E6               	xorwf	postinc1,w,c
  1742   000F4A  B4D8               	btfsc	status,2,c
  1743   000F4C  EFAA  F007         	goto	u981
  1744   000F50  EFAC  F007         	goto	u980
  1745   000F54                     u981:
  1746   000F54  EFC0  F007         	goto	l2014
  1747   000F58                     u980:
  1748   000F58                     
  1749                           ;password.c: 24:             last = one[k] - two[k];
  1750   000F58  5024               	movf	my_strcmp@one^0,w,c
  1751   000F5A  242A               	addwf	my_strcmp@k^0,w,c
  1752   000F5C  6ED9               	movwf	fsr2l,c
  1753   000F5E  6ADA               	clrf	fsr2h,c
  1754   000F60  50DF               	movf	indf2,w,c
  1755   000F62  6E26               	movwf	??_my_strcmp^0,c
  1756   000F64  5025               	movf	my_strcmp@two^0,w,c
  1757   000F66  242A               	addwf	my_strcmp@k^0,w,c
  1758   000F68  6ED9               	movwf	fsr2l,c
  1759   000F6A  6ADA               	clrf	fsr2h,c
  1760   000F6C  50DF               	movf	indf2,w,c
  1761   000F6E  6E27               	movwf	(??_my_strcmp+1)^0,c
  1762   000F70  5027               	movf	(??_my_strcmp+1)^0,w,c
  1763   000F72  5C26               	subwf	??_my_strcmp^0,w,c
  1764   000F74  6E28               	movwf	my_strcmp@last^0,c
  1765   000F76  6A29               	clrf	(my_strcmp@last+1)^0,c
  1766   000F78  A0D8               	btfss	status,0,c
  1767   000F7A  0629               	decf	(my_strcmp@last+1)^0,f,c
  1768                           
  1769                           ;password.c: 25:             break;
  1770   000F7C  EFCE  F007         	goto	l244
  1771   000F80                     l2014:
  1772                           
  1773                           ;password.c: 27:         k++;
  1774   000F80  4A2A               	infsnz	my_strcmp@k^0,f,c
  1775   000F82  2A2B               	incf	(my_strcmp@k+1)^0,f,c
  1776   000F84                     l2016:
  1777                           
  1778                           ;password.c: 22:     while (one[k] != '\0') {
  1779   000F84  5024               	movf	my_strcmp@one^0,w,c
  1780   000F86  242A               	addwf	my_strcmp@k^0,w,c
  1781   000F88  6ED9               	movwf	fsr2l,c
  1782   000F8A  6ADA               	clrf	fsr2h,c
  1783   000F8C  50DF               	movf	indf2,w,c
  1784   000F8E  A4D8               	btfss	status,2,c
  1785   000F90  EFCC  F007         	goto	u991
  1786   000F94  EFCE  F007         	goto	u990
  1787   000F98                     u991:
  1788   000F98  EF9B  F007         	goto	l2010
  1789   000F9C                     u990:
  1790   000F9C                     l244:
  1791                           
  1792                           ;password.c: 29:     return last;
  1793   000F9C  C028  F024         	movff	my_strcmp@last,?_my_strcmp
  1794   000FA0  C029  F025         	movff	my_strcmp@last+1,?_my_strcmp+1
  1795   000FA4  0012               	return		;funcret
  1796   000FA6                     __end_of_my_strcmp:
  1797                           	callstack 0
  1798                           
  1799 ;; *************** function ___awmod *****************
  1800 ;; Defined at:
  1801 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  dividend        2    8[COMRAM] int 
  1804 ;;  divisor         2   10[COMRAM] int 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  sign            1   13[COMRAM] unsigned char 
  1807 ;;  counter         1   12[COMRAM] unsigned char 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  2    8[COMRAM] int 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1817 ;;      Params:         4       0       0       0       0       0       0
  1818 ;;      Locals:         2       0       0       0       0       0       0
  1819 ;;      Temps:          0       0       0       0       0       0       0
  1820 ;;      Totals:         6       0       0       0       0       0       0
  1821 ;;Total ram usage:        6 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; Hardware stack levels required when called: 1
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_password
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text6
  1832   000DCA                     __ptext6:
  1833                           	callstack 0
  1834   000DCA                     ___awmod:
  1835                           	callstack 28
  1836   000DCA  0E00               	movlw	0
  1837   000DCC  6E31               	movwf	___awmod@sign^0,c
  1838   000DCE  BE2D               	btfsc	(___awmod@dividend+1)^0,7,c
  1839   000DD0  EFEE  F006         	goto	u1060
  1840   000DD4  EFEC  F006         	goto	u1061
  1841   000DD8                     u1061:
  1842   000DD8  EFF4  F006         	goto	l2070
  1843   000DDC                     u1060:
  1844   000DDC  6C2C               	negf	___awmod@dividend^0,c
  1845   000DDE  1E2D               	comf	(___awmod@dividend+1)^0,f,c
  1846   000DE0  B0D8               	btfsc	status,0,c
  1847   000DE2  2A2D               	incf	(___awmod@dividend+1)^0,f,c
  1848   000DE4  0E01               	movlw	1
  1849   000DE6  6E31               	movwf	___awmod@sign^0,c
  1850   000DE8                     l2070:
  1851   000DE8  BE2F               	btfsc	(___awmod@divisor+1)^0,7,c
  1852   000DEA  EFFB  F006         	goto	u1070
  1853   000DEE  EFF9  F006         	goto	u1071
  1854   000DF2                     u1071:
  1855   000DF2  EFFF  F006         	goto	l2074
  1856   000DF6                     u1070:
  1857   000DF6  6C2E               	negf	___awmod@divisor^0,c
  1858   000DF8  1E2F               	comf	(___awmod@divisor+1)^0,f,c
  1859   000DFA  B0D8               	btfsc	status,0,c
  1860   000DFC  2A2F               	incf	(___awmod@divisor+1)^0,f,c
  1861   000DFE                     l2074:
  1862   000DFE  502E               	movf	___awmod@divisor^0,w,c
  1863   000E00  102F               	iorwf	(___awmod@divisor+1)^0,w,c
  1864   000E02  B4D8               	btfsc	status,2,c
  1865   000E04  EF06  F007         	goto	u1081
  1866   000E08  EF08  F007         	goto	u1080
  1867   000E0C                     u1081:
  1868   000E0C  EF2C  F007         	goto	l2090
  1869   000E10                     u1080:
  1870   000E10  0E01               	movlw	1
  1871   000E12  6E30               	movwf	___awmod@counter^0,c
  1872   000E14  EF10  F007         	goto	l2080
  1873   000E18                     l2078:
  1874   000E18  90D8               	bcf	status,0,c
  1875   000E1A  362E               	rlcf	___awmod@divisor^0,f,c
  1876   000E1C  362F               	rlcf	(___awmod@divisor+1)^0,f,c
  1877   000E1E  2A30               	incf	___awmod@counter^0,f,c
  1878   000E20                     l2080:
  1879   000E20  AE2F               	btfss	(___awmod@divisor+1)^0,7,c
  1880   000E22  EF15  F007         	goto	u1091
  1881   000E26  EF17  F007         	goto	u1090
  1882   000E2A                     u1091:
  1883   000E2A  EF0C  F007         	goto	l2078
  1884   000E2E                     u1090:
  1885   000E2E                     l2082:
  1886   000E2E  502E               	movf	___awmod@divisor^0,w,c
  1887   000E30  5C2C               	subwf	___awmod@dividend^0,w,c
  1888   000E32  502F               	movf	(___awmod@divisor+1)^0,w,c
  1889   000E34  582D               	subwfb	(___awmod@dividend+1)^0,w,c
  1890   000E36  A0D8               	btfss	status,0,c
  1891   000E38  EF20  F007         	goto	u1101
  1892   000E3C  EF22  F007         	goto	u1100
  1893   000E40                     u1101:
  1894   000E40  EF26  F007         	goto	l2086
  1895   000E44                     u1100:
  1896   000E44  502E               	movf	___awmod@divisor^0,w,c
  1897   000E46  5E2C               	subwf	___awmod@dividend^0,f,c
  1898   000E48  502F               	movf	(___awmod@divisor+1)^0,w,c
  1899   000E4A  5A2D               	subwfb	(___awmod@dividend+1)^0,f,c
  1900   000E4C                     l2086:
  1901   000E4C  90D8               	bcf	status,0,c
  1902   000E4E  322F               	rrcf	(___awmod@divisor+1)^0,f,c
  1903   000E50  322E               	rrcf	___awmod@divisor^0,f,c
  1904   000E52  2E30               	decfsz	___awmod@counter^0,f,c
  1905   000E54  EF17  F007         	goto	l2082
  1906   000E58                     l2090:
  1907   000E58  5031               	movf	___awmod@sign^0,w,c
  1908   000E5A  B4D8               	btfsc	status,2,c
  1909   000E5C  EF32  F007         	goto	u1111
  1910   000E60  EF34  F007         	goto	u1110
  1911   000E64                     u1111:
  1912   000E64  EF38  F007         	goto	l2094
  1913   000E68                     u1110:
  1914   000E68  6C2C               	negf	___awmod@dividend^0,c
  1915   000E6A  1E2D               	comf	(___awmod@dividend+1)^0,f,c
  1916   000E6C  B0D8               	btfsc	status,0,c
  1917   000E6E  2A2D               	incf	(___awmod@dividend+1)^0,f,c
  1918   000E70                     l2094:
  1919   000E70  C02C  F02C         	movff	___awmod@dividend,?___awmod
  1920   000E74  C02D  F02D         	movff	___awmod@dividend+1,?___awmod+1
  1921   000E78  0012               	return		;funcret
  1922   000E7A                     __end_of___awmod:
  1923                           	callstack 0
  1924                           
  1925 ;; *************** function ___awdiv *****************
  1926 ;; Defined at:
  1927 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  dividend        2    0[COMRAM] int 
  1930 ;;  divisor         2    2[COMRAM] int 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  quotient        2    6[COMRAM] int 
  1933 ;;  sign            1    5[COMRAM] unsigned char 
  1934 ;;  counter         1    4[COMRAM] unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  2    0[COMRAM] int 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1944 ;;      Params:         4       0       0       0       0       0       0
  1945 ;;      Locals:         4       0       0       0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0
  1947 ;;      Totals:         8       0       0       0       0       0       0
  1948 ;;Total ram usage:        8 bytes
  1949 ;; Hardware stack levels used: 1
  1950 ;; Hardware stack levels required when called: 1
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_password
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text7
  1959   000D06                     __ptext7:
  1960                           	callstack 0
  1961   000D06                     ___awdiv:
  1962                           	callstack 28
  1963   000D06  0E00               	movlw	0
  1964   000D08  6E29               	movwf	___awdiv@sign^0,c
  1965   000D0A  BE27               	btfsc	(___awdiv@divisor+1)^0,7,c
  1966   000D0C  EF8C  F006         	goto	u1000
  1967   000D10  EF8A  F006         	goto	u1001
  1968   000D14                     u1001:
  1969   000D14  EF92  F006         	goto	l2026
  1970   000D18                     u1000:
  1971   000D18  6C26               	negf	___awdiv@divisor^0,c
  1972   000D1A  1E27               	comf	(___awdiv@divisor+1)^0,f,c
  1973   000D1C  B0D8               	btfsc	status,0,c
  1974   000D1E  2A27               	incf	(___awdiv@divisor+1)^0,f,c
  1975   000D20  0E01               	movlw	1
  1976   000D22  6E29               	movwf	___awdiv@sign^0,c
  1977   000D24                     l2026:
  1978   000D24  BE25               	btfsc	(___awdiv@dividend+1)^0,7,c
  1979   000D26  EF99  F006         	goto	u1010
  1980   000D2A  EF97  F006         	goto	u1011
  1981   000D2E                     u1011:
  1982   000D2E  EF9F  F006         	goto	l2032
  1983   000D32                     u1010:
  1984   000D32  6C24               	negf	___awdiv@dividend^0,c
  1985   000D34  1E25               	comf	(___awdiv@dividend+1)^0,f,c
  1986   000D36  B0D8               	btfsc	status,0,c
  1987   000D38  2A25               	incf	(___awdiv@dividend+1)^0,f,c
  1988   000D3A  0E01               	movlw	1
  1989   000D3C  1A29               	xorwf	___awdiv@sign^0,f,c
  1990   000D3E                     l2032:
  1991   000D3E  0E00               	movlw	0
  1992   000D40  6E2B               	movwf	(___awdiv@quotient+1)^0,c
  1993   000D42  0E00               	movlw	0
  1994   000D44  6E2A               	movwf	___awdiv@quotient^0,c
  1995   000D46  5026               	movf	___awdiv@divisor^0,w,c
  1996   000D48  1027               	iorwf	(___awdiv@divisor+1)^0,w,c
  1997   000D4A  B4D8               	btfsc	status,2,c
  1998   000D4C  EFAA  F006         	goto	u1021
  1999   000D50  EFAC  F006         	goto	u1020
  2000   000D54                     u1021:
  2001   000D54  EFD4  F006         	goto	l2054
  2002   000D58                     u1020:
  2003   000D58  0E01               	movlw	1
  2004   000D5A  6E28               	movwf	___awdiv@counter^0,c
  2005   000D5C  EFB4  F006         	goto	l2040
  2006   000D60                     l2038:
  2007   000D60  90D8               	bcf	status,0,c
  2008   000D62  3626               	rlcf	___awdiv@divisor^0,f,c
  2009   000D64  3627               	rlcf	(___awdiv@divisor+1)^0,f,c
  2010   000D66  2A28               	incf	___awdiv@counter^0,f,c
  2011   000D68                     l2040:
  2012   000D68  AE27               	btfss	(___awdiv@divisor+1)^0,7,c
  2013   000D6A  EFB9  F006         	goto	u1031
  2014   000D6E  EFBB  F006         	goto	u1030
  2015   000D72                     u1031:
  2016   000D72  EFB0  F006         	goto	l2038
  2017   000D76                     u1030:
  2018   000D76                     l2042:
  2019   000D76  90D8               	bcf	status,0,c
  2020   000D78  362A               	rlcf	___awdiv@quotient^0,f,c
  2021   000D7A  362B               	rlcf	(___awdiv@quotient+1)^0,f,c
  2022   000D7C  5026               	movf	___awdiv@divisor^0,w,c
  2023   000D7E  5C24               	subwf	___awdiv@dividend^0,w,c
  2024   000D80  5027               	movf	(___awdiv@divisor+1)^0,w,c
  2025   000D82  5825               	subwfb	(___awdiv@dividend+1)^0,w,c
  2026   000D84  A0D8               	btfss	status,0,c
  2027   000D86  EFC7  F006         	goto	u1041
  2028   000D8A  EFC9  F006         	goto	u1040
  2029   000D8E                     u1041:
  2030   000D8E  EFCE  F006         	goto	l2050
  2031   000D92                     u1040:
  2032   000D92  5026               	movf	___awdiv@divisor^0,w,c
  2033   000D94  5E24               	subwf	___awdiv@dividend^0,f,c
  2034   000D96  5027               	movf	(___awdiv@divisor+1)^0,w,c
  2035   000D98  5A25               	subwfb	(___awdiv@dividend+1)^0,f,c
  2036   000D9A  802A               	bsf	___awdiv@quotient^0,0,c
  2037   000D9C                     l2050:
  2038   000D9C  90D8               	bcf	status,0,c
  2039   000D9E  3227               	rrcf	(___awdiv@divisor+1)^0,f,c
  2040   000DA0  3226               	rrcf	___awdiv@divisor^0,f,c
  2041   000DA2  2E28               	decfsz	___awdiv@counter^0,f,c
  2042   000DA4  EFBB  F006         	goto	l2042
  2043   000DA8                     l2054:
  2044   000DA8  5029               	movf	___awdiv@sign^0,w,c
  2045   000DAA  B4D8               	btfsc	status,2,c
  2046   000DAC  EFDA  F006         	goto	u1051
  2047   000DB0  EFDC  F006         	goto	u1050
  2048   000DB4                     u1051:
  2049   000DB4  EFE0  F006         	goto	l2058
  2050   000DB8                     u1050:
  2051   000DB8  6C2A               	negf	___awdiv@quotient^0,c
  2052   000DBA  1E2B               	comf	(___awdiv@quotient+1)^0,f,c
  2053   000DBC  B0D8               	btfsc	status,0,c
  2054   000DBE  2A2B               	incf	(___awdiv@quotient+1)^0,f,c
  2055   000DC0                     l2058:
  2056   000DC0  C02A  F024         	movff	___awdiv@quotient,?___awdiv
  2057   000DC4  C02B  F025         	movff	___awdiv@quotient+1,?___awdiv+1
  2058   000DC8  0012               	return		;funcret
  2059   000DCA                     __end_of___awdiv:
  2060                           	callstack 0
  2061                           
  2062 ;; *************** function _menu *****************
  2063 ;; Defined at:
  2064 ;;		line 12 in file "menu.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  key             1    wreg     unsigned char 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  key             1    0[COMRAM] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2078 ;;      Params:         0       0       0       0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0       0
  2081 ;;      Totals:         0       0       0       0       0       0       0
  2082 ;;Total ram usage:        0 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 1
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text8
  2093   00154A                     __ptext8:
  2094                           	callstack 0
  2095   00154A                     _menu:
  2096                           	callstack 29
  2097   00154A  0012               	return		;funcret
  2098   00154C                     __end_of_menu:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _init_config *****************
  2102 ;; Defined at:
  2103 ;;		line 21 in file "main.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  j               2    5[COMRAM] int 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2117 ;;      Params:         0       0       0       0       0       0       0
  2118 ;;      Locals:         2       0       0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0
  2120 ;;      Totals:         2       0       0       0       0       0       0
  2121 ;;Total ram usage:        2 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; Hardware stack levels required when called: 6
  2124 ;; This function calls:
  2125 ;;		_init_adc
  2126 ;;		_init_clcd
  2127 ;;		_init_ds1307
  2128 ;;		_init_i2c
  2129 ;;		_init_matrix_keypad
  2130 ;;		_init_timer0
  2131 ;;		_read_external_eeprom
  2132 ;;		_write_external_eeprom
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text9
  2139   001026                     __ptext9:
  2140                           	callstack 0
  2141   001026                     _init_config:
  2142                           	callstack 24
  2143   001026                     
  2144                           ;main.c: 22:     init_clcd();
  2145   001026  EC3D  F007         	call	_init_clcd	;wreg free
  2146                           
  2147                           ;main.c: 23:     init_matrix_keypad();
  2148   00102A  EC66  F00A         	call	_init_matrix_keypad	;wreg free
  2149   00102E                     
  2150                           ;main.c: 24:     init_adc();
  2151   00102E  EC26  F00A         	call	_init_adc	;wreg free
  2152   001032                     
  2153                           ;main.c: 25:     init_i2c();
  2154   001032  EC51  F00A         	call	_init_i2c	;wreg free
  2155                           
  2156                           ;main.c: 26:     init_ds1307();
  2157   001036  EC5B  F009         	call	_init_ds1307	;wreg free
  2158   00103A                     
  2159                           ;main.c: 27:  init_timer0();
  2160   00103A  EC5C  F00A         	call	_init_timer0	;wreg free
  2161   00103E                     
  2162                           ;main.c: 28:     write_external_eeprom(200,'0');
  2163   00103E  0E30               	movlw	48
  2164   001040  6E25               	movwf	write_external_eeprom@data^0,c
  2165   001042  0EC8               	movlw	200
  2166   001044  ECA2  F009         	call	_write_external_eeprom
  2167   001048                     
  2168                           ;main.c: 29:     write_external_eeprom(201,'0');
  2169   001048  0E30               	movlw	48
  2170   00104A  6E25               	movwf	write_external_eeprom@data^0,c
  2171   00104C  0EC9               	movlw	201
  2172   00104E  ECA2  F009         	call	_write_external_eeprom
  2173   001052                     
  2174                           ;main.c: 30:     write_external_eeprom(202,'0');
  2175   001052  0E30               	movlw	48
  2176   001054  6E25               	movwf	write_external_eeprom@data^0,c
  2177   001056  0ECA               	movlw	202
  2178   001058  ECA2  F009         	call	_write_external_eeprom
  2179   00105C                     
  2180                           ;main.c: 31:     write_external_eeprom(203,'0');
  2181   00105C  0E30               	movlw	48
  2182   00105E  6E25               	movwf	write_external_eeprom@data^0,c
  2183   001060  0ECB               	movlw	203
  2184   001062  ECA2  F009         	call	_write_external_eeprom
  2185   001066                     
  2186                           ;main.c: 34: for(int j=0; j<4; j++)
  2187   001066  0E00               	movlw	0
  2188   001068  6E2A               	movwf	(init_config@j+1)^0,c
  2189   00106A  0E00               	movlw	0
  2190   00106C  6E29               	movwf	init_config@j^0,c
  2191   00106E                     l2166:
  2192                           
  2193                           ;main.c: 35: {;main.c: 36:     pass[j] = read_external_eeprom(j);
  2194   00106E  5029               	movf	init_config@j^0,w,c
  2195   001070  0F1F               	addlw	low _pass
  2196   001072  6ED9               	movwf	fsr2l,c
  2197   001074  6ADA               	clrf	fsr2h,c
  2198   001076  5029               	movf	init_config@j^0,w,c
  2199   001078  ECFC  F009         	call	_read_external_eeprom
  2200   00107C  6EDF               	movwf	indf2,c
  2201   00107E                     
  2202                           ;main.c: 37: }
  2203   00107E  4A29               	infsnz	init_config@j^0,f,c
  2204   001080  2A2A               	incf	(init_config@j+1)^0,f,c
  2205   001082  BE2A               	btfsc	(init_config@j+1)^0,7,c
  2206   001084  EF4D  F008         	goto	u1191
  2207   001088  502A               	movf	(init_config@j+1)^0,w,c
  2208   00108A  E109               	bnz	u1190
  2209   00108C  0E04               	movlw	4
  2210   00108E  5C29               	subwf	init_config@j^0,w,c
  2211   001090  A0D8               	btfss	status,0,c
  2212   001092  EF4D  F008         	goto	u1191
  2213   001096  EF4F  F008         	goto	u1190
  2214   00109A                     u1191:
  2215   00109A  EF37  F008         	goto	l2166
  2216   00109E                     u1190:
  2217   00109E  0012               	return		;funcret
  2218   0010A0                     __end_of_init_config:
  2219                           	callstack 0
  2220                           
  2221 ;; *************** function _write_external_eeprom *****************
  2222 ;; Defined at:
  2223 ;;		line 14 in file "external_eeprom.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  address         1    wreg     unsigned char 
  2226 ;;  data            1    1[COMRAM] unsigned char 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  address         1    4[COMRAM] unsigned char 
  2229 ;;  i               2    2[COMRAM] int 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      void 
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0, cstack
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2239 ;;      Params:         1       0       0       0       0       0       0
  2240 ;;      Locals:         3       0       0       0       0       0       0
  2241 ;;      Temps:          0       0       0       0       0       0       0
  2242 ;;      Totals:         4       0       0       0       0       0       0
  2243 ;;Total ram usage:        4 bytes
  2244 ;; Hardware stack levels used: 1
  2245 ;; Hardware stack levels required when called: 3
  2246 ;; This function calls:
  2247 ;;		_i2c_start
  2248 ;;		_i2c_stop
  2249 ;;		_i2c_write
  2250 ;; This function is called by:
  2251 ;;		_init_config
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text10
  2256   001344                     __ptext10:
  2257                           	callstack 0
  2258   001344                     _write_external_eeprom:
  2259                           	callstack 26
  2260                           
  2261                           ;incstack = 0
  2262                           ;write_external_eeprom@address stored from wreg
  2263   001344  6E28               	movwf	write_external_eeprom@address^0,c
  2264   001346                     
  2265                           ;external_eeprom.c: 14: void write_external_eeprom(unsigned char address, unsigned char 
      +                          data);external_eeprom.c: 15: {;external_eeprom.c: 16:  i2c_start();
  2266   001346  EC96  F00A         	call	_i2c_start	;wreg free
  2267   00134A                     
  2268                           ;external_eeprom.c: 17:  i2c_write(0xA0);
  2269   00134A  0EA0               	movlw	160
  2270   00134C  EC80  F00A         	call	_i2c_write
  2271   001350                     
  2272                           ;external_eeprom.c: 18:  i2c_write(address);
  2273   001350  5028               	movf	write_external_eeprom@address^0,w,c
  2274   001352  EC80  F00A         	call	_i2c_write
  2275   001356                     
  2276                           ;external_eeprom.c: 19:  i2c_write(data);
  2277   001356  5025               	movf	write_external_eeprom@data^0,w,c
  2278   001358  EC80  F00A         	call	_i2c_write
  2279   00135C                     
  2280                           ;external_eeprom.c: 20:  i2c_stop();
  2281   00135C  EC92  F00A         	call	_i2c_stop	;wreg free
  2282   001360                     
  2283                           ;external_eeprom.c: 21:     for(int i=3000; i--;);
  2284   001360  0E0B               	movlw	11
  2285   001362  6E27               	movwf	(write_external_eeprom@i+1)^0,c
  2286   001364  0EB8               	movlw	184
  2287   001366  6E26               	movwf	write_external_eeprom@i^0,c
  2288   001368                     l1900:
  2289   001368  0626               	decf	write_external_eeprom@i^0,f,c
  2290   00136A  A0D8               	btfss	status,0,c
  2291   00136C  0627               	decf	(write_external_eeprom@i+1)^0,f,c
  2292   00136E  2826               	incf	write_external_eeprom@i^0,w,c
  2293   001370  E106               	bnz	u841
  2294   001372  2827               	incf	(write_external_eeprom@i+1)^0,w,c
  2295   001374  A4D8               	btfss	status,2,c
  2296   001376  EFBF  F009         	goto	u841
  2297   00137A  EFC1  F009         	goto	u840
  2298   00137E                     u841:
  2299   00137E  EFB4  F009         	goto	l1900
  2300   001382                     u840:
  2301   001382  0012               	return		;funcret
  2302   001384                     __end_of_write_external_eeprom:
  2303                           	callstack 0
  2304                           
  2305 ;; *************** function _read_external_eeprom *****************
  2306 ;; Defined at:
  2307 ;;		line 24 in file "external_eeprom.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  address         1    wreg     unsigned char 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  address         1    1[COMRAM] unsigned char 
  2312 ;;  data            1    2[COMRAM] unsigned char 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      unsigned char 
  2315 ;; Registers used:
  2316 ;;		wreg, status,2, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2322 ;;      Params:         0       0       0       0       0       0       0
  2323 ;;      Locals:         2       0       0       0       0       0       0
  2324 ;;      Temps:          0       0       0       0       0       0       0
  2325 ;;      Totals:         2       0       0       0       0       0       0
  2326 ;;Total ram usage:        2 bytes
  2327 ;; Hardware stack levels used: 1
  2328 ;; Hardware stack levels required when called: 4
  2329 ;; This function calls:
  2330 ;;		_i2c_read
  2331 ;;		_i2c_rep_start
  2332 ;;		_i2c_start
  2333 ;;		_i2c_stop
  2334 ;;		_i2c_write
  2335 ;; This function is called by:
  2336 ;;		_init_config
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text11
  2341   0013F8                     __ptext11:
  2342                           	callstack 0
  2343   0013F8                     _read_external_eeprom:
  2344                           	callstack 25
  2345                           
  2346                           ;incstack = 0
  2347                           ;read_external_eeprom@address stored from wreg
  2348   0013F8  6E25               	movwf	read_external_eeprom@address^0,c
  2349   0013FA                     
  2350                           ;external_eeprom.c: 24: unsigned char read_external_eeprom(unsigned char address);extern
      +                          al_eeprom.c: 25: {;external_eeprom.c: 26:  unsigned char data;;external_eeprom.c: 28:  i
      +                          2c_start();
  2351   0013FA  EC96  F00A         	call	_i2c_start	;wreg free
  2352   0013FE                     
  2353                           ;external_eeprom.c: 29:  i2c_write(0xA0);
  2354   0013FE  0EA0               	movlw	160
  2355   001400  EC80  F00A         	call	_i2c_write
  2356   001404                     
  2357                           ;external_eeprom.c: 30:  i2c_write(address);
  2358   001404  5025               	movf	read_external_eeprom@address^0,w,c
  2359   001406  EC80  F00A         	call	_i2c_write
  2360   00140A                     
  2361                           ;external_eeprom.c: 31:  i2c_rep_start();
  2362   00140A  EC9A  F00A         	call	_i2c_rep_start	;wreg free
  2363   00140E                     
  2364                           ;external_eeprom.c: 32:  i2c_write(0xA1);
  2365   00140E  0EA1               	movlw	161
  2366   001410  EC80  F00A         	call	_i2c_write
  2367                           
  2368                           ;external_eeprom.c: 33:  data = i2c_read();
  2369   001414  EC86  F00A         	call	_i2c_read	;wreg free
  2370   001418  6E26               	movwf	read_external_eeprom@data^0,c
  2371   00141A                     
  2372                           ;external_eeprom.c: 34:  i2c_stop();
  2373   00141A  EC92  F00A         	call	_i2c_stop	;wreg free
  2374                           
  2375                           ;external_eeprom.c: 36:  return data;
  2376   00141E  5026               	movf	read_external_eeprom@data^0,w,c
  2377   001420  0012               	return		;funcret
  2378   001422                     __end_of_read_external_eeprom:
  2379                           	callstack 0
  2380                           
  2381 ;; *************** function _init_timer0 *****************
  2382 ;; Defined at:
  2383 ;;		line 4 in file "timer0.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2397 ;;      Params:         0       0       0       0       0       0       0
  2398 ;;      Locals:         0       0       0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0
  2400 ;;      Totals:         0       0       0       0       0       0       0
  2401 ;;Total ram usage:        0 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 1
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_init_config
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text12
  2412   0014B8                     __ptext12:
  2413                           	callstack 0
  2414   0014B8                     _init_timer0:
  2415                           	callstack 28
  2416   0014B8                     
  2417                           ;timer0.c: 12:  T08BIT = 1;
  2418   0014B8  8CD5               	bsf	4053,6,c	;volatile
  2419                           
  2420                           ;timer0.c: 15:  T0CS = 0;
  2421   0014BA  9AD5               	bcf	4053,5,c	;volatile
  2422                           
  2423                           ;timer0.c: 18:  TMR0ON = 1;
  2424   0014BC  8ED5               	bsf	4053,7,c	;volatile
  2425                           
  2426                           ;timer0.c: 21:  PSA = 1;
  2427   0014BE  86D5               	bsf	4053,3,c	;volatile
  2428   0014C0                     
  2429                           ;timer0.c: 24:  TMR0 = 6;
  2430   0014C0  0E00               	movlw	0
  2431   0014C2  6ED7               	movwf	215,c	;volatile
  2432   0014C4  0E06               	movlw	6
  2433   0014C6  6ED6               	movwf	214,c	;volatile
  2434   0014C8                     
  2435                           ;timer0.c: 27:  TMR0IF = 0;
  2436   0014C8  94F2               	bcf	4082,2,c	;volatile
  2437   0014CA  0012               	return		;funcret
  2438   0014CC                     __end_of_init_timer0:
  2439                           	callstack 0
  2440                           
  2441 ;; *************** function _init_matrix_keypad *****************
  2442 ;; Defined at:
  2443 ;;		line 5 in file "matrix_keypad.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2457 ;;      Params:         0       0       0       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0
  2460 ;;      Totals:         0       0       0       0       0       0       0
  2461 ;;Total ram usage:        0 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; Hardware stack levels required when called: 1
  2464 ;; This function calls:
  2465 ;;		Nothing
  2466 ;; This function is called by:
  2467 ;;		_init_config
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text13
  2472   0014CC                     __ptext13:
  2473                           	callstack 0
  2474   0014CC                     _init_matrix_keypad:
  2475                           	callstack 28
  2476   0014CC                     
  2477                           ;matrix_keypad.c: 8:  ADCON1 = 0x0F;
  2478   0014CC  0E0F               	movlw	15
  2479   0014CE  6EC1               	movwf	193,c	;volatile
  2480                           
  2481                           ;matrix_keypad.c: 11:  TRISB = 0x1E;
  2482   0014D0  0E1E               	movlw	30
  2483   0014D2  6E93               	movwf	147,c	;volatile
  2484   0014D4                     
  2485                           ;matrix_keypad.c: 14:  RBPU = 0;
  2486   0014D4  9EF1               	bcf	4081,7,c	;volatile
  2487   0014D6                     
  2488                           ;matrix_keypad.c: 16:  PORTB = PORTB | 0xE0;
  2489   0014D6  5081               	movf	129,w,c	;volatile
  2490   0014D8  09E0               	iorlw	224
  2491   0014DA  6E81               	movwf	129,c	;volatile
  2492   0014DC  0012               	return		;funcret
  2493   0014DE                     __end_of_init_matrix_keypad:
  2494                           	callstack 0
  2495                           
  2496 ;; *************** function _init_i2c *****************
  2497 ;; Defined at:
  2498 ;;		line 4 in file "i2c.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      void 
  2505 ;; Registers used:
  2506 ;;		wreg, status,2
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2512 ;;      Params:         0       0       0       0       0       0       0
  2513 ;;      Locals:         0       0       0       0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0       0       0
  2515 ;;      Totals:         0       0       0       0       0       0       0
  2516 ;;Total ram usage:        0 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; Hardware stack levels required when called: 1
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_init_config
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text14
  2527   0014A2                     __ptext14:
  2528                           	callstack 0
  2529   0014A2                     _init_i2c:
  2530                           	callstack 28
  2531   0014A2                     
  2532                           ;i2c.c: 7:  TRISC3 = 1;
  2533   0014A2  8694               	bsf	3988,3,c	;volatile
  2534                           
  2535                           ;i2c.c: 8:  TRISC4 = 1;
  2536   0014A4  8894               	bsf	3988,4,c	;volatile
  2537   0014A6                     
  2538                           ;i2c.c: 10:  SSPCON1 = 0x28;
  2539   0014A6  0E28               	movlw	40
  2540   0014A8  6EC6               	movwf	198,c	;volatile
  2541                           
  2542                           ;i2c.c: 12:  SSPADD = 0x31;
  2543   0014AA  0E31               	movlw	49
  2544   0014AC  6EC8               	movwf	200,c	;volatile
  2545   0014AE                     
  2546                           ;i2c.c: 14:  CKE = 0;
  2547   0014AE  9CC7               	bcf	4039,6,c	;volatile
  2548   0014B0                     
  2549                           ;i2c.c: 16:  SMP = 1;
  2550   0014B0  8EC7               	bsf	4039,7,c	;volatile
  2551   0014B2                     
  2552                           ;i2c.c: 18:  SSPIF = 0;
  2553   0014B2  969E               	bcf	3998,3,c	;volatile
  2554   0014B4                     
  2555                           ;i2c.c: 20:  BCLIF = 0;
  2556   0014B4  96A1               	bcf	4001,3,c	;volatile
  2557   0014B6  0012               	return		;funcret
  2558   0014B8                     __end_of_init_i2c:
  2559                           	callstack 0
  2560                           
  2561 ;; *************** function _init_ds1307 *****************
  2562 ;; Defined at:
  2563 ;;		line 13 in file "ds1307.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  dummy           1    3[COMRAM] unsigned char 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2577 ;;      Params:         0       0       0       0       0       0       0
  2578 ;;      Locals:         1       0       0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0
  2580 ;;      Totals:         1       0       0       0       0       0       0
  2581 ;;Total ram usage:        1 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 5
  2584 ;; This function calls:
  2585 ;;		_read_ds1307
  2586 ;;		_write_ds1307
  2587 ;; This function is called by:
  2588 ;;		_init_config
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text15
  2593   0012B6                     __ptext15:
  2594                           	callstack 0
  2595   0012B6                     _init_ds1307:
  2596                           	callstack 24
  2597   0012B6                     
  2598                           ;ds1307.c: 15:  unsigned char dummy;;ds1307.c: 18:  dummy = read_ds1307(0x00);
  2599   0012B6  0E00               	movlw	0
  2600   0012B8  EC11  F00A         	call	_read_ds1307
  2601   0012BC  6E27               	movwf	init_ds1307@dummy^0,c
  2602   0012BE                     
  2603                           ;ds1307.c: 19:  write_ds1307(0x00, dummy | 0x80);
  2604   0012BE  5027               	movf	init_ds1307@dummy^0,w,c
  2605   0012C0  0980               	iorlw	128
  2606   0012C2  6E25               	movwf	write_ds1307@data^0,c
  2607   0012C4  0E00               	movlw	0
  2608   0012C6  EC36  F00A         	call	_write_ds1307
  2609   0012CA                     
  2610                           ;ds1307.c: 22:  dummy = read_ds1307(0x02);
  2611   0012CA  0E02               	movlw	2
  2612   0012CC  EC11  F00A         	call	_read_ds1307
  2613   0012D0  6E27               	movwf	init_ds1307@dummy^0,c
  2614                           
  2615                           ;ds1307.c: 23:  write_ds1307(0x02, dummy | 0x40);
  2616   0012D2  5027               	movf	init_ds1307@dummy^0,w,c
  2617   0012D4  0940               	iorlw	64
  2618   0012D6  6E25               	movwf	write_ds1307@data^0,c
  2619   0012D8  0E02               	movlw	2
  2620   0012DA  EC36  F00A         	call	_write_ds1307
  2621   0012DE                     
  2622                           ;ds1307.c: 38:  write_ds1307(0x07, 0x93);
  2623   0012DE  0E93               	movlw	147
  2624   0012E0  6E25               	movwf	write_ds1307@data^0,c
  2625   0012E2  0E07               	movlw	7
  2626   0012E4  EC36  F00A         	call	_write_ds1307
  2627   0012E8                     
  2628                           ;ds1307.c: 41:  dummy = read_ds1307(0x00);
  2629   0012E8  0E00               	movlw	0
  2630   0012EA  EC11  F00A         	call	_read_ds1307
  2631   0012EE  6E27               	movwf	init_ds1307@dummy^0,c
  2632                           
  2633                           ;ds1307.c: 42:  write_ds1307(0x00, dummy & 0x7F);
  2634   0012F0  5027               	movf	init_ds1307@dummy^0,w,c
  2635   0012F2  0B7F               	andlw	127
  2636   0012F4  6E25               	movwf	write_ds1307@data^0,c
  2637   0012F6  0E00               	movlw	0
  2638   0012F8  EC36  F00A         	call	_write_ds1307
  2639   0012FC  0012               	return		;funcret
  2640   0012FE                     __end_of_init_ds1307:
  2641                           	callstack 0
  2642                           
  2643 ;; *************** function _write_ds1307 *****************
  2644 ;; Defined at:
  2645 ;;		line 46 in file "ds1307.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  address         1    wreg     unsigned char 
  2648 ;;  data            1    1[COMRAM] unsigned char 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  address         1    2[COMRAM] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2660 ;;      Params:         1       0       0       0       0       0       0
  2661 ;;      Locals:         1       0       0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0
  2663 ;;      Totals:         2       0       0       0       0       0       0
  2664 ;;Total ram usage:        2 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; Hardware stack levels required when called: 3
  2667 ;; This function calls:
  2668 ;;		_i2c_start
  2669 ;;		_i2c_stop
  2670 ;;		_i2c_write
  2671 ;; This function is called by:
  2672 ;;		_init_ds1307
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text16
  2677   00146C                     __ptext16:
  2678                           	callstack 0
  2679   00146C                     _write_ds1307:
  2680                           	callstack 25
  2681                           
  2682                           ;incstack = 0
  2683                           ;write_ds1307@address stored from wreg
  2684   00146C  6E26               	movwf	write_ds1307@address^0,c
  2685   00146E                     
  2686                           ;ds1307.c: 46: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 47
      +                          : {;ds1307.c: 48:  i2c_start();
  2687   00146E  EC96  F00A         	call	_i2c_start	;wreg free
  2688   001472                     
  2689                           ;ds1307.c: 49:  i2c_write(0xD0);
  2690   001472  0ED0               	movlw	208
  2691   001474  EC80  F00A         	call	_i2c_write
  2692   001478                     
  2693                           ;ds1307.c: 50:  i2c_write(address);
  2694   001478  5026               	movf	write_ds1307@address^0,w,c
  2695   00147A  EC80  F00A         	call	_i2c_write
  2696   00147E                     
  2697                           ;ds1307.c: 51:  i2c_write(data);
  2698   00147E  5025               	movf	write_ds1307@data^0,w,c
  2699   001480  EC80  F00A         	call	_i2c_write
  2700   001484                     
  2701                           ;ds1307.c: 52:  i2c_stop();
  2702   001484  EC92  F00A         	call	_i2c_stop	;wreg free
  2703   001488  0012               	return		;funcret
  2704   00148A                     __end_of_write_ds1307:
  2705                           	callstack 0
  2706                           
  2707 ;; *************** function _init_clcd *****************
  2708 ;; Defined at:
  2709 ;;		line 28 in file "clcd.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;		None
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;		None
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2723 ;;      Params:         0       0       0       0       0       0       0
  2724 ;;      Locals:         0       0       0       0       0       0       0
  2725 ;;      Temps:          1       0       0       0       0       0       0
  2726 ;;      Totals:         1       0       0       0       0       0       0
  2727 ;;Total ram usage:        1 bytes
  2728 ;; Hardware stack levels used: 1
  2729 ;; Hardware stack levels required when called: 2
  2730 ;; This function calls:
  2731 ;;		_clcd_write
  2732 ;; This function is called by:
  2733 ;;		_init_config
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text17
  2738   000E7A                     __ptext17:
  2739                           	callstack 0
  2740   000E7A                     _init_clcd:
  2741                           	callstack 27
  2742   000E7A                     
  2743                           ;clcd.c: 31:  TRISD = 0x00;
  2744   000E7A  0E00               	movlw	0
  2745   000E7C  6E95               	movwf	149,c	;volatile
  2746   000E7E                     
  2747                           ;clcd.c: 33:  TRISC = TRISC & 0xF8;
  2748   000E7E  5094               	movf	148,w,c	;volatile
  2749   000E80  0BF8               	andlw	248
  2750   000E82  6E94               	movwf	148,c	;volatile
  2751   000E84                     
  2752                           ;clcd.c: 35:  RC0 = 0;
  2753   000E84  9082               	bcf	3970,0,c	;volatile
  2754   000E86                     
  2755                           ;clcd.c: 39:     _delay((unsigned long)((30)*(20000000/4000.0)));
  2756   000E86  0EC3               	movlw	195
  2757   000E88  6E26               	movwf	??_init_clcd^0,c
  2758   000E8A  0ECD               	movlw	205
  2759   000E8C                     u1537:
  2760   000E8C  2EE8               	decfsz	wreg,f,c
  2761   000E8E  D7FE               	bra	u1537
  2762   000E90  2E26               	decfsz	??_init_clcd^0,f,c
  2763   000E92  D7FC               	bra	u1537
  2764   000E94  0000               	nop	
  2765   000E96                     
  2766                           ;clcd.c: 42:     clcd_write(0x33, 0 );
  2767   000E96  0E00               	movlw	0
  2768   000E98  6E24               	movwf	clcd_write@control_bit^0,c
  2769   000E9A  0E33               	movlw	51
  2770   000E9C  ECDF  F009         	call	_clcd_write
  2771   000EA0                     
  2772                           ;clcd.c: 43:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2773   000EA0  0E1B               	movlw	27
  2774   000EA2  6E26               	movwf	??_init_clcd^0,c
  2775   000EA4  0E9E               	movlw	158
  2776   000EA6                     u1547:
  2777   000EA6  2EE8               	decfsz	wreg,f,c
  2778   000EA8  D7FE               	bra	u1547
  2779   000EAA  2E26               	decfsz	??_init_clcd^0,f,c
  2780   000EAC  D7FC               	bra	u1547
  2781   000EAE  D000               	nop2	
  2782   000EB0                     
  2783                           ;clcd.c: 44:     clcd_write(0x33, 0 );
  2784   000EB0  0E00               	movlw	0
  2785   000EB2  6E24               	movwf	clcd_write@control_bit^0,c
  2786   000EB4  0E33               	movlw	51
  2787   000EB6  ECDF  F009         	call	_clcd_write
  2788   000EBA                     
  2789                           ;clcd.c: 45:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2790   000EBA  0EA6               	movlw	166
  2791   000EBC                     u1557:
  2792   000EBC  2EE8               	decfsz	wreg,f,c
  2793   000EBE  D7FE               	bra	u1557
  2794   000EC0  D000               	nop2	
  2795   000EC2                     
  2796                           ;clcd.c: 46:     clcd_write(0x33, 0 );
  2797   000EC2  0E00               	movlw	0
  2798   000EC4  6E24               	movwf	clcd_write@control_bit^0,c
  2799   000EC6  0E33               	movlw	51
  2800   000EC8  ECDF  F009         	call	_clcd_write
  2801   000ECC                     
  2802                           ;clcd.c: 47:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  2803   000ECC  D000               	nop2		;2 cycle nop
  2804   000ECE  D000               	nop2		;2 cycle nop
  2805   000ED0  0000               	nop	
  2806   000ED2                     
  2807                           ;clcd.c: 49:     clcd_write(0x02, 0);
  2808   000ED2  0E00               	movlw	0
  2809   000ED4  6E24               	movwf	clcd_write@control_bit^0,c
  2810   000ED6  0E02               	movlw	2
  2811   000ED8  ECDF  F009         	call	_clcd_write
  2812   000EDC                     
  2813                           ;clcd.c: 50:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2814   000EDC  0EA6               	movlw	166
  2815   000EDE                     u1567:
  2816   000EDE  2EE8               	decfsz	wreg,f,c
  2817   000EE0  D7FE               	bra	u1567
  2818   000EE2  D000               	nop2	
  2819   000EE4                     
  2820                           ;clcd.c: 51:     clcd_write(0x38, 0);
  2821   000EE4  0E00               	movlw	0
  2822   000EE6  6E24               	movwf	clcd_write@control_bit^0,c
  2823   000EE8  0E38               	movlw	56
  2824   000EEA  ECDF  F009         	call	_clcd_write
  2825   000EEE                     
  2826                           ;clcd.c: 52:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2827   000EEE  0EA6               	movlw	166
  2828   000EF0                     u1577:
  2829   000EF0  2EE8               	decfsz	wreg,f,c
  2830   000EF2  D7FE               	bra	u1577
  2831   000EF4  D000               	nop2	
  2832   000EF6                     
  2833                           ;clcd.c: 53:     clcd_write(0x01, 0);
  2834   000EF6  0E00               	movlw	0
  2835   000EF8  6E24               	movwf	clcd_write@control_bit^0,c
  2836   000EFA  0E01               	movlw	1
  2837   000EFC  ECDF  F009         	call	_clcd_write
  2838   000F00                     
  2839                           ;clcd.c: 54:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  2840   000F00  0E04               	movlw	4
  2841   000F02  6E26               	movwf	??_init_clcd^0,c
  2842   000F04  0E3E               	movlw	62
  2843   000F06                     u1587:
  2844   000F06  2EE8               	decfsz	wreg,f,c
  2845   000F08  D7FE               	bra	u1587
  2846   000F0A  2E26               	decfsz	??_init_clcd^0,f,c
  2847   000F0C  D7FC               	bra	u1587
  2848   000F0E                     
  2849                           ;clcd.c: 55:     clcd_write(0x0C, 0);
  2850   000F0E  0E00               	movlw	0
  2851   000F10  6E24               	movwf	clcd_write@control_bit^0,c
  2852   000F12  0E0C               	movlw	12
  2853   000F14  ECDF  F009         	call	_clcd_write
  2854   000F18                     
  2855                           ;clcd.c: 56:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2856   000F18  0EA6               	movlw	166
  2857   000F1A                     u1597:
  2858   000F1A  2EE8               	decfsz	wreg,f,c
  2859   000F1C  D7FE               	bra	u1597
  2860   000F1E  D000               	nop2	
  2861   000F20  0012               	return		;funcret
  2862   000F22                     __end_of_init_clcd:
  2863                           	callstack 0
  2864                           
  2865 ;; *************** function _init_adc *****************
  2866 ;; Defined at:
  2867 ;;		line 4 in file "adc.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2881 ;;      Params:         0       0       0       0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0       0       0
  2883 ;;      Temps:          0       0       0       0       0       0       0
  2884 ;;      Totals:         0       0       0       0       0       0       0
  2885 ;;Total ram usage:        0 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_init_config
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text18
  2896   00144C                     __ptext18:
  2897                           	callstack 0
  2898   00144C                     _init_adc:
  2899                           	callstack 28
  2900   00144C                     
  2901                           ;adc.c: 7:  ADFM = 1;
  2902   00144C  8EC0               	bsf	4032,7,c	;volatile
  2903                           
  2904                           ;adc.c: 13:  ACQT2 = 0;
  2905   00144E  9AC0               	bcf	4032,5,c	;volatile
  2906                           
  2907                           ;adc.c: 14:  ACQT1 = 1;
  2908   001450  88C0               	bsf	4032,4,c	;volatile
  2909                           
  2910                           ;adc.c: 15:  ACQT0 = 0;
  2911   001452  96C0               	bcf	4032,3,c	;volatile
  2912                           
  2913                           ;adc.c: 21:  ADCS0 = 0;
  2914   001454  90C0               	bcf	4032,0,c	;volatile
  2915                           
  2916                           ;adc.c: 22:  ADCS1 = 1;
  2917   001456  82C0               	bsf	4032,1,c	;volatile
  2918                           
  2919                           ;adc.c: 23:  ADCS2 = 0;
  2920   001458  94C0               	bcf	4032,2,c	;volatile
  2921                           
  2922                           ;adc.c: 26:  GODONE = 0;
  2923   00145A  92C2               	bcf	4034,1,c	;volatile
  2924                           
  2925                           ;adc.c: 31:  VCFG1 = 0;
  2926   00145C  9AC1               	bcf	4033,5,c	;volatile
  2927                           
  2928                           ;adc.c: 33:  VCFG0 = 0;
  2929   00145E  98C1               	bcf	4033,4,c	;volatile
  2930   001460                     
  2931                           ;adc.c: 36:  ADRESH = 0;
  2932   001460  0E00               	movlw	0
  2933   001462  6EC4               	movwf	196,c	;volatile
  2934                           
  2935                           ;adc.c: 37:  ADRESL = 0;
  2936   001464  0E00               	movlw	0
  2937   001466  6EC3               	movwf	195,c	;volatile
  2938   001468                     
  2939                           ;adc.c: 40:  ADON = 1;
  2940   001468  80C2               	bsf	4034,0,c	;volatile
  2941   00146A  0012               	return		;funcret
  2942   00146C                     __end_of_init_adc:
  2943                           	callstack 0
  2944                           
  2945 ;; *************** function _dashboard *****************
  2946 ;; Defined at:
  2947 ;;		line 50 in file "dashboard.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;		None
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  events          8   17[COMRAM] PTR unsigned char [8]
  2952 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(3), 
  2953 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(3), 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2963 ;;      Params:         0       0       0       0       0       0       0
  2964 ;;      Locals:         8       0       0       0       0       0       0
  2965 ;;      Temps:          1       0       0       0       0       0       0
  2966 ;;      Totals:         9       0       0       0       0       0       0
  2967 ;;Total ram usage:        9 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 6
  2970 ;; This function calls:
  2971 ;;		___lwdiv
  2972 ;;		___lwmod
  2973 ;;		_clcd_print
  2974 ;;		_clcd_putch
  2975 ;;		_display_time
  2976 ;;		_get_time
  2977 ;; This function is called by:
  2978 ;;		_main
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text19
  2983   0009BE                     __ptext19:
  2984                           	callstack 0
  2985   0009BE                     _dashboard:
  2986                           	callstack 24
  2987   0009BE                     
  2988                           ;dashboard.c: 52:     clcd_print("  TIME    EV  SP", (0x80 + (0)));
  2989   0009BE  0E36               	movlw	low STR_2
  2990   0009C0  6E26               	movwf	clcd_print@data^0,c
  2991   0009C2  5026               	movf	clcd_print@data^0,w,c
  2992   0009C4  A4D8               	btfss	status,2,c
  2993   0009C6  0E06               	movlw	high __smallconst
  2994   0009C8  6E27               	movwf	(clcd_print@data+1)^0,c
  2995   0009CA  0E80               	movlw	128
  2996   0009CC  6E28               	movwf	clcd_print@addr^0,c
  2997   0009CE  ECC5  F008         	call	_clcd_print	;wreg free
  2998   0009D2                     
  2999                           ;dashboard.c: 55:     char *events[8] = {"ON", "GR", "GN", "G1", "G2", "G3", "G4", "C "}
      +                          ;
  3000   0009D2  EE20  F044         	lfsr	2,dashboard@F10501
  3001   0009D6  EE10  F035         	lfsr	1,dashboard@events
  3002   0009DA  0E07               	movlw	7
  3003   0009DC                     u1251:
  3004   0009DC  CFDB FFE3          	movff	plusw2,plusw1
  3005   0009E0  06E8               	decf	wreg,f,c
  3006   0009E2  E2FC               	bc	u1251
  3007   0009E4                     
  3008                           ;dashboard.c: 59:     clcd_print(events[i], (0xC0 + (10)));
  3009   0009E4  500A               	movf	_i^0,w,c
  3010   0009E6  0F35               	addlw	low dashboard@events
  3011   0009E8  6ED9               	movwf	fsr2l,c
  3012   0009EA  6ADA               	clrf	fsr2h,c
  3013   0009EC  50DF               	movf	indf2,w,c
  3014   0009EE  6E34               	movwf	??_dashboard^0,c
  3015   0009F0  C034  F026         	movff	??_dashboard,clcd_print@data
  3016   0009F4  5026               	movf	clcd_print@data^0,w,c
  3017   0009F6  A4D8               	btfss	status,2,c
  3018   0009F8  0E06               	movlw	high __smallconst
  3019   0009FA  6E27               	movwf	(clcd_print@data+1)^0,c
  3020   0009FC  0ECA               	movlw	202
  3021   0009FE  6E28               	movwf	clcd_print@addr^0,c
  3022   000A00  ECC5  F008         	call	_clcd_print	;wreg free
  3023   000A04                     
  3024                           ;dashboard.c: 62:     if (key == 2) {
  3025   000A04  0E02               	movlw	2
  3026   000A06  180F               	xorwf	_key^0,w,c
  3027   000A08  A4D8               	btfss	status,2,c
  3028   000A0A  EF09  F005         	goto	u1261
  3029   000A0E  EF0B  F005         	goto	u1260
  3030   000A12                     u1261:
  3031   000A12  EF1B  F005         	goto	l2212
  3032   000A16                     u1260:
  3033   000A16                     
  3034                           ;dashboard.c: 63:         if (i < 6) {
  3035   000A16  BE0B               	btfsc	(_i+1)^0,7,c
  3036   000A18  EF19  F005         	goto	u1270
  3037   000A1C  500B               	movf	(_i+1)^0,w,c
  3038   000A1E  E107               	bnz	u1271
  3039   000A20  0E06               	movlw	6
  3040   000A22  5C0A               	subwf	_i^0,w,c
  3041   000A24  B0D8               	btfsc	status,0,c
  3042   000A26  EF17  F005         	goto	u1271
  3043   000A2A  EF19  F005         	goto	u1270
  3044   000A2E                     u1271:
  3045   000A2E  EF1B  F005         	goto	l2212
  3046   000A32                     u1270:
  3047   000A32                     
  3048                           ;dashboard.c: 64:             i++;
  3049   000A32  4A0A               	infsnz	_i^0,f,c
  3050   000A34  2A0B               	incf	(_i+1)^0,f,c
  3051   000A36                     l2212:
  3052                           
  3053                           ;dashboard.c: 68:     if (key == 3 && i != 7) {
  3054   000A36  0E03               	movlw	3
  3055   000A38  180F               	xorwf	_key^0,w,c
  3056   000A3A  A4D8               	btfss	status,2,c
  3057   000A3C  EF22  F005         	goto	u1281
  3058   000A40  EF24  F005         	goto	u1280
  3059   000A44                     u1281:
  3060   000A44  EF3F  F005         	goto	l2220
  3061   000A48                     u1280:
  3062   000A48  0E07               	movlw	7
  3063   000A4A  180A               	xorwf	_i^0,w,c
  3064   000A4C  100B               	iorwf	(_i+1)^0,w,c
  3065   000A4E  B4D8               	btfsc	status,2,c
  3066   000A50  EF2C  F005         	goto	u1291
  3067   000A54  EF2E  F005         	goto	u1290
  3068   000A58                     u1291:
  3069   000A58  EF3F  F005         	goto	l2220
  3070   000A5C                     u1290:
  3071   000A5C                     
  3072                           ;dashboard.c: 69:         if (i > 1) {
  3073   000A5C  BE0B               	btfsc	(_i+1)^0,7,c
  3074   000A5E  EF3A  F005         	goto	u1301
  3075   000A62  500B               	movf	(_i+1)^0,w,c
  3076   000A64  E109               	bnz	u1300
  3077   000A66  0E02               	movlw	2
  3078   000A68  5C0A               	subwf	_i^0,w,c
  3079   000A6A  A0D8               	btfss	status,0,c
  3080   000A6C  EF3A  F005         	goto	u1301
  3081   000A70  EF3C  F005         	goto	u1300
  3082   000A74                     u1301:
  3083   000A74  EF3F  F005         	goto	l2220
  3084   000A78                     u1300:
  3085   000A78                     
  3086                           ;dashboard.c: 70:             i--;
  3087   000A78  060A               	decf	_i^0,f,c
  3088   000A7A  A0D8               	btfss	status,0,c
  3089   000A7C  060B               	decf	(_i+1)^0,f,c
  3090   000A7E                     l2220:
  3091                           
  3092                           ;dashboard.c: 74:     if (key == 1) {
  3093   000A7E  040F               	decf	_key^0,w,c
  3094   000A80  A4D8               	btfss	status,2,c
  3095   000A82  EF45  F005         	goto	u1311
  3096   000A86  EF47  F005         	goto	u1310
  3097   000A8A                     u1311:
  3098   000A8A  EF4B  F005         	goto	l2224
  3099   000A8E                     u1310:
  3100   000A8E                     
  3101                           ;dashboard.c: 75:         i = 7;
  3102   000A8E  0E00               	movlw	0
  3103   000A90  6E0B               	movwf	(_i+1)^0,c
  3104   000A92  0E07               	movlw	7
  3105   000A94  6E0A               	movwf	_i^0,c
  3106   000A96                     l2224:
  3107                           
  3108                           ;dashboard.c: 78:     if (i == 7 && key == 2) {
  3109   000A96  0E07               	movlw	7
  3110   000A98  180A               	xorwf	_i^0,w,c
  3111   000A9A  100B               	iorwf	(_i+1)^0,w,c
  3112   000A9C  A4D8               	btfss	status,2,c
  3113   000A9E  EF53  F005         	goto	u1321
  3114   000AA2  EF55  F005         	goto	u1320
  3115   000AA6                     u1321:
  3116   000AA6  EF62  F005         	goto	l2230
  3117   000AAA                     u1320:
  3118   000AAA  0E02               	movlw	2
  3119   000AAC  180F               	xorwf	_key^0,w,c
  3120   000AAE  A4D8               	btfss	status,2,c
  3121   000AB0  EF5C  F005         	goto	u1331
  3122   000AB4  EF5E  F005         	goto	u1330
  3123   000AB8                     u1331:
  3124   000AB8  EF62  F005         	goto	l2230
  3125   000ABC                     u1330:
  3126   000ABC                     
  3127                           ;dashboard.c: 79:         i = 2;
  3128   000ABC  0E00               	movlw	0
  3129   000ABE  6E0B               	movwf	(_i+1)^0,c
  3130   000AC0  0E02               	movlw	2
  3131   000AC2  6E0A               	movwf	_i^0,c
  3132   000AC4                     l2230:
  3133                           
  3134                           ;dashboard.c: 84:     if (adc_reg_val < 1000)
  3135   000AC4  0EE8               	movlw	232
  3136   000AC6  5C0C               	subwf	_adc_reg_val^0,w,c
  3137   000AC8  0E03               	movlw	3
  3138   000ACA  580D               	subwfb	(_adc_reg_val+1)^0,w,c
  3139   000ACC  B0D8               	btfsc	status,0,c
  3140   000ACE  EF6B  F005         	goto	u1341
  3141   000AD2  EF6D  F005         	goto	u1340
  3142   000AD6                     u1341:
  3143   000AD6  EF97  F005         	goto	l217
  3144   000ADA                     u1340:
  3145   000ADA                     
  3146                           ;dashboard.c: 85:     {;dashboard.c: 86:         clcd_putch(((adc_reg_val / 100) + 48), 
      +                          (0xC0 + (14)));
  3147   000ADA  0ECE               	movlw	206
  3148   000ADC  6E32               	movwf	clcd_putch@addr^0,c
  3149   000ADE  C00C  F024         	movff	_adc_reg_val,___lwdiv@dividend
  3150   000AE2  C00D  F025         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  3151   000AE6  0E00               	movlw	0
  3152   000AE8  6E27               	movwf	(___lwdiv@divisor+1)^0,c
  3153   000AEA  0E64               	movlw	100
  3154   000AEC  6E26               	movwf	___lwdiv@divisor^0,c
  3155   000AEE  EC8B  F008         	call	___lwdiv	;wreg free
  3156   000AF2  5024               	movf	?___lwdiv^0,w,c
  3157   000AF4  0F30               	addlw	48
  3158   000AF6  EC45  F00A         	call	_clcd_putch
  3159                           
  3160                           ;dashboard.c: 87:         clcd_putch(((adc_reg_val / 10 % 10) + 48), (0xC0 + (15)));
  3161   000AFA  0ECF               	movlw	207
  3162   000AFC  6E32               	movwf	clcd_putch@addr^0,c
  3163   000AFE  0E00               	movlw	0
  3164   000B00  6E27               	movwf	(___lwdiv@divisor+1)^0,c
  3165   000B02  0E0A               	movlw	10
  3166   000B04  6E26               	movwf	___lwdiv@divisor^0,c
  3167   000B06  C00C  F024         	movff	_adc_reg_val,___lwdiv@dividend
  3168   000B0A  C00D  F025         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  3169   000B0E  EC8B  F008         	call	___lwdiv	;wreg free
  3170   000B12  C024  F02B         	movff	?___lwdiv,___lwmod@dividend
  3171   000B16  C025  F02C         	movff	?___lwdiv+1,___lwmod@dividend+1
  3172   000B1A  0E00               	movlw	0
  3173   000B1C  6E2E               	movwf	(___lwmod@divisor+1)^0,c
  3174   000B1E  0E0A               	movlw	10
  3175   000B20  6E2D               	movwf	___lwmod@divisor^0,c
  3176   000B22  ECFB  F008         	call	___lwmod	;wreg free
  3177   000B26  502B               	movf	?___lwmod^0,w,c
  3178   000B28  0F30               	addlw	48
  3179   000B2A  EC45  F00A         	call	_clcd_putch
  3180   000B2E                     l217:
  3181                           
  3182                           ;dashboard.c: 91:     get_time();
  3183   000B2E  ECD3  F007         	call	_get_time	;wreg free
  3184   000B32                     
  3185                           ;dashboard.c: 92:     display_time();
  3186   000B32  EC78  F00A         	call	_display_time	;wreg free
  3187   000B36  0012               	return		;funcret
  3188   000B38                     __end_of_dashboard:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _get_time *****************
  3192 ;; Defined at:
  3193 ;;		line 29 in file "dashboard.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;		None
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;		None
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      void 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3207 ;;      Params:         0       0       0       0       0       0       0
  3208 ;;      Locals:         0       0       0       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0       0       0
  3210 ;;      Totals:         0       0       0       0       0       0       0
  3211 ;;Total ram usage:        0 bytes
  3212 ;; Hardware stack levels used: 1
  3213 ;; Hardware stack levels required when called: 5
  3214 ;; This function calls:
  3215 ;;		_read_ds1307
  3216 ;; This function is called by:
  3217 ;;		_dashboard
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text20
  3222   000FA6                     __ptext20:
  3223                           	callstack 0
  3224   000FA6                     _get_time:
  3225                           	callstack 24
  3226   000FA6                     
  3227                           ;dashboard.c: 30:     clock_reg[0] = read_ds1307(0x02);
  3228   000FA6  0E02               	movlw	2
  3229   000FA8  EC11  F00A         	call	_read_ds1307
  3230   000FAC  6E05               	movwf	_clock_reg^0,c
  3231                           
  3232                           ;dashboard.c: 31:     clock_reg[1] = read_ds1307(0x01);
  3233   000FAE  0E01               	movlw	1
  3234   000FB0  EC11  F00A         	call	_read_ds1307
  3235   000FB4  6E06               	movwf	(_clock_reg+1)^0,c
  3236                           
  3237                           ;dashboard.c: 32:     clock_reg[2] = read_ds1307(0x00);
  3238   000FB6  0E00               	movlw	0
  3239   000FB8  EC11  F00A         	call	_read_ds1307
  3240   000FBC  6E07               	movwf	(_clock_reg+2)^0,c
  3241   000FBE                     
  3242                           ;dashboard.c: 34:     if (clock_reg[0] & 0x40) {
  3243   000FBE  AC05               	btfss	_clock_reg^0,6,c
  3244   000FC0  EFE4  F007         	goto	u971
  3245   000FC4  EFE6  F007         	goto	u970
  3246   000FC8                     u971:
  3247   000FC8  EFF1  F007         	goto	l1996
  3248   000FCC                     u970:
  3249   000FCC                     
  3250                           ;dashboard.c: 35:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  3251   000FCC  3805               	swapf	_clock_reg^0,w,c
  3252   000FCE  0B0F               	andlw	15
  3253   000FD0  0B01               	andlw	1
  3254   000FD2  0F30               	addlw	48
  3255   000FD4  6E11               	movwf	_time^0,c
  3256                           
  3257                           ;dashboard.c: 36:         time[1] = '0' + (clock_reg[0] & 0x0F);
  3258   000FD6  5005               	movf	_clock_reg^0,w,c
  3259   000FD8  0B0F               	andlw	15
  3260   000FDA  0F30               	addlw	48
  3261   000FDC  6E12               	movwf	(_time+1)^0,c
  3262                           
  3263                           ;dashboard.c: 37:     } else {
  3264   000FDE  EFFA  F007         	goto	l1998
  3265   000FE2                     l1996:
  3266                           
  3267                           ;dashboard.c: 38:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  3268   000FE2  3805               	swapf	_clock_reg^0,w,c
  3269   000FE4  0B0F               	andlw	15
  3270   000FE6  0B03               	andlw	3
  3271   000FE8  0F30               	addlw	48
  3272   000FEA  6E11               	movwf	_time^0,c
  3273                           
  3274                           ;dashboard.c: 39:         time[1] = '0' + (clock_reg[0] & 0x0F);
  3275   000FEC  5005               	movf	_clock_reg^0,w,c
  3276   000FEE  0B0F               	andlw	15
  3277   000FF0  0F30               	addlw	48
  3278   000FF2  6E12               	movwf	(_time+1)^0,c
  3279   000FF4                     l1998:
  3280                           
  3281                           ;dashboard.c: 41:     time[2] = ':';
  3282   000FF4  0E3A               	movlw	58
  3283   000FF6  6E13               	movwf	(_time+2)^0,c
  3284   000FF8                     
  3285                           ;dashboard.c: 42:     time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  3286   000FF8  3806               	swapf	(_clock_reg+1)^0,w,c
  3287   000FFA  0B0F               	andlw	15
  3288   000FFC  0B0F               	andlw	15
  3289   000FFE  0F30               	addlw	48
  3290   001000  6E14               	movwf	(_time+3)^0,c
  3291   001002                     
  3292                           ;dashboard.c: 43:     time[4] = '0' + (clock_reg[1] & 0x0F);
  3293   001002  5006               	movf	(_clock_reg+1)^0,w,c
  3294   001004  0B0F               	andlw	15
  3295   001006  0F30               	addlw	48
  3296   001008  6E15               	movwf	(_time+4)^0,c
  3297   00100A                     
  3298                           ;dashboard.c: 44:     time[5] = ':';
  3299   00100A  0E3A               	movlw	58
  3300   00100C  6E16               	movwf	(_time+5)^0,c
  3301                           
  3302                           ;dashboard.c: 45:     time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  3303   00100E  3807               	swapf	(_clock_reg+2)^0,w,c
  3304   001010  0B0F               	andlw	15
  3305   001012  0B0F               	andlw	15
  3306   001014  0F30               	addlw	48
  3307   001016  6E17               	movwf	(_time+6)^0,c
  3308                           
  3309                           ;dashboard.c: 46:     time[7] = '0' + (clock_reg[2] & 0x0F);
  3310   001018  5007               	movf	(_clock_reg+2)^0,w,c
  3311   00101A  0B0F               	andlw	15
  3312   00101C  0F30               	addlw	48
  3313   00101E  6E18               	movwf	(_time+7)^0,c
  3314   001020                     
  3315                           ;dashboard.c: 47:     time[8] = '\0';
  3316   001020  0E00               	movlw	0
  3317   001022  6E19               	movwf	(_time+8)^0,c
  3318   001024  0012               	return		;funcret
  3319   001026                     __end_of_get_time:
  3320                           	callstack 0
  3321                           
  3322 ;; *************** function _read_ds1307 *****************
  3323 ;; Defined at:
  3324 ;;		line 55 in file "ds1307.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  address         1    wreg     unsigned char 
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;  address         1    1[COMRAM] unsigned char 
  3329 ;;  data            1    2[COMRAM] unsigned char 
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      unsigned char 
  3332 ;; Registers used:
  3333 ;;		wreg, status,2, cstack
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3339 ;;      Params:         0       0       0       0       0       0       0
  3340 ;;      Locals:         2       0       0       0       0       0       0
  3341 ;;      Temps:          0       0       0       0       0       0       0
  3342 ;;      Totals:         2       0       0       0       0       0       0
  3343 ;;Total ram usage:        2 bytes
  3344 ;; Hardware stack levels used: 1
  3345 ;; Hardware stack levels required when called: 4
  3346 ;; This function calls:
  3347 ;;		_i2c_read
  3348 ;;		_i2c_rep_start
  3349 ;;		_i2c_start
  3350 ;;		_i2c_stop
  3351 ;;		_i2c_write
  3352 ;; This function is called by:
  3353 ;;		_get_time
  3354 ;;		_init_ds1307
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text21
  3359   001422                     __ptext21:
  3360                           	callstack 0
  3361   001422                     _read_ds1307:
  3362                           	callstack 24
  3363                           
  3364                           ;incstack = 0
  3365                           ;read_ds1307@address stored from wreg
  3366   001422  6E25               	movwf	read_ds1307@address^0,c
  3367   001424                     
  3368                           ;ds1307.c: 55: unsigned char read_ds1307(unsigned char address);ds1307.c: 56: {;ds1307.c
      +                          : 57:  unsigned char data;;ds1307.c: 59:  i2c_start();
  3369   001424  EC96  F00A         	call	_i2c_start	;wreg free
  3370   001428                     
  3371                           ;ds1307.c: 60:  i2c_write(0xD0);
  3372   001428  0ED0               	movlw	208
  3373   00142A  EC80  F00A         	call	_i2c_write
  3374   00142E                     
  3375                           ;ds1307.c: 61:  i2c_write(address);
  3376   00142E  5025               	movf	read_ds1307@address^0,w,c
  3377   001430  EC80  F00A         	call	_i2c_write
  3378   001434                     
  3379                           ;ds1307.c: 62:  i2c_rep_start();
  3380   001434  EC9A  F00A         	call	_i2c_rep_start	;wreg free
  3381   001438                     
  3382                           ;ds1307.c: 63:  i2c_write(0xD1);
  3383   001438  0ED1               	movlw	209
  3384   00143A  EC80  F00A         	call	_i2c_write
  3385                           
  3386                           ;ds1307.c: 64:  data = i2c_read();
  3387   00143E  EC86  F00A         	call	_i2c_read	;wreg free
  3388   001442  6E26               	movwf	read_ds1307@data^0,c
  3389   001444                     
  3390                           ;ds1307.c: 65:  i2c_stop();
  3391   001444  EC92  F00A         	call	_i2c_stop	;wreg free
  3392                           
  3393                           ;ds1307.c: 67:  return data;
  3394   001448  5026               	movf	read_ds1307@data^0,w,c
  3395   00144A  0012               	return		;funcret
  3396   00144C                     __end_of_read_ds1307:
  3397                           	callstack 0
  3398                           
  3399 ;; *************** function _i2c_write *****************
  3400 ;; Defined at:
  3401 ;;		line 55 in file "i2c.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  data            1    wreg     unsigned char 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  data            1    0[COMRAM] unsigned char 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      void 
  3408 ;; Registers used:
  3409 ;;		wreg, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3415 ;;      Params:         0       0       0       0       0       0       0
  3416 ;;      Locals:         1       0       0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0
  3418 ;;      Totals:         1       0       0       0       0       0       0
  3419 ;;Total ram usage:        1 bytes
  3420 ;; Hardware stack levels used: 1
  3421 ;; Hardware stack levels required when called: 2
  3422 ;; This function calls:
  3423 ;;		_i2c_idle
  3424 ;; This function is called by:
  3425 ;;		_write_ds1307
  3426 ;;		_read_ds1307
  3427 ;;		_write_external_eeprom
  3428 ;;		_read_external_eeprom
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text22
  3433   001500                     __ptext22:
  3434                           	callstack 0
  3435   001500                     _i2c_write:
  3436                           	callstack 26
  3437                           
  3438                           ;incstack = 0
  3439                           ;i2c_write@data stored from wreg
  3440   001500  6E24               	movwf	i2c_write@data^0,c
  3441   001502                     
  3442                           ;i2c.c: 55: void i2c_write(unsigned char data);i2c.c: 56: {;i2c.c: 57:  SSPBUF = data;
  3443   001502  C024  FFC9         	movff	i2c_write@data,4041	;volatile
  3444   001506                     
  3445                           ;i2c.c: 58:  i2c_idle();
  3446   001506  EC6F  F00A         	call	_i2c_idle	;wreg free
  3447   00150A  0012               	return		;funcret
  3448   00150C                     __end_of_i2c_write:
  3449                           	callstack 0
  3450                           
  3451 ;; *************** function _i2c_stop *****************
  3452 ;; Defined at:
  3453 ;;		line 43 in file "i2c.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;		None
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3467 ;;      Params:         0       0       0       0       0       0       0
  3468 ;;      Locals:         0       0       0       0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0
  3470 ;;      Totals:         0       0       0       0       0       0       0
  3471 ;;Total ram usage:        0 bytes
  3472 ;; Hardware stack levels used: 1
  3473 ;; Hardware stack levels required when called: 2
  3474 ;; This function calls:
  3475 ;;		_i2c_idle
  3476 ;; This function is called by:
  3477 ;;		_write_ds1307
  3478 ;;		_read_ds1307
  3479 ;;		_write_external_eeprom
  3480 ;;		_read_external_eeprom
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text23
  3485   001524                     __ptext23:
  3486                           	callstack 0
  3487   001524                     _i2c_stop:
  3488                           	callstack 26
  3489   001524                     
  3490                           ;i2c.c: 45:  PEN = 1;
  3491   001524  84C5               	bsf	4037,2,c	;volatile
  3492   001526                     
  3493                           ;i2c.c: 46:  i2c_idle();
  3494   001526  EC6F  F00A         	call	_i2c_idle	;wreg free
  3495   00152A  0012               	return		;funcret
  3496   00152C                     __end_of_i2c_stop:
  3497                           	callstack 0
  3498                           
  3499 ;; *************** function _i2c_start *****************
  3500 ;; Defined at:
  3501 ;;		line 37 in file "i2c.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;		None
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;		None
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      void 
  3508 ;; Registers used:
  3509 ;;		cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3515 ;;      Params:         0       0       0       0       0       0       0
  3516 ;;      Locals:         0       0       0       0       0       0       0
  3517 ;;      Temps:          0       0       0       0       0       0       0
  3518 ;;      Totals:         0       0       0       0       0       0       0
  3519 ;;Total ram usage:        0 bytes
  3520 ;; Hardware stack levels used: 1
  3521 ;; Hardware stack levels required when called: 2
  3522 ;; This function calls:
  3523 ;;		_i2c_idle
  3524 ;; This function is called by:
  3525 ;;		_write_ds1307
  3526 ;;		_read_ds1307
  3527 ;;		_write_external_eeprom
  3528 ;;		_read_external_eeprom
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text24
  3533   00152C                     __ptext24:
  3534                           	callstack 0
  3535   00152C                     _i2c_start:
  3536                           	callstack 26
  3537   00152C                     
  3538                           ;i2c.c: 39:  SEN = 1;
  3539   00152C  80C5               	bsf	4037,0,c	;volatile
  3540   00152E                     
  3541                           ;i2c.c: 40:  i2c_idle();
  3542   00152E  EC6F  F00A         	call	_i2c_idle	;wreg free
  3543   001532  0012               	return		;funcret
  3544   001534                     __end_of_i2c_start:
  3545                           	callstack 0
  3546                           
  3547 ;; *************** function _i2c_rep_start *****************
  3548 ;; Defined at:
  3549 ;;		line 49 in file "i2c.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;		None
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3563 ;;      Params:         0       0       0       0       0       0       0
  3564 ;;      Locals:         0       0       0       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0
  3566 ;;      Totals:         0       0       0       0       0       0       0
  3567 ;;Total ram usage:        0 bytes
  3568 ;; Hardware stack levels used: 1
  3569 ;; Hardware stack levels required when called: 2
  3570 ;; This function calls:
  3571 ;;		_i2c_idle
  3572 ;; This function is called by:
  3573 ;;		_read_ds1307
  3574 ;;		_read_external_eeprom
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text25
  3579   001534                     __ptext25:
  3580                           	callstack 0
  3581   001534                     _i2c_rep_start:
  3582                           	callstack 26
  3583   001534                     
  3584                           ;i2c.c: 51:  RSEN = 1;
  3585   001534  82C5               	bsf	4037,1,c	;volatile
  3586   001536                     
  3587                           ;i2c.c: 52:  i2c_idle();
  3588   001536  EC6F  F00A         	call	_i2c_idle	;wreg free
  3589   00153A  0012               	return		;funcret
  3590   00153C                     __end_of_i2c_rep_start:
  3591                           	callstack 0
  3592                           
  3593 ;; *************** function _i2c_read *****************
  3594 ;; Defined at:
  3595 ;;		line 73 in file "i2c.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;		None
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;		None
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1    wreg      unsigned char 
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, cstack
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3609 ;;      Params:         0       0       0       0       0       0       0
  3610 ;;      Locals:         0       0       0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0       0       0
  3612 ;;      Totals:         0       0       0       0       0       0       0
  3613 ;;Total ram usage:        0 bytes
  3614 ;; Hardware stack levels used: 1
  3615 ;; Hardware stack levels required when called: 3
  3616 ;; This function calls:
  3617 ;;		_i2c_no_ack
  3618 ;;		_i2c_rx_mode
  3619 ;; This function is called by:
  3620 ;;		_read_ds1307
  3621 ;;		_read_external_eeprom
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text26
  3626   00150C                     __ptext26:
  3627                           	callstack 0
  3628   00150C                     _i2c_read:
  3629                           	callstack 25
  3630   00150C                     
  3631                           ;i2c.c: 75:  i2c_rx_mode();
  3632   00150C  EC9E  F00A         	call	_i2c_rx_mode	;wreg free
  3633                           
  3634                           ;i2c.c: 76:  i2c_no_ack();
  3635   001510  ECA2  F00A         	call	_i2c_no_ack	;wreg free
  3636   001514                     
  3637                           ;i2c.c: 78:  return SSPBUF;
  3638   001514  50C9               	movf	201,w,c	;volatile
  3639   001516  0012               	return		;funcret
  3640   001518                     __end_of_i2c_read:
  3641                           	callstack 0
  3642                           
  3643 ;; *************** function _i2c_rx_mode *****************
  3644 ;; Defined at:
  3645 ;;		line 61 in file "i2c.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3659 ;;      Params:         0       0       0       0       0       0       0
  3660 ;;      Locals:         0       0       0       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0
  3662 ;;      Totals:         0       0       0       0       0       0       0
  3663 ;;Total ram usage:        0 bytes
  3664 ;; Hardware stack levels used: 1
  3665 ;; Hardware stack levels required when called: 2
  3666 ;; This function calls:
  3667 ;;		_i2c_idle
  3668 ;; This function is called by:
  3669 ;;		_i2c_read
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text27
  3674   00153C                     __ptext27:
  3675                           	callstack 0
  3676   00153C                     _i2c_rx_mode:
  3677                           	callstack 25
  3678   00153C                     
  3679                           ;i2c.c: 63:  RCEN = 1;
  3680   00153C  86C5               	bsf	4037,3,c	;volatile
  3681   00153E                     
  3682                           ;i2c.c: 64:  i2c_idle();
  3683   00153E  EC6F  F00A         	call	_i2c_idle	;wreg free
  3684   001542  0012               	return		;funcret
  3685   001544                     __end_of_i2c_rx_mode:
  3686                           	callstack 0
  3687                           
  3688 ;; *************** function _i2c_idle *****************
  3689 ;; Defined at:
  3690 ;;		line 23 in file "i2c.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;		None
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		None
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3704 ;;      Params:         0       0       0       0       0       0       0
  3705 ;;      Locals:         0       0       0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0       0
  3707 ;;      Totals:         0       0       0       0       0       0       0
  3708 ;;Total ram usage:        0 bytes
  3709 ;; Hardware stack levels used: 1
  3710 ;; Hardware stack levels required when called: 1
  3711 ;; This function calls:
  3712 ;;		Nothing
  3713 ;; This function is called by:
  3714 ;;		_i2c_start
  3715 ;;		_i2c_stop
  3716 ;;		_i2c_rep_start
  3717 ;;		_i2c_write
  3718 ;;		_i2c_rx_mode
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text28
  3723   0014DE                     __ptext28:
  3724                           	callstack 0
  3725   0014DE                     _i2c_idle:
  3726                           	callstack 26
  3727   0014DE                     l334:
  3728   0014DE  A69E               	btfss	3998,3,c	;volatile
  3729   0014E0  EF74  F00A         	goto	u771
  3730   0014E4  EF76  F00A         	goto	u770
  3731   0014E8                     u771:
  3732   0014E8  EF6F  F00A         	goto	l334
  3733   0014EC                     u770:
  3734   0014EC                     
  3735                           ;i2c.c: 26:  SSPIF = 0;
  3736   0014EC  969E               	bcf	3998,3,c	;volatile
  3737   0014EE  0012               	return		;funcret
  3738   0014F0                     __end_of_i2c_idle:
  3739                           	callstack 0
  3740                           
  3741 ;; *************** function _i2c_no_ack *****************
  3742 ;; Defined at:
  3743 ;;		line 67 in file "i2c.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;		None
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		None
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3757 ;;      Params:         0       0       0       0       0       0       0
  3758 ;;      Locals:         0       0       0       0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0
  3760 ;;      Totals:         0       0       0       0       0       0       0
  3761 ;;Total ram usage:        0 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; Hardware stack levels required when called: 1
  3764 ;; This function calls:
  3765 ;;		Nothing
  3766 ;; This function is called by:
  3767 ;;		_i2c_read
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text29
  3772   001544                     __ptext29:
  3773                           	callstack 0
  3774   001544                     _i2c_no_ack:
  3775                           	callstack 26
  3776   001544                     
  3777                           ;i2c.c: 69:  ACKDT = 1;
  3778   001544  8AC5               	bsf	4037,5,c	;volatile
  3779                           
  3780                           ;i2c.c: 70:  ACKEN = 1;
  3781   001546  88C5               	bsf	4037,4,c	;volatile
  3782   001548  0012               	return		;funcret
  3783   00154A                     __end_of_i2c_no_ack:
  3784                           	callstack 0
  3785                           
  3786 ;; *************** function _display_time *****************
  3787 ;; Defined at:
  3788 ;;		line 25 in file "dashboard.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;		None
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;		None
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3802 ;;      Params:         0       0       0       0       0       0       0
  3803 ;;      Locals:         0       0       0       0       0       0       0
  3804 ;;      Temps:          0       0       0       0       0       0       0
  3805 ;;      Totals:         0       0       0       0       0       0       0
  3806 ;;Total ram usage:        0 bytes
  3807 ;; Hardware stack levels used: 1
  3808 ;; Hardware stack levels required when called: 3
  3809 ;; This function calls:
  3810 ;;		_clcd_print
  3811 ;; This function is called by:
  3812 ;;		_dashboard
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text30
  3817   0014F0                     __ptext30:
  3818                           	callstack 0
  3819   0014F0                     _display_time:
  3820                           	callstack 26
  3821   0014F0                     
  3822                           ;dashboard.c: 26:     clcd_print(time, (0xC0 + (0)));
  3823   0014F0  0E11               	movlw	low _time
  3824   0014F2  6E26               	movwf	clcd_print@data^0,c
  3825   0014F4  6A27               	clrf	(clcd_print@data+1)^0,c
  3826   0014F6  0EC0               	movlw	192
  3827   0014F8  6E28               	movwf	clcd_print@addr^0,c
  3828   0014FA  ECC5  F008         	call	_clcd_print	;wreg free
  3829   0014FE  0012               	return		;funcret
  3830   001500                     __end_of_display_time:
  3831                           	callstack 0
  3832                           
  3833 ;; *************** function _clcd_print *****************
  3834 ;; Defined at:
  3835 ;;		line 59 in file "clcd.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  data            2    2[COMRAM] PTR const unsigned char 
  3838 ;;		 -> STR_17(15), STR_16(17), STR_15(6), STR_14(16), 
  3839 ;;		 -> STR_13(19), STR_12(16), STR_11(17), STR_10(3), 
  3840 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_6(3), 
  3841 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(17), 
  3842 ;;		 -> time(9), STR_1(13), 
  3843 ;;  addr            1    4[COMRAM] unsigned char 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      void 
  3848 ;; Registers used:
  3849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3855 ;;      Params:         3       0       0       0       0       0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0
  3857 ;;      Temps:          0       0       0       0       0       0       0
  3858 ;;      Totals:         3       0       0       0       0       0       0
  3859 ;;Total ram usage:        3 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; Hardware stack levels required when called: 2
  3862 ;; This function calls:
  3863 ;;		_clcd_write
  3864 ;; This function is called by:
  3865 ;;		_main
  3866 ;;		_display_time
  3867 ;;		_dashboard
  3868 ;;		_password
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text31
  3873   00118A                     __ptext31:
  3874                           	callstack 0
  3875   00118A                     _clcd_print:
  3876                           	callstack 27
  3877   00118A                     
  3878                           ;clcd.c: 59: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 60: 
      +                          {;clcd.c: 61:  clcd_write(addr, 0);
  3879   00118A  0E00               	movlw	0
  3880   00118C  6E24               	movwf	clcd_write@control_bit^0,c
  3881   00118E  5028               	movf	clcd_print@addr^0,w,c
  3882   001190  ECDF  F009         	call	_clcd_write
  3883                           
  3884                           ;clcd.c: 62:  while (*data != '\0')
  3885   001194  EFE2  F008         	goto	l1784
  3886   001198                     l1780:
  3887                           
  3888                           ;clcd.c: 63:  {;clcd.c: 64:   clcd_write(*data++, 1);
  3889   001198  0E01               	movlw	1
  3890   00119A  6E24               	movwf	clcd_write@control_bit^0,c
  3891   00119C  C026  FFF6         	movff	clcd_print@data,tblptrl
  3892   0011A0  C027  FFF7         	movff	clcd_print@data+1,tblptrh
  3893   0011A4  6AF8               	clrf	tblptru,c
  3894   0011A6  0E05               	movlw	(high __ramtop+-1)
  3895   0011A8  64F7               	cpfsgt	tblptrh,c
  3896   0011AA  D003               	bra	u817
  3897   0011AC  0008               	tblrd		*
  3898   0011AE  50F5               	movf	tablat,w,c
  3899   0011B0  D005               	bra	u810
  3900   0011B2                     u817:
  3901   0011B2  CFF6 FFE9          	movff	tblptrl,fsr0l
  3902   0011B6  CFF7 FFEA          	movff	tblptrh,fsr0h
  3903   0011BA  50EF               	movf	indf0,w,c
  3904   0011BC                     u810:
  3905   0011BC  ECDF  F009         	call	_clcd_write
  3906   0011C0  4A26               	infsnz	clcd_print@data^0,f,c
  3907   0011C2  2A27               	incf	(clcd_print@data+1)^0,f,c
  3908   0011C4                     l1784:
  3909                           
  3910                           ;clcd.c: 62:  while (*data != '\0')
  3911   0011C4  C026  FFF6         	movff	clcd_print@data,tblptrl
  3912   0011C8  C027  FFF7         	movff	clcd_print@data+1,tblptrh
  3913   0011CC  6AF8               	clrf	tblptru,c
  3914   0011CE  0E05               	movlw	(high __ramtop+-1)
  3915   0011D0  64F7               	cpfsgt	tblptrh,c
  3916   0011D2  D003               	bra	u827
  3917   0011D4  0008               	tblrd		*
  3918   0011D6  50F5               	movf	tablat,w,c
  3919   0011D8  D005               	bra	u820
  3920   0011DA                     u827:
  3921   0011DA  CFF6 FFE9          	movff	tblptrl,fsr0l
  3922   0011DE  CFF7 FFEA          	movff	tblptrh,fsr0h
  3923   0011E2  50EF               	movf	indf0,w,c
  3924   0011E4                     u820:
  3925   0011E4  0900               	iorlw	0
  3926   0011E6  A4D8               	btfss	status,2,c
  3927   0011E8  EFF8  F008         	goto	u831
  3928   0011EC  EFFA  F008         	goto	u830
  3929   0011F0                     u831:
  3930   0011F0  EFCC  F008         	goto	l1780
  3931   0011F4                     u830:
  3932   0011F4  0012               	return		;funcret
  3933   0011F6                     __end_of_clcd_print:
  3934                           	callstack 0
  3935                           
  3936 ;; *************** function _clcd_putch *****************
  3937 ;; Defined at:
  3938 ;;		line 68 in file "clcd.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  data            1    wreg     const unsigned char 
  3941 ;;  addr            1   14[COMRAM] unsigned char 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  data            1   15[COMRAM] const unsigned char 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      void 
  3946 ;; Registers used:
  3947 ;;		wreg, status,2, cstack
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3953 ;;      Params:         1       0       0       0       0       0       0
  3954 ;;      Locals:         1       0       0       0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0       0       0
  3956 ;;      Totals:         2       0       0       0       0       0       0
  3957 ;;Total ram usage:        2 bytes
  3958 ;; Hardware stack levels used: 1
  3959 ;; Hardware stack levels required when called: 2
  3960 ;; This function calls:
  3961 ;;		_clcd_write
  3962 ;; This function is called by:
  3963 ;;		_dashboard
  3964 ;;		_password
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text32
  3969   00148A                     __ptext32:
  3970                           	callstack 0
  3971   00148A                     _clcd_putch:
  3972                           	callstack 27
  3973                           
  3974                           ;incstack = 0
  3975                           ;clcd_putch@data stored from wreg
  3976   00148A  6E33               	movwf	clcd_putch@data^0,c
  3977   00148C                     
  3978                           ;clcd.c: 68: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 69: {
      +                          ;clcd.c: 70:  clcd_write(addr, 0);
  3979   00148C  0E00               	movlw	0
  3980   00148E  6E24               	movwf	clcd_write@control_bit^0,c
  3981   001490  5032               	movf	clcd_putch@addr^0,w,c
  3982   001492  ECDF  F009         	call	_clcd_write
  3983                           
  3984                           ;clcd.c: 71:  clcd_write(data, 1);
  3985   001496  0E01               	movlw	1
  3986   001498  6E24               	movwf	clcd_write@control_bit^0,c
  3987   00149A  5033               	movf	clcd_putch@data^0,w,c
  3988   00149C  ECDF  F009         	call	_clcd_write
  3989   0014A0  0012               	return		;funcret
  3990   0014A2                     __end_of_clcd_putch:
  3991                           	callstack 0
  3992                           
  3993 ;; *************** function _clcd_write *****************
  3994 ;; Defined at:
  3995 ;;		line 5 in file "clcd.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  byte            1    wreg     unsigned char 
  3998 ;;  control_bit     1    0[COMRAM] unsigned char 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  byte            1    1[COMRAM] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4010 ;;      Params:         1       0       0       0       0       0       0
  4011 ;;      Locals:         1       0       0       0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0       0       0
  4013 ;;      Totals:         2       0       0       0       0       0       0
  4014 ;;Total ram usage:        2 bytes
  4015 ;; Hardware stack levels used: 1
  4016 ;; Hardware stack levels required when called: 1
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_init_clcd
  4021 ;;		_clcd_print
  4022 ;;		_clcd_putch
  4023 ;;		_main
  4024 ;;		_password
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text33
  4029   0013BE                     __ptext33:
  4030                           	callstack 0
  4031   0013BE                     _clcd_write:
  4032                           	callstack 28
  4033                           
  4034                           ;incstack = 0
  4035                           ;clcd_write@byte stored from wreg
  4036   0013BE  6E25               	movwf	clcd_write@byte^0,c
  4037   0013C0                     
  4038                           ;clcd.c: 5: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 6: {;
      +                          clcd.c: 7:  RC1 = control_bit;
  4039   0013C0  B024               	btfsc	clcd_write@control_bit^0,0,c
  4040   0013C2  EFE5  F009         	goto	u781
  4041   0013C6  EFE8  F009         	goto	u780
  4042   0013CA                     u781:
  4043   0013CA  8282               	bsf	3970,1,c	;volatile
  4044   0013CC  EFE9  F009         	goto	u795
  4045   0013D0                     u780:
  4046   0013D0  9282               	bcf	3970,1,c	;volatile
  4047   0013D2                     u795:
  4048   0013D2                     
  4049                           ;clcd.c: 8:  PORTD = byte;
  4050   0013D2  C025  FF83         	movff	clcd_write@byte,3971	;volatile
  4051   0013D6                     
  4052                           ;clcd.c: 11:  RC2 = 1;
  4053   0013D6  8482               	bsf	3970,2,c	;volatile
  4054   0013D8                     
  4055                           ;clcd.c: 12:  RC2 = 0;
  4056   0013D8  9482               	bcf	3970,2,c	;volatile
  4057   0013DA                     
  4058                           ;clcd.c: 14:  TRISD7 = 0xFF;
  4059   0013DA  8E95               	bsf	3989,7,c	;volatile
  4060   0013DC                     
  4061                           ;clcd.c: 15:  RC0 = 1;
  4062   0013DC  8082               	bsf	3970,0,c	;volatile
  4063   0013DE                     
  4064                           ;clcd.c: 16:  RC1 = 0;
  4065   0013DE  9282               	bcf	3970,1,c	;volatile
  4066   0013E0                     l1750:
  4067                           
  4068                           ;clcd.c: 19:  {;clcd.c: 20:   RC2 = 1;
  4069   0013E0  8482               	bsf	3970,2,c	;volatile
  4070   0013E2                     
  4071                           ;clcd.c: 21:   RC2 = 0;
  4072   0013E2  9482               	bcf	3970,2,c	;volatile
  4073   0013E4                     
  4074                           ;clcd.c: 22:  } while (RD7);
  4075   0013E4  BE83               	btfsc	3971,7,c	;volatile
  4076   0013E6  EFF7  F009         	goto	u801
  4077   0013EA  EFF9  F009         	goto	u800
  4078   0013EE                     u801:
  4079   0013EE  EFF0  F009         	goto	l1750
  4080   0013F2                     u800:
  4081   0013F2                     
  4082                           ;clcd.c: 24:  RC0 = 0;
  4083   0013F2  9082               	bcf	3970,0,c	;volatile
  4084                           
  4085                           ;clcd.c: 25:  TRISD7 = 0x00;
  4086   0013F4  9E95               	bcf	3989,7,c	;volatile
  4087   0013F6  0012               	return		;funcret
  4088   0013F8                     __end_of_clcd_write:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function ___lwmod *****************
  4092 ;; Defined at:
  4093 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  dividend        2    7[COMRAM] unsigned int 
  4096 ;;  divisor         2    9[COMRAM] unsigned int 
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  counter         1   11[COMRAM] unsigned char 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  2    7[COMRAM] unsigned int 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4108 ;;      Params:         4       0       0       0       0       0       0
  4109 ;;      Locals:         1       0       0       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0       0       0
  4111 ;;      Totals:         5       0       0       0       0       0       0
  4112 ;;Total ram usage:        5 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; Hardware stack levels required when called: 1
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_dashboard
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text34
  4123   0011F6                     __ptext34:
  4124                           	callstack 0
  4125   0011F6                     ___lwmod:
  4126                           	callstack 28
  4127   0011F6  502D               	movf	___lwmod@divisor^0,w,c
  4128   0011F8  102E               	iorwf	(___lwmod@divisor+1)^0,w,c
  4129   0011FA  B4D8               	btfsc	status,2,c
  4130   0011FC  EF02  F009         	goto	u1151
  4131   001200  EF04  F009         	goto	u1150
  4132   001204                     u1151:
  4133   001204  EF28  F009         	goto	l918
  4134   001208                     u1150:
  4135   001208  0E01               	movlw	1
  4136   00120A  6E2F               	movwf	___lwmod@counter^0,c
  4137   00120C  EF0C  F009         	goto	l2126
  4138   001210                     l2124:
  4139   001210  90D8               	bcf	status,0,c
  4140   001212  362D               	rlcf	___lwmod@divisor^0,f,c
  4141   001214  362E               	rlcf	(___lwmod@divisor+1)^0,f,c
  4142   001216  2A2F               	incf	___lwmod@counter^0,f,c
  4143   001218                     l2126:
  4144   001218  AE2E               	btfss	(___lwmod@divisor+1)^0,7,c
  4145   00121A  EF11  F009         	goto	u1161
  4146   00121E  EF13  F009         	goto	u1160
  4147   001222                     u1161:
  4148   001222  EF08  F009         	goto	l2124
  4149   001226                     u1160:
  4150   001226                     l2128:
  4151   001226  502D               	movf	___lwmod@divisor^0,w,c
  4152   001228  5C2B               	subwf	___lwmod@dividend^0,w,c
  4153   00122A  502E               	movf	(___lwmod@divisor+1)^0,w,c
  4154   00122C  582C               	subwfb	(___lwmod@dividend+1)^0,w,c
  4155   00122E  A0D8               	btfss	status,0,c
  4156   001230  EF1C  F009         	goto	u1171
  4157   001234  EF1E  F009         	goto	u1170
  4158   001238                     u1171:
  4159   001238  EF22  F009         	goto	l2132
  4160   00123C                     u1170:
  4161   00123C  502D               	movf	___lwmod@divisor^0,w,c
  4162   00123E  5E2B               	subwf	___lwmod@dividend^0,f,c
  4163   001240  502E               	movf	(___lwmod@divisor+1)^0,w,c
  4164   001242  5A2C               	subwfb	(___lwmod@dividend+1)^0,f,c
  4165   001244                     l2132:
  4166   001244  90D8               	bcf	status,0,c
  4167   001246  322E               	rrcf	(___lwmod@divisor+1)^0,f,c
  4168   001248  322D               	rrcf	___lwmod@divisor^0,f,c
  4169   00124A  2E2F               	decfsz	___lwmod@counter^0,f,c
  4170   00124C  EF13  F009         	goto	l2128
  4171   001250                     l918:
  4172   001250  C02B  F02B         	movff	___lwmod@dividend,?___lwmod
  4173   001254  C02C  F02C         	movff	___lwmod@dividend+1,?___lwmod+1
  4174   001258  0012               	return		;funcret
  4175   00125A                     __end_of___lwmod:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function ___lwdiv *****************
  4179 ;; Defined at:
  4180 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  dividend        2    0[COMRAM] unsigned int 
  4183 ;;  divisor         2    2[COMRAM] unsigned int 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  quotient        2    4[COMRAM] unsigned int 
  4186 ;;  counter         1    6[COMRAM] unsigned char 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  2    0[COMRAM] unsigned int 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4196 ;;      Params:         4       0       0       0       0       0       0
  4197 ;;      Locals:         3       0       0       0       0       0       0
  4198 ;;      Temps:          0       0       0       0       0       0       0
  4199 ;;      Totals:         7       0       0       0       0       0       0
  4200 ;;Total ram usage:        7 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 1
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_dashboard
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text35
  4211   001116                     __ptext35:
  4212                           	callstack 0
  4213   001116                     ___lwdiv:
  4214                           	callstack 28
  4215   001116  0E00               	movlw	0
  4216   001118  6E29               	movwf	(___lwdiv@quotient+1)^0,c
  4217   00111A  0E00               	movlw	0
  4218   00111C  6E28               	movwf	___lwdiv@quotient^0,c
  4219   00111E  5026               	movf	___lwdiv@divisor^0,w,c
  4220   001120  1027               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4221   001122  B4D8               	btfsc	status,2,c
  4222   001124  EF96  F008         	goto	u1121
  4223   001128  EF98  F008         	goto	u1120
  4224   00112C                     u1121:
  4225   00112C  EFC0  F008         	goto	l908
  4226   001130                     u1120:
  4227   001130  0E01               	movlw	1
  4228   001132  6E2A               	movwf	___lwdiv@counter^0,c
  4229   001134  EFA0  F008         	goto	l2106
  4230   001138                     l2104:
  4231   001138  90D8               	bcf	status,0,c
  4232   00113A  3626               	rlcf	___lwdiv@divisor^0,f,c
  4233   00113C  3627               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4234   00113E  2A2A               	incf	___lwdiv@counter^0,f,c
  4235   001140                     l2106:
  4236   001140  AE27               	btfss	(___lwdiv@divisor+1)^0,7,c
  4237   001142  EFA5  F008         	goto	u1131
  4238   001146  EFA7  F008         	goto	u1130
  4239   00114A                     u1131:
  4240   00114A  EF9C  F008         	goto	l2104
  4241   00114E                     u1130:
  4242   00114E                     l2108:
  4243   00114E  90D8               	bcf	status,0,c
  4244   001150  3628               	rlcf	___lwdiv@quotient^0,f,c
  4245   001152  3629               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4246   001154  5026               	movf	___lwdiv@divisor^0,w,c
  4247   001156  5C24               	subwf	___lwdiv@dividend^0,w,c
  4248   001158  5027               	movf	(___lwdiv@divisor+1)^0,w,c
  4249   00115A  5825               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4250   00115C  A0D8               	btfss	status,0,c
  4251   00115E  EFB3  F008         	goto	u1141
  4252   001162  EFB5  F008         	goto	u1140
  4253   001166                     u1141:
  4254   001166  EFBA  F008         	goto	l2116
  4255   00116A                     u1140:
  4256   00116A  5026               	movf	___lwdiv@divisor^0,w,c
  4257   00116C  5E24               	subwf	___lwdiv@dividend^0,f,c
  4258   00116E  5027               	movf	(___lwdiv@divisor+1)^0,w,c
  4259   001170  5A25               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4260   001172  8028               	bsf	___lwdiv@quotient^0,0,c
  4261   001174                     l2116:
  4262   001174  90D8               	bcf	status,0,c
  4263   001176  3227               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4264   001178  3226               	rrcf	___lwdiv@divisor^0,f,c
  4265   00117A  2E2A               	decfsz	___lwdiv@counter^0,f,c
  4266   00117C  EFA7  F008         	goto	l2108
  4267   001180                     l908:
  4268   001180  C028  F024         	movff	___lwdiv@quotient,?___lwdiv
  4269   001184  C029  F025         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4270   001188  0012               	return		;funcret
  4271   00118A                     __end_of___lwdiv:
  4272                           	callstack 0
  4273                           
  4274 ;; *************** function _isr *****************
  4275 ;; Defined at:
  4276 ;;		line 6 in file "isr.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;		None
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;		None
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  1    wreg      void 
  4283 ;; Registers used:
  4284 ;;		wreg, status,2, status,0
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4290 ;;      Params:         0       0       0       0       0       0       0
  4291 ;;      Locals:         0       0       0       0       0       0       0
  4292 ;;      Temps:          0       0       0       0       0       0       0
  4293 ;;      Totals:         0       0       0       0       0       0       0
  4294 ;;Total ram usage:        0 bytes
  4295 ;; Hardware stack levels used: 1
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		Interrupt level 2
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	intcode
  4304   000008                     __pintcode:
  4305                           	callstack 0
  4306   000008                     _isr:
  4307                           	callstack 24
  4308                           
  4309                           ;incstack = 0
  4310   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4311   00000A  ED2D  F009         	call	int_func,f	;refresh shadow registers
  4312                           
  4313                           	psect	intcode_body
  4314   00125A                     __pintcode_body:
  4315                           	callstack 24
  4316   00125A                     int_func:
  4317                           	callstack 24
  4318   00125A  0006               	pop		; remove dummy address from shadow register refresh
  4319   00125C                     
  4320                           ;isr.c: 8:  static unsigned long count;;isr.c: 10:  if (TMR0IF)
  4321   00125C  A4F2               	btfss	4082,2,c	;volatile
  4322   00125E  EF33  F009         	goto	i2u151_41
  4323   001262  EF35  F009         	goto	i2u151_40
  4324   001266                     i2u151_41:
  4325   001266  EF59  F009         	goto	i2l396
  4326   00126A                     i2u151_40:
  4327   00126A                     
  4328                           ;isr.c: 11:  {;isr.c: 12:   TMR0 = TMR0 + 8;
  4329   00126A  0E08               	movlw	8
  4330   00126C  24D6               	addwf	214,w,c	;volatile
  4331   00126E  6ED6               	movwf	214,c	;volatile
  4332   001270  0E00               	movlw	0
  4333   001272  20D7               	addwfc	215,w,c	;volatile
  4334   001274  6ED7               	movwf	215,c	;volatile
  4335                           
  4336                           ;isr.c: 14:   if (count++ == 20000)
  4337   001276  0E01               	movlw	1
  4338   001278  2601               	addwf	isr@count^0,f,c
  4339   00127A  0E00               	movlw	0
  4340   00127C  2202               	addwfc	(isr@count+1)^0,f,c
  4341   00127E  2203               	addwfc	(isr@count+2)^0,f,c
  4342   001280  2204               	addwfc	(isr@count+3)^0,f,c
  4343   001282  0E21               	movlw	33
  4344   001284  1801               	xorwf	isr@count^0,w,c
  4345   001286  E109               	bnz	i2u152_41
  4346   001288  0E4E               	movlw	78
  4347   00128A  1802               	xorwf	(isr@count+1)^0,w,c
  4348   00128C  1003               	iorwf	(isr@count+2)^0,w,c
  4349   00128E  1004               	iorwf	(isr@count+3)^0,w,c
  4350   001290  A4D8               	btfss	status,2,c
  4351   001292  EF4D  F009         	goto	i2u152_41
  4352   001296  EF4F  F009         	goto	i2u152_40
  4353   00129A                     i2u152_41:
  4354   00129A  EF58  F009         	goto	i2l2362
  4355   00129E                     i2u152_40:
  4356   00129E                     
  4357                           ;isr.c: 15:   {;isr.c: 17:    count = 0;
  4358   00129E  0E00               	movlw	0
  4359   0012A0  6E01               	movwf	isr@count^0,c
  4360   0012A2  0E00               	movlw	0
  4361   0012A4  6E02               	movwf	(isr@count+1)^0,c
  4362   0012A6  0E00               	movlw	0
  4363   0012A8  6E03               	movwf	(isr@count+2)^0,c
  4364   0012AA  0E00               	movlw	0
  4365   0012AC  6E04               	movwf	(isr@count+3)^0,c
  4366   0012AE                     
  4367                           ;isr.c: 18:             tick_count--;
  4368   0012AE  064D               	decf	_tick_count^0,f,c
  4369   0012B0                     i2l2362:
  4370                           
  4371                           ;isr.c: 22:   TMR0IF = 0;
  4372   0012B0  94F2               	bcf	4082,2,c	;volatile
  4373   0012B2                     i2l396:
  4374   0012B2  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4375   0012B4  0011               	retfie		f
  4376   0012B6                     __end_of_isr:
  4377                           	callstack 0
  4378                           
  4379                           	psect	rparam
  4380   000000                     
  4381                           	psect	temp
  4382   00004F                     btemp:
  4383                           	callstack 0
  4384   00004F                     	ds	1
  4385   000000                     int$flags	set	btemp
  4386   000000                     wtemp8	set	btemp+1
  4387   000000                     ttemp5	set	btemp+1
  4388   000000                     ttemp6	set	btemp+4
  4389   000000                     ttemp7	set	btemp+8
  4390                           
  4391                           	psect	idloc
  4392                           
  4393                           ;Config register IDLOC0 @ 0x200000
  4394                           ;	unspecified, using default values
  4395   200000                     	org	2097152
  4396   200000  FF                 	db	255
  4397                           
  4398                           ;Config register IDLOC1 @ 0x200001
  4399                           ;	unspecified, using default values
  4400   200001                     	org	2097153
  4401   200001  FF                 	db	255
  4402                           
  4403                           ;Config register IDLOC2 @ 0x200002
  4404                           ;	unspecified, using default values
  4405   200002                     	org	2097154
  4406   200002  FF                 	db	255
  4407                           
  4408                           ;Config register IDLOC3 @ 0x200003
  4409                           ;	unspecified, using default values
  4410   200003                     	org	2097155
  4411   200003  FF                 	db	255
  4412                           
  4413                           ;Config register IDLOC4 @ 0x200004
  4414                           ;	unspecified, using default values
  4415   200004                     	org	2097156
  4416   200004  FF                 	db	255
  4417                           
  4418                           ;Config register IDLOC5 @ 0x200005
  4419                           ;	unspecified, using default values
  4420   200005                     	org	2097157
  4421   200005  FF                 	db	255
  4422                           
  4423                           ;Config register IDLOC6 @ 0x200006
  4424                           ;	unspecified, using default values
  4425   200006                     	org	2097158
  4426   200006  FF                 	db	255
  4427                           
  4428                           ;Config register IDLOC7 @ 0x200007
  4429                           ;	unspecified, using default values
  4430   200007                     	org	2097159
  4431   200007  FF                 	db	255
  4432                           
  4433                           	psect	config
  4434                           
  4435                           ; Padding undefined space
  4436   300000                     	org	3145728
  4437   300000  FF                 	db	255
  4438                           
  4439                           ;Config register CONFIG1H @ 0x300001
  4440                           ;	unspecified, using default values
  4441                           ;	Oscillator Selection bits
  4442                           ;	OSC = 0x7, unprogrammed default
  4443                           ;	Fail-Safe Clock Monitor Enable bit
  4444                           ;	FCMEN = 0x0, unprogrammed default
  4445                           ;	Internal/External Oscillator Switchover bit
  4446                           ;	IESO = 0x0, unprogrammed default
  4447   300001                     	org	3145729
  4448   300001  07                 	db	7
  4449                           
  4450                           ;Config register CONFIG2L @ 0x300002
  4451                           ;	unspecified, using default values
  4452                           ;	Power-up Timer Enable bit
  4453                           ;	PWRT = 0x1, unprogrammed default
  4454                           ;	Brown-out Reset Enable bits
  4455                           ;	BOREN = 0x3, unprogrammed default
  4456                           ;	Brown-out Reset Voltage bits
  4457                           ;	BORV = 0x3, unprogrammed default
  4458   300002                     	org	3145730
  4459   300002  1F                 	db	31
  4460                           
  4461                           ;Config register CONFIG2H @ 0x300003
  4462                           ;	unspecified, using default values
  4463                           ;	Watchdog Timer Enable bit
  4464                           ;	WDT = 0x1, unprogrammed default
  4465                           ;	Watchdog Timer Postscale Select bits
  4466                           ;	WDTPS = 0xF, unprogrammed default
  4467   300003                     	org	3145731
  4468   300003  1F                 	db	31
  4469                           
  4470                           ; Padding undefined space
  4471   300004                     	org	3145732
  4472   300004  FF                 	db	255
  4473                           
  4474                           ;Config register CONFIG3H @ 0x300005
  4475                           ;	unspecified, using default values
  4476                           ;	PORTB A/D Enable bit
  4477                           ;	PBADEN = 0x1, unprogrammed default
  4478                           ;	Low-Power Timer 1 Oscillator Enable bit
  4479                           ;	LPT1OSC = 0x0, unprogrammed default
  4480                           ;	MCLR Pin Enable bit
  4481                           ;	MCLRE = 0x1, unprogrammed default
  4482   300005                     	org	3145733
  4483   300005  82                 	db	130
  4484                           
  4485                           ;Config register CONFIG4L @ 0x300006
  4486                           ;	unspecified, using default values
  4487                           ;	Stack Full/Underflow Reset Enable bit
  4488                           ;	STVREN = 0x1, unprogrammed default
  4489                           ;	Single-Supply ICSP Enable bit
  4490                           ;	LVP = 0x1, unprogrammed default
  4491                           ;	Boot Block Size Select bit
  4492                           ;	BBSIZ = 0x0, unprogrammed default
  4493                           ;	Extended Instruction Set Enable bit
  4494                           ;	XINST = 0x0, unprogrammed default
  4495                           ;	Background Debugger Enable bit
  4496                           ;	DEBUG = 0x1, unprogrammed default
  4497   300006                     	org	3145734
  4498   300006  85                 	db	133
  4499                           
  4500                           ; Padding undefined space
  4501   300007                     	org	3145735
  4502   300007  FF                 	db	255
  4503                           
  4504                           ;Config register CONFIG5L @ 0x300008
  4505                           ;	unspecified, using default values
  4506                           ;	Code Protection bit
  4507                           ;	CP0 = 0x1, unprogrammed default
  4508                           ;	Code Protection bit
  4509                           ;	CP1 = 0x1, unprogrammed default
  4510                           ;	Code Protection bit
  4511                           ;	CP2 = 0x1, unprogrammed default
  4512                           ;	Code Protection bit
  4513                           ;	CP3 = 0x1, unprogrammed default
  4514   300008                     	org	3145736
  4515   300008  0F                 	db	15
  4516                           
  4517                           ;Config register CONFIG5H @ 0x300009
  4518                           ;	unspecified, using default values
  4519                           ;	Boot Block Code Protection bit
  4520                           ;	CPB = 0x1, unprogrammed default
  4521                           ;	Data EEPROM Code Protection bit
  4522                           ;	CPD = 0x1, unprogrammed default
  4523   300009                     	org	3145737
  4524   300009  C0                 	db	192
  4525                           
  4526                           ;Config register CONFIG6L @ 0x30000A
  4527                           ;	unspecified, using default values
  4528                           ;	Write Protection bit
  4529                           ;	WRT0 = 0x1, unprogrammed default
  4530                           ;	Write Protection bit
  4531                           ;	WRT1 = 0x1, unprogrammed default
  4532                           ;	Write Protection bit
  4533                           ;	WRT2 = 0x1, unprogrammed default
  4534                           ;	Write Protection bit
  4535                           ;	WRT3 = 0x1, unprogrammed default
  4536   30000A                     	org	3145738
  4537   30000A  0F                 	db	15
  4538                           
  4539                           ;Config register CONFIG6H @ 0x30000B
  4540                           ;	unspecified, using default values
  4541                           ;	Configuration Register Write Protection bit
  4542                           ;	WRTC = 0x1, unprogrammed default
  4543                           ;	Boot Block Write Protection bit
  4544                           ;	WRTB = 0x1, unprogrammed default
  4545                           ;	Data EEPROM Write Protection bit
  4546                           ;	WRTD = 0x1, unprogrammed default
  4547   30000B                     	org	3145739
  4548   30000B  E0                 	db	224
  4549                           
  4550                           ;Config register CONFIG7L @ 0x30000C
  4551                           ;	unspecified, using default values
  4552                           ;	Table Read Protection bit
  4553                           ;	EBTR0 = 0x1, unprogrammed default
  4554                           ;	Table Read Protection bit
  4555                           ;	EBTR1 = 0x1, unprogrammed default
  4556                           ;	Table Read Protection bit
  4557                           ;	EBTR2 = 0x1, unprogrammed default
  4558                           ;	Table Read Protection bit
  4559                           ;	EBTR3 = 0x1, unprogrammed default
  4560   30000C                     	org	3145740
  4561   30000C  0F                 	db	15
  4562                           
  4563                           ;Config register CONFIG7H @ 0x30000D
  4564                           ;	unspecified, using default values
  4565                           ;	Boot Block Table Read Protection bit
  4566                           ;	EBTRB = 0x1, unprogrammed default
  4567   30000D                     	org	3145741
  4568   30000D  40                 	db	64
  4569                           tosu	equ	0xFFF
  4570                           tosh	equ	0xFFE
  4571                           tosl	equ	0xFFD
  4572                           stkptr	equ	0xFFC
  4573                           pclatu	equ	0xFFB
  4574                           pclath	equ	0xFFA
  4575                           pcl	equ	0xFF9
  4576                           tblptru	equ	0xFF8
  4577                           tblptrh	equ	0xFF7
  4578                           tblptrl	equ	0xFF6
  4579                           tablat	equ	0xFF5
  4580                           prodh	equ	0xFF4
  4581                           prodl	equ	0xFF3
  4582                           indf0	equ	0xFEF
  4583                           postinc0	equ	0xFEE
  4584                           postdec0	equ	0xFED
  4585                           preinc0	equ	0xFEC
  4586                           plusw0	equ	0xFEB
  4587                           fsr0h	equ	0xFEA
  4588                           fsr0l	equ	0xFE9
  4589                           wreg	equ	0xFE8
  4590                           indf1	equ	0xFE7
  4591                           postinc1	equ	0xFE6
  4592                           postdec1	equ	0xFE5
  4593                           preinc1	equ	0xFE4
  4594                           plusw1	equ	0xFE3
  4595                           fsr1h	equ	0xFE2
  4596                           fsr1l	equ	0xFE1
  4597                           bsr	equ	0xFE0
  4598                           indf2	equ	0xFDF
  4599                           postinc2	equ	0xFDE
  4600                           postdec2	equ	0xFDD
  4601                           preinc2	equ	0xFDC
  4602                           plusw2	equ	0xFDB
  4603                           fsr2h	equ	0xFDA
  4604                           fsr2l	equ	0xFD9
  4605                           status	equ	0xFD8

Data Sizes:
    Strings     154
    Constant    0
    Data        11
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      78
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[13]), STR_10(CODE[3]), STR_11(CODE[17]), STR_12(CODE[16]), 
		 -> STR_13(CODE[19]), STR_14(CODE[16]), STR_15(CODE[6]), STR_16(CODE[17]), 
		 -> STR_17(CODE[15]), STR_2(CODE[17]), STR_3(CODE[3]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), 
		 -> STR_9(CODE[3]), time(COMRAM[9]), 

    dashboard@events	PTR unsigned char [8] size(1) Largest target is 3
		 -> STR_10(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 
		 -> STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), STR_9(CODE[3]), 

    dashboard@F10501	PTR unsigned char [8] size(1) Largest target is 3
		 -> STR_10(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 
		 -> STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), STR_9(CODE[3]), 

    my_strcmp@one	PTR unsigned char  size(1) Largest target is 5
		 -> pass(COMRAM[5]), 

    my_strcmp@two	PTR unsigned char  size(1) Largest target is 5
		 -> temp_password(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_password
    _password->_clcd_putch
    ___awmod->___awdiv
    _init_config->_write_external_eeprom
    _write_external_eeprom->_i2c_write
    _read_external_eeprom->_i2c_write
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _dashboard->_clcd_putch
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_time->_clcd_print
    _clcd_print->_clcd_write
    _clcd_putch->___awmod
    ___lwmod->___lwdiv

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   22995
                                             31 COMRAM     1     1      0
                         _clcd_print
                         _clcd_write
                          _dashboard
                        _init_config
                               _menu
                           _password
                           _read_adc
                      _read_switches
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _password                                            15    15      0    7787
                                             16 COMRAM    15    15      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                          _my_strcmp
 ---------------------------------------------------------------------------------
 (2) _my_strcmp                                            8     6      2     398
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _menu                                                 1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          2     2      0    2240
                                              5 COMRAM     2     2      0
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                        _init_timer0
               _read_external_eeprom
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _write_external_eeprom                                4     3      1     393
                                              1 COMRAM     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     506
                                              3 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     370
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    1184
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dashboard                                            9     9      0    8702
                                             16 COMRAM     9     9      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                       _display_time
                           _get_time
 ---------------------------------------------------------------------------------
 (2) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0    2923
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    2923
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    1988
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           2     1      1    1184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clcd_write
   _dashboard
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _clcd_print
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
       _clcd_write (ARG)
     _display_time
       _clcd_print
     _get_time
       _read_ds1307
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
           _i2c_idle
         _i2c_stop
           _i2c_idle
         _i2c_write
           _i2c_idle
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
     _init_matrix_keypad
     _init_timer0
     _read_external_eeprom
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_stop
       _i2c_write
     _write_external_eeprom
       _i2c_start
       _i2c_stop
       _i2c_write
   _menu
   _password
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _my_strcmp
   _read_adc
   _read_switches
     _scan_key

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      25        0.0%
BITBIGSFRll        281      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      4E       1       83.0%
BITBIGSFRlhhhh      1E      0       0      19        0.0%
BITBIGSFRhhhlhh     19      0       0      17        0.0%
BITBIGSFRlhl         F      0       0      22        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRhhhlhh      B      0       0      18        0.0%
BITBIGSFRlhhl        8      0       0      21        0.0%
BITBIGSFRlhhhl       2      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E      24        0.0%
DATA                 0      0      4E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat May 25 21:21:54 2024

                 my_strcmp@one 0024                   my_strcmp@two 0025                              _i 000A  
        _write_external_eeprom 1344                 clcd_print@addr 0028                 clcd_print@data 0026  
                my_strcmp@last 0028                             l33 146A                             l36 1316  
                           l61 13F2                             l62 13F6                             l71 11F4  
                           l39 1342                             l65 0F20                             l74 14A0  
                           _GO 7E11                   ___awdiv@sign 0029             _init_matrix_keypad 14CC  
                          l201 14FE                            l113 109E                            l125 0CFE  
                          l206 1024                            l150 0B8E                            l151 0B66  
                          l160 0BD0                            l217 0B2E                            l145 14DC  
                          l153 0B7A                            l218 0B36                            l331 14B6  
                          l411 14CA                            l163 0C00                            l244 0F9C  
                          l156 0BA8                            l148 0B52                            l245 0FA4  
                          l165 0C14                            l157 0BE4                            l149 0C3E  
                          l334 14DE                            l350 153A                            l414 154A  
                          l166 0C3C                            l158 0BBC                            l263 09BC  
                          l167 0C28                            l336 14EC                            l344 1532  
                          l337 14EE                            l353 150A                            l362 1516  
                          l290 12FC                            l178 1114                            l347 152A  
                          l356 1542                            l293 1488                            l381 1420  
                          l359 1548                            l296 144A                            l378 1382  
                          l661 0E78                            l648 0DC8                            l915 1188  
                          l908 1180                            l925 1258                            l918 1250  
                          _CKE 7E3E                            _GIE 7F97                            _RC0 7C10  
                          _RC1 7C11                            _RC2 7C12                            _RD7 7C1F  
                          _PEN 7E2A                            u800 13F2                            u801 13EE  
                          u810 11BC                            u820 11E4                            u900 0BB6  
                          _SEN 7E28                            u901 0BB2                            u830 11F4  
                          u910 0BCA                            u831 11F0                            u911 0BC6  
                          _PSA 7EAB                            u840 1382                            u920 0BDE  
                          u817 11B2                            u841 137E                            u921 0BDA  
                          u770 14EC                            u930 0BFA                            u850 0B4C  
                          u827 11DA                            u771 14E8                            u931 0BF6  
                          u851 0B48                            u780 13D0                            u940 0C0E  
                          u860 0B60                            u781 13CA                            u941 0C0A  
                          u861 0B5C                            u950 0C22                            u870 0B74  
                          u951 0C1E                            u871 0B70                            u960 0C36  
                          u880 0B88                            u961 0C32                            u881 0B84  
                          u970 0FCC                            u890 0BA2                            u795 13D2  
                          u971 0FC8                            u891 0B9E                            u980 0F58  
                          u981 0F54                            u990 0F9C                            _SMP 7E3F  
                          u991 0F98                  ?_display_time 0024                            _key 000F  
                          _isr 0008                 clcd_putch@addr 0032                 clcd_putch@data 0033  
                 ___awmod@sign 0031                            wreg 0FE8            ?_init_matrix_keypad 0024  
                         l2000 0FF8                           l2002 1002                           l2010 0F36  
                         l2100 111E                           l2004 100A                           l2020 0D0A  
                         l2012 0F58                           l2110 1154                           l2102 1130  
                         l2006 1020                           l2030 0D3A                           l2022 0D18  
                         l2014 0F80                           l2112 116A                           l2104 1138  
                         l2120 11F6                           l2200 09BE                           l2040 0D68  
                         l2032 0D3E                           l2024 0D20                           l2016 0F84  
                         l2008 0F22                           l2114 1172                           l2106 1140  
                         l2130 123C                           l2122 1208                           l2210 0A32  
                         l2202 09D2                           l2050 0D9C                           l2042 0D76  
                         l2034 0D46                           l2026 0D24                           l2018 0D06  
                         l2116 1174                           l2108 114E                           l2132 1244  
                         l2124 1210                           l2220 0A7E                           l2212 0A36  
                         l2204 09E4                           l2052 0DA2                           l2044 0D7C  
                         l2036 0D58                           l2028 0D32                           l2300 0908  
                         l2140 1324                           l2118 117A                           l2134 124A  
                         l2126 1218                           l2230 0AC4                           l2222 0A8E  
                         l2214 0A48                           l2206 0A04                           l2150 1032  
                         l2046 0D92                           l2038 0D60                           l2054 0DA8  
                         l2070 0DE8                           l2062 0DCA                           l2310 096A  
                         l2302 0916                           l2142 133A                           l2128 1226  
                         l2232 0ADA                           l2224 0A96                           l2216 0A5C  
                         l2208 0A16                           l2160 105C                           l2152 103A  
                         l2056 0DB8                           l2048 0D9A                           l2080 0E20  
                         l2072 0DF6                           l2064 0DCE                           l2312 09A8  
                         l2304 092A                           l2240 06DA                           l2136 1300  
                         l2320 0C44                           l2234 0B32                           l2226 0AAA  
                         l2218 0A78                           l2170 1082                           l2162 1066  
                         l2154 103E                           l2146 1026                           l2058 0DC0  
                         l2082 0E2E                           l2090 0E58                           l2074 0DFE  
                         l2066 0DDC                           l2314 09AA                           l2306 0936  
                         l2250 073A                           l2242 06EA                           l2138 1314  
                         l2330 0C6E                           l2322 0C48                           l2228 0ABC  
                         l2156 1048                           l2148 102E                           l2092 0E68  
                         l2084 0E44                           l2076 0E10                           l2068 0DE4  
                         l2316 09B2                           l2308 094A                           l2260 077E  
                         l2252 074C                           l2244 0706                           l2236 069E  
                         l2180 10D8                           l2172 10A2                           l2340 0CA6  
                         l2332 0C72                           l2324 0C48                           l2166 106E  
                         l2158 1052                           l2094 0E70                           l2086 0E4C  
                         l2078 0E18                           l2270 07B8                           l2262 078A  
                         l2254 0758                           l2246 0722                           l2238 06B2  
                         l2174 10B2                           l2190 10FA                           l2350 0CE0  
                         l2342 0CAC                           l2334 0C84                           l2326 0C50  
                         l2318 0C40                           l1800 146E                           l2168 107E  
                         l2088 0E52                           l2272 07D6                           l2280 080A  
                         l2256 0764                           l2248 0732                           l2192 110A  
                         l2176 10B8                           l2352 0CE6                           l2344 0CBC  
                         l2336 0C8E                           l2328 0C5E                           l2098 1116  
                         l1730 153C                           l1810 144C                           l1802 1472  
                         l2290 0898                           l2282 081A                           l2274 07FE  
                         l2266 079A                           l2258 076C                           l2178 10C8  
                         l2186 10E2                           l2346 0CC6                           l2338 0C96  
                         l1740 13D6                           l1732 153E                           l1812 1460  
                         l1820 0E84                           l1804 1478                           l1900 1368  
                         l2292 08B6                           l2284 0820                           l2276 0806  
                         l2268 07AE                           l2188 10F2                           l2196 1112  
                         l2348 0CCE                           l1750 13E0                           l1742 13D8  
                         l1734 1544                           l1814 1468                           l1830 0EBA  
                         l1822 0E86                           l1806 147E                           l1910 140E  
                         l1902 13FA                           l2294 08C6                           l2286 0848  
                         l1752 13E2                           l1744 13DA                           l1736 13C0  
                         l1728 14DE                           l1760 1502                           l1840 0EE4  
                         l1832 0EC2                           l1824 0E96                           l1816 0E7A  
                         l1808 1484                           l1912 141A                           l1904 13FE  
                         l2296 08EC                           l2288 0866                           l1754 13E4  
                         l1746 13DC                           l1738 13D2                           l1770 1536  
                         l1762 1506                           l1850 0F18                           l1842 0EEE  
                         l1834 0ECC                           l1826 0EA0                           l1818 0E7E  
                         l1906 1404                           l2298 08FC                           l1930 0B74  
                         l1748 13DE                           l1852 148C                           l1780 1198  
                         l1772 150C                           l1756 152C                           l1764 1524  
                         l1844 0EF6                           l1836 0ED2                           l1828 0EB0  
                         l1860 14A2                           l1908 140A                           l1940 0BA2  
                         l1924 0B60                           l1916 0B38                           l1782 11C0  
                         l1774 1514                           l1758 152E                           l1766 1526  
                         l1790 142E                           l1846 0F00                           l1838 0EDC  
                         l1870 14B4                           l1862 14A6                           l1854 14CC  
                         l1918 0B4C                           l1784 11C4                           l1768 1534  
                         l1792 1434                           l1848 0F0E                           l1880 12E8  
                         l1872 12B6                           l1864 14AE                           l1856 14D4  
                         l1952 0BCA                           l1936 0B88                           l1778 118A  
                         l1794 1438                           l1786 1424                           l1874 12BE  
                         l1866 14B0                           l1858 14D6                           l1882 14B8  
                         l1890 134A                           l1962 0BFA                           l1946 0BB6  
                         l1796 1444                           l1788 1428                           l1876 12CA  
                         l1868 14B2                           l1884 14C0                           l1892 1350  
                         l1980 0C36                           l1990 0FA6                           l1878 12DE  
                         l1886 14C8                           l1894 1356                           l1974 0C22  
                         l1958 0BDE                           l1992 0FBE                           l1896 135C  
                         l1888 1346                           l1984 0C3C                           l1968 0C0E  
                         l1994 0FCC                           l1898 1360                           l1988 14F0  
                         l1996 0FE2                           l1998 0FF4                           _ADFM 7E07  
                         ?_isr 0024                           _ADON 7E10                           STR_1 0676  
                         STR_2 0636                           STR_3 0695                           STR_4 0698  
                         STR_5 0692                           STR_6 0686                           STR_7 0689  
                         STR_8 068C                           STR_9 068F                           u1000 0D18  
                         u1001 0D14                           _T0CS 7EAD                           u1010 0D32  
                         u1011 0D2E                           u1020 0D58                           u1100 0E44  
                         u1021 0D54                           u1101 0E40                           u1030 0D76  
                         u1110 0E68                           u1031 0D72                           u1111 0E64  
                         u1120 1130                           u1040 0D92                           u1200 10B2  
                         u1121 112C                           u1041 0D8E                           u1201 10AE  
                         u1130 114E                           u1050 0DB8                           u1210 10C8  
                         u1131 114A                           u1051 0DB4                           u1211 10C4  
                         u1140 116A                           u1300 0A78                           u1060 0DDC  
                         u1220 10D8                           u1141 1166                           u1301 0A74  
                         u1061 0DD8                           u1221 10D4                           u1150 1208  
                         u1310 0A8E                           u1070 0DF6                           u1230 10F2  
                         u1151 1204                           u1311 0A8A                           u1071 0DF2  
                         u1231 10EE                           u1160 1226                           u1320 0AAA  
                         u1080 0E10                           u1400 07AE                           u1240 110A  
                         u1161 1222                           u1321 0AA6                           u1081 0E0C  
                         u1401 07AA                           u1241 1106                           u1170 123C  
                         u1330 0ABC                           u1090 0E2E                           u1410 07D6  
                         u1171 1238                           u1331 0AB8                           u1251 09DC  
                         u1091 0E2A                           u1411 07D2                           u1340 0ADA  
                         u1260 0A16                           u1420 081A                           u1180 1324  
                         u1500 0CE0                           u1341 0AD6                           u1261 0A12  
                         u1421 0816                           u1181 1320                           u1501 0CDC  
                         u1270 0A32                           u1190 109E                           u1430 08EC  
                         u1350 06DA                           u1271 0A2E                           u1191 109A  
                         u1431 08E8                           u1351 06D6                           u1280 0A48  
                         u1440 08FC                           u1360 0706                           u1281 0A44  
                         u1441 08F8                           u1361 0702                           u1290 0A5C  
                         u1450 09A8                           u1370 0722                           u1291 0A58  
                         u1451 09A4                           u1371 071E                           u1380 074C  
                         u1460 0C6E                           u1381 0748                           u1461 0C6A  
                         u1390 077E                           u1470 0C84                           u1391 077A  
                         u1471 0C80                           u1480 0CA6                           u1537 0E8C  
                         u1481 0CA2                           u1490 0CBC                           u1547 0EA6  
                         u1491 0CB8                           u1557 0EBC                           u1567 0EDE  
                         u1577 0EF0          ?_read_external_eeprom 0024                           u1587 0F06  
                         u1597 0F1A                           _PEIE 7F96                           _RCEN 7E2B  
                         _RBPU 7F8F                           _TMR0 0FD6                           _RSEN 7E29  
                         _flag 0010                           _main 0C40                           _menu 154A  
                         _pass 001F                           _time 0011                           fsr0h 0FEA  
                         fsr1h 0FE2                           indf0 0FEF                           fsr2h 0FDA  
                         fsr0l 0FE9                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 004F                           start 000E  
         ??_init_matrix_keypad 0024                   ___param_bank 0000                 clcd_write@byte 0025  
                _i2c_rep_start 1534                  ??_i2c_rx_mode 0024                          ??_isr 0024  
                 ?_init_ds1307 0024                          _ADCS0 7E00                          _ADCS1 7E01  
                        _ADCS2 7E02                          ?_main 0024                   ?_read_ds1307 0024  
                        _ACKEN 7E2C                          _ACKDT 7E2D                 ??_display_time 0029  
                        ?_menu 0024                          _BCLIF 7D0B                          _ACQT0 7E03  
                        _ACQT1 7E04                          _ACQT2 7E05                __end_of___awdiv 0DCA  
                        STR_10 0683                          STR_11 0625                          STR_12 0647  
                        STR_13 0601                          STR_14 0657                          STR_15 0651  
                        STR_16 0614                          STR_17 0667                __end_of___awmod 0E7A  
              ___awdiv@divisor 0026                __end_of___lwdiv 118A                __end_of___lwmod 125A  
                 ?_init_config 0024                          i2l396 12B2                ___awdiv@counter 0028  
                        _VCFG0 7E0C                          _VCFG1 7E0D                          _PORTB 0F81  
                        _PORTD 0F83                          _TRISB 0F93                          _TRISC 0F94  
                        _TRISD 0F95                          _SSPIF 7CF3                   ?_init_timer0 0024  
    write_external_eeprom@data 0025                          _delay 0008                          tablat 0FF5  
                        plusw1 0FE3                          plusw2 0FDB                          ttemp5 0050  
                        ttemp6 0053                          ttemp7 0057                          status 0FD8  
                        wtemp8 0050               init_ds1307@dummy 0027                     _i2c_no_ack 1544  
              __initialization 1384                 ?_i2c_rep_start 0024         ?_write_external_eeprom 0025  
                 __end_of_main 0D06                   __end_of_menu 154C               __end_of_i2c_idle 14F0  
             __end_of_i2c_read 1518               __end_of_i2c_stop 152C                         ??_main 0043  
                       ??_menu 0024                  __activetblptr 0002            __end_of_i2c_rx_mode 1544  
                       _ADCON0 0FC2                         _ADCON1 0FC1               read_switches@key 000E  
       ??_read_external_eeprom 0025                         _ADRESH 0FC4                         _ADRESL 0FC3  
                       _T08BIT 7EAE               ___awdiv@dividend 0024                         _GODONE 7E11  
                       i2l2360 12AE                         i2l2362 12B0                         i2l2354 125C  
                       i2l2356 126A                         i2l2358 129E                   _write_ds1307 146C  
                       _TMR0IE 7F95                         _TMR0IF 7F92                         _TMR0ON 7EAF  
                       _SSPADD 0FC8                         _TRISC3 7CA3                         _TRISC4 7CA4  
                       _TRISD7 7CAF                         _SSPBUF 0FC9               __end_of_get_time 1026  
                    ??___awdiv 0028                         _chance 004C                      ??___awmod 0030  
                    ??___lwdiv 0028                      ??___lwmod 002F               __end_of_init_i2c 14B8  
             __end_of_init_adc 146C               __end_of_read_adc 1344                         clear_0 13AA  
             ___awdiv@quotient 002A                ___awmod@divisor 002E                         isa$std 0001  
             __end_of_scan_key 0C40                ___awmod@counter 0030               __end_of_password 09BE  
                 __pdataCOMRAM 0044                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8                     __accesstop 0060  
      __end_of__initialization 13B0           __end_of_display_time 1500                  ___rparam_used 0001  
              ??_i2c_rep_start 0024                    ?_i2c_no_ack 0024                 __pcstackCOMRAM 0024  
                  _i2c_rx_mode 153C              __end_of_i2c_start 1534              __end_of_i2c_write 150C  
       write_external_eeprom@i 0026                      ?_i2c_idle 0024                      ?_i2c_read 0024  
                    ?_i2c_stop 0024                     _clcd_print 118A                     _clcd_putch 148A  
                   _clcd_write 13BE   write_external_eeprom@address 0028                read_ds1307@data 0026  
            read_switches@once 004E                        _ACKSTAT 7E2E                    password@key 0042  
                      _SSPCON1 0FC6                      ?_get_time 0024                  _read_switches 10A0  
                   ??_i2c_idle 0024                     ??_i2c_read 0024              __end_of_dashboard 0B38  
                   ??_i2c_stop 0024                      ?_init_i2c 0024                      ?_init_adc 0024  
                    ?_read_adc 0024                      ?_scan_key 0024        ??_write_external_eeprom 0026  
                      __Hparam 0000                      ?_password 0024                        __Lparam 0000  
                      ___awdiv 0D06                        ___awmod 0DCA                        ___lwdiv 1116  
                      ___lwmod 11F6                   __psmallconst 0600                        __pcinit 1384  
                      __ramtop 0600                        __ptext0 0C40                        __ptext1 10A0  
                      __ptext2 0B38                        __ptext3 12FE                        __ptext4 069C  
                      __ptext5 0F22                        __ptext6 0DCA                        __ptext7 0D06  
                      __ptext8 154A                        __ptext9 1026              __end_of_init_clcd 0F22  
             ___awmod@dividend 002C                   init_config@j 0029                 ?_read_switches 0024  
                   ??_get_time 0027                 __pintcode_body 125A           end_of_initialization 13B0  
                      menu@key 0024                     ??_init_i2c 0024                     ??_init_adc 0024  
                __Lmediumconst 0000                     ??_read_adc 0026                        int_func 125A  
                   ??_scan_key 0024                    ?_clcd_print 0026                    ?_clcd_putch 0032  
                  ?_clcd_write 0024              __end_of_my_strcmp 0FA6                     ??_password 0034  
                   _tick_count 004D                        postdec1 0FE5                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE                      _PORTBbits 0F81  
              read_adc@channel 002A                  password@delay 003E                   _display_time 14F0  
                i2c_write@data 0024                read_adc@reg_val 0028                     main@main_f 0043  
     read_external_eeprom@data 0026                   ??_i2c_no_ack 0024                   ?_i2c_rx_mode 0024  
                __pidataCOMRAM 1518                    _adc_reg_val 000C            start_initialization 1384  
              ??_read_switches 0024                      _i2c_start 152C                    __end_of_isr 12B6  
                    _i2c_write 1500             __end_of_i2c_no_ack 154A          __end_of_i2c_rep_start 153C  
                ??_init_ds1307 0027                  ??_read_ds1307 0025    read_switches@detection_type 0024  
                ??_init_config 0029                  ??_init_timer0 0024                    __pbssCOMRAM 0001  
                   ?_i2c_start 0024                     ?_i2c_write 0024                      _dashboard 09BE  
             ___lwdiv@dividend 0024  __end_of_write_external_eeprom 1384                      __pintcode 0008  
                     ?___awdiv 0024                       ?___awmod 002C             read_ds1307@address 0025  
                     ?___lwdiv 0024                      _clock_reg 0005                       ?___lwmod 002B  
                  __smallconst 0600            __end_of_init_ds1307 12FE            __end_of_read_ds1307 144C  
             ___lwdiv@quotient 0028                      _init_clcd 0E7A            __end_of_init_config 10A0  
                ?_write_ds1307 0025            __end_of_init_timer0 14CC    read_external_eeprom@address 0025  
                 ??_clcd_print 0029                   ??_clcd_putch 0033     __end_of_init_matrix_keypad 14DE  
                 ??_clcd_write 0025                     ?_dashboard 0024                       i2u151_40 126A  
                     i2u151_41 1266                       i2u152_40 129E                       i2u152_41 129A  
                    _my_strcmp 0F22                   password@wait 0036          clcd_write@control_bit 0024  
                   my_strcmp@k 002A                    ??_i2c_start 0024             __end_of_clcd_print 11F6  
                  ??_i2c_write 0024             __end_of_clcd_putch 14A2             __end_of_clcd_write 13F8  
                   ?_init_clcd 0024                      copy_data0 1398                 ??_write_ds1307 0026  
                     _i2c_idle 14DE                       _i2c_read 150C                       _i2c_stop 1524  
                _temp_password 001A                       __Hrparam 0000                       __Lrparam 0000  
                   ?_my_strcmp 0024   __end_of_read_external_eeprom 1422                    _init_ds1307 12B6  
                  _read_ds1307 1422                    _init_config 1026            write_ds1307@address 0026  
                  _init_timer0 14B8                ___lwdiv@divisor 0026                ___lwdiv@counter 002A  
                     __ptext10 1344                       __ptext11 13F8                       __ptext20 0FA6  
                     __ptext12 14B8                       __ptext21 1422                       __ptext13 14CC  
                     __ptext30 14F0                       __ptext22 1500                       __ptext14 14A2  
                     __ptext31 118A                       __ptext23 1524                       __ptext15 12B6  
                     __ptext32 148A                       __ptext24 152C                       __ptext16 146C  
                     __ptext33 13BE                       __ptext25 1534                       __ptext17 0E7A  
                     __ptext34 11F6                       __ptext26 150C                       __ptext18 144C  
                     __ptext35 1116                       __ptext27 153C                       __ptext19 09BE  
                     __ptext28 14DE                       __ptext29 1544                       _get_time 0FA6  
                     _init_i2c 14A2                       _init_adc 144C                       _read_adc 12FE  
                     _scan_key 0B38                    ??_dashboard 0034                       _password 069C  
                     isa$xinst 0000                       int$flags 004F                       isr@count 0001  
              dashboard@F10501 0044                    ??_init_clcd 0026          __end_of_read_switches 1116  
                     intlevel2 0000               ___lwmod@dividend 002B                    ??_my_strcmp 0026  
         __end_of_write_ds1307 148A                dashboard@events 0035                ___lwmod@divisor 002D  
              ___lwmod@counter 002F               write_ds1307@data 0025           _read_external_eeprom 13F8  
