

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu May 30 14:50:45 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69   000000                     
    70                           ; Version 2.20
    71                           ; Generated 12/02/2020 GMT
    72                           ; 
    73                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F4580 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104   000000                     
   105                           	psect	idataCOMRAM
   106   002030                     __pidataCOMRAM:
   107                           	callstack 0
   108                           
   109                           ;initializer for _chance
   110   002030  02                 	db	2
   111                           
   112                           ;initializer for _tick_count
   113   002031  B4                 	db	180
   114                           
   115                           ;initializer for read_switches@once
   116   002032  01                 	db	1
   117                           
   118                           	psect	idataBANK0
   119   001F3A                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for _events
   123   001F3A  F8                 	db	low STR_1
   124   001F3B  2F                 	db	high STR_1
   125   001F3C  FB                 	db	low STR_2
   126   001F3D  2F                 	db	high STR_2
   127   001F3E  F5                 	db	low STR_3
   128   001F3F  2F                 	db	high STR_3
   129   001F40  E9                 	db	low STR_4
   130   001F41  2F                 	db	high STR_4
   131   001F42  EC                 	db	low STR_5
   132   001F43  2F                 	db	high STR_5
   133   001F44  EF                 	db	low STR_6
   134   001F45  2F                 	db	high STR_6
   135   001F46  F2                 	db	low STR_7
   136   001F47  2F                 	db	high STR_7
   137   001F48  E6                 	db	low STR_8
   138   001F49  2F                 	db	high STR_8
   139                           
   140                           ;initializer for _logs
   141   001F4A  AB                 	db	low STR_15
   142   001F4B  2F                 	db	high STR_15
   143   001F4C  8B                 	db	low STR_16
   144   001F4D  2F                 	db	high STR_16
   145   001F4E  37                 	db	low STR_17
   146   001F4F  2F                 	db	high STR_17
   147   001F50  7B                 	db	low STR_18
   148   001F51  2F                 	db	high STR_18
   149   001F52  BA                 	db	low STR_19
   150   001F53  2F                 	db	high STR_19
   151   000000                     _RCREG	set	4014
   152   000000                     _TXREG	set	4013
   153   000000                     _SPBRG	set	4015
   154   000000                     _SSPADD	set	4040
   155   000000                     _SSPCON1	set	4038
   156   000000                     _ADRESL	set	4035
   157   000000                     _ADRESH	set	4036
   158   000000                     _ACKSTAT	set	32302
   159   000000                     _CKE	set	32318
   160   000000                     _RBPU	set	32655
   161   000000                     _VCFG1	set	32269
   162   000000                     _GODONE	set	32273
   163   000000                     _PORTBbits	set	3969
   164   000000                     _ADCON1	set	4033
   165   000000                     _TRISD	set	3989
   166   000000                     _ADCON0	set	4034
   167   000000                     _RCIF	set	31989
   168   000000                     _TXIF	set	31988
   169   000000                     _CREN	set	32092
   170   000000                     _TRISC6	set	31910
   171   000000                     _TRISC7	set	31911
   172   000000                     _PSA	set	32427
   173   000000                     _TMR0ON	set	32431
   174   000000                     _T0CS	set	32429
   175   000000                     _TMR0IF	set	32658
   176   000000                     _ACKEN	set	32300
   177   000000                     _ACKDT	set	32301
   178   000000                     _RCEN	set	32299
   179   000000                     _RSEN	set	32297
   180   000000                     _PEN	set	32298
   181   000000                     _SEN	set	32296
   182   000000                     _SMP	set	32319
   183   000000                     _TRISC4	set	31908
   184   000000                     _TRISC3	set	31907
   185   000000                     _PEIE	set	32662
   186   000000                     _GIE	set	32663
   187   000000                     _RD7	set	31775
   188   000000                     _RC0	set	31760
   189   000000                     _RC2	set	31762
   190   000000                     _GO	set	32273
   191   000000                     _ADON	set	32272
   192   000000                     _VCFG0	set	32268
   193   000000                     _ADCS2	set	32258
   194   000000                     _ADCS1	set	32257
   195   000000                     _ADCS0	set	32256
   196   000000                     _ACQT0	set	32259
   197   000000                     _ACQT1	set	32260
   198   000000                     _ACQT2	set	32261
   199   000000                     _PORTB	set	3969
   200   000000                     _RC1	set	31761
   201   000000                     _ADFM	set	32263
   202   000000                     _TRISB	set	3987
   203   000000                     _TRISC	set	3988
   204   000000                     _PORTD	set	3971
   205   000000                     _TRISD7	set	31919
   206   000000                     _RCIE	set	31981
   207   000000                     _SSPIF	set	31987
   208   000000                     _TMR0IE	set	32661
   209   000000                     _TMR0	set	4054
   210   000000                     _SSPBUF	set	4041
   211   000000                     _T08BIT	set	32430
   212   000000                     _BCLIF	set	32011
   213   000000                     _SPEN	set	32095
   214   000000                     _BRGH	set	32098
   215                           
   216                           	psect	mediumconst
   217   002E90                     __pmediumconst:
   218                           	callstack 0
   219   002E90  00                 	db	0
   220   002E91                     STR_28:
   221   002E91  20                 	db	32
   222   002E92  20                 	db	32
   223   002E93  52                 	db	82	;'R'
   224   002E94  65                 	db	101	;'e'
   225   002E95  74                 	db	116	;'t'
   226   002E96  79                 	db	121	;'y'
   227   002E97  70                 	db	112	;'p'
   228   002E98  65                 	db	101	;'e'
   229   002E99  20                 	db	32
   230   002E9A  50                 	db	80	;'P'
   231   002E9B  61                 	db	97	;'a'
   232   002E9C  73                 	db	115	;'s'
   233   002E9D  73                 	db	115	;'s'
   234   002E9E  77                 	db	119	;'w'
   235   002E9F  6F                 	db	111	;'o'
   236   002EA0  72                 	db	114	;'r'
   237   002EA1  64                 	db	100	;'d'
   238   002EA2  20                 	db	32
   239   002EA3  3A                 	db	58	;':'
   240   002EA4  20                 	db	32
   241   002EA5  00                 	db	0
   242   002EA6                     STR_25:
   243   002EA6  23                 	db	35
   244   002EA7  20                 	db	32
   245   002EA8  54                 	db	84	;'T'
   246   002EA9  49                 	db	73	;'I'
   247   002EAA  4D                 	db	77	;'M'
   248   002EAB  45                 	db	69	;'E'
   249   002EAC  20                 	db	32
   250   002EAD  20                 	db	32
   251   002EAE  20                 	db	32
   252   002EAF  45                 	db	69	;'E'
   253   002EB0  56                 	db	86	;'V'
   254   002EB1  20                 	db	32
   255   002EB2  20                 	db	32
   256   002EB3  20                 	db	32
   257   002EB4  53                 	db	83	;'S'
   258   002EB5  50                 	db	80	;'P'
   259   002EB6  20                 	db	32
   260   002EB7  0A                 	db	10
   261   002EB8  0D                 	db	13
   262   002EB9  00                 	db	0
   263   002EBA                     STR_29:
   264   002EBA  20                 	db	32
   265   002EBB  50                 	db	80	;'P'
   266   002EBC  61                 	db	97	;'a'
   267   002EBD  73                 	db	115	;'s'
   268   002EBE  73                 	db	115	;'s'
   269   002EBF  77                 	db	119	;'w'
   270   002EC0  6F                 	db	111	;'o'
   271   002EC1  72                 	db	114	;'r'
   272   002EC2  64                 	db	100	;'d'
   273   002EC3  20                 	db	32
   274   002EC4  43                 	db	67	;'C'
   275   002EC5  68                 	db	104	;'h'
   276   002EC6  61                 	db	97	;'a'
   277   002EC7  6E                 	db	110	;'n'
   278   002EC8  67                 	db	103	;'g'
   279   002EC9  65                 	db	101	;'e'
   280   002ECA  20                 	db	32
   281   002ECB  20                 	db	32
   282   002ECC  00                 	db	0
   283   002ECD                     STR_27:
   284   002ECD  20                 	db	32
   285   002ECE  20                 	db	32
   286   002ECF  4E                 	db	78	;'N'
   287   002ED0  65                 	db	101	;'e'
   288   002ED1  77                 	db	119	;'w'
   289   002ED2  20                 	db	32
   290   002ED3  50                 	db	80	;'P'
   291   002ED4  61                 	db	97	;'a'
   292   002ED5  73                 	db	115	;'s'
   293   002ED6  73                 	db	115	;'s'
   294   002ED7  77                 	db	119	;'w'
   295   002ED8  6F                 	db	111	;'o'
   296   002ED9  72                 	db	114	;'r'
   297   002EDA  64                 	db	100	;'d'
   298   002EDB  20                 	db	32
   299   002EDC  3A                 	db	58	;':'
   300   002EDD  20                 	db	32
   301   002EDE  00                 	db	0
   302   002EDF                     STR_23:
   303   002EDF  20                 	db	32
   304   002EE0  20                 	db	32
   305   002EE1  44                 	db	68	;'D'
   306   002EE2  6F                 	db	111	;'o'
   307   002EE3  77                 	db	119	;'w'
   308   002EE4  6E                 	db	110	;'n'
   309   002EE5  6C                 	db	108	;'l'
   310   002EE6  6F                 	db	111	;'o'
   311   002EE7  61                 	db	97	;'a'
   312   002EE8  64                 	db	100	;'d'
   313   002EE9  20                 	db	32
   314   002EEA  4C                 	db	76	;'L'
   315   002EEB  6F                 	db	111	;'o'
   316   002EEC  67                 	db	103	;'g'
   317   002EED  20                 	db	32
   318   002EEE  20                 	db	32
   319   002EEF  20                 	db	32
   320   002EF0  00                 	db	0
   321   002EF1                     STR_22:
   322   002EF1  20                 	db	32
   323   002EF2  20                 	db	32
   324   002EF3  20                 	db	32
   325   002EF4  20                 	db	32
   326   002EF5  20                 	db	32
   327   002EF6  20                 	db	32
   328   002EF7  20                 	db	32
   329   002EF8  20                 	db	32
   330   002EF9  20                 	db	32
   331   002EFA  20                 	db	32
   332   002EFB  20                 	db	32
   333   002EFC  20                 	db	32
   334   002EFD  20                 	db	32
   335   002EFE  20                 	db	32
   336   002EFF  20                 	db	32
   337   002F00  20                 	db	32
   338   002F01  20                 	db	32
   339   002F02  00                 	db	0
   340   002F03                     STR_21:
   341   002F03  20                 	db	32
   342   002F04  20                 	db	32
   343   002F05  20                 	db	32
   344   002F06  4C                 	db	76	;'L'
   345   002F07  4F                 	db	79	;'O'
   346   002F08  47                 	db	71	;'G'
   347   002F09  20                 	db	32
   348   002F0A  43                 	db	67	;'C'
   349   002F0B  4C                 	db	76	;'L'
   350   002F0C  45                 	db	69	;'E'
   351   002F0D  41                 	db	65	;'A'
   352   002F0E  52                 	db	82	;'R'
   353   002F0F  45                 	db	69	;'E'
   354   002F10  44                 	db	68	;'D'
   355   002F11  20                 	db	32
   356   002F12  20                 	db	32
   357   002F13  20                 	db	32
   358   002F14  00                 	db	0
   359   002F15                     STR_30:
   360   002F15  20                 	db	32
   361   002F16  20                 	db	32
   362   002F17  20                 	db	32
   363   002F18  53                 	db	83	;'S'
   364   002F19  55                 	db	85	;'U'
   365   002F1A  43                 	db	67	;'C'
   366   002F1B  43                 	db	67	;'C'
   367   002F1C  45                 	db	69	;'E'
   368   002F1D  53                 	db	83	;'S'
   369   002F1E  53                 	db	83	;'S'
   370   002F1F  46                 	db	70	;'F'
   371   002F20  55                 	db	85	;'U'
   372   002F21  4C                 	db	76	;'L'
   373   002F22  4C                 	db	76	;'L'
   374   002F23  20                 	db	32
   375   002F24  20                 	db	32
   376   002F25  00                 	db	0
   377   002F26                     STR_20:
   378   002F26  45                 	db	69	;'E'
   379   002F27  6E                 	db	110	;'n'
   380   002F28  74                 	db	116	;'t'
   381   002F29  65                 	db	101	;'e'
   382   002F2A  72                 	db	114	;'r'
   383   002F2B  65                 	db	101	;'e'
   384   002F2C  64                 	db	100	;'d'
   385   002F2D  20                 	db	32
   386   002F2E  56                 	db	86	;'V'
   387   002F2F  69                 	db	105	;'i'
   388   002F30  65                 	db	101	;'e'
   389   002F31  77                 	db	119	;'w'
   390   002F32  20                 	db	32
   391   002F33  4C                 	db	76	;'L'
   392   002F34  6F                 	db	111	;'o'
   393   002F35  67                 	db	103	;'g'
   394   002F36  00                 	db	0
   395   002F37                     STR_17:
   396   002F37  43                 	db	67	;'C'
   397   002F38  6C                 	db	108	;'l'
   398   002F39  65                 	db	101	;'e'
   399   002F3A  61                 	db	97	;'a'
   400   002F3B  72                 	db	114	;'r'
   401   002F3C  20                 	db	32
   402   002F3D  4C                 	db	76	;'L'
   403   002F3E  6F                 	db	111	;'o'
   404   002F3F  67                 	db	103	;'g'
   405   002F40  20                 	db	32
   406   002F41  20                 	db	32
   407   002F42  20                 	db	32
   408   002F43  20                 	db	32
   409   002F44  20                 	db	32
   410   002F45  20                 	db	32
   411   002F46  20                 	db	32
   412   002F47  00                 	db	0
   413   002F48                     STR_13:
   414   002F48  20                 	db	32
   415   002F49  20                 	db	32
   416   002F4A  20                 	db	32
   417   002F4B  54                 	db	84	;'T'
   418   002F4C  72                 	db	114	;'r'
   419   002F4D  79                 	db	121	;'y'
   420   002F4E  20                 	db	32
   421   002F4F  41                 	db	65	;'A'
   422   002F50  67                 	db	103	;'g'
   423   002F51  61                 	db	97	;'a'
   424   002F52  69                 	db	105	;'i'
   425   002F53  6E                 	db	110	;'n'
   426   002F54  20                 	db	32
   427   002F55  20                 	db	32
   428   002F56  20                 	db	32
   429   002F57  20                 	db	32
   430   002F58  00                 	db	0
   431   002F59                     STR_10:
   432   002F59  20                 	db	32
   433   002F5A  45                 	db	69	;'E'
   434   002F5B  6E                 	db	110	;'n'
   435   002F5C  74                 	db	116	;'t'
   436   002F5D  65                 	db	101	;'e'
   437   002F5E  72                 	db	114	;'r'
   438   002F5F  20                 	db	32
   439   002F60  50                 	db	80	;'P'
   440   002F61  61                 	db	97	;'a'
   441   002F62  73                 	db	115	;'s'
   442   002F63  73                 	db	115	;'s'
   443   002F64  77                 	db	119	;'w'
   444   002F65  6F                 	db	111	;'o'
   445   002F66  72                 	db	114	;'r'
   446   002F67  64                 	db	100	;'d'
   447   002F68  20                 	db	32
   448   002F69  00                 	db	0
   449   002F6A                     STR_9:
   450   002F6A  20                 	db	32
   451   002F6B  20                 	db	32
   452   002F6C  54                 	db	84	;'T'
   453   002F6D  49                 	db	73	;'I'
   454   002F6E  4D                 	db	77	;'M'
   455   002F6F  45                 	db	69	;'E'
   456   002F70  20                 	db	32
   457   002F71  20                 	db	32
   458   002F72  20                 	db	32
   459   002F73  20                 	db	32
   460   002F74  45                 	db	69	;'E'
   461   002F75  56                 	db	86	;'V'
   462   002F76  20                 	db	32
   463   002F77  20                 	db	32
   464   002F78  53                 	db	83	;'S'
   465   002F79  50                 	db	80	;'P'
   466   002F7A  00                 	db	0
   467   002F7B                     STR_18:
   468   002F7B  53                 	db	83	;'S'
   469   002F7C  65                 	db	101	;'e'
   470   002F7D  74                 	db	116	;'t'
   471   002F7E  20                 	db	32
   472   002F7F  74                 	db	116	;'t'
   473   002F80  69                 	db	105	;'i'
   474   002F81  6D                 	db	109	;'m'
   475   002F82  65                 	db	101	;'e'
   476   002F83  20                 	db	32
   477   002F84  20                 	db	32
   478   002F85  20                 	db	32
   479   002F86  20                 	db	32
   480   002F87  20                 	db	32
   481   002F88  20                 	db	32
   482   002F89  20                 	db	32
   483   002F8A  00                 	db	0
   484   002F8B                     STR_16:
   485   002F8B  44                 	db	68	;'D'
   486   002F8C  6F                 	db	111	;'o'
   487   002F8D  77                 	db	119	;'w'
   488   002F8E  6E                 	db	110	;'n'
   489   002F8F  6C                 	db	108	;'l'
   490   002F90  6F                 	db	111	;'o'
   491   002F91  61                 	db	97	;'a'
   492   002F92  64                 	db	100	;'d'
   493   002F93  20                 	db	32
   494   002F94  6C                 	db	108	;'l'
   495   002F95  6F                 	db	111	;'o'
   496   002F96  67                 	db	103	;'g'
   497   002F97  20                 	db	32
   498   002F98  20                 	db	32
   499   002F99  20                 	db	32
   500   002F9A  00                 	db	0
   501   002F9B                     STR_11:
   502   002F9B  20                 	db	32
   503   002F9C  53                 	db	83	;'S'
   504   002F9D  79                 	db	121	;'y'
   505   002F9E  73                 	db	115	;'s'
   506   002F9F  74                 	db	116	;'t'
   507   002FA0  65                 	db	101	;'e'
   508   002FA1  6D                 	db	109	;'m'
   509   002FA2  20                 	db	32
   510   002FA3  42                 	db	66	;'B'
   511   002FA4  6C                 	db	108	;'l'
   512   002FA5  6F                 	db	111	;'o'
   513   002FA6  63                 	db	99	;'c'
   514   002FA7  6B                 	db	107	;'k'
   515   002FA8  65                 	db	101	;'e'
   516   002FA9  64                 	db	100	;'d'
   517   002FAA  00                 	db	0
   518   002FAB                     STR_15:
   519   002FAB  56                 	db	86	;'V'
   520   002FAC  69                 	db	105	;'i'
   521   002FAD  65                 	db	101	;'e'
   522   002FAE  77                 	db	119	;'w'
   523   002FAF  20                 	db	32
   524   002FB0  4C                 	db	76	;'L'
   525   002FB1  6F                 	db	111	;'o'
   526   002FB2  67                 	db	103	;'g'
   527   002FB3  20                 	db	32
   528   002FB4  20                 	db	32
   529   002FB5  20                 	db	32
   530   002FB6  20                 	db	32
   531   002FB7  20                 	db	32
   532   002FB8  20                 	db	32
   533   002FB9  00                 	db	0
   534   002FBA                     STR_19:
   535   002FBA  43                 	db	67	;'C'
   536   002FBB  68                 	db	104	;'h'
   537   002FBC  61                 	db	97	;'a'
   538   002FBD  6E                 	db	110	;'n'
   539   002FBE  67                 	db	103	;'g'
   540   002FBF  65                 	db	101	;'e'
   541   002FC0  20                 	db	32
   542   002FC1  50                 	db	80	;'P'
   543   002FC2  61                 	db	97	;'a'
   544   002FC3  73                 	db	115	;'s'
   545   002FC4  73                 	db	115	;'s'
   546   002FC5  77                 	db	119	;'w'
   547   002FC6  72                 	db	114	;'r'
   548   002FC7  64                 	db	100	;'d'
   549   002FC8  00                 	db	0
   550   002FC9                     STR_14:
   551   002FC9  20                 	db	32
   552   002FCA  43                 	db	67	;'C'
   553   002FCB  68                 	db	104	;'h'
   554   002FCC  61                 	db	97	;'a'
   555   002FCD  6E                 	db	110	;'n'
   556   002FCE  63                 	db	99	;'c'
   557   002FCF  65                 	db	101	;'e'
   558   002FD0  73                 	db	115	;'s'
   559   002FD1  20                 	db	32
   560   002FD2  4C                 	db	76	;'L'
   561   002FD3  65                 	db	101	;'e'
   562   002FD4  66                 	db	102	;'f'
   563   002FD5  74                 	db	116	;'t'
   564   002FD6  20                 	db	32
   565   002FD7  00                 	db	0
   566   002FD8                     STR_24:
   567   002FD8  20                 	db	32
   568   002FD9  53                 	db	83	;'S'
   569   002FDA  55                 	db	85	;'U'
   570   002FDB  43                 	db	67	;'C'
   571   002FDC  43                 	db	67	;'C'
   572   002FDD  45                 	db	69	;'E'
   573   002FDE  53                 	db	83	;'S'
   574   002FDF  53                 	db	83	;'S'
   575   002FE0  46                 	db	70	;'F'
   576   002FE1  55                 	db	85	;'U'
   577   002FE2  4C                 	db	76	;'L'
   578   002FE3  4C                 	db	76	;'L'
   579   002FE4  20                 	db	32
   580   002FE5  00                 	db	0
   581   002FE6                     STR_8:
   582   002FE6  43                 	db	67	;'C'
   583   002FE7  20                 	db	32
   584   002FE8  00                 	db	0
   585   002FE9                     STR_4:
   586   002FE9  47                 	db	71	;'G'
   587   002FEA  31                 	db	49	;'1'
   588   002FEB  00                 	db	0
   589   002FEC                     STR_5:
   590   002FEC  47                 	db	71	;'G'
   591   002FED  32                 	db	50	;'2'
   592   002FEE  00                 	db	0
   593   002FEF                     STR_6:
   594   002FEF  47                 	db	71	;'G'
   595   002FF0  33                 	db	51	;'3'
   596   002FF1  00                 	db	0
   597   002FF2                     STR_7:
   598   002FF2  47                 	db	71	;'G'
   599   002FF3  34                 	db	52	;'4'
   600   002FF4  00                 	db	0
   601   002FF5                     STR_3:
   602   002FF5  47                 	db	71	;'G'
   603   002FF6  4E                 	db	78	;'N'
   604   002FF7  00                 	db	0
   605   002FF8                     STR_1:
   606   002FF8  4F                 	db	79	;'O'
   607   002FF9  4E                 	db	78	;'N'
   608   002FFA  00                 	db	0
   609   002FFB                     STR_2:
   610   002FFB  47                 	db	71	;'G'
   611   002FFC  52                 	db	82	;'R'
   612   002FFD  00                 	db	0
   613   002FFE  00                 	db	0	; dummy byte at the end
   614   000000                     
   615                           ; #config settings
   616                           
   617                           	psect	cinit
   618   001C44                     __pcinit:
   619                           	callstack 0
   620   001C44                     start_initialization:
   621                           	callstack 0
   622   001C44                     __initialization:
   623                           	callstack 0
   624                           
   625                           ; Initialize objects allocated to BANK0 (26 bytes)
   626                           ; load TBLPTR registers with __pidataBANK0
   627   001C44  0E3A               	movlw	low __pidataBANK0
   628   001C46  6EF6               	movwf	tblptrl,c
   629   001C48  0E1F               	movlw	high __pidataBANK0
   630   001C4A  6EF7               	movwf	tblptrh,c
   631   001C4C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   632   001C4E  6EF8               	movwf	tblptru,c
   633   001C50  EE00  F09F         	lfsr	0,__pdataBANK0
   634   001C54  EE10 F01A          	lfsr	1,26
   635   001C58                     copy_data0:
   636   001C58  0009               	tblrd		*+
   637   001C5A  CFF5 FFEE          	movff	tablat,postinc0
   638   001C5E  50E5               	movf	postdec1,w,c
   639   001C60  50E1               	movf	fsr1l,w,c
   640   001C62  E1FA               	bnz	copy_data0
   641                           
   642                           ; Initialize objects allocated to COMRAM (3 bytes)
   643                           ; load TBLPTR registers with __pidataCOMRAM
   644   001C64  0E30               	movlw	low __pidataCOMRAM
   645   001C66  6EF6               	movwf	tblptrl,c
   646   001C68  0E20               	movlw	high __pidataCOMRAM
   647   001C6A  6EF7               	movwf	tblptrh,c
   648   001C6C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   649   001C6E  6EF8               	movwf	tblptru,c
   650   001C70  0009               	tblrd		*+	;fetch initializer
   651   001C72  CFF5 F05C          	movff	tablat,__pdataCOMRAM
   652   001C76  0009               	tblrd		*+	;fetch initializer
   653   001C78  CFF5 F05D          	movff	tablat,__pdataCOMRAM+1
   654   001C7C  0009               	tblrd		*+	;fetch initializer
   655   001C7E  CFF5 F05E          	movff	tablat,__pdataCOMRAM+2
   656                           
   657                           ; Clear objects allocated to BANK0 (63 bytes)
   658   001C82  EE00  F060         	lfsr	0,__pbssBANK0
   659   001C86  0E3F               	movlw	63
   660   001C88                     clear_0:
   661   001C88  6AEE               	clrf	postinc0,c
   662   001C8A  06E8               	decf	wreg,f,c
   663   001C8C  E1FD               	bnz	clear_0
   664                           
   665                           ; Clear objects allocated to COMRAM (35 bytes)
   666   001C8E  EE00  F039         	lfsr	0,__pbssCOMRAM
   667   001C92  0E23               	movlw	35
   668   001C94                     clear_1:
   669   001C94  6AEE               	clrf	postinc0,c
   670   001C96  06E8               	decf	wreg,f,c
   671   001C98  E1FD               	bnz	clear_1
   672   001C9A                     end_of_initialization:
   673                           	callstack 0
   674   001C9A                     __end_of__initialization:
   675                           	callstack 0
   676   001C9A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   677   001C9C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   678   001C9E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   679   001CA0  6EF8               	movwf	tblptru,c
   680   001CA2  0100               	movlb	0
   681   001CA4  EFFF  F005         	goto	_main	;jump to C main() function
   682                           
   683                           	psect	bssCOMRAM
   684   000039                     __pbssCOMRAM:
   685                           	callstack 0
   686   000039                     _clock_reg:
   687                           	callstack 0
   688   000039                     	ds	3
   689   00003C                     _del:
   690                           	callstack 0
   691   00003C                     	ds	2
   692   00003E                     _delay:
   693                           	callstack 0
   694   00003E                     	ds	2
   695   000040                     _key_time:
   696                           	callstack 0
   697   000040                     	ds	2
   698   000042                     _adc_reg_val:
   699                           	callstack 0
   700   000042                     	ds	2
   701   000044                     _reset_flag:
   702                           	callstack 0
   703   000044                     	ds	1
   704   000045                     _ind:
   705                           	callstack 0
   706   000045                     	ds	1
   707   000046                     _last:
   708                           	callstack 0
   709   000046                     	ds	1
   710   000047                     _var:
   711                           	callstack 0
   712   000047                     	ds	1
   713   000048                     _start:
   714                           	callstack 0
   715   000048                     	ds	1
   716   000049                     _apend_index:
   717                           	callstack 0
   718   000049                     	ds	1
   719   00004A                     _start_index:
   720                           	callstack 0
   721   00004A                     	ds	1
   722   00004B                     _overflow:
   723                           	callstack 0
   724   00004B                     	ds	1
   725   00004C                     _lap:
   726                           	callstack 0
   727   00004C                     	ds	1
   728   00004D                     _log_index:
   729                           	callstack 0
   730   00004D                     	ds	1
   731   00004E                     _star_index:
   732                           	callstack 0
   733   00004E                     	ds	1
   734   00004F                     _star_flag:
   735                           	callstack 0
   736   00004F                     	ds	1
   737   000050                     _index:
   738                           	callstack 0
   739   000050                     	ds	1
   740   000051                     _i:
   741                           	callstack 0
   742   000051                     	ds	1
   743   000052                     read_switches@key:
   744                           	callstack 0
   745   000052                     	ds	1
   746   000053                     _menu_f:
   747                           	callstack 0
   748   000053                     	ds	1
   749   000054                     _main_f:
   750                           	callstack 0
   751   000054                     	ds	1
   752   000055                     _pre_key:
   753                           	callstack 0
   754   000055                     	ds	1
   755   000056                     _key:
   756                           	callstack 0
   757   000056                     	ds	1
   758   000057                     _temp1:
   759                           	callstack 0
   760   000057                     	ds	5
   761                           
   762                           	psect	dataCOMRAM
   763   00005C                     __pdataCOMRAM:
   764                           	callstack 0
   765   00005C                     _chance:
   766                           	callstack 0
   767   00005C                     	ds	1
   768   00005D                     _tick_count:
   769                           	callstack 0
   770   00005D                     	ds	1
   771   00005E                     read_switches@once:
   772                           	callstack 0
   773   00005E                     	ds	1
   774                           
   775                           	psect	bssBANK0
   776   000060                     __pbssBANK0:
   777                           	callstack 0
   778   000060                     _download_array:
   779                           	callstack 0
   780   000060                     	ds	11
   781   00006B                     _view_array:
   782                           	callstack 0
   783   00006B                     	ds	11
   784   000076                     _store:
   785                           	callstack 0
   786   000076                     	ds	11
   787   000081                     isr@count:
   788                           	callstack 0
   789   000081                     	ds	4
   790   000085                     _press_delay:
   791                           	callstack 0
   792   000085                     	ds	2
   793   000087                     _time:
   794                           	callstack 0
   795   000087                     	ds	9
   796   000090                     _temp2:
   797                           	callstack 0
   798   000090                     	ds	5
   799   000095                     _temp_password:
   800                           	callstack 0
   801   000095                     	ds	5
   802   00009A                     _pass:
   803                           	callstack 0
   804   00009A                     	ds	5
   805                           
   806                           	psect	dataBANK0
   807   00009F                     __pdataBANK0:
   808                           	callstack 0
   809   00009F                     _events:
   810                           	callstack 0
   811   00009F                     	ds	16
   812   0000AF                     _logs:
   813                           	callstack 0
   814   0000AF                     	ds	10
   815                           
   816                           	psect	cstackCOMRAM
   817   000001                     __pcstackCOMRAM:
   818                           	callstack 0
   819   000001                     ?_read_adc:
   820                           	callstack 0
   821   000001                     ?_my_strcmp:
   822                           	callstack 0
   823   000001                     ?_my_strcp:
   824                           	callstack 0
   825   000001                     ?___awdiv:
   826                           	callstack 0
   827   000001                     ?___lwdiv:
   828                           	callstack 0
   829   000001                     ?___lwmod:
   830                           	callstack 0
   831   000001                     clcd_write@control_bit:
   832                           	callstack 0
   833   000001                     read_switches@detection_type:
   834                           	callstack 0
   835   000001                     my_strcmp@one:
   836                           	callstack 0
   837   000001                     i2c_write@data:
   838                           	callstack 0
   839   000001                     putch@byte:
   840                           	callstack 0
   841   000001                     my_strcp@one:
   842                           	callstack 0
   843   000001                     ___awdiv@dividend:
   844                           	callstack 0
   845   000001                     ___lwdiv@dividend:
   846                           	callstack 0
   847   000001                     ___lwmod@dividend:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x0
   851   000001                     	ds	1
   852   000002                     clcd_write@byte:
   853                           	callstack 0
   854   000002                     my_strcmp@two:
   855                           	callstack 0
   856   000002                     write_ds1307@data:
   857                           	callstack 0
   858   000002                     read_ds1307@address:
   859                           	callstack 0
   860   000002                     write_external_eeprom@data:
   861                           	callstack 0
   862   000002                     read_external_eeprom@address:
   863                           	callstack 0
   864   000002                     my_strcp@two:
   865                           	callstack 0
   866   000002                     puts@s:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x1
   870   000002                     	ds	1
   871   000003                     ??_read_adc:
   872   000003                     ??_init_clcd:
   873   000003                     ??_my_strcmp:
   874   000003                     ??_my_strcp:
   875   000003                     write_ds1307@address:
   876                           	callstack 0
   877   000003                     read_ds1307@data:
   878                           	callstack 0
   879   000003                     read_external_eeprom@data:
   880                           	callstack 0
   881   000003                     clcd_print@data:
   882                           	callstack 0
   883   000003                     write_external_eeprom@i:
   884                           	callstack 0
   885   000003                     ___awdiv@divisor:
   886                           	callstack 0
   887   000003                     ___lwdiv@divisor:
   888                           	callstack 0
   889   000003                     ___lwmod@divisor:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x2
   893   000003                     	ds	1
   894   000004                     init_ds1307@dummy:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0x3
   898   000004                     	ds	1
   899   000005                     clcd_print@addr:
   900                           	callstack 0
   901   000005                     write_external_eeprom@address:
   902                           	callstack 0
   903   000005                     ___awdiv@counter:
   904                           	callstack 0
   905   000005                     ___lwmod@counter:
   906                           	callstack 0
   907   000005                     read_adc@reg_val:
   908                           	callstack 0
   909   000005                     my_strcmp@last:
   910                           	callstack 0
   911   000005                     my_strcp@last:
   912                           	callstack 0
   913   000005                     ___lwdiv@quotient:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x4
   917   000005                     	ds	1
   918   000006                     ___awdiv@sign:
   919                           	callstack 0
   920   000006                     init_config@j:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x5
   924   000006                     	ds	1
   925   000007                     read_adc@channel:
   926                           	callstack 0
   927   000007                     ___lwdiv@counter:
   928                           	callstack 0
   929   000007                     my_strcmp@k:
   930                           	callstack 0
   931   000007                     my_strcp@k:
   932                           	callstack 0
   933   000007                     ___awdiv@quotient:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x6
   937   000007                     	ds	1
   938   000008                     ??_store_event:
   939   000008                     ?___xxtofl:
   940                           	callstack 0
   941   000008                     clear_log@key:
   942                           	callstack 0
   943   000008                     ___xxtofl@val:
   944                           	callstack 0
   945                           
   946                           ; 4 bytes @ 0x7
   947   000008                     	ds	1
   948   000009                     ?___awmod:
   949                           	callstack 0
   950   000009                     ___awmod@dividend:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x8
   954   000009                     	ds	1
   955   00000A                     store_event@k:
   956                           	callstack 0
   957                           
   958                           ; 1 bytes @ 0x9
   959   00000A                     	ds	1
   960   00000B                     ___awmod@divisor:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0xA
   964   00000B                     	ds	1
   965   00000C                     ??___xxtofl:
   966                           
   967                           ; 1 bytes @ 0xB
   968   00000C                     	ds	1
   969   00000D                     ___awmod@counter:
   970                           	callstack 0
   971                           
   972                           ; 1 bytes @ 0xC
   973   00000D                     	ds	1
   974   00000E                     ___awmod@sign:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0xD
   978   00000E                     	ds	1
   979   00000F                     clcd_putch@addr:
   980                           	callstack 0
   981   00000F                     download_log@j:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0xE
   985   00000F                     	ds	1
   986   000010                     clcd_putch@data:
   987                           	callstack 0
   988   000010                     ___xxtofl@sign:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0xF
   992   000010                     	ds	1
   993   000011                     ??_password:
   994   000011                     ??_view_log:
   995   000011                     ??_change_pass:
   996   000011                     menu@key:
   997                           	callstack 0
   998   000011                     ___xxtofl@exp:
   999                           	callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x10
  1002   000011                     	ds	1
  1003   000012                     ___xxtofl@arg:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x11
  1007   000012                     	ds	1
  1008   000013                     change_pass@delay:
  1009                           	callstack 0
  1010   000013                     password@wait:
  1011                           	callstack 0
  1012                           
  1013                           ; 8 bytes @ 0x12
  1014   000013                     	ds	3
  1015   000016                     ?___fldiv:
  1016                           	callstack 0
  1017   000016                     view_log@j:
  1018                           	callstack 0
  1019   000016                     ___fldiv@b:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x15
  1023   000016                     	ds	1
  1024   000017                     change_pass@key:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0x16
  1028   000017                     	ds	1
  1029   000018                     view_log@key:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x17
  1033   000018                     	ds	2
  1034   00001A                     ___fldiv@a:
  1035                           	callstack 0
  1036                           
  1037                           ; 4 bytes @ 0x19
  1038   00001A                     	ds	1
  1039   00001B                     password@delay:
  1040                           	callstack 0
  1041                           
  1042                           ; 4 bytes @ 0x1A
  1043   00001B                     	ds	3
  1044   00001E                     ??___fldiv:
  1045                           
  1046                           ; 1 bytes @ 0x1D
  1047   00001E                     	ds	1
  1048   00001F                     password@key:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x1E
  1052   00001F                     	ds	3
  1053   000022                     ___fldiv@rem:
  1054                           	callstack 0
  1055                           
  1056                           ; 4 bytes @ 0x21
  1057   000022                     	ds	4
  1058   000026                     ___fldiv@sign:
  1059                           	callstack 0
  1060                           
  1061                           ; 1 bytes @ 0x25
  1062   000026                     	ds	1
  1063   000027                     ___fldiv@new_exp:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x26
  1067   000027                     	ds	2
  1068   000029                     ___fldiv@grs:
  1069                           	callstack 0
  1070                           
  1071                           ; 4 bytes @ 0x28
  1072   000029                     	ds	4
  1073   00002D                     ___fldiv@bexp:
  1074                           	callstack 0
  1075                           
  1076                           ; 1 bytes @ 0x2C
  1077   00002D                     	ds	1
  1078   00002E                     ___fldiv@aexp:
  1079                           	callstack 0
  1080                           
  1081                           ; 1 bytes @ 0x2D
  1082   00002E                     	ds	1
  1083   00002F                     ?___fltol:
  1084                           	callstack 0
  1085   00002F                     ___fltol@f1:
  1086                           	callstack 0
  1087                           
  1088                           ; 4 bytes @ 0x2E
  1089   00002F                     	ds	4
  1090   000033                     ??___fltol:
  1091                           
  1092                           ; 1 bytes @ 0x32
  1093   000033                     	ds	4
  1094   000037                     ___fltol@sign1:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x36
  1098   000037                     	ds	1
  1099   000038                     ___fltol@exp1:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x37
  1103   000038                     	ds	1
  1104   000039                     
  1105                           ; 1 bytes @ 0x38
  1106 ;;
  1107 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1108 ;;
  1109 ;; *************** function _main *****************
  1110 ;; Defined at:
  1111 ;;		line 56 in file "main.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1125 ;;      Params:         0       0       0       0       0       0       0
  1126 ;;      Locals:         0       0       0       0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0       0       0
  1128 ;;      Totals:         0       0       0       0       0       0       0
  1129 ;;Total ram usage:        0 bytes
  1130 ;; Hardware stack levels required when called: 7
  1131 ;; This function calls:
  1132 ;;		___fldiv
  1133 ;;		___fltol
  1134 ;;		___xxtofl
  1135 ;;		_change_pass
  1136 ;;		_clcd_write
  1137 ;;		_clear_log
  1138 ;;		_dashboard
  1139 ;;		_download_log
  1140 ;;		_init_config
  1141 ;;		_menu
  1142 ;;		_password
  1143 ;;		_read_adc
  1144 ;;		_read_switches
  1145 ;;		_view_log
  1146 ;; This function is called by:
  1147 ;;		Startup code after reset
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text0
  1152   000BFE                     __ptext0:
  1153                           	callstack 0
  1154   000BFE                     _main:
  1155                           	callstack 24
  1156   000BFE                     
  1157                           ;main.c: 57:     init_config();
  1158   000BFE  EC6E  F00C         	call	_init_config	;wreg free
  1159   000C02                     l3747:
  1160                           
  1161                           ;main.c: 63:         key = read_switches(0);
  1162   000C02  0E00               	movlw	0
  1163   000C04  EC77  F00D         	call	_read_switches
  1164   000C08  6E56               	movwf	_key^0,c
  1165   000C0A                     
  1166                           ;main.c: 65:         if(key != 0xFF)
  1167   000C0A  2856               	incf	_key^0,w,c
  1168   000C0C  B4D8               	btfsc	status,2,c
  1169   000C0E  EF0B  F006         	goto	u3101
  1170   000C12  EF0D  F006         	goto	u3100
  1171   000C16                     u3101:
  1172   000C16  EF25  F006         	goto	l3761
  1173   000C1A                     u3100:
  1174   000C1A                     
  1175                           ;main.c: 66:         {;main.c: 67:             pre_key=key;
  1176   000C1A  C056  F055         	movff	_key,_pre_key
  1177   000C1E                     
  1178                           ;main.c: 68:             key_time++;
  1179   000C1E  4A40               	infsnz	_key_time^0,f,c
  1180   000C20  2A41               	incf	(_key_time+1)^0,f,c
  1181   000C22                     
  1182                           ;main.c: 69:             if(key_time == 500)
  1183   000C22  0EF4               	movlw	244
  1184   000C24  1840               	xorwf	_key_time^0,w,c
  1185   000C26  E106               	bnz	u3111
  1186   000C28  0441               	decf	(_key_time+1)^0,w,c
  1187   000C2A  A4D8               	btfss	status,2,c
  1188   000C2C  EF1A  F006         	goto	u3111
  1189   000C30  EF1C  F006         	goto	u3110
  1190   000C34                     u3111:
  1191   000C34  EF21  F006         	goto	l3759
  1192   000C38                     u3110:
  1193   000C38                     
  1194                           ;main.c: 70:             {;main.c: 71:                 key=key+10;
  1195   000C38  5056               	movf	_key^0,w,c
  1196   000C3A  0F0A               	addlw	10
  1197   000C3C  6E56               	movwf	_key^0,c
  1198                           
  1199                           ;main.c: 72:             }
  1200   000C3E  EF4E  F006         	goto	l3771
  1201   000C42                     l3759:
  1202                           
  1203                           ;main.c: 74:             {;main.c: 75:                 key=0;
  1204   000C42  0E00               	movlw	0
  1205   000C44  6E56               	movwf	_key^0,c
  1206   000C46  EF4E  F006         	goto	l3771
  1207   000C4A                     l3761:
  1208   000C4A  BE41               	btfsc	(_key_time+1)^0,7,c
  1209   000C4C  EF30  F006         	goto	u3121
  1210   000C50  5041               	movf	(_key_time+1)^0,w,c
  1211   000C52  E108               	bnz	u3120
  1212   000C54  0440               	decf	_key_time^0,w,c
  1213   000C56  A0D8               	btfss	status,0,c
  1214   000C58  EF30  F006         	goto	u3121
  1215   000C5C  EF32  F006         	goto	u3120
  1216   000C60                     u3121:
  1217   000C60  EF48  F006         	goto	l3769
  1218   000C64                     u3120:
  1219   000C64  BE41               	btfsc	(_key_time+1)^0,7,c
  1220   000C66  EF40  F006         	goto	u3130
  1221   000C6A  0EF4               	movlw	244
  1222   000C6C  5C40               	subwf	_key_time^0,w,c
  1223   000C6E  0E01               	movlw	1
  1224   000C70  5841               	subwfb	(_key_time+1)^0,w,c
  1225   000C72  B0D8               	btfsc	status,0,c
  1226   000C74  EF3E  F006         	goto	u3131
  1227   000C78  EF40  F006         	goto	u3130
  1228   000C7C                     u3131:
  1229   000C7C  EF48  F006         	goto	l3769
  1230   000C80                     u3130:
  1231   000C80                     
  1232                           ;main.c: 79:         {;main.c: 80:             key_time=0;
  1233   000C80  0E00               	movlw	0
  1234   000C82  6E41               	movwf	(_key_time+1)^0,c
  1235   000C84  0E00               	movlw	0
  1236   000C86  6E40               	movwf	_key_time^0,c
  1237   000C88                     
  1238                           ;main.c: 81:             key=pre_key;
  1239   000C88  C055  F056         	movff	_pre_key,_key
  1240                           
  1241                           ;main.c: 82:         }
  1242   000C8C  EF4E  F006         	goto	l3771
  1243   000C90                     l3769:
  1244                           
  1245                           ;main.c: 84:         {;main.c: 85:             key_time=0;
  1246   000C90  0E00               	movlw	0
  1247   000C92  6E41               	movwf	(_key_time+1)^0,c
  1248   000C94  0E00               	movlw	0
  1249   000C96  6E40               	movwf	_key_time^0,c
  1250                           
  1251                           ;main.c: 86:             key=0;
  1252   000C98  0E00               	movlw	0
  1253   000C9A  6E56               	movwf	_key^0,c
  1254   000C9C                     l3771:
  1255                           
  1256                           ;main.c: 90:         adc_reg_val = read_adc(0x04)/10.33;
  1257   000C9C  0EAE               	movlw	174
  1258   000C9E  6E1A               	movwf	___fldiv@a^0,c
  1259   000CA0  0E47               	movlw	71
  1260   000CA2  6E1B               	movwf	(___fldiv@a+1)^0,c
  1261   000CA4  0E25               	movlw	37
  1262   000CA6  6E1C               	movwf	(___fldiv@a+2)^0,c
  1263   000CA8  0E41               	movlw	65
  1264   000CAA  6E1D               	movwf	(___fldiv@a+3)^0,c
  1265   000CAC  0E04               	movlw	4
  1266   000CAE  ECD9  F00E         	call	_read_adc
  1267   000CB2  C001  F008         	movff	?_read_adc,___xxtofl@val
  1268   000CB6  C002  F009         	movff	?_read_adc+1,___xxtofl@val+1
  1269   000CBA  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1270   000CBC  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1271   000CBE  0E00               	movlw	0
  1272   000CC0  ECF3  F006         	call	___xxtofl
  1273   000CC4  C008  F016         	movff	?___xxtofl,___fldiv@b
  1274   000CC8  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  1275   000CCC  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  1276   000CD0  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  1277   000CD4  EC09  F000         	call	___fldiv	;wreg free
  1278   000CD8  C016  F02F         	movff	?___fldiv,___fltol@f1
  1279   000CDC  C017  F030         	movff	?___fldiv+1,___fltol@f1+1
  1280   000CE0  C018  F031         	movff	?___fldiv+2,___fltol@f1+2
  1281   000CE4  C019  F032         	movff	?___fldiv+3,___fltol@f1+3
  1282   000CE8  EC1F  F00A         	call	___fltol	;wreg free
  1283   000CEC  C02F  F042         	movff	?___fltol,_adc_reg_val
  1284   000CF0  C030  F043         	movff	?___fltol+1,_adc_reg_val+1
  1285   000CF4                     
  1286                           ;main.c: 92:         if (main_f == 0) {
  1287   000CF4  5054               	movf	_main_f^0,w,c
  1288   000CF6  A4D8               	btfss	status,2,c
  1289   000CF8  EF80  F006         	goto	u3141
  1290   000CFC  EF82  F006         	goto	u3140
  1291   000D00                     u3141:
  1292   000D00  EF96  F006         	goto	l3783
  1293   000D04                     u3140:
  1294   000D04                     
  1295                           ;main.c: 93:             dashboard();
  1296   000D04  EC0D  F009         	call	_dashboard	;wreg free
  1297   000D08                     
  1298                           ;main.c: 94:             if (key == 5) {
  1299   000D08  0E05               	movlw	5
  1300   000D0A  1856               	xorwf	_key^0,w,c
  1301   000D0C  A4D8               	btfss	status,2,c
  1302   000D0E  EF8B  F006         	goto	u3151
  1303   000D12  EF8D  F006         	goto	u3150
  1304   000D16                     u3151:
  1305   000D16  EF01  F006         	goto	l3747
  1306   000D1A                     u3150:
  1307   000D1A                     
  1308                           ;main.c: 95:                 clcd_write(0x01, 0);
  1309   000D1A  0E00               	movlw	0
  1310   000D1C  6E01               	movwf	clcd_write@control_bit^0,c
  1311   000D1E  0E01               	movlw	1
  1312   000D20  EC1C  F00F         	call	_clcd_write
  1313   000D24                     
  1314                           ;main.c: 96:                 main_f = 1;
  1315   000D24  0E01               	movlw	1
  1316   000D26  6E54               	movwf	_main_f^0,c
  1317   000D28  EF01  F006         	goto	l3747
  1318   000D2C                     l3783:
  1319   000D2C  0454               	decf	_main_f^0,w,c
  1320   000D2E  A4D8               	btfss	status,2,c
  1321   000D30  EF9C  F006         	goto	u3161
  1322   000D34  EF9E  F006         	goto	u3160
  1323   000D38                     u3161:
  1324   000D38  EFA3  F006         	goto	l3787
  1325   000D3C                     u3160:
  1326   000D3C                     
  1327                           ;main.c: 99:             password(key);
  1328   000D3C  5056               	movf	_key^0,w,c
  1329   000D3E  EC65  F003         	call	_password
  1330                           
  1331                           ;main.c: 100:         }
  1332   000D42  EF01  F006         	goto	l3747
  1333   000D46                     l3787:
  1334   000D46  0E02               	movlw	2
  1335   000D48  1854               	xorwf	_main_f^0,w,c
  1336   000D4A  A4D8               	btfss	status,2,c
  1337   000D4C  EFAA  F006         	goto	u3171
  1338   000D50  EFAC  F006         	goto	u3170
  1339   000D54                     u3171:
  1340   000D54  EFB1  F006         	goto	l3791
  1341   000D58                     u3170:
  1342   000D58                     
  1343                           ;main.c: 102:         {;main.c: 103:             menu(key);
  1344   000D58  5056               	movf	_key^0,w,c
  1345   000D5A  EC6F  F008         	call	_menu
  1346                           
  1347                           ;main.c: 104:         }
  1348   000D5E  EF01  F006         	goto	l3747
  1349   000D62                     l3791:
  1350   000D62  0E03               	movlw	3
  1351   000D64  1854               	xorwf	_main_f^0,w,c
  1352   000D66  A4D8               	btfss	status,2,c
  1353   000D68  EFB8  F006         	goto	u3181
  1354   000D6C  EFBA  F006         	goto	u3180
  1355   000D70                     u3181:
  1356   000D70  EF01  F006         	goto	l3747
  1357   000D74                     u3180:
  1358   000D74                     
  1359                           ;main.c: 106:         {;main.c: 108:             if(menu_f == 0)
  1360   000D74  5053               	movf	_menu_f^0,w,c
  1361   000D76  A4D8               	btfss	status,2,c
  1362   000D78  EFC0  F006         	goto	u3191
  1363   000D7C  EFC2  F006         	goto	u3190
  1364   000D80                     u3191:
  1365   000D80  EFC7  F006         	goto	l3797
  1366   000D84                     u3190:
  1367   000D84                     
  1368                           ;main.c: 109:             {;main.c: 110:                 view_log(key);
  1369   000D84  5056               	movf	_key^0,w,c
  1370   000D86  ECD9  F004         	call	_view_log
  1371                           
  1372                           ;main.c: 111:             }
  1373   000D8A  EF01  F006         	goto	l3747
  1374   000D8E                     l3797:
  1375   000D8E  0E02               	movlw	2
  1376   000D90  1853               	xorwf	_menu_f^0,w,c
  1377   000D92  A4D8               	btfss	status,2,c
  1378   000D94  EFCE  F006         	goto	u3201
  1379   000D98  EFD0  F006         	goto	u3200
  1380   000D9C                     u3201:
  1381   000D9C  EFD5  F006         	goto	l3801
  1382   000DA0                     u3200:
  1383   000DA0                     
  1384                           ;main.c: 114:             {;main.c: 115:                 clear_log(key);
  1385   000DA0  5056               	movf	_key^0,w,c
  1386   000DA2  EC20  F00C         	call	_clear_log
  1387                           
  1388                           ;main.c: 116:             }
  1389   000DA6  EF01  F006         	goto	l3747
  1390   000DAA                     l3801:
  1391   000DAA  0453               	decf	_menu_f^0,w,c
  1392   000DAC  A4D8               	btfss	status,2,c
  1393   000DAE  EFDB  F006         	goto	u3211
  1394   000DB2  EFDD  F006         	goto	u3210
  1395   000DB6                     u3211:
  1396   000DB6  EFE1  F006         	goto	l3805
  1397   000DBA                     u3210:
  1398   000DBA                     
  1399                           ;main.c: 118:             {;main.c: 119:                  download_log();
  1400   000DBA  ECCD  F007         	call	_download_log	;wreg free
  1401                           
  1402                           ;main.c: 120:             }
  1403   000DBE  EF01  F006         	goto	l3747
  1404   000DC2                     l3805:
  1405   000DC2  0E04               	movlw	4
  1406   000DC4  1853               	xorwf	_menu_f^0,w,c
  1407   000DC6  A4D8               	btfss	status,2,c
  1408   000DC8  EFE8  F006         	goto	u3221
  1409   000DCC  EFEA  F006         	goto	u3220
  1410   000DD0                     u3221:
  1411   000DD0  EFEF  F006         	goto	l152
  1412   000DD4                     u3220:
  1413   000DD4                     
  1414                           ;main.c: 122:             {;main.c: 123:                change_pass(key);
  1415   000DD4  5056               	movf	_key^0,w,c
  1416   000DD6  ECD6  F001         	call	_change_pass
  1417   000DDA  EF01  F006         	goto	l3747
  1418   000DDE                     l152:
  1419   000DDE  EF01  F006         	goto	l3747
  1420   000DE2  EF07  F000         	goto	start
  1421   000DE6                     __end_of_main:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function _view_log *****************
  1425 ;; Defined at:
  1426 ;;		line 24 in file "view_log.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  key             1    wreg     unsigned char 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  key             1   23[COMRAM] unsigned char 
  1431 ;;  j               2   21[COMRAM] int 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1441 ;;      Params:         0       0       0       0       0       0       0
  1442 ;;      Locals:         3       0       0       0       0       0       0
  1443 ;;      Temps:          5       0       0       0       0       0       0
  1444 ;;      Totals:         8       0       0       0       0       0       0
  1445 ;;Total ram usage:        8 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 5
  1448 ;; This function calls:
  1449 ;;		___awmod
  1450 ;;		___lwdiv
  1451 ;;		___lwmod
  1452 ;;		_clcd_print
  1453 ;;		_clcd_putch
  1454 ;;		_read_external_eeprom
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text1
  1461   0009B2                     __ptext1:
  1462                           	callstack 0
  1463   0009B2                     _view_log:
  1464                           	callstack 25
  1465                           
  1466                           ;incstack = 0
  1467                           ;view_log@key stored from wreg
  1468   0009B2  6E18               	movwf	view_log@key^0,c
  1469   0009B4                     
  1470                           ;view_log.c: 27:     if (key == 16) {
  1471   0009B4  0E10               	movlw	16
  1472   0009B6  1818               	xorwf	view_log@key^0,w,c
  1473   0009B8  A4D8               	btfss	status,2,c
  1474   0009BA  EFE1  F004         	goto	u2371
  1475   0009BE  EFE3  F004         	goto	u2370
  1476   0009C2                     u2371:
  1477   0009C2  EFE5  F004         	goto	l523
  1478   0009C6                     u2370:
  1479   0009C6                     
  1480                           ;view_log.c: 28:         main_f = 2;
  1481   0009C6  0E02               	movlw	2
  1482   0009C8  6E54               	movwf	_main_f^0,c
  1483   0009CA                     l523:
  1484                           
  1485                           ;view_log.c: 32:     if (overflow == 0) {
  1486   0009CA  504B               	movf	_overflow^0,w,c
  1487   0009CC  A4D8               	btfss	status,2,c
  1488   0009CE  EFEB  F004         	goto	u2381
  1489   0009D2  EFED  F004         	goto	u2380
  1490   0009D6                     u2381:
  1491   0009D6  EF52  F005         	goto	l3279
  1492   0009DA                     u2380:
  1493   0009DA                     
  1494                           ;view_log.c: 33:         start_index = 0;
  1495   0009DA  0E00               	movlw	0
  1496   0009DC  6E4A               	movwf	_start_index^0,c
  1497   0009DE                     
  1498                           ;view_log.c: 35:         if (key == 5 && apend_index < lap - 1) {
  1499   0009DE  0E05               	movlw	5
  1500   0009E0  1818               	xorwf	view_log@key^0,w,c
  1501   0009E2  A4D8               	btfss	status,2,c
  1502   0009E4  EFF6  F004         	goto	u2391
  1503   0009E8  EFF8  F004         	goto	u2390
  1504   0009EC                     u2391:
  1505   0009EC  EF11  F005         	goto	l3253
  1506   0009F0                     u2390:
  1507   0009F0  0EFF               	movlw	255
  1508   0009F2  244C               	addwf	_lap^0,w,c
  1509   0009F4  6E11               	movwf	??_view_log^0,c
  1510   0009F6  6A12               	clrf	(??_view_log+1)^0,c
  1511   0009F8  0EFF               	movlw	255
  1512   0009FA  2212               	addwfc	(??_view_log+1)^0,f,c
  1513   0009FC  5049               	movf	_apend_index^0,w,c
  1514   0009FE  6E13               	movwf	(??_view_log+2)^0,c
  1515   000A00  6A14               	clrf	(??_view_log+3)^0,c
  1516   000A02  5011               	movf	??_view_log^0,w,c
  1517   000A04  5C13               	subwf	(??_view_log+2)^0,w,c
  1518   000A06  5014               	movf	(??_view_log+3)^0,w,c
  1519   000A08  0A80               	xorlw	128
  1520   000A0A  6E15               	movwf	(??_view_log+4)^0,c
  1521   000A0C  5012               	movf	(??_view_log+1)^0,w,c
  1522   000A0E  0A80               	xorlw	128
  1523   000A10  5815               	subwfb	(??_view_log+4)^0,w,c
  1524   000A12  B0D8               	btfsc	status,0,c
  1525   000A14  EF0E  F005         	goto	u2401
  1526   000A18  EF10  F005         	goto	u2400
  1527   000A1C                     u2401:
  1528   000A1C  EF11  F005         	goto	l3253
  1529   000A20                     u2400:
  1530   000A20                     
  1531                           ;view_log.c: 36:             apend_index++;
  1532   000A20  2A49               	incf	_apend_index^0,f,c
  1533   000A22                     l3253:
  1534                           
  1535                           ;view_log.c: 39:         if (key == 6 && apend_index > 0) {
  1536   000A22  0E06               	movlw	6
  1537   000A24  1818               	xorwf	view_log@key^0,w,c
  1538   000A26  A4D8               	btfss	status,2,c
  1539   000A28  EF18  F005         	goto	u2411
  1540   000A2C  EF1A  F005         	goto	u2410
  1541   000A30                     u2411:
  1542   000A30  EF23  F005         	goto	l3259
  1543   000A34                     u2410:
  1544   000A34  5049               	movf	_apend_index^0,w,c
  1545   000A36  B4D8               	btfsc	status,2,c
  1546   000A38  EF20  F005         	goto	u2421
  1547   000A3C  EF22  F005         	goto	u2420
  1548   000A40                     u2421:
  1549   000A40  EF23  F005         	goto	l3259
  1550   000A44                     u2420:
  1551   000A44                     
  1552                           ;view_log.c: 40:             apend_index--;
  1553   000A44  0649               	decf	_apend_index^0,f,c
  1554   000A46                     l3259:
  1555                           
  1556                           ;view_log.c: 45:         store[0] = time[0];
  1557   000A46  C087  F076         	movff	_time,_store
  1558   000A4A                     
  1559                           ;view_log.c: 46:         store[1] = time[1];
  1560   000A4A  C088  F077         	movff	_time+1,_store+1
  1561   000A4E                     
  1562                           ;view_log.c: 47:         store[2] = time[3];
  1563   000A4E  C08A  F078         	movff	_time+3,_store+2
  1564   000A52                     
  1565                           ;view_log.c: 48:         store[3] = time[4];
  1566   000A52  C08B  F079         	movff	_time+4,_store+3
  1567   000A56                     
  1568                           ;view_log.c: 49:         store[4] = time[6];
  1569   000A56  C08D  F07A         	movff	_time+6,_store+4
  1570   000A5A                     
  1571                           ;view_log.c: 50:         store[5] = time[7];
  1572   000A5A  C08E  F07B         	movff	_time+7,_store+5
  1573   000A5E                     
  1574                           ;view_log.c: 53:         store[6] = 'C';
  1575   000A5E  0E43               	movlw	67
  1576   000A60  0100               	movlb	0	; () banked
  1577   000A62  6F7C               	movwf	(_store+6)& (0+255),b
  1578   000A64                     
  1579                           ; BSR set to: 0
  1580                           ;view_log.c: 54:         store[7] = 'L';
  1581   000A64  0E4C               	movlw	76
  1582   000A66  6F7D               	movwf	(_store+7)& (0+255),b
  1583   000A68                     
  1584                           ; BSR set to: 0
  1585                           ;view_log.c: 58:         store[8] = (adc_reg_val / 10) + 48;
  1586   000A68  C042  F001         	movff	_adc_reg_val,___lwdiv@dividend
  1587   000A6C  C043  F002         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  1588   000A70  0E00               	movlw	0
  1589   000A72  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1590   000A74  0E0A               	movlw	10
  1591   000A76  6E03               	movwf	___lwdiv@divisor^0,c
  1592   000A78  ECB2  F00D         	call	___lwdiv	;wreg free
  1593   000A7C  5001               	movf	?___lwdiv^0,w,c
  1594   000A7E  0F30               	addlw	48
  1595   000A80  0100               	movlb	0	; () banked
  1596   000A82  6F7E               	movwf	(_store+8)& (0+255),b
  1597   000A84                     
  1598                           ; BSR set to: 0
  1599                           ;view_log.c: 59:         store[9] = (adc_reg_val % 10) + 48;
  1600   000A84  C042  F001         	movff	_adc_reg_val,___lwmod@dividend
  1601   000A88  C043  F002         	movff	_adc_reg_val+1,___lwmod@dividend+1
  1602   000A8C  0E00               	movlw	0
  1603   000A8E  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1604   000A90  0E0A               	movlw	10
  1605   000A92  6E03               	movwf	___lwmod@divisor^0,c
  1606   000A94  EC54  F00E         	call	___lwmod	;wreg free
  1607   000A98  5001               	movf	?___lwmod^0,w,c
  1608   000A9A  0F30               	addlw	48
  1609   000A9C  0100               	movlb	0	; () banked
  1610   000A9E  6F7F               	movwf	(_store+9)& (0+255),b
  1611                           
  1612                           ;view_log.c: 62:     } else if (overflow == 1) {
  1613   000AA0  EF80  F005         	goto	l3295
  1614   000AA4                     l3279:
  1615   000AA4  044B               	decf	_overflow^0,w,c
  1616   000AA6  A4D8               	btfss	status,2,c
  1617   000AA8  EF58  F005         	goto	u2431
  1618   000AAC  EF5A  F005         	goto	u2430
  1619   000AB0                     u2431:
  1620   000AB0  EF80  F005         	goto	l3295
  1621   000AB4                     u2430:
  1622   000AB4                     
  1623                           ;view_log.c: 63:         start_index = lap;
  1624   000AB4  C04C  F04A         	movff	_lap,_start_index
  1625   000AB8                     
  1626                           ;view_log.c: 65:         if (key == 5 && apend_index < 9) {
  1627   000AB8  0E05               	movlw	5
  1628   000ABA  1818               	xorwf	view_log@key^0,w,c
  1629   000ABC  A4D8               	btfss	status,2,c
  1630   000ABE  EF63  F005         	goto	u2441
  1631   000AC2  EF65  F005         	goto	u2440
  1632   000AC6                     u2441:
  1633   000AC6  EF6E  F005         	goto	l3289
  1634   000ACA                     u2440:
  1635   000ACA  0E09               	movlw	9
  1636   000ACC  6049               	cpfslt	_apend_index^0,c
  1637   000ACE  EF6B  F005         	goto	u2451
  1638   000AD2  EF6D  F005         	goto	u2450
  1639   000AD6                     u2451:
  1640   000AD6  EF6E  F005         	goto	l3289
  1641   000ADA                     u2450:
  1642   000ADA                     
  1643                           ;view_log.c: 66:             apend_index++;
  1644   000ADA  2A49               	incf	_apend_index^0,f,c
  1645   000ADC                     l3289:
  1646                           
  1647                           ;view_log.c: 68:         if (key == 6 && apend_index > 0) {
  1648   000ADC  0E06               	movlw	6
  1649   000ADE  1818               	xorwf	view_log@key^0,w,c
  1650   000AE0  A4D8               	btfss	status,2,c
  1651   000AE2  EF75  F005         	goto	u2461
  1652   000AE6  EF77  F005         	goto	u2460
  1653   000AEA                     u2461:
  1654   000AEA  EF80  F005         	goto	l3295
  1655   000AEE                     u2460:
  1656   000AEE  5049               	movf	_apend_index^0,w,c
  1657   000AF0  B4D8               	btfsc	status,2,c
  1658   000AF2  EF7D  F005         	goto	u2471
  1659   000AF6  EF7F  F005         	goto	u2470
  1660   000AFA                     u2471:
  1661   000AFA  EF80  F005         	goto	l3295
  1662   000AFE                     u2470:
  1663   000AFE                     
  1664                           ;view_log.c: 69:             apend_index--;
  1665   000AFE  0649               	decf	_apend_index^0,f,c
  1666   000B00                     l3295:
  1667                           
  1668                           ;view_log.c: 76:     for (int j = 0; j < 10; j++) {
  1669   000B00  0E00               	movlw	0
  1670   000B02  6E17               	movwf	(view_log@j+1)^0,c
  1671   000B04  0E00               	movlw	0
  1672   000B06  6E16               	movwf	view_log@j^0,c
  1673   000B08                     l3301:
  1674                           
  1675                           ;view_log.c: 77:         view_array[j] = read_external_eeprom((start_index + apend_index
      +                          ) % 10 * 10 + j);
  1676   000B08  5016               	movf	view_log@j^0,w,c
  1677   000B0A  0F6B               	addlw	low _view_array
  1678   000B0C  6ED9               	movwf	fsr2l,c
  1679   000B0E  6ADA               	clrf	fsr2h,c
  1680   000B10  504A               	movf	_start_index^0,w,c
  1681   000B12  2449               	addwf	_apend_index^0,w,c
  1682   000B14  6E09               	movwf	___awmod@dividend^0,c
  1683   000B16  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1684   000B18  360A               	rlcf	(___awmod@dividend+1)^0,f,c
  1685   000B1A  0E00               	movlw	0
  1686   000B1C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1687   000B1E  0E0A               	movlw	10
  1688   000B20  6E0B               	movwf	___awmod@divisor^0,c
  1689   000B22  EC74  F00B         	call	___awmod	;wreg free
  1690   000B26  5009               	movf	?___awmod^0,w,c
  1691   000B28  0D0A               	mullw	10
  1692   000B2A  50F3               	movf	243,w,c
  1693   000B2C  2416               	addwf	view_log@j^0,w,c
  1694   000B2E  EC54  F00F         	call	_read_external_eeprom
  1695   000B32  6EDF               	movwf	indf2,c
  1696   000B34                     
  1697                           ;view_log.c: 78:     }
  1698   000B34  4A16               	infsnz	view_log@j^0,f,c
  1699   000B36  2A17               	incf	(view_log@j+1)^0,f,c
  1700   000B38  BE17               	btfsc	(view_log@j+1)^0,7,c
  1701   000B3A  EFA8  F005         	goto	u2481
  1702   000B3E  5017               	movf	(view_log@j+1)^0,w,c
  1703   000B40  E109               	bnz	u2480
  1704   000B42  0E0A               	movlw	10
  1705   000B44  5C16               	subwf	view_log@j^0,w,c
  1706   000B46  A0D8               	btfss	status,0,c
  1707   000B48  EFA8  F005         	goto	u2481
  1708   000B4C  EFAA  F005         	goto	u2480
  1709   000B50                     u2481:
  1710   000B50  EF84  F005         	goto	l3301
  1711   000B54                     u2480:
  1712   000B54                     
  1713                           ;view_log.c: 81:     clcd_print("Entered View Log", (0x80 + (0)));
  1714   000B54  0E26               	movlw	low STR_20
  1715   000B56  6E03               	movwf	clcd_print@data^0,c
  1716   000B58  0E2F               	movlw	high STR_20
  1717   000B5A  6E04               	movwf	(clcd_print@data+1)^0,c
  1718   000B5C  0E80               	movlw	128
  1719   000B5E  6E05               	movwf	clcd_print@addr^0,c
  1720   000B60  ECEC  F00D         	call	_clcd_print	;wreg free
  1721   000B64                     
  1722                           ;view_log.c: 82:     clcd_putch('0' + apend_index, (0xC0 + (0)));
  1723   000B64  0EC0               	movlw	192
  1724   000B66  6E0F               	movwf	clcd_putch@addr^0,c
  1725   000B68  5049               	movf	_apend_index^0,w,c
  1726   000B6A  0F30               	addlw	48
  1727   000B6C  ECAA  F00F         	call	_clcd_putch
  1728   000B70                     
  1729                           ;view_log.c: 85:     clcd_putch(view_array[0], (0xC0 + (2)));
  1730   000B70  0EC2               	movlw	194
  1731   000B72  6E0F               	movwf	clcd_putch@addr^0,c
  1732   000B74  0100               	movlb	0	; () banked
  1733   000B76  516B               	movf	_view_array& (0+255),w,b
  1734   000B78  ECAA  F00F         	call	_clcd_putch
  1735   000B7C                     
  1736                           ;view_log.c: 86:     clcd_putch(view_array[1], (0xC0 + (3)));
  1737   000B7C  0EC3               	movlw	195
  1738   000B7E  6E0F               	movwf	clcd_putch@addr^0,c
  1739   000B80  0100               	movlb	0	; () banked
  1740   000B82  516C               	movf	(_view_array+1)& (0+255),w,b
  1741   000B84  ECAA  F00F         	call	_clcd_putch
  1742   000B88                     
  1743                           ;view_log.c: 87:     clcd_putch(':', (0xC0 + (4)));
  1744   000B88  0EC4               	movlw	196
  1745   000B8A  6E0F               	movwf	clcd_putch@addr^0,c
  1746   000B8C  0E3A               	movlw	58
  1747   000B8E  ECAA  F00F         	call	_clcd_putch
  1748   000B92                     
  1749                           ;view_log.c: 89:     clcd_putch(view_array[2], (0xC0 + (5)));
  1750   000B92  0EC5               	movlw	197
  1751   000B94  6E0F               	movwf	clcd_putch@addr^0,c
  1752   000B96  0100               	movlb	0	; () banked
  1753   000B98  516D               	movf	(_view_array+2)& (0+255),w,b
  1754   000B9A  ECAA  F00F         	call	_clcd_putch
  1755   000B9E                     
  1756                           ;view_log.c: 90:     clcd_putch(view_array[3], (0xC0 + (6)));
  1757   000B9E  0EC6               	movlw	198
  1758   000BA0  6E0F               	movwf	clcd_putch@addr^0,c
  1759   000BA2  0100               	movlb	0	; () banked
  1760   000BA4  516E               	movf	(_view_array+3)& (0+255),w,b
  1761   000BA6  ECAA  F00F         	call	_clcd_putch
  1762   000BAA                     
  1763                           ;view_log.c: 91:     clcd_putch(':', (0xC0 + (7)));
  1764   000BAA  0EC7               	movlw	199
  1765   000BAC  6E0F               	movwf	clcd_putch@addr^0,c
  1766   000BAE  0E3A               	movlw	58
  1767   000BB0  ECAA  F00F         	call	_clcd_putch
  1768   000BB4                     
  1769                           ;view_log.c: 93:     clcd_putch(view_array[4], (0xC0 + (8)));
  1770   000BB4  0EC8               	movlw	200
  1771   000BB6  6E0F               	movwf	clcd_putch@addr^0,c
  1772   000BB8  0100               	movlb	0	; () banked
  1773   000BBA  516F               	movf	(_view_array+4)& (0+255),w,b
  1774   000BBC  ECAA  F00F         	call	_clcd_putch
  1775   000BC0                     
  1776                           ;view_log.c: 94:     clcd_putch(view_array[5], (0xC0 + (9)));
  1777   000BC0  0EC9               	movlw	201
  1778   000BC2  6E0F               	movwf	clcd_putch@addr^0,c
  1779   000BC4  0100               	movlb	0	; () banked
  1780   000BC6  5170               	movf	(_view_array+5)& (0+255),w,b
  1781   000BC8  ECAA  F00F         	call	_clcd_putch
  1782   000BCC                     
  1783                           ;view_log.c: 97:     clcd_putch(view_array[6], (0xC0 + (11)));
  1784   000BCC  0ECB               	movlw	203
  1785   000BCE  6E0F               	movwf	clcd_putch@addr^0,c
  1786   000BD0  0100               	movlb	0	; () banked
  1787   000BD2  5171               	movf	(_view_array+6)& (0+255),w,b
  1788   000BD4  ECAA  F00F         	call	_clcd_putch
  1789   000BD8                     
  1790                           ;view_log.c: 98:     clcd_putch(view_array[7], (0xC0 + (12)));
  1791   000BD8  0ECC               	movlw	204
  1792   000BDA  6E0F               	movwf	clcd_putch@addr^0,c
  1793   000BDC  0100               	movlb	0	; () banked
  1794   000BDE  5172               	movf	(_view_array+7)& (0+255),w,b
  1795   000BE0  ECAA  F00F         	call	_clcd_putch
  1796   000BE4                     
  1797                           ;view_log.c: 101:     clcd_putch(view_array[8], (0xC0 + (14)));
  1798   000BE4  0ECE               	movlw	206
  1799   000BE6  6E0F               	movwf	clcd_putch@addr^0,c
  1800   000BE8  0100               	movlb	0	; () banked
  1801   000BEA  5173               	movf	(_view_array+8)& (0+255),w,b
  1802   000BEC  ECAA  F00F         	call	_clcd_putch
  1803   000BF0                     
  1804                           ;view_log.c: 102:     clcd_putch(view_array[9], (0xC0 + (15)));
  1805   000BF0  0ECF               	movlw	207
  1806   000BF2  6E0F               	movwf	clcd_putch@addr^0,c
  1807   000BF4  0100               	movlb	0	; () banked
  1808   000BF6  5174               	movf	(_view_array+9)& (0+255),w,b
  1809   000BF8  ECAA  F00F         	call	_clcd_putch
  1810   000BFC  0012               	return		;funcret
  1811   000BFE                     __end_of_view_log:
  1812                           	callstack 0
  1813                           
  1814 ;; *************** function _read_switches *****************
  1815 ;; Defined at:
  1816 ;;		line 89 in file "matrix_keypad.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  detection_ty    1    wreg     unsigned char 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;  detection_ty    1    0[COMRAM] unsigned char 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      unsigned char 
  1823 ;; Registers used:
  1824 ;;		wreg, status,2, status,0, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1830 ;;      Params:         0       0       0       0       0       0       0
  1831 ;;      Locals:         1       0       0       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0       0       0
  1833 ;;      Totals:         1       0       0       0       0       0       0
  1834 ;;Total ram usage:        1 bytes
  1835 ;; Hardware stack levels used: 1
  1836 ;; Hardware stack levels required when called: 2
  1837 ;; This function calls:
  1838 ;;		_scan_key
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text2
  1845   001AEE                     __ptext2:
  1846                           	callstack 0
  1847   001AEE                     _read_switches:
  1848                           	callstack 28
  1849                           
  1850                           ;incstack = 0
  1851                           ;read_switches@detection_type stored from wreg
  1852   001AEE  6E01               	movwf	read_switches@detection_type^0,c
  1853   001AF0                     
  1854                           ;matrix_keypad.c: 89: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 90: {;matrix_keypad.c: 91:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 93:  if (detection_type == 1)
  1855   001AF0  0401               	decf	read_switches@detection_type^0,w,c
  1856   001AF2  A4D8               	btfss	status,2,c
  1857   001AF4  EF7E  F00D         	goto	u501
  1858   001AF8  EF80  F00D         	goto	u500
  1859   001AFC                     u501:
  1860   001AFC  EFA4  F00D         	goto	l1877
  1861   001B00                     u500:
  1862   001B00                     
  1863                           ;matrix_keypad.c: 94:  {;matrix_keypad.c: 95:   key = scan_key();
  1864   001B00  EC9B  F009         	call	_scan_key	;wreg free
  1865   001B04  6E52               	movwf	read_switches@key^0,c
  1866   001B06                     
  1867                           ;matrix_keypad.c: 96:   if(key != 0xFF && once )
  1868   001B06  2852               	incf	read_switches@key^0,w,c
  1869   001B08  B4D8               	btfsc	status,2,c
  1870   001B0A  EF89  F00D         	goto	u511
  1871   001B0E  EF8B  F00D         	goto	u510
  1872   001B12                     u511:
  1873   001B12  EF98  F00D         	goto	l1873
  1874   001B16                     u510:
  1875   001B16  505E               	movf	read_switches@once^0,w,c
  1876   001B18  B4D8               	btfsc	status,2,c
  1877   001B1A  EF91  F00D         	goto	u521
  1878   001B1E  EF93  F00D         	goto	u520
  1879   001B22                     u521:
  1880   001B22  EF98  F00D         	goto	l1873
  1881   001B26                     u520:
  1882   001B26                     
  1883                           ;matrix_keypad.c: 97:   {;matrix_keypad.c: 98:    once = 0;
  1884   001B26  0E00               	movlw	0
  1885   001B28  6E5E               	movwf	read_switches@once^0,c
  1886                           
  1887                           ;matrix_keypad.c: 99:    return key;
  1888   001B2A  5052               	movf	read_switches@key^0,w,c
  1889   001B2C  EFB1  F00D         	goto	l206
  1890   001B30                     l1873:
  1891   001B30  2852               	incf	read_switches@key^0,w,c
  1892   001B32  A4D8               	btfss	status,2,c
  1893   001B34  EF9E  F00D         	goto	u531
  1894   001B38  EFA0  F00D         	goto	u530
  1895   001B3C                     u531:
  1896   001B3C  EFB0  F00D         	goto	l1883
  1897   001B40                     u530:
  1898   001B40                     
  1899                           ;matrix_keypad.c: 102:   {;matrix_keypad.c: 103:    once = 1;
  1900   001B40  0E01               	movlw	1
  1901   001B42  6E5E               	movwf	read_switches@once^0,c
  1902   001B44  EFB0  F00D         	goto	l1883
  1903   001B48                     l1877:
  1904   001B48  5001               	movf	read_switches@detection_type^0,w,c
  1905   001B4A  A4D8               	btfss	status,2,c
  1906   001B4C  EFAA  F00D         	goto	u541
  1907   001B50  EFAC  F00D         	goto	u540
  1908   001B54                     u541:
  1909   001B54  EFB0  F00D         	goto	l1883
  1910   001B58                     u540:
  1911   001B58                     
  1912                           ;matrix_keypad.c: 107:  {;matrix_keypad.c: 108:   return scan_key();
  1913   001B58  EC9B  F009         	call	_scan_key	;wreg free
  1914   001B5C  EFB1  F00D         	goto	l206
  1915   001B60                     l1883:
  1916                           
  1917                           ;matrix_keypad.c: 111:  return 0xFF;
  1918   001B60  0EFF               	movlw	255
  1919   001B62                     l206:
  1920   001B62  0012               	return		;funcret
  1921   001B64                     __end_of_read_switches:
  1922                           	callstack 0
  1923                           
  1924 ;; *************** function _scan_key *****************
  1925 ;; Defined at:
  1926 ;;		line 19 in file "matrix_keypad.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      unsigned char 
  1933 ;; Registers used:
  1934 ;;		wreg
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1940 ;;      Params:         0       0       0       0       0       0       0
  1941 ;;      Locals:         0       0       0       0       0       0       0
  1942 ;;      Temps:          0       0       0       0       0       0       0
  1943 ;;      Totals:         0       0       0       0       0       0       0
  1944 ;;Total ram usage:        0 bytes
  1945 ;; Hardware stack levels used: 1
  1946 ;; Hardware stack levels required when called: 1
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_read_switches
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text3
  1955   001336                     __ptext3:
  1956                           	callstack 0
  1957   001336                     _scan_key:
  1958                           	callstack 28
  1959   001336                     
  1960                           ;matrix_keypad.c: 21:  PORTBbits.RB5 = 0;
  1961   001336  9A81               	bcf	129,5,c	;volatile
  1962                           
  1963                           ;matrix_keypad.c: 22:  PORTBbits.RB6 = 1;
  1964   001338  8C81               	bsf	129,6,c	;volatile
  1965                           
  1966                           ;matrix_keypad.c: 23:  PORTBbits.RB7 = 1;
  1967   00133A  8E81               	bsf	129,7,c	;volatile
  1968                           
  1969                           ;matrix_keypad.c: 25:  if (PORTBbits.RB1 == 0)
  1970   00133C  B281               	btfsc	129,1,c	;volatile
  1971   00133E  EFA3  F009         	goto	u161
  1972   001342  EFA5  F009         	goto	u160
  1973   001346                     u161:
  1974   001346  EFA8  F009         	goto	l176
  1975   00134A                     u160:
  1976   00134A                     
  1977                           ;matrix_keypad.c: 26:  {;matrix_keypad.c: 27:   return 1;
  1978   00134A  0E01               	movlw	1
  1979   00134C  EF1E  F00A         	goto	l177
  1980   001350                     l176:
  1981   001350  B481               	btfsc	129,2,c	;volatile
  1982   001352  EFAD  F009         	goto	u171
  1983   001356  EFAF  F009         	goto	u170
  1984   00135A                     u171:
  1985   00135A  EFB2  F009         	goto	l179
  1986   00135E                     u170:
  1987   00135E                     
  1988                           ;matrix_keypad.c: 30:  {;matrix_keypad.c: 31:   return 4;
  1989   00135E  0E04               	movlw	4
  1990   001360  EF1E  F00A         	goto	l177
  1991   001364                     l179:
  1992   001364  B681               	btfsc	129,3,c	;volatile
  1993   001366  EFB7  F009         	goto	u181
  1994   00136A  EFB9  F009         	goto	u180
  1995   00136E                     u181:
  1996   00136E  EFBC  F009         	goto	l181
  1997   001372                     u180:
  1998   001372                     
  1999                           ;matrix_keypad.c: 34:  {;matrix_keypad.c: 35:   return 7;
  2000   001372  0E07               	movlw	7
  2001   001374  EF1E  F00A         	goto	l177
  2002   001378                     l181:
  2003   001378  B881               	btfsc	129,4,c	;volatile
  2004   00137A  EFC1  F009         	goto	u191
  2005   00137E  EFC3  F009         	goto	u190
  2006   001382                     u191:
  2007   001382  EFC6  F009         	goto	l178
  2008   001386                     u190:
  2009   001386                     
  2010                           ;matrix_keypad.c: 38:  {;matrix_keypad.c: 39:   return 10;
  2011   001386  0E0A               	movlw	10
  2012   001388  EF1E  F00A         	goto	l177
  2013   00138C                     l178:
  2014                           
  2015                           ;matrix_keypad.c: 42:  PORTBbits.RB5 = 1;
  2016   00138C  8A81               	bsf	129,5,c	;volatile
  2017                           
  2018                           ;matrix_keypad.c: 43:  PORTBbits.RB6 = 0;
  2019   00138E  9C81               	bcf	129,6,c	;volatile
  2020                           
  2021                           ;matrix_keypad.c: 44:  PORTBbits.RB7 = 1;
  2022   001390  8E81               	bsf	129,7,c	;volatile
  2023                           
  2024                           ;matrix_keypad.c: 46:  if (PORTBbits.RB1 == 0)
  2025   001392  B281               	btfsc	129,1,c	;volatile
  2026   001394  EFCE  F009         	goto	u201
  2027   001398  EFD0  F009         	goto	u200
  2028   00139C                     u201:
  2029   00139C  EFD3  F009         	goto	l184
  2030   0013A0                     u200:
  2031   0013A0                     
  2032                           ;matrix_keypad.c: 47:  {;matrix_keypad.c: 48:   return 2;
  2033   0013A0  0E02               	movlw	2
  2034   0013A2  EF1E  F00A         	goto	l177
  2035   0013A6                     l184:
  2036   0013A6  B481               	btfsc	129,2,c	;volatile
  2037   0013A8  EFD8  F009         	goto	u211
  2038   0013AC  EFDA  F009         	goto	u210
  2039   0013B0                     u211:
  2040   0013B0  EFDD  F009         	goto	l186
  2041   0013B4                     u210:
  2042   0013B4                     
  2043                           ;matrix_keypad.c: 51:  {;matrix_keypad.c: 52:   return 5;
  2044   0013B4  0E05               	movlw	5
  2045   0013B6  EF1E  F00A         	goto	l177
  2046   0013BA                     l186:
  2047   0013BA  B681               	btfsc	129,3,c	;volatile
  2048   0013BC  EFE2  F009         	goto	u221
  2049   0013C0  EFE4  F009         	goto	u220
  2050   0013C4                     u221:
  2051   0013C4  EFE7  F009         	goto	l188
  2052   0013C8                     u220:
  2053   0013C8                     
  2054                           ;matrix_keypad.c: 55:  {;matrix_keypad.c: 56:   return 8;
  2055   0013C8  0E08               	movlw	8
  2056   0013CA  EF1E  F00A         	goto	l177
  2057   0013CE                     l188:
  2058   0013CE  B881               	btfsc	129,4,c	;volatile
  2059   0013D0  EFEC  F009         	goto	u231
  2060   0013D4  EFEE  F009         	goto	u230
  2061   0013D8                     u231:
  2062   0013D8  EFF1  F009         	goto	l185
  2063   0013DC                     u230:
  2064   0013DC                     
  2065                           ;matrix_keypad.c: 59:  {;matrix_keypad.c: 60:   return 11;
  2066   0013DC  0E0B               	movlw	11
  2067   0013DE  EF1E  F00A         	goto	l177
  2068   0013E2                     l185:
  2069                           
  2070                           ;matrix_keypad.c: 63:  PORTBbits.RB5 = 1;
  2071   0013E2  8A81               	bsf	129,5,c	;volatile
  2072                           
  2073                           ;matrix_keypad.c: 64:  PORTBbits.RB6 = 1;
  2074   0013E4  8C81               	bsf	129,6,c	;volatile
  2075                           
  2076                           ;matrix_keypad.c: 65:  PORTBbits.RB7 = 0;
  2077   0013E6  9E81               	bcf	129,7,c	;volatile
  2078                           
  2079                           ;matrix_keypad.c: 67:  PORTBbits.RB7 = 0;
  2080   0013E8  9E81               	bcf	129,7,c	;volatile
  2081                           
  2082                           ;matrix_keypad.c: 69:  if (PORTBbits.RB1 == 0)
  2083   0013EA  B281               	btfsc	129,1,c	;volatile
  2084   0013EC  EFFA  F009         	goto	u241
  2085   0013F0  EFFC  F009         	goto	u240
  2086   0013F4                     u241:
  2087   0013F4  EFFF  F009         	goto	l191
  2088   0013F8                     u240:
  2089   0013F8                     
  2090                           ;matrix_keypad.c: 70:  {;matrix_keypad.c: 71:   return 3;
  2091   0013F8  0E03               	movlw	3
  2092   0013FA  EF1E  F00A         	goto	l177
  2093   0013FE                     l191:
  2094   0013FE  B481               	btfsc	129,2,c	;volatile
  2095   001400  EF04  F00A         	goto	u251
  2096   001404  EF06  F00A         	goto	u250
  2097   001408                     u251:
  2098   001408  EF09  F00A         	goto	l193
  2099   00140C                     u250:
  2100   00140C                     
  2101                           ;matrix_keypad.c: 74:  {;matrix_keypad.c: 75:   return 6;
  2102   00140C  0E06               	movlw	6
  2103   00140E  EF1E  F00A         	goto	l177
  2104   001412                     l193:
  2105   001412  B681               	btfsc	129,3,c	;volatile
  2106   001414  EF0E  F00A         	goto	u261
  2107   001418  EF10  F00A         	goto	u260
  2108   00141C                     u261:
  2109   00141C  EF13  F00A         	goto	l195
  2110   001420                     u260:
  2111   001420                     
  2112                           ;matrix_keypad.c: 78:  {;matrix_keypad.c: 79:   return 9;
  2113   001420  0E09               	movlw	9
  2114   001422  EF1E  F00A         	goto	l177
  2115   001426                     l195:
  2116   001426  B881               	btfsc	129,4,c	;volatile
  2117   001428  EF18  F00A         	goto	u271
  2118   00142C  EF1A  F00A         	goto	u270
  2119   001430                     u271:
  2120   001430  EF1D  F00A         	goto	l194
  2121   001434                     u270:
  2122   001434                     
  2123                           ;matrix_keypad.c: 82:  {;matrix_keypad.c: 83:   return 12;
  2124   001434  0E0C               	movlw	12
  2125   001436  EF1E  F00A         	goto	l177
  2126   00143A                     l194:
  2127   00143A                     
  2128                           ;matrix_keypad.c: 86:  return 0xFF;
  2129   00143A  0EFF               	movlw	255
  2130   00143C                     l177:
  2131   00143C  0012               	return		;funcret
  2132   00143E                     __end_of_scan_key:
  2133                           	callstack 0
  2134                           
  2135 ;; *************** function _read_adc *****************
  2136 ;; Defined at:
  2137 ;;		line 43 in file "adc.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  channel         1    wreg     unsigned char 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  channel         1    6[COMRAM] unsigned char 
  2142 ;;  reg_val         2    4[COMRAM] unsigned short 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  2    0[COMRAM] unsigned short 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2, status,0
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2152 ;;      Params:         2       0       0       0       0       0       0
  2153 ;;      Locals:         3       0       0       0       0       0       0
  2154 ;;      Temps:          2       0       0       0       0       0       0
  2155 ;;      Totals:         7       0       0       0       0       0       0
  2156 ;;Total ram usage:        7 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 1
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_main
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text4
  2167   001DB2                     __ptext4:
  2168                           	callstack 0
  2169   001DB2                     _read_adc:
  2170                           	callstack 29
  2171                           
  2172                           ;incstack = 0
  2173                           ;read_adc@channel stored from wreg
  2174   001DB2  6E07               	movwf	read_adc@channel^0,c
  2175   001DB4                     
  2176                           ;adc.c: 43: unsigned short read_adc(unsigned char channel);adc.c: 44: {;adc.c: 45:  unsi
      +                          gned short reg_val;;adc.c: 48:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  2177   001DB4  C007  F003         	movff	read_adc@channel,??_read_adc
  2178   001DB8  90D8               	bcf	status,0,c
  2179   001DBA  3603               	rlcf	??_read_adc^0,f,c
  2180   001DBC  90D8               	bcf	status,0,c
  2181   001DBE  3603               	rlcf	??_read_adc^0,f,c
  2182   001DC0  50C2               	movf	194,w,c	;volatile
  2183   001DC2  0BC3               	andlw	195
  2184   001DC4  1003               	iorwf	??_read_adc^0,w,c
  2185   001DC6  6EC2               	movwf	194,c	;volatile
  2186   001DC8                     
  2187                           ;adc.c: 51:  GO = 1;
  2188   001DC8  82C2               	bsf	4034,1,c	;volatile
  2189   001DCA                     l36:
  2190   001DCA  B2C2               	btfsc	4034,1,c	;volatile
  2191   001DCC  EFEA  F00E         	goto	u2071
  2192   001DD0  EFEC  F00E         	goto	u2070
  2193   001DD4                     u2071:
  2194   001DD4  EFE5  F00E         	goto	l36
  2195   001DD8                     u2070:
  2196   001DD8                     
  2197                           ;adc.c: 53:  reg_val = (ADRESH << 8) | ADRESL;
  2198   001DD8  50C3               	movf	195,w,c	;volatile
  2199   001DDA  CFC4 F003          	movff	4036,??_read_adc	;volatile
  2200   001DDE  6A04               	clrf	(??_read_adc+1)^0,c
  2201   001DE0  C003  F004         	movff	??_read_adc,??_read_adc+1
  2202   001DE4  6A03               	clrf	??_read_adc^0,c
  2203   001DE6  1003               	iorwf	??_read_adc^0,w,c
  2204   001DE8  6E05               	movwf	read_adc@reg_val^0,c
  2205   001DEA  5004               	movf	(??_read_adc+1)^0,w,c
  2206   001DEC  6E06               	movwf	(read_adc@reg_val+1)^0,c
  2207   001DEE                     
  2208                           ;adc.c: 55:  return reg_val;
  2209   001DEE  C005  F001         	movff	read_adc@reg_val,?_read_adc
  2210   001DF2  C006  F002         	movff	read_adc@reg_val+1,?_read_adc+1
  2211   001DF6  0012               	return		;funcret
  2212   001DF8                     __end_of_read_adc:
  2213                           	callstack 0
  2214                           
  2215 ;; *************** function _password *****************
  2216 ;; Defined at:
  2217 ;;		line 37 in file "password.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  key             1    wreg     unsigned char 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  key             1   30[COMRAM] unsigned char 
  2222 ;;  wait            8   18[COMRAM] unsigned long long 
  2223 ;;  delay           4   26[COMRAM] unsigned long 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2233 ;;      Params:         0       0       0       0       0       0       0
  2234 ;;      Locals:        13       0       0       0       0       0       0
  2235 ;;      Temps:          2       0       0       0       0       0       0
  2236 ;;      Totals:        15       0       0       0       0       0       0
  2237 ;;Total ram usage:       15 bytes
  2238 ;; Hardware stack levels used: 1
  2239 ;; Hardware stack levels required when called: 3
  2240 ;; This function calls:
  2241 ;;		___awdiv
  2242 ;;		___awmod
  2243 ;;		_clcd_print
  2244 ;;		_clcd_putch
  2245 ;;		_clcd_write
  2246 ;;		_my_strcmp
  2247 ;; This function is called by:
  2248 ;;		_main
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text5
  2253   0006CA                     __ptext5:
  2254                           	callstack 0
  2255   0006CA                     _password:
  2256                           	callstack 27
  2257                           
  2258                           ;incstack = 0
  2259                           ;password@key stored from wreg
  2260   0006CA  6E1F               	movwf	password@key^0,c
  2261   0006CC                     
  2262                           ;password.c: 39:     clcd_print(" Enter Password ", (0x80 + (0)));
  2263   0006CC  0E59               	movlw	low STR_10
  2264   0006CE  6E03               	movwf	clcd_print@data^0,c
  2265   0006D0  0E2F               	movlw	high STR_10
  2266   0006D2  6E04               	movwf	(clcd_print@data+1)^0,c
  2267   0006D4  0E80               	movlw	128
  2268   0006D6  6E05               	movwf	clcd_print@addr^0,c
  2269   0006D8  ECEC  F00D         	call	_clcd_print	;wreg free
  2270   0006DC                     
  2271                           ;password.c: 42:     if (delay++ < 500) {
  2272   0006DC  503E               	movf	_delay^0,w,c
  2273   0006DE  6E11               	movwf	??_password^0,c
  2274   0006E0  503F               	movf	(_delay+1)^0,w,c
  2275   0006E2  6E12               	movwf	(??_password+1)^0,c
  2276   0006E4  4A3E               	infsnz	_delay^0,f,c
  2277   0006E6  2A3F               	incf	(_delay+1)^0,f,c
  2278   0006E8  BE12               	btfsc	(??_password+1)^0,7,c
  2279   0006EA  EF82  F003         	goto	u2170
  2280   0006EE  0EF4               	movlw	244
  2281   0006F0  5C11               	subwf	??_password^0,w,c
  2282   0006F2  0E01               	movlw	1
  2283   0006F4  5812               	subwfb	(??_password+1)^0,w,c
  2284   0006F6  B0D8               	btfsc	status,0,c
  2285   0006F8  EF80  F003         	goto	u2171
  2286   0006FC  EF82  F003         	goto	u2170
  2287   000700                     u2171:
  2288   000700  EF8A  F003         	goto	l3121
  2289   000704                     u2170:
  2290   000704                     
  2291                           ;password.c: 43:         clcd_putch('_', (0xC0 + (index)));
  2292   000704  5050               	movf	_index^0,w,c
  2293   000706  0FC0               	addlw	192
  2294   000708  6E0F               	movwf	clcd_putch@addr^0,c
  2295   00070A  0E5F               	movlw	95
  2296   00070C  ECAA  F00F         	call	_clcd_putch
  2297                           
  2298                           ;password.c: 44:     } else if (delay > 500 && delay < 1000) {
  2299   000710  EFB2  F003         	goto	l3129
  2300   000714                     l3121:
  2301   000714  BE3F               	btfsc	(_delay+1)^0,7,c
  2302   000716  EF96  F003         	goto	u2181
  2303   00071A  0EF5               	movlw	245
  2304   00071C  5C3E               	subwf	_delay^0,w,c
  2305   00071E  0E01               	movlw	1
  2306   000720  583F               	subwfb	(_delay+1)^0,w,c
  2307   000722  A0D8               	btfss	status,0,c
  2308   000724  EF96  F003         	goto	u2181
  2309   000728  EF98  F003         	goto	u2180
  2310   00072C                     u2181:
  2311   00072C  EFAE  F003         	goto	l3127
  2312   000730                     u2180:
  2313   000730  BE3F               	btfsc	(_delay+1)^0,7,c
  2314   000732  EFA6  F003         	goto	u2190
  2315   000736  0EE8               	movlw	232
  2316   000738  5C3E               	subwf	_delay^0,w,c
  2317   00073A  0E03               	movlw	3
  2318   00073C  583F               	subwfb	(_delay+1)^0,w,c
  2319   00073E  B0D8               	btfsc	status,0,c
  2320   000740  EFA4  F003         	goto	u2191
  2321   000744  EFA6  F003         	goto	u2190
  2322   000748                     u2191:
  2323   000748  EFAE  F003         	goto	l3127
  2324   00074C                     u2190:
  2325   00074C                     
  2326                           ;password.c: 45:         clcd_putch(' ', (0xC0 + (index)));
  2327   00074C  5050               	movf	_index^0,w,c
  2328   00074E  0FC0               	addlw	192
  2329   000750  6E0F               	movwf	clcd_putch@addr^0,c
  2330   000752  0E20               	movlw	32
  2331   000754  ECAA  F00F         	call	_clcd_putch
  2332                           
  2333                           ;password.c: 46:     } else
  2334   000758  EFB2  F003         	goto	l3129
  2335   00075C                     l3127:
  2336                           
  2337                           ;password.c: 47:         delay = 0;
  2338   00075C  0E00               	movlw	0
  2339   00075E  6E3F               	movwf	(_delay+1)^0,c
  2340   000760  0E00               	movlw	0
  2341   000762  6E3E               	movwf	_delay^0,c
  2342   000764                     l3129:
  2343                           
  2344                           ;password.c: 49:     if (key == 5) {
  2345   000764  0E05               	movlw	5
  2346   000766  181F               	xorwf	password@key^0,w,c
  2347   000768  A4D8               	btfss	status,2,c
  2348   00076A  EFB9  F003         	goto	u2201
  2349   00076E  EFBB  F003         	goto	u2200
  2350   000772                     u2201:
  2351   000772  EFCA  F003         	goto	l3137
  2352   000776                     u2200:
  2353   000776                     
  2354                           ;password.c: 50:         temp_password[index] = '0';
  2355   000776  5050               	movf	_index^0,w,c
  2356   000778  0F95               	addlw	low _temp_password
  2357   00077A  6ED9               	movwf	fsr2l,c
  2358   00077C  6ADA               	clrf	fsr2h,c
  2359   00077E  0E30               	movlw	48
  2360   000780  6EDF               	movwf	indf2,c
  2361   000782                     
  2362                           ;password.c: 51:         clcd_putch('*', (0xC0 + (index)));
  2363   000782  5050               	movf	_index^0,w,c
  2364   000784  0FC0               	addlw	192
  2365   000786  6E0F               	movwf	clcd_putch@addr^0,c
  2366   000788  0E2A               	movlw	42
  2367   00078A  ECAA  F00F         	call	_clcd_putch
  2368   00078E                     l3135:
  2369                           
  2370                           ;password.c: 52:         index++;
  2371   00078E  2A50               	incf	_index^0,f,c
  2372                           
  2373                           ;password.c: 54:     } else if (key == 6) {
  2374   000790  EFE1  F003         	goto	l3145
  2375   000794                     l3137:
  2376   000794  0E06               	movlw	6
  2377   000796  181F               	xorwf	password@key^0,w,c
  2378   000798  A4D8               	btfss	status,2,c
  2379   00079A  EFD1  F003         	goto	u2211
  2380   00079E  EFD3  F003         	goto	u2210
  2381   0007A2                     u2211:
  2382   0007A2  EFE1  F003         	goto	l3145
  2383   0007A6                     u2210:
  2384   0007A6                     
  2385                           ;password.c: 55:         temp_password[index] = '1';
  2386   0007A6  5050               	movf	_index^0,w,c
  2387   0007A8  0F95               	addlw	low _temp_password
  2388   0007AA  6ED9               	movwf	fsr2l,c
  2389   0007AC  6ADA               	clrf	fsr2h,c
  2390   0007AE  0E31               	movlw	49
  2391   0007B0  6EDF               	movwf	indf2,c
  2392   0007B2                     
  2393                           ;password.c: 56:         clcd_putch('*', (0xC0 + (index)));
  2394   0007B2  5050               	movf	_index^0,w,c
  2395   0007B4  0FC0               	addlw	192
  2396   0007B6  6E0F               	movwf	clcd_putch@addr^0,c
  2397   0007B8  0E2A               	movlw	42
  2398   0007BA  ECAA  F00F         	call	_clcd_putch
  2399   0007BE  EFC7  F003         	goto	l3135
  2400   0007C2                     l3145:
  2401                           
  2402                           ;password.c: 61:     if (index == 4) {
  2403   0007C2  0E04               	movlw	4
  2404   0007C4  1850               	xorwf	_index^0,w,c
  2405   0007C6  A4D8               	btfss	status,2,c
  2406   0007C8  EFE8  F003         	goto	u2221
  2407   0007CC  EFEA  F003         	goto	u2220
  2408   0007D0                     u2221:
  2409   0007D0  EFD8  F004         	goto	l301
  2410   0007D4                     u2220:
  2411   0007D4                     
  2412                           ;password.c: 62:         temp_password[index] = '\0';
  2413   0007D4  5050               	movf	_index^0,w,c
  2414   0007D6  0F95               	addlw	low _temp_password
  2415   0007D8  6ED9               	movwf	fsr2l,c
  2416   0007DA  6ADA               	clrf	fsr2h,c
  2417   0007DC  6ADF               	clrf	indf2,c
  2418   0007DE                     
  2419                           ;password.c: 63:         if (my_strcmp(pass,temp_password) == 0) {
  2420   0007DE  0E9A               	movlw	low _pass
  2421   0007E0  6E01               	movwf	my_strcmp@one^0,c
  2422   0007E2  0E95               	movlw	low _temp_password
  2423   0007E4  6E02               	movwf	my_strcmp@two^0,c
  2424   0007E6  ECB1  F00C         	call	_my_strcmp	;wreg free
  2425   0007EA  5001               	movf	?_my_strcmp^0,w,c
  2426   0007EC  1002               	iorwf	(?_my_strcmp+1)^0,w,c
  2427   0007EE  A4D8               	btfss	status,2,c
  2428   0007F0  EFFC  F003         	goto	u2231
  2429   0007F4  EFFE  F003         	goto	u2230
  2430   0007F8                     u2231:
  2431   0007F8  EF09  F004         	goto	l3157
  2432   0007FC                     u2230:
  2433   0007FC                     
  2434                           ;password.c: 64:             clcd_write(0x01, 0);
  2435   0007FC  0E00               	movlw	0
  2436   0007FE  6E01               	movwf	clcd_write@control_bit^0,c
  2437   000800  0E01               	movlw	1
  2438   000802  EC1C  F00F         	call	_clcd_write
  2439   000806                     
  2440                           ;password.c: 65:             chance=3;
  2441   000806  0E03               	movlw	3
  2442   000808  6E5C               	movwf	_chance^0,c
  2443   00080A                     
  2444                           ;password.c: 66:             main_f=2;
  2445   00080A  0E02               	movlw	2
  2446   00080C  6E54               	movwf	_main_f^0,c
  2447                           
  2448                           ;password.c: 70:         } else {
  2449   00080E  EFD8  F004         	goto	l301
  2450   000812                     l3157:
  2451                           
  2452                           ;password.c: 72:             if (chance == 0) {
  2453   000812  505C               	movf	_chance^0,w,c
  2454   000814  A4D8               	btfss	status,2,c
  2455   000816  EF0F  F004         	goto	u2241
  2456   00081A  EF11  F004         	goto	u2240
  2457   00081E                     u2241:
  2458   00081E  EF89  F004         	goto	l3179
  2459   000822                     u2240:
  2460   000822                     
  2461                           ;password.c: 75:                 TMR0IE = 1;
  2462   000822  8AF2               	bsf	4082,5,c	;volatile
  2463                           
  2464                           ;password.c: 76:                 GIE = 1;
  2465   000824  8EF2               	bsf	4082,7,c	;volatile
  2466                           
  2467                           ;password.c: 77:                 PEIE = 1;
  2468   000826  8CF2               	bsf	4082,6,c	;volatile
  2469   000828                     
  2470                           ;password.c: 79:                 clcd_print(" System Blocked", (0x80 + (0)));
  2471   000828  0E9B               	movlw	low STR_11
  2472   00082A  6E03               	movwf	clcd_print@data^0,c
  2473   00082C  0E2F               	movlw	high STR_11
  2474   00082E  6E04               	movwf	(clcd_print@data+1)^0,c
  2475   000830  0E80               	movlw	128
  2476   000832  6E05               	movwf	clcd_print@addr^0,c
  2477   000834  ECEC  F00D         	call	_clcd_print	;wreg free
  2478                           
  2479                           ;password.c: 80:                 clcd_print("     ", (0xC0 + (0)));
  2480   000838  0EFD               	movlw	low (STR_22+12)
  2481   00083A  6E03               	movwf	clcd_print@data^0,c
  2482   00083C  0E2E               	movlw	high (STR_22+12)
  2483   00083E  6E04               	movwf	(clcd_print@data+1)^0,c
  2484   000840  0EC0               	movlw	192
  2485   000842  6E05               	movwf	clcd_print@addr^0,c
  2486   000844  ECEC  F00D         	call	_clcd_print	;wreg free
  2487   000848                     
  2488                           ;password.c: 81:                 clcd_putch('0' + (tick_count / 100), (0xC0 + (5)));
  2489   000848  0EC5               	movlw	197
  2490   00084A  6E0F               	movwf	clcd_putch@addr^0,c
  2491   00084C  C05D  F001         	movff	_tick_count,___awdiv@dividend
  2492   000850  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2493   000852  0E00               	movlw	0
  2494   000854  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2495   000856  0E64               	movlw	100
  2496   000858  6E03               	movwf	___awdiv@divisor^0,c
  2497   00085A  EC12  F00B         	call	___awdiv	;wreg free
  2498   00085E  5001               	movf	?___awdiv^0,w,c
  2499   000860  0F30               	addlw	48
  2500   000862  ECAA  F00F         	call	_clcd_putch
  2501   000866                     
  2502                           ;password.c: 82:                 clcd_putch('0' + (tick_count / 10) % 10, (0xC0 + (6)));
  2503   000866  0EC6               	movlw	198
  2504   000868  6E0F               	movwf	clcd_putch@addr^0,c
  2505   00086A  0E00               	movlw	0
  2506   00086C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2507   00086E  0E0A               	movlw	10
  2508   000870  6E03               	movwf	___awdiv@divisor^0,c
  2509   000872  C05D  F001         	movff	_tick_count,___awdiv@dividend
  2510   000876  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2511   000878  EC12  F00B         	call	___awdiv	;wreg free
  2512   00087C  C001  F009         	movff	?___awdiv,___awmod@dividend
  2513   000880  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2514   000884  0E00               	movlw	0
  2515   000886  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2516   000888  0E0A               	movlw	10
  2517   00088A  6E0B               	movwf	___awmod@divisor^0,c
  2518   00088C  EC74  F00B         	call	___awmod	;wreg free
  2519   000890  5009               	movf	?___awmod^0,w,c
  2520   000892  0F30               	addlw	48
  2521   000894  ECAA  F00F         	call	_clcd_putch
  2522   000898                     
  2523                           ;password.c: 83:                 clcd_putch('0' + (tick_count % 10), (0xC0 + (7)));
  2524   000898  0EC7               	movlw	199
  2525   00089A  6E0F               	movwf	clcd_putch@addr^0,c
  2526   00089C  C05D  F009         	movff	_tick_count,___awmod@dividend
  2527   0008A0  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2528   0008A2  0E00               	movlw	0
  2529   0008A4  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2530   0008A6  0E0A               	movlw	10
  2531   0008A8  6E0B               	movwf	___awmod@divisor^0,c
  2532   0008AA  EC74  F00B         	call	___awmod	;wreg free
  2533   0008AE  5009               	movf	?___awmod^0,w,c
  2534   0008B0  0F30               	addlw	48
  2535   0008B2  ECAA  F00F         	call	_clcd_putch
  2536   0008B6                     
  2537                           ;password.c: 84:                 for (unsigned long int delay = 200000; delay--;);
  2538   0008B6  0E40               	movlw	64
  2539   0008B8  6E1B               	movwf	password@delay^0,c
  2540   0008BA  0E0D               	movlw	13
  2541   0008BC  6E1C               	movwf	(password@delay+1)^0,c
  2542   0008BE  0E03               	movlw	3
  2543   0008C0  6E1D               	movwf	(password@delay+2)^0,c
  2544   0008C2  0E00               	movlw	0
  2545   0008C4  6E1E               	movwf	(password@delay+3)^0,c
  2546   0008C6                     l3171:
  2547   0008C6  061B               	decf	password@delay^0,f,c
  2548   0008C8  0E00               	movlw	0
  2549   0008CA  5A1C               	subwfb	(password@delay+1)^0,f,c
  2550   0008CC  5A1D               	subwfb	(password@delay+2)^0,f,c
  2551   0008CE  5A1E               	subwfb	(password@delay+3)^0,f,c
  2552   0008D0  281B               	incf	password@delay^0,w,c
  2553   0008D2  E10A               	bnz	u2251
  2554   0008D4  281C               	incf	(password@delay+1)^0,w,c
  2555   0008D6  E108               	bnz	u2251
  2556   0008D8  281D               	incf	(password@delay+2)^0,w,c
  2557   0008DA  E106               	bnz	u2251
  2558   0008DC  281E               	incf	(password@delay+3)^0,w,c
  2559   0008DE  A4D8               	btfss	status,2,c
  2560   0008E0  EF74  F004         	goto	u2251
  2561   0008E4  EF76  F004         	goto	u2250
  2562   0008E8                     u2251:
  2563   0008E8  EF63  F004         	goto	l3171
  2564   0008EC                     u2250:
  2565   0008EC                     
  2566                           ;password.c: 86:                 if (tick_count == 0) {
  2567   0008EC  505D               	movf	_tick_count^0,w,c
  2568   0008EE  A4D8               	btfss	status,2,c
  2569   0008F0  EF7C  F004         	goto	u2261
  2570   0008F4  EF7E  F004         	goto	u2260
  2571   0008F8                     u2261:
  2572   0008F8  EFD8  F004         	goto	l291
  2573   0008FC                     u2260:
  2574   0008FC                     
  2575                           ;password.c: 87:                     chance = 2;
  2576   0008FC  0E02               	movlw	2
  2577   0008FE  6E5C               	movwf	_chance^0,c
  2578                           
  2579                           ;password.c: 88:                     index = 0;
  2580   000900  0E00               	movlw	0
  2581   000902  6E50               	movwf	_index^0,c
  2582   000904                     
  2583                           ;password.c: 89:                     clcd_write(0x01, 0);
  2584   000904  0E00               	movlw	0
  2585   000906  6E01               	movwf	clcd_write@control_bit^0,c
  2586   000908  0E01               	movlw	1
  2587   00090A  EC1C  F00F         	call	_clcd_write
  2588   00090E  EFD8  F004         	goto	l301
  2589   000912                     l3179:
  2590                           
  2591                           ;password.c: 94:                 clcd_print("   Try Again    ", (0x80 + (0)));
  2592   000912  0E48               	movlw	low STR_13
  2593   000914  6E03               	movwf	clcd_print@data^0,c
  2594   000916  0E2F               	movlw	high STR_13
  2595   000918  6E04               	movwf	(clcd_print@data+1)^0,c
  2596   00091A  0E80               	movlw	128
  2597   00091C  6E05               	movwf	clcd_print@addr^0,c
  2598   00091E  ECEC  F00D         	call	_clcd_print	;wreg free
  2599   000922                     
  2600                           ;password.c: 95:                 clcd_putch('0' + chance, (0xC0 + (0)));
  2601   000922  0EC0               	movlw	192
  2602   000924  6E0F               	movwf	clcd_putch@addr^0,c
  2603   000926  505C               	movf	_chance^0,w,c
  2604   000928  0F30               	addlw	48
  2605   00092A  ECAA  F00F         	call	_clcd_putch
  2606   00092E                     
  2607                           ;password.c: 96:                 clcd_print(" Chances Left ", (0xC0 + (1)));
  2608   00092E  0EC9               	movlw	low STR_14
  2609   000930  6E03               	movwf	clcd_print@data^0,c
  2610   000932  0E2F               	movlw	high STR_14
  2611   000934  6E04               	movwf	(clcd_print@data+1)^0,c
  2612   000936  0EC1               	movlw	193
  2613   000938  6E05               	movwf	clcd_print@addr^0,c
  2614   00093A  ECEC  F00D         	call	_clcd_print	;wreg free
  2615   00093E                     
  2616                           ;password.c: 97:                 for (unsigned long long int wait = 400000; wait--;);
  2617   00093E  0E80               	movlw	128
  2618   000940  6E13               	movwf	password@wait^0,c
  2619   000942  0E1A               	movlw	26
  2620   000944  6E14               	movwf	(password@wait+1)^0,c
  2621   000946  0E06               	movlw	6
  2622   000948  6E15               	movwf	(password@wait+2)^0,c
  2623   00094A  0E00               	movlw	0
  2624   00094C  6E16               	movwf	(password@wait+3)^0,c
  2625   00094E  0E00               	movlw	0
  2626   000950  6E17               	movwf	(password@wait+4)^0,c
  2627   000952  0E00               	movlw	0
  2628   000954  6E18               	movwf	(password@wait+5)^0,c
  2629   000956  0E00               	movlw	0
  2630   000958  6E19               	movwf	(password@wait+6)^0,c
  2631   00095A  0E00               	movlw	0
  2632   00095C  6E1A               	movwf	(password@wait+7)^0,c
  2633   00095E                     l3187:
  2634   00095E  0613               	decf	password@wait^0,f,c
  2635   000960  0E00               	movlw	0
  2636   000962  5A14               	subwfb	(password@wait+1)^0,f,c
  2637   000964  5A15               	subwfb	(password@wait+2)^0,f,c
  2638   000966  5A16               	subwfb	(password@wait+3)^0,f,c
  2639   000968  5A17               	subwfb	(password@wait+4)^0,f,c
  2640   00096A  5A18               	subwfb	(password@wait+5)^0,f,c
  2641   00096C  5A19               	subwfb	(password@wait+6)^0,f,c
  2642   00096E  5A1A               	subwfb	(password@wait+7)^0,f,c
  2643   000970  2813               	incf	password@wait^0,w,c
  2644   000972  E112               	bnz	u2271
  2645   000974  2814               	incf	(password@wait+1)^0,w,c
  2646   000976  E110               	bnz	u2271
  2647   000978  2815               	incf	(password@wait+2)^0,w,c
  2648   00097A  E10E               	bnz	u2271
  2649   00097C  2816               	incf	(password@wait+3)^0,w,c
  2650   00097E  E10C               	bnz	u2271
  2651   000980  2817               	incf	(password@wait+4)^0,w,c
  2652   000982  E10A               	bnz	u2271
  2653   000984  2818               	incf	(password@wait+5)^0,w,c
  2654   000986  E108               	bnz	u2271
  2655   000988  2819               	incf	(password@wait+6)^0,w,c
  2656   00098A  E106               	bnz	u2271
  2657   00098C  281A               	incf	(password@wait+7)^0,w,c
  2658   00098E  A4D8               	btfss	status,2,c
  2659   000990  EFCC  F004         	goto	u2271
  2660   000994  EFCE  F004         	goto	u2270
  2661   000998                     u2271:
  2662   000998  EFAF  F004         	goto	l3187
  2663   00099C                     u2270:
  2664   00099C                     
  2665                           ;password.c: 98:                 chance--;
  2666   00099C  065C               	decf	_chance^0,f,c
  2667   00099E                     
  2668                           ;password.c: 99:                 index = 0;
  2669   00099E  0E00               	movlw	0
  2670   0009A0  6E50               	movwf	_index^0,c
  2671   0009A2                     
  2672                           ;password.c: 100:                 clcd_write(0x01, 0);
  2673   0009A2  0E00               	movlw	0
  2674   0009A4  6E01               	movwf	clcd_write@control_bit^0,c
  2675   0009A6  0E01               	movlw	1
  2676   0009A8  EC1C  F00F         	call	_clcd_write
  2677   0009AC  EFD8  F004         	goto	l301
  2678   0009B0                     l291:
  2679   0009B0                     l301:
  2680   0009B0  0012               	return		;funcret
  2681   0009B2                     __end_of_password:
  2682                           	callstack 0
  2683                           
  2684 ;; *************** function _my_strcmp *****************
  2685 ;; Defined at:
  2686 ;;		line 25 in file "password.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  one             1    0[COMRAM] PTR unsigned char 
  2689 ;;		 -> pass(5), 
  2690 ;;  two             1    1[COMRAM] PTR unsigned char 
  2691 ;;		 -> temp_password(5), 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  k               2    6[COMRAM] int 
  2694 ;;  last            2    4[COMRAM] int 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2    0[COMRAM] int 
  2697 ;; Registers used:
  2698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2704 ;;      Params:         2       0       0       0       0       0       0
  2705 ;;      Locals:         4       0       0       0       0       0       0
  2706 ;;      Temps:          2       0       0       0       0       0       0
  2707 ;;      Totals:         8       0       0       0       0       0       0
  2708 ;;Total ram usage:        8 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 1
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_password
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text6
  2719   001962                     __ptext6:
  2720                           	callstack 0
  2721   001962                     _my_strcmp:
  2722                           	callstack 28
  2723   001962                     
  2724                           ;password.c: 26:     int k = 0, last = 0;
  2725   001962  0E00               	movlw	0
  2726   001964  6E08               	movwf	(my_strcmp@k+1)^0,c
  2727   001966  0E00               	movlw	0
  2728   001968  6E07               	movwf	my_strcmp@k^0,c
  2729   00196A  0E00               	movlw	0
  2730   00196C  6E06               	movwf	(my_strcmp@last+1)^0,c
  2731   00196E  0E00               	movlw	0
  2732   001970  6E05               	movwf	my_strcmp@last^0,c
  2733                           
  2734                           ;password.c: 27:     while (one[k] != '\0') {
  2735   001972  EFE2  F00C         	goto	l2937
  2736   001976                     l2931:
  2737                           
  2738                           ;password.c: 28:         if (one[k] != two[k]) {
  2739   001976  5002               	movf	my_strcmp@two^0,w,c
  2740   001978  2407               	addwf	my_strcmp@k^0,w,c
  2741   00197A  6ED9               	movwf	fsr2l,c
  2742   00197C  6ADA               	clrf	fsr2h,c
  2743   00197E  5001               	movf	my_strcmp@one^0,w,c
  2744   001980  2407               	addwf	my_strcmp@k^0,w,c
  2745   001982  6EE1               	movwf	fsr1l,c
  2746   001984  6AE2               	clrf	fsr1h,c
  2747   001986  50DE               	movf	postinc2,w,c
  2748   001988  18E6               	xorwf	postinc1,w,c
  2749   00198A  B4D8               	btfsc	status,2,c
  2750   00198C  EFCA  F00C         	goto	u1901
  2751   001990  EFCC  F00C         	goto	u1900
  2752   001994                     u1901:
  2753   001994  EFE0  F00C         	goto	l2935
  2754   001998                     u1900:
  2755   001998                     
  2756                           ;password.c: 29:             last = one[k] - two[k];
  2757   001998  5001               	movf	my_strcmp@one^0,w,c
  2758   00199A  2407               	addwf	my_strcmp@k^0,w,c
  2759   00199C  6ED9               	movwf	fsr2l,c
  2760   00199E  6ADA               	clrf	fsr2h,c
  2761   0019A0  50DF               	movf	indf2,w,c
  2762   0019A2  6E03               	movwf	??_my_strcmp^0,c
  2763   0019A4  5002               	movf	my_strcmp@two^0,w,c
  2764   0019A6  2407               	addwf	my_strcmp@k^0,w,c
  2765   0019A8  6ED9               	movwf	fsr2l,c
  2766   0019AA  6ADA               	clrf	fsr2h,c
  2767   0019AC  50DF               	movf	indf2,w,c
  2768   0019AE  6E04               	movwf	(??_my_strcmp+1)^0,c
  2769   0019B0  5004               	movf	(??_my_strcmp+1)^0,w,c
  2770   0019B2  5C03               	subwf	??_my_strcmp^0,w,c
  2771   0019B4  6E05               	movwf	my_strcmp@last^0,c
  2772   0019B6  6A06               	clrf	(my_strcmp@last+1)^0,c
  2773   0019B8  A0D8               	btfss	status,0,c
  2774   0019BA  0606               	decf	(my_strcmp@last+1)^0,f,c
  2775                           
  2776                           ;password.c: 30:             break;
  2777   0019BC  EFEE  F00C         	goto	l278
  2778   0019C0                     l2935:
  2779                           
  2780                           ;password.c: 32:         k++;
  2781   0019C0  4A07               	infsnz	my_strcmp@k^0,f,c
  2782   0019C2  2A08               	incf	(my_strcmp@k+1)^0,f,c
  2783   0019C4                     l2937:
  2784                           
  2785                           ;password.c: 27:     while (one[k] != '\0') {
  2786   0019C4  5001               	movf	my_strcmp@one^0,w,c
  2787   0019C6  2407               	addwf	my_strcmp@k^0,w,c
  2788   0019C8  6ED9               	movwf	fsr2l,c
  2789   0019CA  6ADA               	clrf	fsr2h,c
  2790   0019CC  50DF               	movf	indf2,w,c
  2791   0019CE  A4D8               	btfss	status,2,c
  2792   0019D0  EFEC  F00C         	goto	u1911
  2793   0019D4  EFEE  F00C         	goto	u1910
  2794   0019D8                     u1911:
  2795   0019D8  EFBB  F00C         	goto	l2931
  2796   0019DC                     u1910:
  2797   0019DC                     l278:
  2798                           
  2799                           ;password.c: 34:     return last;
  2800   0019DC  C005  F001         	movff	my_strcmp@last,?_my_strcmp
  2801   0019E0  C006  F002         	movff	my_strcmp@last+1,?_my_strcmp+1
  2802   0019E4  0012               	return		;funcret
  2803   0019E6                     __end_of_my_strcmp:
  2804                           	callstack 0
  2805                           
  2806 ;; *************** function ___awdiv *****************
  2807 ;; Defined at:
  2808 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  dividend        2    0[COMRAM] int 
  2811 ;;  divisor         2    2[COMRAM] int 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  quotient        2    6[COMRAM] int 
  2814 ;;  sign            1    5[COMRAM] unsigned char 
  2815 ;;  counter         1    4[COMRAM] unsigned char 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  2    0[COMRAM] int 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2825 ;;      Params:         4       0       0       0       0       0       0
  2826 ;;      Locals:         4       0       0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0       0       0
  2828 ;;      Totals:         8       0       0       0       0       0       0
  2829 ;;Total ram usage:        8 bytes
  2830 ;; Hardware stack levels used: 1
  2831 ;; Hardware stack levels required when called: 1
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_password
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text7
  2840   001624                     __ptext7:
  2841                           	callstack 0
  2842   001624                     ___awdiv:
  2843                           	callstack 28
  2844   001624  0E00               	movlw	0
  2845   001626  6E06               	movwf	___awdiv@sign^0,c
  2846   001628  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2847   00162A  EF1B  F00B         	goto	u1950
  2848   00162E  EF19  F00B         	goto	u1951
  2849   001632                     u1951:
  2850   001632  EF21  F00B         	goto	l2965
  2851   001636                     u1950:
  2852   001636  6C03               	negf	___awdiv@divisor^0,c
  2853   001638  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2854   00163A  B0D8               	btfsc	status,0,c
  2855   00163C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2856   00163E  0E01               	movlw	1
  2857   001640  6E06               	movwf	___awdiv@sign^0,c
  2858   001642                     l2965:
  2859   001642  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2860   001644  EF28  F00B         	goto	u1960
  2861   001648  EF26  F00B         	goto	u1961
  2862   00164C                     u1961:
  2863   00164C  EF2E  F00B         	goto	l2971
  2864   001650                     u1960:
  2865   001650  6C01               	negf	___awdiv@dividend^0,c
  2866   001652  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2867   001654  B0D8               	btfsc	status,0,c
  2868   001656  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2869   001658  0E01               	movlw	1
  2870   00165A  1A06               	xorwf	___awdiv@sign^0,f,c
  2871   00165C                     l2971:
  2872   00165C  0E00               	movlw	0
  2873   00165E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2874   001660  0E00               	movlw	0
  2875   001662  6E07               	movwf	___awdiv@quotient^0,c
  2876   001664  5003               	movf	___awdiv@divisor^0,w,c
  2877   001666  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2878   001668  B4D8               	btfsc	status,2,c
  2879   00166A  EF39  F00B         	goto	u1971
  2880   00166E  EF3B  F00B         	goto	u1970
  2881   001672                     u1971:
  2882   001672  EF63  F00B         	goto	l2993
  2883   001676                     u1970:
  2884   001676  0E01               	movlw	1
  2885   001678  6E05               	movwf	___awdiv@counter^0,c
  2886   00167A  EF43  F00B         	goto	l2979
  2887   00167E                     l2977:
  2888   00167E  90D8               	bcf	status,0,c
  2889   001680  3603               	rlcf	___awdiv@divisor^0,f,c
  2890   001682  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2891   001684  2A05               	incf	___awdiv@counter^0,f,c
  2892   001686                     l2979:
  2893   001686  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2894   001688  EF48  F00B         	goto	u1981
  2895   00168C  EF4A  F00B         	goto	u1980
  2896   001690                     u1981:
  2897   001690  EF3F  F00B         	goto	l2977
  2898   001694                     u1980:
  2899   001694                     l2981:
  2900   001694  90D8               	bcf	status,0,c
  2901   001696  3607               	rlcf	___awdiv@quotient^0,f,c
  2902   001698  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2903   00169A  5003               	movf	___awdiv@divisor^0,w,c
  2904   00169C  5C01               	subwf	___awdiv@dividend^0,w,c
  2905   00169E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2906   0016A0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2907   0016A2  A0D8               	btfss	status,0,c
  2908   0016A4  EF56  F00B         	goto	u1991
  2909   0016A8  EF58  F00B         	goto	u1990
  2910   0016AC                     u1991:
  2911   0016AC  EF5D  F00B         	goto	l2989
  2912   0016B0                     u1990:
  2913   0016B0  5003               	movf	___awdiv@divisor^0,w,c
  2914   0016B2  5E01               	subwf	___awdiv@dividend^0,f,c
  2915   0016B4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2916   0016B6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2917   0016B8  8007               	bsf	___awdiv@quotient^0,0,c
  2918   0016BA                     l2989:
  2919   0016BA  90D8               	bcf	status,0,c
  2920   0016BC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2921   0016BE  3203               	rrcf	___awdiv@divisor^0,f,c
  2922   0016C0  2E05               	decfsz	___awdiv@counter^0,f,c
  2923   0016C2  EF4A  F00B         	goto	l2981
  2924   0016C6                     l2993:
  2925   0016C6  5006               	movf	___awdiv@sign^0,w,c
  2926   0016C8  B4D8               	btfsc	status,2,c
  2927   0016CA  EF69  F00B         	goto	u2001
  2928   0016CE  EF6B  F00B         	goto	u2000
  2929   0016D2                     u2001:
  2930   0016D2  EF6F  F00B         	goto	l2997
  2931   0016D6                     u2000:
  2932   0016D6  6C07               	negf	___awdiv@quotient^0,c
  2933   0016D8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2934   0016DA  B0D8               	btfsc	status,0,c
  2935   0016DC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2936   0016DE                     l2997:
  2937   0016DE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2938   0016E2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2939   0016E6  0012               	return		;funcret
  2940   0016E8                     __end_of___awdiv:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function _menu *****************
  2944 ;; Defined at:
  2945 ;;		line 21 in file "menu.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  key             1    wreg     unsigned char 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  key             1   16[COMRAM] unsigned char 
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  1    wreg      void 
  2952 ;; Registers used:
  2953 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2959 ;;      Params:         0       0       0       0       0       0       0
  2960 ;;      Locals:         1       0       0       0       0       0       0
  2961 ;;      Temps:          0       0       0       0       0       0       0
  2962 ;;      Totals:         1       0       0       0       0       0       0
  2963 ;;Total ram usage:        1 bytes
  2964 ;; Hardware stack levels used: 1
  2965 ;; Hardware stack levels required when called: 3
  2966 ;; This function calls:
  2967 ;;		_clcd_print
  2968 ;;		_clcd_putch
  2969 ;;		_clcd_write
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text8
  2976   0010DE                     __ptext8:
  2977                           	callstack 0
  2978   0010DE                     _menu:
  2979                           	callstack 27
  2980                           
  2981                           ;incstack = 0
  2982                           ;menu@key stored from wreg
  2983   0010DE  6E11               	movwf	menu@key^0,c
  2984   0010E0                     
  2985                           ;menu.c: 21: void menu(char key);menu.c: 22: {;menu.c: 23:     clcd_print(logs[log_index
      +                          ], (0x80 + (2)));
  2986   0010E0  504D               	movf	_log_index^0,w,c
  2987   0010E2  0D02               	mullw	2
  2988   0010E4  50F3               	movf	243,w,c
  2989   0010E6  0FAF               	addlw	low _logs
  2990   0010E8  6ED9               	movwf	fsr2l,c
  2991   0010EA  6ADA               	clrf	fsr2h,c
  2992   0010EC  CFDE F003          	movff	postinc2,clcd_print@data
  2993   0010F0  CFDD F004          	movff	postdec2,clcd_print@data+1
  2994   0010F4  0E82               	movlw	130
  2995   0010F6  6E05               	movwf	clcd_print@addr^0,c
  2996   0010F8  ECEC  F00D         	call	_clcd_print	;wreg free
  2997                           
  2998                           ;menu.c: 24:     clcd_print(logs[(log_index+1)], (0xC0 + (2)));
  2999   0010FC  504D               	movf	_log_index^0,w,c
  3000   0010FE  0D02               	mullw	2
  3001   001100  50F3               	movf	243,w,c
  3002   001102  0FB1               	addlw	low (_logs+2)
  3003   001104  6ED9               	movwf	fsr2l,c
  3004   001106  6ADA               	clrf	fsr2h,c
  3005   001108  CFDE F003          	movff	postinc2,clcd_print@data
  3006   00110C  CFDD F004          	movff	postdec2,clcd_print@data+1
  3007   001110  0EC2               	movlw	194
  3008   001112  6E05               	movwf	clcd_print@addr^0,c
  3009   001114  ECEC  F00D         	call	_clcd_print	;wreg free
  3010   001118                     
  3011                           ;menu.c: 26:     if(star_flag==0)
  3012   001118  504F               	movf	_star_flag^0,w,c
  3013   00111A  A4D8               	btfss	status,2,c
  3014   00111C  EF92  F008         	goto	u2281
  3015   001120  EF94  F008         	goto	u2280
  3016   001124                     u2281:
  3017   001124  EFA0  F008         	goto	l3201
  3018   001128                     u2280:
  3019   001128                     
  3020                           ;menu.c: 27:     {;menu.c: 28:         clcd_putch('*',(0x80 + (0)));
  3021   001128  0E80               	movlw	128
  3022   00112A  6E0F               	movwf	clcd_putch@addr^0,c
  3023   00112C  0E2A               	movlw	42
  3024   00112E  ECAA  F00F         	call	_clcd_putch
  3025                           
  3026                           ;menu.c: 29:         clcd_putch(' ',(0xC0 + (0)));
  3027   001132  0EC0               	movlw	192
  3028   001134  6E0F               	movwf	clcd_putch@addr^0,c
  3029   001136  0E20               	movlw	32
  3030   001138  ECAA  F00F         	call	_clcd_putch
  3031                           
  3032                           ;menu.c: 30:     }
  3033   00113C  EFAA  F008         	goto	l3203
  3034   001140                     l3201:
  3035                           
  3036                           ;menu.c: 32:     {;menu.c: 33:         clcd_putch(' ',(0x80 + (0)));
  3037   001140  0E80               	movlw	128
  3038   001142  6E0F               	movwf	clcd_putch@addr^0,c
  3039   001144  0E20               	movlw	32
  3040   001146  ECAA  F00F         	call	_clcd_putch
  3041                           
  3042                           ;menu.c: 34:         clcd_putch('*',(0xC0 + (0)));
  3043   00114A  0EC0               	movlw	192
  3044   00114C  6E0F               	movwf	clcd_putch@addr^0,c
  3045   00114E  0E2A               	movlw	42
  3046   001150  ECAA  F00F         	call	_clcd_putch
  3047   001154                     l3203:
  3048                           
  3049                           ;menu.c: 38:     if(key==5 )
  3050   001154  0E05               	movlw	5
  3051   001156  1811               	xorwf	menu@key^0,w,c
  3052   001158  A4D8               	btfss	status,2,c
  3053   00115A  EFB1  F008         	goto	u2291
  3054   00115E  EFB3  F008         	goto	u2290
  3055   001162                     u2291:
  3056   001162  EFCA  F008         	goto	l3215
  3057   001166                     u2290:
  3058   001166                     
  3059                           ;menu.c: 39:     {;menu.c: 40:         if(star_flag==0)
  3060   001166  504F               	movf	_star_flag^0,w,c
  3061   001168  A4D8               	btfss	status,2,c
  3062   00116A  EFB9  F008         	goto	u2301
  3063   00116E  EFBB  F008         	goto	u2300
  3064   001172                     u2301:
  3065   001172  EFC0  F008         	goto	l3211
  3066   001176                     u2300:
  3067   001176                     
  3068                           ;menu.c: 41:         {;menu.c: 42:             star_flag=1;
  3069   001176  0E01               	movlw	1
  3070   001178  6E4F               	movwf	_star_flag^0,c
  3071   00117A                     
  3072                           ;menu.c: 43:             star_index++;
  3073   00117A  2A4E               	incf	_star_index^0,f,c
  3074                           
  3075                           ;menu.c: 44:         }
  3076   00117C  EFCA  F008         	goto	l3215
  3077   001180                     l3211:
  3078   001180  0E03               	movlw	3
  3079   001182  604D               	cpfslt	_log_index^0,c
  3080   001184  EFC6  F008         	goto	u2311
  3081   001188  EFC8  F008         	goto	u2310
  3082   00118C                     u2311:
  3083   00118C  EFCA  F008         	goto	l3215
  3084   001190                     u2310:
  3085   001190                     
  3086                           ;menu.c: 46:         {;menu.c: 47:             log_index++;
  3087   001190  2A4D               	incf	_log_index^0,f,c
  3088                           
  3089                           ;menu.c: 48:             star_index++;
  3090   001192  2A4E               	incf	_star_index^0,f,c
  3091   001194                     l3215:
  3092                           
  3093                           ;menu.c: 52:     if(key==6 )
  3094   001194  0E06               	movlw	6
  3095   001196  1811               	xorwf	menu@key^0,w,c
  3096   001198  A4D8               	btfss	status,2,c
  3097   00119A  EFD1  F008         	goto	u2321
  3098   00119E  EFD3  F008         	goto	u2320
  3099   0011A2                     u2321:
  3100   0011A2  EFEA  F008         	goto	l3227
  3101   0011A6                     u2320:
  3102   0011A6                     
  3103                           ;menu.c: 53:     {;menu.c: 54:          if(star_flag==1)
  3104   0011A6  044F               	decf	_star_flag^0,w,c
  3105   0011A8  A4D8               	btfss	status,2,c
  3106   0011AA  EFD9  F008         	goto	u2331
  3107   0011AE  EFDB  F008         	goto	u2330
  3108   0011B2                     u2331:
  3109   0011B2  EFE0  F008         	goto	l3223
  3110   0011B6                     u2330:
  3111   0011B6                     
  3112                           ;menu.c: 55:          {;menu.c: 56:            star_flag=0;
  3113   0011B6  0E00               	movlw	0
  3114   0011B8  6E4F               	movwf	_star_flag^0,c
  3115   0011BA                     
  3116                           ;menu.c: 57:            star_index--;
  3117   0011BA  064E               	decf	_star_index^0,f,c
  3118                           
  3119                           ;menu.c: 58:          }
  3120   0011BC  EFEA  F008         	goto	l3227
  3121   0011C0                     l3223:
  3122   0011C0  504D               	movf	_log_index^0,w,c
  3123   0011C2  B4D8               	btfsc	status,2,c
  3124   0011C4  EFE6  F008         	goto	u2341
  3125   0011C8  EFE8  F008         	goto	u2340
  3126   0011CC                     u2341:
  3127   0011CC  EFEA  F008         	goto	l3227
  3128   0011D0                     u2340:
  3129   0011D0                     
  3130                           ;menu.c: 61:         {;menu.c: 62:             log_index--;
  3131   0011D0  064D               	decf	_log_index^0,f,c
  3132                           
  3133                           ;menu.c: 63:             star_index--;
  3134   0011D2  064E               	decf	_star_index^0,f,c
  3135   0011D4                     l3227:
  3136                           
  3137                           ;menu.c: 68:     if(key==15)
  3138   0011D4  0E0F               	movlw	15
  3139   0011D6  1811               	xorwf	menu@key^0,w,c
  3140   0011D8  A4D8               	btfss	status,2,c
  3141   0011DA  EFF1  F008         	goto	u2351
  3142   0011DE  EFF3  F008         	goto	u2350
  3143   0011E2                     u2351:
  3144   0011E2  EFFC  F008         	goto	l3235
  3145   0011E6                     u2350:
  3146   0011E6                     
  3147                           ;menu.c: 69:     {;menu.c: 70:         clcd_write(0x01, 0);
  3148   0011E6  0E00               	movlw	0
  3149   0011E8  6E01               	movwf	clcd_write@control_bit^0,c
  3150   0011EA  0E01               	movlw	1
  3151   0011EC  EC1C  F00F         	call	_clcd_write
  3152   0011F0                     
  3153                           ;menu.c: 71:         main_f=3;
  3154   0011F0  0E03               	movlw	3
  3155   0011F2  6E54               	movwf	_main_f^0,c
  3156   0011F4                     
  3157                           ;menu.c: 72:         menu_f=star_index;
  3158   0011F4  C04E  F053         	movff	_star_index,_menu_f
  3159   0011F8                     l3235:
  3160                           
  3161                           ;menu.c: 74:     if(key==16)
  3162   0011F8  0E10               	movlw	16
  3163   0011FA  1811               	xorwf	menu@key^0,w,c
  3164   0011FC  A4D8               	btfss	status,2,c
  3165   0011FE  EF03  F009         	goto	u2361
  3166   001202  EF05  F009         	goto	u2360
  3167   001206                     u2361:
  3168   001206  EF0C  F009         	goto	l474
  3169   00120A                     u2360:
  3170   00120A                     
  3171                           ;menu.c: 75:     {;menu.c: 76:         clcd_write(0x01, 0);
  3172   00120A  0E00               	movlw	0
  3173   00120C  6E01               	movwf	clcd_write@control_bit^0,c
  3174   00120E  0E01               	movlw	1
  3175   001210  EC1C  F00F         	call	_clcd_write
  3176   001214                     
  3177                           ;menu.c: 77:         main_f=0;
  3178   001214  0E00               	movlw	0
  3179   001216  6E54               	movwf	_main_f^0,c
  3180   001218                     l474:
  3181   001218  0012               	return		;funcret
  3182   00121A                     __end_of_menu:
  3183                           	callstack 0
  3184                           
  3185 ;; *************** function _init_config *****************
  3186 ;; Defined at:
  3187 ;;		line 22 in file "main.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  j               2    5[COMRAM] int 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3201 ;;      Params:         0       0       0       0       0       0       0
  3202 ;;      Locals:         2       0       0       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0       0       0
  3204 ;;      Totals:         2       0       0       0       0       0       0
  3205 ;;Total ram usage:        2 bytes
  3206 ;; Hardware stack levels used: 1
  3207 ;; Hardware stack levels required when called: 6
  3208 ;; This function calls:
  3209 ;;		_init_adc
  3210 ;;		_init_clcd
  3211 ;;		_init_ds1307
  3212 ;;		_init_i2c
  3213 ;;		_init_matrix_keypad
  3214 ;;		_init_timer0
  3215 ;;		_init_uart
  3216 ;;		_read_external_eeprom
  3217 ;;		_write_external_eeprom
  3218 ;; This function is called by:
  3219 ;;		_main
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text9
  3224   0018DC                     __ptext9:
  3225                           	callstack 0
  3226   0018DC                     _init_config:
  3227                           	callstack 24
  3228   0018DC                     
  3229                           ;main.c: 23:     init_clcd();
  3230   0018DC  ECCC  F00B         	call	_init_clcd	;wreg free
  3231                           
  3232                           ;main.c: 24:     init_matrix_keypad();
  3233   0018E0  ECDF  F00F         	call	_init_matrix_keypad	;wreg free
  3234   0018E4                     
  3235                           ;main.c: 25:     init_adc();
  3236   0018E4  EC7E  F00F         	call	_init_adc	;wreg free
  3237   0018E8                     
  3238                           ;main.c: 26:     init_i2c();
  3239   0018E8  ECB6  F00F         	call	_init_i2c	;wreg free
  3240                           
  3241                           ;main.c: 27:     init_ds1307();
  3242   0018EC  ECB5  F00E         	call	_init_ds1307	;wreg free
  3243   0018F0                     
  3244                           ;main.c: 28:  init_timer0();
  3245   0018F0  ECCC  F00F         	call	_init_timer0	;wreg free
  3246   0018F4                     
  3247                           ;main.c: 29:     init_uart();
  3248   0018F4  ECD6  F00F         	call	_init_uart	;wreg free
  3249                           
  3250                           ;main.c: 33:     write_external_eeprom(200,'0');
  3251   0018F8  0E30               	movlw	48
  3252   0018FA  6E02               	movwf	write_external_eeprom@data^0,c
  3253   0018FC  0EC8               	movlw	200
  3254   0018FE  ECFC  F00E         	call	_write_external_eeprom
  3255                           
  3256                           ;main.c: 34:     write_external_eeprom(201,'0');
  3257   001902  0E30               	movlw	48
  3258   001904  6E02               	movwf	write_external_eeprom@data^0,c
  3259   001906  0EC9               	movlw	201
  3260   001908  ECFC  F00E         	call	_write_external_eeprom
  3261                           
  3262                           ;main.c: 35:     write_external_eeprom(202,'0');
  3263   00190C  0E30               	movlw	48
  3264   00190E  6E02               	movwf	write_external_eeprom@data^0,c
  3265   001910  0ECA               	movlw	202
  3266   001912  ECFC  F00E         	call	_write_external_eeprom
  3267                           
  3268                           ;main.c: 36:     write_external_eeprom(203,'0');
  3269   001916  0E30               	movlw	48
  3270   001918  6E02               	movwf	write_external_eeprom@data^0,c
  3271   00191A  0ECB               	movlw	203
  3272   00191C  ECFC  F00E         	call	_write_external_eeprom
  3273   001920                     
  3274                           ;main.c: 39: for(int j=0; j<4; j++)
  3275   001920  0E00               	movlw	0
  3276   001922  6E07               	movwf	(init_config@j+1)^0,c
  3277   001924  0E00               	movlw	0
  3278   001926  6E06               	movwf	init_config@j^0,c
  3279   001928                     l3063:
  3280                           
  3281                           ;main.c: 40: {;main.c: 41:     pass[j] = read_external_eeprom(j+200);
  3282   001928  5006               	movf	init_config@j^0,w,c
  3283   00192A  0F9A               	addlw	low _pass
  3284   00192C  6ED9               	movwf	fsr2l,c
  3285   00192E  6ADA               	clrf	fsr2h,c
  3286   001930  5006               	movf	init_config@j^0,w,c
  3287   001932  0FC8               	addlw	200
  3288   001934  EC54  F00F         	call	_read_external_eeprom
  3289   001938  6EDF               	movwf	indf2,c
  3290   00193A                     
  3291                           ;main.c: 42: }
  3292   00193A  4A06               	infsnz	init_config@j^0,f,c
  3293   00193C  2A07               	incf	(init_config@j+1)^0,f,c
  3294   00193E  BE07               	btfsc	(init_config@j+1)^0,7,c
  3295   001940  EFAB  F00C         	goto	u2081
  3296   001944  5007               	movf	(init_config@j+1)^0,w,c
  3297   001946  E109               	bnz	u2080
  3298   001948  0E04               	movlw	4
  3299   00194A  5C06               	subwf	init_config@j^0,w,c
  3300   00194C  A0D8               	btfss	status,0,c
  3301   00194E  EFAB  F00C         	goto	u2081
  3302   001952  EFAD  F00C         	goto	u2080
  3303   001956                     u2081:
  3304   001956  EF94  F00C         	goto	l3063
  3305   00195A                     u2080:
  3306   00195A                     
  3307                           ;main.c: 43:     pass[4]='\0';
  3308   00195A  0E00               	movlw	0
  3309   00195C  0100               	movlb	0	; () banked
  3310   00195E  6F9E               	movwf	(_pass+4)& (0+255),b
  3311   001960                     
  3312                           ; BSR set to: 0
  3313   001960  0012               	return		;funcret
  3314   001962                     __end_of_init_config:
  3315                           	callstack 0
  3316                           
  3317 ;; *************** function _init_uart *****************
  3318 ;; Defined at:
  3319 ;;		line 4 in file "uart.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3333 ;;      Params:         0       0       0       0       0       0       0
  3334 ;;      Locals:         0       0       0       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0       0       0
  3336 ;;      Totals:         0       0       0       0       0       0       0
  3337 ;;Total ram usage:        0 bytes
  3338 ;; Hardware stack levels used: 1
  3339 ;; Hardware stack levels required when called: 1
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_init_config
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text10
  3348   001FAC                     __ptext10:
  3349                           	callstack 0
  3350   001FAC                     _init_uart:
  3351                           	callstack 28
  3352   001FAC                     
  3353                           ;uart.c: 7:  TRISC7 = 1;
  3354   001FAC  8E94               	bsf	3988,7,c	;volatile
  3355                           
  3356                           ;uart.c: 8:  TRISC6 = 0;
  3357   001FAE  9C94               	bcf	3988,6,c	;volatile
  3358                           
  3359                           ;uart.c: 11:  BRGH = 1;
  3360   001FB0  84AC               	bsf	4012,2,c	;volatile
  3361                           
  3362                           ;uart.c: 12:  SPEN = 1;
  3363   001FB2  8EAB               	bsf	4011,7,c	;volatile
  3364                           
  3365                           ;uart.c: 16:  CREN = 1;
  3366   001FB4  88AB               	bsf	4011,4,c	;volatile
  3367   001FB6                     
  3368                           ;uart.c: 22:  SPBRG = 129;
  3369   001FB6  0E81               	movlw	129
  3370   001FB8  6EAF               	movwf	175,c	;volatile
  3371   001FBA                     
  3372                           ;uart.c: 24:     RCIE = 1;
  3373   001FBA  8A9D               	bsf	3997,5,c	;volatile
  3374   001FBC  0012               	return		;funcret
  3375   001FBE                     __end_of_init_uart:
  3376                           	callstack 0
  3377                           
  3378 ;; *************** function _init_timer0 *****************
  3379 ;; Defined at:
  3380 ;;		line 4 in file "timer0.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3394 ;;      Params:         0       0       0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0
  3397 ;;      Totals:         0       0       0       0       0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used: 1
  3400 ;; Hardware stack levels required when called: 1
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_init_config
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text11
  3409   001F98                     __ptext11:
  3410                           	callstack 0
  3411   001F98                     _init_timer0:
  3412                           	callstack 28
  3413   001F98                     
  3414                           ;timer0.c: 12:  T08BIT = 1;
  3415   001F98  8CD5               	bsf	4053,6,c	;volatile
  3416                           
  3417                           ;timer0.c: 15:  T0CS = 0;
  3418   001F9A  9AD5               	bcf	4053,5,c	;volatile
  3419                           
  3420                           ;timer0.c: 18:  TMR0ON = 1;
  3421   001F9C  8ED5               	bsf	4053,7,c	;volatile
  3422                           
  3423                           ;timer0.c: 21:  PSA = 1;
  3424   001F9E  86D5               	bsf	4053,3,c	;volatile
  3425   001FA0                     
  3426                           ;timer0.c: 24:  TMR0 = 6;
  3427   001FA0  0E00               	movlw	0
  3428   001FA2  6ED7               	movwf	215,c	;volatile
  3429   001FA4  0E06               	movlw	6
  3430   001FA6  6ED6               	movwf	214,c	;volatile
  3431   001FA8                     
  3432                           ;timer0.c: 27:  TMR0IF = 0;
  3433   001FA8  94F2               	bcf	4082,2,c	;volatile
  3434   001FAA  0012               	return		;funcret
  3435   001FAC                     __end_of_init_timer0:
  3436                           	callstack 0
  3437                           
  3438 ;; *************** function _init_matrix_keypad *****************
  3439 ;; Defined at:
  3440 ;;		line 5 in file "matrix_keypad.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, status,2, status,0
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3454 ;;      Params:         0       0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0
  3457 ;;      Totals:         0       0       0       0       0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 1
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_init_config
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text12
  3469   001FBE                     __ptext12:
  3470                           	callstack 0
  3471   001FBE                     _init_matrix_keypad:
  3472                           	callstack 28
  3473   001FBE                     
  3474                           ;matrix_keypad.c: 8:  ADCON1 = 0x0F;
  3475   001FBE  0E0F               	movlw	15
  3476   001FC0  6EC1               	movwf	193,c	;volatile
  3477                           
  3478                           ;matrix_keypad.c: 11:  TRISB = 0x1E;
  3479   001FC2  0E1E               	movlw	30
  3480   001FC4  6E93               	movwf	147,c	;volatile
  3481   001FC6                     
  3482                           ;matrix_keypad.c: 14:  RBPU = 0;
  3483   001FC6  9EF1               	bcf	4081,7,c	;volatile
  3484   001FC8                     
  3485                           ;matrix_keypad.c: 16:  PORTB = PORTB | 0xE0;
  3486   001FC8  5081               	movf	129,w,c	;volatile
  3487   001FCA  09E0               	iorlw	224
  3488   001FCC  6E81               	movwf	129,c	;volatile
  3489   001FCE  0012               	return		;funcret
  3490   001FD0                     __end_of_init_matrix_keypad:
  3491                           	callstack 0
  3492                           
  3493 ;; *************** function _init_i2c *****************
  3494 ;; Defined at:
  3495 ;;		line 4 in file "i2c.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;		None
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;		None
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      void 
  3502 ;; Registers used:
  3503 ;;		wreg, status,2
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3509 ;;      Params:         0       0       0       0       0       0       0
  3510 ;;      Locals:         0       0       0       0       0       0       0
  3511 ;;      Temps:          0       0       0       0       0       0       0
  3512 ;;      Totals:         0       0       0       0       0       0       0
  3513 ;;Total ram usage:        0 bytes
  3514 ;; Hardware stack levels used: 1
  3515 ;; Hardware stack levels required when called: 1
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_init_config
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text13
  3524   001F6C                     __ptext13:
  3525                           	callstack 0
  3526   001F6C                     _init_i2c:
  3527                           	callstack 28
  3528   001F6C                     
  3529                           ;i2c.c: 7:  TRISC3 = 1;
  3530   001F6C  8694               	bsf	3988,3,c	;volatile
  3531                           
  3532                           ;i2c.c: 8:  TRISC4 = 1;
  3533   001F6E  8894               	bsf	3988,4,c	;volatile
  3534   001F70                     
  3535                           ;i2c.c: 10:  SSPCON1 = 0x28;
  3536   001F70  0E28               	movlw	40
  3537   001F72  6EC6               	movwf	198,c	;volatile
  3538                           
  3539                           ;i2c.c: 12:  SSPADD = 0x31;
  3540   001F74  0E31               	movlw	49
  3541   001F76  6EC8               	movwf	200,c	;volatile
  3542   001F78                     
  3543                           ;i2c.c: 14:  CKE = 0;
  3544   001F78  9CC7               	bcf	4039,6,c	;volatile
  3545   001F7A                     
  3546                           ;i2c.c: 16:  SMP = 1;
  3547   001F7A  8EC7               	bsf	4039,7,c	;volatile
  3548   001F7C                     
  3549                           ;i2c.c: 18:  SSPIF = 0;
  3550   001F7C  969E               	bcf	3998,3,c	;volatile
  3551   001F7E                     
  3552                           ;i2c.c: 20:  BCLIF = 0;
  3553   001F7E  96A1               	bcf	4001,3,c	;volatile
  3554   001F80  0012               	return		;funcret
  3555   001F82                     __end_of_init_i2c:
  3556                           	callstack 0
  3557                           
  3558 ;; *************** function _init_ds1307 *****************
  3559 ;; Defined at:
  3560 ;;		line 13 in file "ds1307.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;		None
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  dummy           1    3[COMRAM] unsigned char 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3574 ;;      Params:         0       0       0       0       0       0       0
  3575 ;;      Locals:         1       0       0       0       0       0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0
  3577 ;;      Totals:         1       0       0       0       0       0       0
  3578 ;;Total ram usage:        1 bytes
  3579 ;; Hardware stack levels used: 1
  3580 ;; Hardware stack levels required when called: 5
  3581 ;; This function calls:
  3582 ;;		_read_ds1307
  3583 ;;		_write_ds1307
  3584 ;; This function is called by:
  3585 ;;		_init_config
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text14
  3590   001D6A                     __ptext14:
  3591                           	callstack 0
  3592   001D6A                     _init_ds1307:
  3593                           	callstack 24
  3594   001D6A                     
  3595                           ;ds1307.c: 15:  unsigned char dummy;;ds1307.c: 18:  dummy = read_ds1307(0x00);
  3596   001D6A  0E00               	movlw	0
  3597   001D6C  EC69  F00F         	call	_read_ds1307
  3598   001D70  6E04               	movwf	init_ds1307@dummy^0,c
  3599   001D72                     
  3600                           ;ds1307.c: 19:  write_ds1307(0x00, dummy | 0x80);
  3601   001D72  5004               	movf	init_ds1307@dummy^0,w,c
  3602   001D74  0980               	iorlw	128
  3603   001D76  6E02               	movwf	write_ds1307@data^0,c
  3604   001D78  0E00               	movlw	0
  3605   001D7A  EC8E  F00F         	call	_write_ds1307
  3606   001D7E                     
  3607                           ;ds1307.c: 22:  dummy = read_ds1307(0x02);
  3608   001D7E  0E02               	movlw	2
  3609   001D80  EC69  F00F         	call	_read_ds1307
  3610   001D84  6E04               	movwf	init_ds1307@dummy^0,c
  3611                           
  3612                           ;ds1307.c: 23:  write_ds1307(0x02, dummy | 0x40);
  3613   001D86  5004               	movf	init_ds1307@dummy^0,w,c
  3614   001D88  0940               	iorlw	64
  3615   001D8A  6E02               	movwf	write_ds1307@data^0,c
  3616   001D8C  0E02               	movlw	2
  3617   001D8E  EC8E  F00F         	call	_write_ds1307
  3618   001D92                     
  3619                           ;ds1307.c: 38:  write_ds1307(0x07, 0x93);
  3620   001D92  0E93               	movlw	147
  3621   001D94  6E02               	movwf	write_ds1307@data^0,c
  3622   001D96  0E07               	movlw	7
  3623   001D98  EC8E  F00F         	call	_write_ds1307
  3624   001D9C                     
  3625                           ;ds1307.c: 41:  dummy = read_ds1307(0x00);
  3626   001D9C  0E00               	movlw	0
  3627   001D9E  EC69  F00F         	call	_read_ds1307
  3628   001DA2  6E04               	movwf	init_ds1307@dummy^0,c
  3629                           
  3630                           ;ds1307.c: 42:  write_ds1307(0x00, dummy & 0x7F);
  3631   001DA4  5004               	movf	init_ds1307@dummy^0,w,c
  3632   001DA6  0B7F               	andlw	127
  3633   001DA8  6E02               	movwf	write_ds1307@data^0,c
  3634   001DAA  0E00               	movlw	0
  3635   001DAC  EC8E  F00F         	call	_write_ds1307
  3636   001DB0  0012               	return		;funcret
  3637   001DB2                     __end_of_init_ds1307:
  3638                           	callstack 0
  3639                           
  3640 ;; *************** function _write_ds1307 *****************
  3641 ;; Defined at:
  3642 ;;		line 46 in file "ds1307.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  address         1    wreg     unsigned char 
  3645 ;;  data            1    1[COMRAM] unsigned char 
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;  address         1    2[COMRAM] unsigned char 
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3657 ;;      Params:         1       0       0       0       0       0       0
  3658 ;;      Locals:         1       0       0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0
  3660 ;;      Totals:         2       0       0       0       0       0       0
  3661 ;;Total ram usage:        2 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; Hardware stack levels required when called: 3
  3664 ;; This function calls:
  3665 ;;		_i2c_start
  3666 ;;		_i2c_stop
  3667 ;;		_i2c_write
  3668 ;; This function is called by:
  3669 ;;		_init_ds1307
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text15
  3674   001F1C                     __ptext15:
  3675                           	callstack 0
  3676   001F1C                     _write_ds1307:
  3677                           	callstack 25
  3678                           
  3679                           ;incstack = 0
  3680                           ;write_ds1307@address stored from wreg
  3681   001F1C  6E03               	movwf	write_ds1307@address^0,c
  3682   001F1E                     
  3683                           ;ds1307.c: 46: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 47
      +                          : {;ds1307.c: 48:  i2c_start();
  3684   001F1E  EC11  F010         	call	_i2c_start	;wreg free
  3685   001F22                     
  3686                           ;ds1307.c: 49:  i2c_write(0xD0);
  3687   001F22  0ED0               	movlw	208
  3688   001F24  ECFF  F00F         	call	_i2c_write
  3689   001F28                     
  3690                           ;ds1307.c: 50:  i2c_write(address);
  3691   001F28  5003               	movf	write_ds1307@address^0,w,c
  3692   001F2A  ECFF  F00F         	call	_i2c_write
  3693   001F2E                     
  3694                           ;ds1307.c: 51:  i2c_write(data);
  3695   001F2E  5002               	movf	write_ds1307@data^0,w,c
  3696   001F30  ECFF  F00F         	call	_i2c_write
  3697   001F34                     
  3698                           ;ds1307.c: 52:  i2c_stop();
  3699   001F34  EC0D  F010         	call	_i2c_stop	;wreg free
  3700   001F38  0012               	return		;funcret
  3701   001F3A                     __end_of_write_ds1307:
  3702                           	callstack 0
  3703                           
  3704 ;; *************** function _init_clcd *****************
  3705 ;; Defined at:
  3706 ;;		line 28 in file "clcd.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;		None
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;		None
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      void 
  3713 ;; Registers used:
  3714 ;;		wreg, status,2, status,0, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3720 ;;      Params:         0       0       0       0       0       0       0
  3721 ;;      Locals:         0       0       0       0       0       0       0
  3722 ;;      Temps:          1       0       0       0       0       0       0
  3723 ;;      Totals:         1       0       0       0       0       0       0
  3724 ;;Total ram usage:        1 bytes
  3725 ;; Hardware stack levels used: 1
  3726 ;; Hardware stack levels required when called: 2
  3727 ;; This function calls:
  3728 ;;		_clcd_write
  3729 ;; This function is called by:
  3730 ;;		_init_config
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text16
  3735   001798                     __ptext16:
  3736                           	callstack 0
  3737   001798                     _init_clcd:
  3738                           	callstack 27
  3739   001798                     
  3740                           ;clcd.c: 31:  TRISD = 0x00;
  3741   001798  0E00               	movlw	0
  3742   00179A  6E95               	movwf	149,c	;volatile
  3743   00179C                     
  3744                           ;clcd.c: 33:  TRISC = TRISC & 0xF8;
  3745   00179C  5094               	movf	148,w,c	;volatile
  3746   00179E  0BF8               	andlw	248
  3747   0017A0  6E94               	movwf	148,c	;volatile
  3748   0017A2                     
  3749                           ;clcd.c: 35:  RC0 = 0;
  3750   0017A2  9082               	bcf	3970,0,c	;volatile
  3751   0017A4                     
  3752                           ;clcd.c: 39:     _delay((unsigned long)((30)*(20000000/4000.0)));
  3753   0017A4  0EC3               	movlw	195
  3754   0017A6  6E03               	movwf	??_init_clcd^0,c
  3755   0017A8  0ECD               	movlw	205
  3756   0017AA                     u3257:
  3757   0017AA  2EE8               	decfsz	wreg,f,c
  3758   0017AC  D7FE               	bra	u3257
  3759   0017AE  2E03               	decfsz	??_init_clcd^0,f,c
  3760   0017B0  D7FC               	bra	u3257
  3761   0017B2  0000               	nop	
  3762   0017B4                     
  3763                           ;clcd.c: 42:     clcd_write(0x33, 0 );
  3764   0017B4  0E00               	movlw	0
  3765   0017B6  6E01               	movwf	clcd_write@control_bit^0,c
  3766   0017B8  0E33               	movlw	51
  3767   0017BA  EC1C  F00F         	call	_clcd_write
  3768   0017BE                     
  3769                           ;clcd.c: 43:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  3770   0017BE  0E1B               	movlw	27
  3771   0017C0  6E03               	movwf	??_init_clcd^0,c
  3772   0017C2  0E9E               	movlw	158
  3773   0017C4                     u3267:
  3774   0017C4  2EE8               	decfsz	wreg,f,c
  3775   0017C6  D7FE               	bra	u3267
  3776   0017C8  2E03               	decfsz	??_init_clcd^0,f,c
  3777   0017CA  D7FC               	bra	u3267
  3778   0017CC  D000               	nop2	
  3779   0017CE                     
  3780                           ;clcd.c: 44:     clcd_write(0x33, 0 );
  3781   0017CE  0E00               	movlw	0
  3782   0017D0  6E01               	movwf	clcd_write@control_bit^0,c
  3783   0017D2  0E33               	movlw	51
  3784   0017D4  EC1C  F00F         	call	_clcd_write
  3785   0017D8                     
  3786                           ;clcd.c: 45:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3787   0017D8  0EA6               	movlw	166
  3788   0017DA                     u3277:
  3789   0017DA  2EE8               	decfsz	wreg,f,c
  3790   0017DC  D7FE               	bra	u3277
  3791   0017DE  D000               	nop2	
  3792   0017E0                     
  3793                           ;clcd.c: 46:     clcd_write(0x33, 0 );
  3794   0017E0  0E00               	movlw	0
  3795   0017E2  6E01               	movwf	clcd_write@control_bit^0,c
  3796   0017E4  0E33               	movlw	51
  3797   0017E6  EC1C  F00F         	call	_clcd_write
  3798   0017EA                     
  3799                           ;clcd.c: 47:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3800   0017EA  D000               	nop2		;2 cycle nop
  3801   0017EC  D000               	nop2		;2 cycle nop
  3802   0017EE  0000               	nop	
  3803   0017F0                     
  3804                           ;clcd.c: 49:     clcd_write(0x02, 0);
  3805   0017F0  0E00               	movlw	0
  3806   0017F2  6E01               	movwf	clcd_write@control_bit^0,c
  3807   0017F4  0E02               	movlw	2
  3808   0017F6  EC1C  F00F         	call	_clcd_write
  3809   0017FA                     
  3810                           ;clcd.c: 50:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3811   0017FA  0EA6               	movlw	166
  3812   0017FC                     u3287:
  3813   0017FC  2EE8               	decfsz	wreg,f,c
  3814   0017FE  D7FE               	bra	u3287
  3815   001800  D000               	nop2	
  3816   001802                     
  3817                           ;clcd.c: 51:     clcd_write(0x38, 0);
  3818   001802  0E00               	movlw	0
  3819   001804  6E01               	movwf	clcd_write@control_bit^0,c
  3820   001806  0E38               	movlw	56
  3821   001808  EC1C  F00F         	call	_clcd_write
  3822   00180C                     
  3823                           ;clcd.c: 52:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3824   00180C  0EA6               	movlw	166
  3825   00180E                     u3297:
  3826   00180E  2EE8               	decfsz	wreg,f,c
  3827   001810  D7FE               	bra	u3297
  3828   001812  D000               	nop2	
  3829   001814                     
  3830                           ;clcd.c: 53:     clcd_write(0x01, 0);
  3831   001814  0E00               	movlw	0
  3832   001816  6E01               	movwf	clcd_write@control_bit^0,c
  3833   001818  0E01               	movlw	1
  3834   00181A  EC1C  F00F         	call	_clcd_write
  3835   00181E                     
  3836                           ;clcd.c: 54:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  3837   00181E  0E04               	movlw	4
  3838   001820  6E03               	movwf	??_init_clcd^0,c
  3839   001822  0E3E               	movlw	62
  3840   001824                     u3307:
  3841   001824  2EE8               	decfsz	wreg,f,c
  3842   001826  D7FE               	bra	u3307
  3843   001828  2E03               	decfsz	??_init_clcd^0,f,c
  3844   00182A  D7FC               	bra	u3307
  3845   00182C                     
  3846                           ;clcd.c: 55:     clcd_write(0x0C, 0);
  3847   00182C  0E00               	movlw	0
  3848   00182E  6E01               	movwf	clcd_write@control_bit^0,c
  3849   001830  0E0C               	movlw	12
  3850   001832  EC1C  F00F         	call	_clcd_write
  3851   001836                     
  3852                           ;clcd.c: 56:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3853   001836  0EA6               	movlw	166
  3854   001838                     u3317:
  3855   001838  2EE8               	decfsz	wreg,f,c
  3856   00183A  D7FE               	bra	u3317
  3857   00183C  D000               	nop2	
  3858   00183E  0012               	return		;funcret
  3859   001840                     __end_of_init_clcd:
  3860                           	callstack 0
  3861                           
  3862 ;; *************** function _init_adc *****************
  3863 ;; Defined at:
  3864 ;;		line 4 in file "adc.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;		None
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3878 ;;      Params:         0       0       0       0       0       0       0
  3879 ;;      Locals:         0       0       0       0       0       0       0
  3880 ;;      Temps:          0       0       0       0       0       0       0
  3881 ;;      Totals:         0       0       0       0       0       0       0
  3882 ;;Total ram usage:        0 bytes
  3883 ;; Hardware stack levels used: 1
  3884 ;; Hardware stack levels required when called: 1
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_init_config
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text17
  3893   001EFC                     __ptext17:
  3894                           	callstack 0
  3895   001EFC                     _init_adc:
  3896                           	callstack 28
  3897   001EFC                     
  3898                           ;adc.c: 7:  ADFM = 1;
  3899   001EFC  8EC0               	bsf	4032,7,c	;volatile
  3900                           
  3901                           ;adc.c: 13:  ACQT2 = 0;
  3902   001EFE  9AC0               	bcf	4032,5,c	;volatile
  3903                           
  3904                           ;adc.c: 14:  ACQT1 = 1;
  3905   001F00  88C0               	bsf	4032,4,c	;volatile
  3906                           
  3907                           ;adc.c: 15:  ACQT0 = 0;
  3908   001F02  96C0               	bcf	4032,3,c	;volatile
  3909                           
  3910                           ;adc.c: 21:  ADCS0 = 0;
  3911   001F04  90C0               	bcf	4032,0,c	;volatile
  3912                           
  3913                           ;adc.c: 22:  ADCS1 = 1;
  3914   001F06  82C0               	bsf	4032,1,c	;volatile
  3915                           
  3916                           ;adc.c: 23:  ADCS2 = 0;
  3917   001F08  94C0               	bcf	4032,2,c	;volatile
  3918                           
  3919                           ;adc.c: 26:  GODONE = 0;
  3920   001F0A  92C2               	bcf	4034,1,c	;volatile
  3921                           
  3922                           ;adc.c: 31:  VCFG1 = 0;
  3923   001F0C  9AC1               	bcf	4033,5,c	;volatile
  3924                           
  3925                           ;adc.c: 33:  VCFG0 = 0;
  3926   001F0E  98C1               	bcf	4033,4,c	;volatile
  3927   001F10                     
  3928                           ;adc.c: 36:  ADRESH = 0;
  3929   001F10  0E00               	movlw	0
  3930   001F12  6EC4               	movwf	196,c	;volatile
  3931                           
  3932                           ;adc.c: 37:  ADRESL = 0;
  3933   001F14  0E00               	movlw	0
  3934   001F16  6EC3               	movwf	195,c	;volatile
  3935   001F18                     
  3936                           ;adc.c: 40:  ADON = 1;
  3937   001F18  80C2               	bsf	4034,0,c	;volatile
  3938   001F1A  0012               	return		;funcret
  3939   001F1C                     __end_of_init_adc:
  3940                           	callstack 0
  3941                           
  3942 ;; *************** function _download_log *****************
  3943 ;; Defined at:
  3944 ;;		line 26 in file "download_log.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;  j               2   14[COMRAM] int 
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3958 ;;      Params:         0       0       0       0       0       0       0
  3959 ;;      Locals:         2       0       0       0       0       0       0
  3960 ;;      Temps:          0       0       0       0       0       0       0
  3961 ;;      Totals:         2       0       0       0       0       0       0
  3962 ;;Total ram usage:        2 bytes
  3963 ;; Hardware stack levels used: 1
  3964 ;; Hardware stack levels required when called: 5
  3965 ;; This function calls:
  3966 ;;		___awmod
  3967 ;;		_clcd_print
  3968 ;;		_putch
  3969 ;;		_puts
  3970 ;;		_read_external_eeprom
  3971 ;; This function is called by:
  3972 ;;		_main
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text18
  3977   000F9A                     __ptext18:
  3978                           	callstack 0
  3979   000F9A                     _download_log:
  3980                           	callstack 25
  3981   000F9A                     
  3982                           ;download_log.c: 27:     clcd_print("  Download Log   ", (0x80 + (0)));
  3983   000F9A  0EDF               	movlw	low STR_23
  3984   000F9C  6E03               	movwf	clcd_print@data^0,c
  3985   000F9E  0E2E               	movlw	high STR_23
  3986   000FA0  6E04               	movwf	(clcd_print@data+1)^0,c
  3987   000FA2  0E80               	movlw	128
  3988   000FA4  6E05               	movwf	clcd_print@addr^0,c
  3989   000FA6  ECEC  F00D         	call	_clcd_print	;wreg free
  3990                           
  3991                           ;download_log.c: 28:     clcd_print(" SUCCESSFULL ", (0xC0 + (3)));
  3992   000FAA  0ED8               	movlw	low STR_24
  3993   000FAC  6E03               	movwf	clcd_print@data^0,c
  3994   000FAE  0E2F               	movlw	high STR_24
  3995   000FB0  6E04               	movwf	(clcd_print@data+1)^0,c
  3996   000FB2  0EC3               	movlw	195
  3997   000FB4  6E05               	movwf	clcd_print@addr^0,c
  3998   000FB6  ECEC  F00D         	call	_clcd_print	;wreg free
  3999   000FBA                     
  4000                           ;download_log.c: 32:     if (overflow == 1) {
  4001   000FBA  044B               	decf	_overflow^0,w,c
  4002   000FBC  A4D8               	btfss	status,2,c
  4003   000FBE  EFE3  F007         	goto	u2501
  4004   000FC2  EFE5  F007         	goto	u2500
  4005   000FC6                     u2501:
  4006   000FC6  EFE7  F007         	goto	l578
  4007   000FCA                     u2500:
  4008   000FCA                     
  4009                           ;download_log.c: 33:         var = 10;
  4010   000FCA  0E0A               	movlw	10
  4011   000FCC  6E47               	movwf	_var^0,c
  4012   000FCE                     l578:
  4013                           
  4014                           ;download_log.c: 35:     if (overflow == 0) {
  4015   000FCE  504B               	movf	_overflow^0,w,c
  4016   000FD0  A4D8               	btfss	status,2,c
  4017   000FD2  EFED  F007         	goto	u2511
  4018   000FD6  EFEF  F007         	goto	u2510
  4019   000FDA                     u2511:
  4020   000FDA  EFF1  F007         	goto	l3373
  4021   000FDE                     u2510:
  4022   000FDE                     
  4023                           ;download_log.c: 36:         var = lap;
  4024   000FDE  C04C  F047         	movff	_lap,_var
  4025   000FE2                     l3373:
  4026                           
  4027                           ;download_log.c: 39:     puts("# TIME   EV   SP \n\r");
  4028   000FE2  0EA6               	movlw	low STR_25
  4029   000FE4  6E02               	movwf	puts@s^0,c
  4030   000FE6  0E2E               	movlw	high STR_25
  4031   000FE8  6E03               	movwf	(puts@s+1)^0,c
  4032   000FEA  EC39  F00F         	call	_puts	;wreg free
  4033   000FEE                     
  4034                           ;download_log.c: 41:     for (last = 0; last < var; last++) {
  4035   000FEE  0E00               	movlw	0
  4036   000FF0  6E46               	movwf	_last^0,c
  4037   000FF2  EF5E  F008         	goto	l3411
  4038   000FF6                     l3377:
  4039                           
  4040                           ;download_log.c: 44:         for (int j = 0; j < 10; j++) {
  4041   000FF6  0E00               	movlw	0
  4042   000FF8  6E10               	movwf	(download_log@j+1)^0,c
  4043   000FFA  0E00               	movlw	0
  4044   000FFC  6E0F               	movwf	download_log@j^0,c
  4045   000FFE                     l3383:
  4046                           
  4047                           ;download_log.c: 45:             download_array[j] = read_external_eeprom((start + last)
      +                           % 10 * 10 + j);
  4048   000FFE  500F               	movf	download_log@j^0,w,c
  4049   001000  0F60               	addlw	low _download_array
  4050   001002  6ED9               	movwf	fsr2l,c
  4051   001004  6ADA               	clrf	fsr2h,c
  4052   001006  C046  F009         	movff	_last,___awmod@dividend
  4053   00100A  6A0A               	clrf	(___awmod@dividend+1)^0,c
  4054   00100C  0E00               	movlw	0
  4055   00100E  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4056   001010  0E0A               	movlw	10
  4057   001012  6E0B               	movwf	___awmod@divisor^0,c
  4058   001014  EC74  F00B         	call	___awmod	;wreg free
  4059   001018  5009               	movf	?___awmod^0,w,c
  4060   00101A  0D0A               	mullw	10
  4061   00101C  50F3               	movf	243,w,c
  4062   00101E  240F               	addwf	download_log@j^0,w,c
  4063   001020  EC54  F00F         	call	_read_external_eeprom
  4064   001024  6EDF               	movwf	indf2,c
  4065   001026                     
  4066                           ;download_log.c: 46:         }
  4067   001026  4A0F               	infsnz	download_log@j^0,f,c
  4068   001028  2A10               	incf	(download_log@j+1)^0,f,c
  4069   00102A  BE10               	btfsc	(download_log@j+1)^0,7,c
  4070   00102C  EF21  F008         	goto	u2521
  4071   001030  5010               	movf	(download_log@j+1)^0,w,c
  4072   001032  E109               	bnz	u2520
  4073   001034  0E0A               	movlw	10
  4074   001036  5C0F               	subwf	download_log@j^0,w,c
  4075   001038  A0D8               	btfss	status,0,c
  4076   00103A  EF21  F008         	goto	u2521
  4077   00103E  EF23  F008         	goto	u2520
  4078   001042                     u2521:
  4079   001042  EFFF  F007         	goto	l3383
  4080   001046                     u2520:
  4081   001046                     
  4082                           ;download_log.c: 48:         putch(download_array[0]);
  4083   001046  0100               	movlb	0	; () banked
  4084   001048  5160               	movf	_download_array& (0+255),w,b
  4085   00104A  ECC1  F00F         	call	_putch
  4086                           
  4087                           ;download_log.c: 49:         putch(download_array[1]);
  4088   00104E  0100               	movlb	0	; () banked
  4089   001050  5161               	movf	(_download_array+1)& (0+255),w,b
  4090   001052  ECC1  F00F         	call	_putch
  4091   001056                     
  4092                           ;download_log.c: 50:         putch(':');
  4093   001056  0E3A               	movlw	58
  4094   001058  ECC1  F00F         	call	_putch
  4095   00105C                     
  4096                           ;download_log.c: 51:         putch(download_array[2]);
  4097   00105C  0100               	movlb	0	; () banked
  4098   00105E  5162               	movf	(_download_array+2)& (0+255),w,b
  4099   001060  ECC1  F00F         	call	_putch
  4100   001064                     
  4101                           ;download_log.c: 52:         putch(download_array[3]);
  4102   001064  0100               	movlb	0	; () banked
  4103   001066  5163               	movf	(_download_array+3)& (0+255),w,b
  4104   001068  ECC1  F00F         	call	_putch
  4105   00106C                     
  4106                           ;download_log.c: 53:         putch(':');
  4107   00106C  0E3A               	movlw	58
  4108   00106E  ECC1  F00F         	call	_putch
  4109                           
  4110                           ;download_log.c: 54:         putch(download_array[4]);
  4111   001072  0100               	movlb	0	; () banked
  4112   001074  5164               	movf	(_download_array+4)& (0+255),w,b
  4113   001076  ECC1  F00F         	call	_putch
  4114                           
  4115                           ;download_log.c: 55:         putch(download_array[5]);
  4116   00107A  0100               	movlb	0	; () banked
  4117   00107C  5165               	movf	(_download_array+5)& (0+255),w,b
  4118   00107E  ECC1  F00F         	call	_putch
  4119   001082                     
  4120                           ;download_log.c: 56:         putch(' ');
  4121   001082  0E20               	movlw	32
  4122   001084  ECC1  F00F         	call	_putch
  4123   001088                     
  4124                           ;download_log.c: 59:         putch(download_array[6]);
  4125   001088  0100               	movlb	0	; () banked
  4126   00108A  5166               	movf	(_download_array+6)& (0+255),w,b
  4127   00108C  ECC1  F00F         	call	_putch
  4128   001090                     
  4129                           ;download_log.c: 60:         putch(download_array[7]);
  4130   001090  0100               	movlb	0	; () banked
  4131   001092  5167               	movf	(_download_array+7)& (0+255),w,b
  4132   001094  ECC1  F00F         	call	_putch
  4133   001098                     
  4134                           ;download_log.c: 61:         putch(' ');
  4135   001098  0E20               	movlw	32
  4136   00109A  ECC1  F00F         	call	_putch
  4137                           
  4138                           ;download_log.c: 64:         putch(download_array[8]);
  4139   00109E  0100               	movlb	0	; () banked
  4140   0010A0  5168               	movf	(_download_array+8)& (0+255),w,b
  4141   0010A2  ECC1  F00F         	call	_putch
  4142                           
  4143                           ;download_log.c: 65:         putch(download_array[9]);
  4144   0010A6  0100               	movlb	0	; () banked
  4145   0010A8  5169               	movf	(_download_array+9)& (0+255),w,b
  4146   0010AA  ECC1  F00F         	call	_putch
  4147   0010AE                     
  4148                           ;download_log.c: 67:         puts("\n\r");
  4149   0010AE  0EB7               	movlw	low (STR_25+17)
  4150   0010B0  6E02               	movwf	puts@s^0,c
  4151   0010B2  0E2E               	movlw	high (STR_25+17)
  4152   0010B4  6E03               	movwf	(puts@s+1)^0,c
  4153   0010B6  EC39  F00F         	call	_puts	;wreg free
  4154   0010BA                     
  4155                           ;download_log.c: 69:     }
  4156   0010BA  2A46               	incf	_last^0,f,c
  4157   0010BC                     l3411:
  4158   0010BC  5047               	movf	_var^0,w,c
  4159   0010BE  5C46               	subwf	_last^0,w,c
  4160   0010C0  A0D8               	btfss	status,0,c
  4161   0010C2  EF65  F008         	goto	u2531
  4162   0010C6  EF67  F008         	goto	u2530
  4163   0010CA                     u2531:
  4164   0010CA  EFFB  F007         	goto	l3377
  4165   0010CE                     u2530:
  4166   0010CE                     
  4167                           ;download_log.c: 71:     store[6]='D';
  4168   0010CE  0E44               	movlw	68
  4169   0010D0  0100               	movlb	0	; () banked
  4170   0010D2  6F7C               	movwf	(_store+6)& (0+255),b
  4171                           
  4172                           ;download_log.c: 72:     store[7]='L';
  4173   0010D4  0E4C               	movlw	76
  4174   0010D6  6F7D               	movwf	(_store+7)& (0+255),b
  4175                           
  4176                           ;download_log.c: 74:     main_f = 2;
  4177   0010D8  0E02               	movlw	2
  4178   0010DA  6E54               	movwf	_main_f^0,c
  4179   0010DC                     
  4180                           ; BSR set to: 0
  4181   0010DC  0012               	return		;funcret
  4182   0010DE                     __end_of_download_log:
  4183                           	callstack 0
  4184                           
  4185 ;; *************** function _read_external_eeprom *****************
  4186 ;; Defined at:
  4187 ;;		line 24 in file "external_eeprom.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  address         1    wreg     unsigned char 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  address         1    1[COMRAM] unsigned char 
  4192 ;;  data            1    2[COMRAM] unsigned char 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      unsigned char 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4202 ;;      Params:         0       0       0       0       0       0       0
  4203 ;;      Locals:         2       0       0       0       0       0       0
  4204 ;;      Temps:          0       0       0       0       0       0       0
  4205 ;;      Totals:         2       0       0       0       0       0       0
  4206 ;;Total ram usage:        2 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; Hardware stack levels required when called: 4
  4209 ;; This function calls:
  4210 ;;		_i2c_read
  4211 ;;		_i2c_rep_start
  4212 ;;		_i2c_start
  4213 ;;		_i2c_stop
  4214 ;;		_i2c_write
  4215 ;; This function is called by:
  4216 ;;		_init_config
  4217 ;;		_view_log
  4218 ;;		_download_log
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text19
  4223   001EA8                     __ptext19:
  4224                           	callstack 0
  4225   001EA8                     _read_external_eeprom:
  4226                           	callstack 25
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;incstack = 0
  4230                           ;read_external_eeprom@address stored from wreg
  4231   001EA8  6E02               	movwf	read_external_eeprom@address^0,c
  4232   001EAA                     
  4233                           ;external_eeprom.c: 24: unsigned char read_external_eeprom(unsigned char address);extern
      +                          al_eeprom.c: 25: {;external_eeprom.c: 26:  unsigned char data;;external_eeprom.c: 28:  i
      +                          2c_start();
  4234   001EAA  EC11  F010         	call	_i2c_start	;wreg free
  4235   001EAE                     
  4236                           ;external_eeprom.c: 29:  i2c_write(0xA0);
  4237   001EAE  0EA0               	movlw	160
  4238   001EB0  ECFF  F00F         	call	_i2c_write
  4239   001EB4                     
  4240                           ;external_eeprom.c: 30:  i2c_write(address);
  4241   001EB4  5002               	movf	read_external_eeprom@address^0,w,c
  4242   001EB6  ECFF  F00F         	call	_i2c_write
  4243   001EBA                     
  4244                           ;external_eeprom.c: 31:  i2c_rep_start();
  4245   001EBA  EC05  F010         	call	_i2c_rep_start	;wreg free
  4246   001EBE                     
  4247                           ;external_eeprom.c: 32:  i2c_write(0xA1);
  4248   001EBE  0EA1               	movlw	161
  4249   001EC0  ECFF  F00F         	call	_i2c_write
  4250                           
  4251                           ;external_eeprom.c: 33:  data = i2c_read();
  4252   001EC4  ECF9  F00F         	call	_i2c_read	;wreg free
  4253   001EC8  6E03               	movwf	read_external_eeprom@data^0,c
  4254   001ECA                     
  4255                           ;external_eeprom.c: 34:  i2c_stop();
  4256   001ECA  EC0D  F010         	call	_i2c_stop	;wreg free
  4257                           
  4258                           ;external_eeprom.c: 36:  return data;
  4259   001ECE  5003               	movf	read_external_eeprom@data^0,w,c
  4260   001ED0  0012               	return		;funcret
  4261   001ED2                     __end_of_read_external_eeprom:
  4262                           	callstack 0
  4263                           
  4264 ;; *************** function _puts *****************
  4265 ;; Defined at:
  4266 ;;		line 40 in file "uart.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  s               2    1[COMRAM] PTR const unsigned char 
  4269 ;;		 -> STR_26(3), STR_25(20), 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;		None
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  2    1[COMRAM] int 
  4274 ;; Registers used:
  4275 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4281 ;;      Params:         2       0       0       0       0       0       0
  4282 ;;      Locals:         0       0       0       0       0       0       0
  4283 ;;      Temps:          0       0       0       0       0       0       0
  4284 ;;      Totals:         2       0       0       0       0       0       0
  4285 ;;Total ram usage:        2 bytes
  4286 ;; Hardware stack levels used: 1
  4287 ;; Hardware stack levels required when called: 2
  4288 ;; This function calls:
  4289 ;;		_putch
  4290 ;; This function is called by:
  4291 ;;		_download_log
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295                           	psect	text20
  4296   001E72                     __ptext20:
  4297                           	callstack 0
  4298   001E72                     _puts:
  4299                           	callstack 27
  4300   001E72                     
  4301                           ;uart.c: 40: int puts(const char *s);uart.c: 41: {;uart.c: 42:  while(*s)
  4302   001E72  EF45  F00F         	goto	l2945
  4303   001E76                     l2941:
  4304                           
  4305                           ;uart.c: 43:  {;uart.c: 44:   putch(*s++);
  4306   001E76  C002  FFF6         	movff	puts@s,tblptrl
  4307   001E7A  C003  FFF7         	movff	puts@s+1,tblptrh
  4308   001E7E                     	if	0	;tblptru may be non-zero
  4309   001E7E                     	endif
  4310   001E7E                     	if	0	;tblptru may be non-zero
  4311   001E7E                     	endif
  4312   001E7E  0008               	tblrd		*
  4313   001E80  50F5               	movf	tablat,w,c
  4314   001E82  ECC1  F00F         	call	_putch
  4315   001E86  4A02               	infsnz	puts@s^0,f,c
  4316   001E88  2A03               	incf	(puts@s+1)^0,f,c
  4317   001E8A                     l2945:
  4318                           
  4319                           ;uart.c: 42:  while(*s)
  4320   001E8A  C002  FFF6         	movff	puts@s,tblptrl
  4321   001E8E  C003  FFF7         	movff	puts@s+1,tblptrh
  4322   001E92                     	if	0	;tblptru may be non-zero
  4323   001E92                     	endif
  4324   001E92                     	if	0	;tblptru may be non-zero
  4325   001E92                     	endif
  4326   001E92  0008               	tblrd		*
  4327   001E94  50F5               	movf	tablat,w,c
  4328   001E96  0900               	iorlw	0
  4329   001E98  A4D8               	btfss	status,2,c
  4330   001E9A  EF51  F00F         	goto	u1921
  4331   001E9E  EF53  F00F         	goto	u1920
  4332   001EA2                     u1921:
  4333   001EA2  EF3B  F00F         	goto	l2941
  4334   001EA6                     u1920:
  4335   001EA6  0012               	return		;funcret
  4336   001EA8                     __end_of_puts:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function _putch *****************
  4340 ;; Defined at:
  4341 ;;		line 28 in file "uart.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  byte            1    wreg     unsigned char 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  byte            1    0[COMRAM] unsigned char 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4355 ;;      Params:         0       0       0       0       0       0       0
  4356 ;;      Locals:         1       0       0       0       0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0
  4358 ;;      Totals:         1       0       0       0       0       0       0
  4359 ;;Total ram usage:        1 bytes
  4360 ;; Hardware stack levels used: 1
  4361 ;; Hardware stack levels required when called: 1
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_download_log
  4366 ;;		_puts
  4367 ;;		_getche
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text21
  4372   001F82                     __ptext21:
  4373                           	callstack 0
  4374   001F82                     _putch:
  4375                           	callstack 27
  4376                           
  4377                           ;incstack = 0
  4378                           ;putch@byte stored from wreg
  4379   001F82  6E01               	movwf	putch@byte^0,c
  4380   001F84                     l613:
  4381                           
  4382                           ;uart.c: 33:  while(!TXIF)
  4383   001F84  A89E               	btfss	3998,4,c	;volatile
  4384   001F86  EFC7  F00F         	goto	u1801
  4385   001F8A  EFC9  F00F         	goto	u1800
  4386   001F8E                     u1801:
  4387   001F8E  EFC2  F00F         	goto	l613
  4388   001F92                     u1800:
  4389   001F92                     
  4390                           ;uart.c: 37:  TXREG = byte;
  4391   001F92  C001  FFAD         	movff	putch@byte,4013	;volatile
  4392   001F96  0012               	return		;funcret
  4393   001F98                     __end_of_putch:
  4394                           	callstack 0
  4395                           
  4396 ;; *************** function ___awmod *****************
  4397 ;; Defined at:
  4398 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  dividend        2    8[COMRAM] int 
  4401 ;;  divisor         2   10[COMRAM] int 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  sign            1   13[COMRAM] unsigned char 
  4404 ;;  counter         1   12[COMRAM] unsigned char 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  2    8[COMRAM] int 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, status,0
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4414 ;;      Params:         4       0       0       0       0       0       0
  4415 ;;      Locals:         2       0       0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0
  4417 ;;      Totals:         6       0       0       0       0       0       0
  4418 ;;Total ram usage:        6 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; Hardware stack levels required when called: 1
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_password
  4425 ;;		_view_log
  4426 ;;		_download_log
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text22
  4431   0016E8                     __ptext22:
  4432                           	callstack 0
  4433   0016E8                     ___awmod:
  4434                           	callstack 28
  4435   0016E8  0E00               	movlw	0
  4436   0016EA  6E0E               	movwf	___awmod@sign^0,c
  4437   0016EC  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4438   0016EE  EF7D  F00B         	goto	u2010
  4439   0016F2  EF7B  F00B         	goto	u2011
  4440   0016F6                     u2011:
  4441   0016F6  EF83  F00B         	goto	l3009
  4442   0016FA                     u2010:
  4443   0016FA  6C09               	negf	___awmod@dividend^0,c
  4444   0016FC  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4445   0016FE  B0D8               	btfsc	status,0,c
  4446   001700  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4447   001702  0E01               	movlw	1
  4448   001704  6E0E               	movwf	___awmod@sign^0,c
  4449   001706                     l3009:
  4450   001706  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  4451   001708  EF8A  F00B         	goto	u2020
  4452   00170C  EF88  F00B         	goto	u2021
  4453   001710                     u2021:
  4454   001710  EF8E  F00B         	goto	l3013
  4455   001714                     u2020:
  4456   001714  6C0B               	negf	___awmod@divisor^0,c
  4457   001716  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  4458   001718  B0D8               	btfsc	status,0,c
  4459   00171A  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  4460   00171C                     l3013:
  4461   00171C  500B               	movf	___awmod@divisor^0,w,c
  4462   00171E  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  4463   001720  B4D8               	btfsc	status,2,c
  4464   001722  EF95  F00B         	goto	u2031
  4465   001726  EF97  F00B         	goto	u2030
  4466   00172A                     u2031:
  4467   00172A  EFBB  F00B         	goto	l3029
  4468   00172E                     u2030:
  4469   00172E  0E01               	movlw	1
  4470   001730  6E0D               	movwf	___awmod@counter^0,c
  4471   001732  EF9F  F00B         	goto	l3019
  4472   001736                     l3017:
  4473   001736  90D8               	bcf	status,0,c
  4474   001738  360B               	rlcf	___awmod@divisor^0,f,c
  4475   00173A  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  4476   00173C  2A0D               	incf	___awmod@counter^0,f,c
  4477   00173E                     l3019:
  4478   00173E  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  4479   001740  EFA4  F00B         	goto	u2041
  4480   001744  EFA6  F00B         	goto	u2040
  4481   001748                     u2041:
  4482   001748  EF9B  F00B         	goto	l3017
  4483   00174C                     u2040:
  4484   00174C                     l3021:
  4485   00174C  500B               	movf	___awmod@divisor^0,w,c
  4486   00174E  5C09               	subwf	___awmod@dividend^0,w,c
  4487   001750  500C               	movf	(___awmod@divisor+1)^0,w,c
  4488   001752  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  4489   001754  A0D8               	btfss	status,0,c
  4490   001756  EFAF  F00B         	goto	u2051
  4491   00175A  EFB1  F00B         	goto	u2050
  4492   00175E                     u2051:
  4493   00175E  EFB5  F00B         	goto	l3025
  4494   001762                     u2050:
  4495   001762  500B               	movf	___awmod@divisor^0,w,c
  4496   001764  5E09               	subwf	___awmod@dividend^0,f,c
  4497   001766  500C               	movf	(___awmod@divisor+1)^0,w,c
  4498   001768  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  4499   00176A                     l3025:
  4500   00176A  90D8               	bcf	status,0,c
  4501   00176C  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  4502   00176E  320B               	rrcf	___awmod@divisor^0,f,c
  4503   001770  2E0D               	decfsz	___awmod@counter^0,f,c
  4504   001772  EFA6  F00B         	goto	l3021
  4505   001776                     l3029:
  4506   001776  500E               	movf	___awmod@sign^0,w,c
  4507   001778  B4D8               	btfsc	status,2,c
  4508   00177A  EFC1  F00B         	goto	u2061
  4509   00177E  EFC3  F00B         	goto	u2060
  4510   001782                     u2061:
  4511   001782  EFC7  F00B         	goto	l3033
  4512   001786                     u2060:
  4513   001786  6C09               	negf	___awmod@dividend^0,c
  4514   001788  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4515   00178A  B0D8               	btfsc	status,0,c
  4516   00178C  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4517   00178E                     l3033:
  4518   00178E  C009  F009         	movff	___awmod@dividend,?___awmod
  4519   001792  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  4520   001796  0012               	return		;funcret
  4521   001798                     __end_of___awmod:
  4522                           	callstack 0
  4523                           
  4524 ;; *************** function _dashboard *****************
  4525 ;; Defined at:
  4526 ;;		line 51 in file "dashboard.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;		None
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;		None
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4540 ;;      Params:         0       0       0       0       0       0       0
  4541 ;;      Locals:         0       0       0       0       0       0       0
  4542 ;;      Temps:          0       0       0       0       0       0       0
  4543 ;;      Totals:         0       0       0       0       0       0       0
  4544 ;;Total ram usage:        0 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; Hardware stack levels required when called: 6
  4547 ;; This function calls:
  4548 ;;		___lwdiv
  4549 ;;		___lwmod
  4550 ;;		_clcd_print
  4551 ;;		_clcd_putch
  4552 ;;		_display_time
  4553 ;;		_get_time
  4554 ;;		_store_event
  4555 ;; This function is called by:
  4556 ;;		_main
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           	psect	text23
  4561   00121A                     __ptext23:
  4562                           	callstack 0
  4563   00121A                     _dashboard:
  4564                           	callstack 24
  4565   00121A                     
  4566                           ;dashboard.c: 53:     clcd_print("  TIME    EV  SP", (0x80 + (0)));
  4567   00121A  0E6A               	movlw	low STR_9
  4568   00121C  6E03               	movwf	clcd_print@data^0,c
  4569   00121E  0E2F               	movlw	high STR_9
  4570   001220  6E04               	movwf	(clcd_print@data+1)^0,c
  4571   001222  0E80               	movlw	128
  4572   001224  6E05               	movwf	clcd_print@addr^0,c
  4573   001226  ECEC  F00D         	call	_clcd_print	;wreg free
  4574   00122A                     
  4575                           ;dashboard.c: 59:     clcd_print(events[i], (0xC0 + (10)));
  4576   00122A  5051               	movf	_i^0,w,c
  4577   00122C  0D02               	mullw	2
  4578   00122E  50F3               	movf	243,w,c
  4579   001230  0F9F               	addlw	low _events
  4580   001232  6ED9               	movwf	fsr2l,c
  4581   001234  6ADA               	clrf	fsr2h,c
  4582   001236  CFDE F003          	movff	postinc2,clcd_print@data
  4583   00123A  CFDD F004          	movff	postdec2,clcd_print@data+1
  4584   00123E  0ECA               	movlw	202
  4585   001240  6E05               	movwf	clcd_print@addr^0,c
  4586   001242  ECEC  F00D         	call	_clcd_print	;wreg free
  4587   001246                     
  4588                           ;dashboard.c: 62:     if (key == 2 && i < 6) {
  4589   001246  0E02               	movlw	2
  4590   001248  1856               	xorwf	_key^0,w,c
  4591   00124A  A4D8               	btfss	status,2,c
  4592   00124C  EF2A  F009         	goto	u2091
  4593   001250  EF2C  F009         	goto	u2090
  4594   001254                     u2091:
  4595   001254  EF37  F009         	goto	l3083
  4596   001258                     u2090:
  4597   001258  0E06               	movlw	6
  4598   00125A  6051               	cpfslt	_i^0,c
  4599   00125C  EF32  F009         	goto	u2101
  4600   001260  EF34  F009         	goto	u2100
  4601   001264                     u2101:
  4602   001264  EF37  F009         	goto	l3083
  4603   001268                     u2100:
  4604   001268                     
  4605                           ;dashboard.c: 63:             i++;
  4606   001268  2A51               	incf	_i^0,f,c
  4607   00126A                     
  4608                           ;dashboard.c: 64:             store_event();
  4609   00126A  ECA2  F00A         	call	_store_event	;wreg free
  4610   00126E                     l3083:
  4611                           
  4612                           ;dashboard.c: 68:     if (key == 3 && i != 7) {
  4613   00126E  0E03               	movlw	3
  4614   001270  1856               	xorwf	_key^0,w,c
  4615   001272  A4D8               	btfss	status,2,c
  4616   001274  EF3E  F009         	goto	u2111
  4617   001278  EF40  F009         	goto	u2110
  4618   00127C                     u2111:
  4619   00127C  EF54  F009         	goto	l3093
  4620   001280                     u2110:
  4621   001280  0E07               	movlw	7
  4622   001282  1851               	xorwf	_i^0,w,c
  4623   001284  B4D8               	btfsc	status,2,c
  4624   001286  EF47  F009         	goto	u2121
  4625   00128A  EF49  F009         	goto	u2120
  4626   00128E                     u2121:
  4627   00128E  EF54  F009         	goto	l3093
  4628   001292                     u2120:
  4629   001292                     
  4630                           ;dashboard.c: 69:         if (i > 1) {
  4631   001292  0E01               	movlw	1
  4632   001294  6451               	cpfsgt	_i^0,c
  4633   001296  EF4F  F009         	goto	u2131
  4634   00129A  EF51  F009         	goto	u2130
  4635   00129E                     u2131:
  4636   00129E  EF54  F009         	goto	l3093
  4637   0012A2                     u2130:
  4638   0012A2                     
  4639                           ;dashboard.c: 70:             i--;
  4640   0012A2  0651               	decf	_i^0,f,c
  4641   0012A4                     
  4642                           ;dashboard.c: 71:             store_event();
  4643   0012A4  ECA2  F00A         	call	_store_event	;wreg free
  4644   0012A8                     l3093:
  4645                           
  4646                           ;dashboard.c: 75:     if (key == 1 ) {
  4647   0012A8  0456               	decf	_key^0,w,c
  4648   0012AA  A4D8               	btfss	status,2,c
  4649   0012AC  EF5A  F009         	goto	u2141
  4650   0012B0  EF5C  F009         	goto	u2140
  4651   0012B4                     u2141:
  4652   0012B4  EF60  F009         	goto	l3099
  4653   0012B8                     u2140:
  4654   0012B8                     
  4655                           ;dashboard.c: 76:         i = 7;
  4656   0012B8  0E07               	movlw	7
  4657   0012BA  6E51               	movwf	_i^0,c
  4658   0012BC                     
  4659                           ;dashboard.c: 77:         store_event();
  4660   0012BC  ECA2  F00A         	call	_store_event	;wreg free
  4661   0012C0                     l3099:
  4662                           
  4663                           ;dashboard.c: 80:     if (i == 7 && key == 2) {
  4664   0012C0  0E07               	movlw	7
  4665   0012C2  1851               	xorwf	_i^0,w,c
  4666   0012C4  A4D8               	btfss	status,2,c
  4667   0012C6  EF67  F009         	goto	u2151
  4668   0012CA  EF69  F009         	goto	u2150
  4669   0012CE                     u2151:
  4670   0012CE  EF76  F009         	goto	l3107
  4671   0012D2                     u2150:
  4672   0012D2  0E02               	movlw	2
  4673   0012D4  1856               	xorwf	_key^0,w,c
  4674   0012D6  A4D8               	btfss	status,2,c
  4675   0012D8  EF70  F009         	goto	u2161
  4676   0012DC  EF72  F009         	goto	u2160
  4677   0012E0                     u2161:
  4678   0012E0  EF76  F009         	goto	l3107
  4679   0012E4                     u2160:
  4680   0012E4                     
  4681                           ;dashboard.c: 81:         i = 2;
  4682   0012E4  0E02               	movlw	2
  4683   0012E6  6E51               	movwf	_i^0,c
  4684   0012E8                     
  4685                           ;dashboard.c: 82:         store_event();
  4686   0012E8  ECA2  F00A         	call	_store_event	;wreg free
  4687   0012EC                     l3107:
  4688                           
  4689                           ;dashboard.c: 87:         clcd_putch(((adc_reg_val / 10) + 48), (0xC0 + (14)));
  4690   0012EC  0ECE               	movlw	206
  4691   0012EE  6E0F               	movwf	clcd_putch@addr^0,c
  4692   0012F0  C042  F001         	movff	_adc_reg_val,___lwdiv@dividend
  4693   0012F4  C043  F002         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  4694   0012F8  0E00               	movlw	0
  4695   0012FA  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  4696   0012FC  0E0A               	movlw	10
  4697   0012FE  6E03               	movwf	___lwdiv@divisor^0,c
  4698   001300  ECB2  F00D         	call	___lwdiv	;wreg free
  4699   001304  5001               	movf	?___lwdiv^0,w,c
  4700   001306  0F30               	addlw	48
  4701   001308  ECAA  F00F         	call	_clcd_putch
  4702   00130C                     
  4703                           ;dashboard.c: 88:         clcd_putch(((adc_reg_val % 10) + 48), (0xC0 + (15)));
  4704   00130C  0ECF               	movlw	207
  4705   00130E  6E0F               	movwf	clcd_putch@addr^0,c
  4706   001310  C042  F001         	movff	_adc_reg_val,___lwmod@dividend
  4707   001314  C043  F002         	movff	_adc_reg_val+1,___lwmod@dividend+1
  4708   001318  0E00               	movlw	0
  4709   00131A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4710   00131C  0E0A               	movlw	10
  4711   00131E  6E03               	movwf	___lwmod@divisor^0,c
  4712   001320  EC54  F00E         	call	___lwmod	;wreg free
  4713   001324  5001               	movf	?___lwmod^0,w,c
  4714   001326  0F30               	addlw	48
  4715   001328  ECAA  F00F         	call	_clcd_putch
  4716   00132C                     
  4717                           ;dashboard.c: 92:     get_time();
  4718   00132C  ECF3  F00C         	call	_get_time	;wreg free
  4719   001330                     
  4720                           ;dashboard.c: 93:     display_time();
  4721   001330  ECF1  F00F         	call	_display_time	;wreg free
  4722   001334  0012               	return		;funcret
  4723   001336                     __end_of_dashboard:
  4724                           	callstack 0
  4725                           
  4726 ;; *************** function _store_event *****************
  4727 ;; Defined at:
  4728 ;;		line 22 in file "store_event.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;		None
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  k               1    9[COMRAM] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4742 ;;      Params:         0       0       0       0       0       0       0
  4743 ;;      Locals:         1       0       0       0       0       0       0
  4744 ;;      Temps:          2       0       0       0       0       0       0
  4745 ;;      Totals:         3       0       0       0       0       0       0
  4746 ;;Total ram usage:        3 bytes
  4747 ;; Hardware stack levels used: 1
  4748 ;; Hardware stack levels required when called: 4
  4749 ;; This function calls:
  4750 ;;		___lwdiv
  4751 ;;		___lwmod
  4752 ;;		_write_external_eeprom
  4753 ;; This function is called by:
  4754 ;;		_dashboard
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text24
  4759   001544                     __ptext24:
  4760                           	callstack 0
  4761   001544                     _store_event:
  4762                           	callstack 25
  4763   001544                     
  4764                           ;store_event.c: 25:     store[0]=time[0];
  4765   001544  C087  F076         	movff	_time,_store
  4766                           
  4767                           ;store_event.c: 26:     store[1]=time[1];
  4768   001548  C088  F077         	movff	_time+1,_store+1
  4769                           
  4770                           ;store_event.c: 27:     store[2]=time[3];
  4771   00154C  C08A  F078         	movff	_time+3,_store+2
  4772                           
  4773                           ;store_event.c: 28:     store[3]=time[4];
  4774   001550  C08B  F079         	movff	_time+4,_store+3
  4775                           
  4776                           ;store_event.c: 29:     store[4]=time[6];
  4777   001554  C08D  F07A         	movff	_time+6,_store+4
  4778                           
  4779                           ;store_event.c: 30:     store[5]=time[7];
  4780   001558  C08E  F07B         	movff	_time+7,_store+5
  4781   00155C                     
  4782                           ;store_event.c: 33:     store[6]=events[i][0];
  4783   00155C  5051               	movf	_i^0,w,c
  4784   00155E  0D02               	mullw	2
  4785   001560  50F3               	movf	243,w,c
  4786   001562  0F9F               	addlw	low _events
  4787   001564  6ED9               	movwf	fsr2l,c
  4788   001566  6ADA               	clrf	fsr2h,c
  4789   001568  CFDE FFF6          	movff	postinc2,tblptrl
  4790   00156C  CFDD FFF7          	movff	postdec2,tblptrh
  4791   001570                     	if	0	;tblptru may be non-zero
  4792   001570                     	endif
  4793   001570                     	if	0	;tblptru may be non-zero
  4794   001570                     	endif
  4795   001570  0008               	tblrd		*
  4796   001572  CFF5 F07C          	movff	tablat,_store+6
  4797                           
  4798                           ;store_event.c: 34:     store[7]=events[i][1];
  4799   001576  5051               	movf	_i^0,w,c
  4800   001578  0D02               	mullw	2
  4801   00157A  50F3               	movf	243,w,c
  4802   00157C  0F9F               	addlw	low _events
  4803   00157E  6ED9               	movwf	fsr2l,c
  4804   001580  6ADA               	clrf	fsr2h,c
  4805   001582  CFDE F008          	movff	postinc2,??_store_event
  4806   001586  CFDD F009          	movff	postdec2,??_store_event+1
  4807   00158A  0E01               	movlw	1
  4808   00158C  2608               	addwf	??_store_event^0,f,c
  4809   00158E  0E00               	movlw	0
  4810   001590  2209               	addwfc	(??_store_event+1)^0,f,c
  4811   001592  C008  FFF6         	movff	??_store_event,tblptrl
  4812   001596  C009  FFF7         	movff	??_store_event+1,tblptrh
  4813   00159A                     	if	0	;tblptru may be non-zero
  4814   00159A                     	endif
  4815   00159A                     	if	0	;tblptru may be non-zero
  4816   00159A                     	endif
  4817   00159A  0008               	tblrd		*
  4818   00159C  CFF5 F07D          	movff	tablat,_store+7
  4819   0015A0                     
  4820                           ;store_event.c: 38:         store[8]=(adc_reg_val / 10) + 48;
  4821   0015A0  C042  F001         	movff	_adc_reg_val,___lwdiv@dividend
  4822   0015A4  C043  F002         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  4823   0015A8  0E00               	movlw	0
  4824   0015AA  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  4825   0015AC  0E0A               	movlw	10
  4826   0015AE  6E03               	movwf	___lwdiv@divisor^0,c
  4827   0015B0  ECB2  F00D         	call	___lwdiv	;wreg free
  4828   0015B4  5001               	movf	?___lwdiv^0,w,c
  4829   0015B6  0F30               	addlw	48
  4830   0015B8  0100               	movlb	0	; () banked
  4831   0015BA  6F7E               	movwf	(_store+8)& (0+255),b
  4832   0015BC                     
  4833                           ; BSR set to: 0
  4834                           ;store_event.c: 39:         store[9]=(adc_reg_val % 10) + 48;
  4835   0015BC  C042  F001         	movff	_adc_reg_val,___lwmod@dividend
  4836   0015C0  C043  F002         	movff	_adc_reg_val+1,___lwmod@dividend+1
  4837   0015C4  0E00               	movlw	0
  4838   0015C6  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4839   0015C8  0E0A               	movlw	10
  4840   0015CA  6E03               	movwf	___lwmod@divisor^0,c
  4841   0015CC  EC54  F00E         	call	___lwmod	;wreg free
  4842   0015D0  5001               	movf	?___lwmod^0,w,c
  4843   0015D2  0F30               	addlw	48
  4844   0015D4  0100               	movlb	0	; () banked
  4845   0015D6  6F7F               	movwf	(_store+9)& (0+255),b
  4846   0015D8                     
  4847                           ; BSR set to: 0
  4848                           ;store_event.c: 41:     for(char k=0; k<10; k++)
  4849   0015D8  0E00               	movlw	0
  4850   0015DA  6E0A               	movwf	store_event@k^0,c
  4851   0015DC                     l2917:
  4852                           
  4853                           ;store_event.c: 42:     {;store_event.c: 43:         write_external_eeprom( (lap*10+k),s
      +                          tore[k]);
  4854   0015DC  500A               	movf	store_event@k^0,w,c
  4855   0015DE  0F76               	addlw	low _store
  4856   0015E0  6ED9               	movwf	fsr2l,c
  4857   0015E2  6ADA               	clrf	fsr2h,c
  4858   0015E4  50DF               	movf	indf2,w,c
  4859   0015E6  6E02               	movwf	write_external_eeprom@data^0,c
  4860   0015E8  504C               	movf	_lap^0,w,c
  4861   0015EA  0D0A               	mullw	10
  4862   0015EC  50F3               	movf	243,w,c
  4863   0015EE  240A               	addwf	store_event@k^0,w,c
  4864   0015F0  ECFC  F00E         	call	_write_external_eeprom
  4865   0015F4                     
  4866                           ;store_event.c: 44:     }
  4867   0015F4  2A0A               	incf	store_event@k^0,f,c
  4868   0015F6  0E09               	movlw	9
  4869   0015F8  640A               	cpfsgt	store_event@k^0,c
  4870   0015FA  EF01  F00B         	goto	u1881
  4871   0015FE  EF03  F00B         	goto	u1880
  4872   001602                     u1881:
  4873   001602  EFEE  F00A         	goto	l2917
  4874   001606                     u1880:
  4875   001606                     
  4876                           ;store_event.c: 46:     lap++;
  4877   001606  2A4C               	incf	_lap^0,f,c
  4878   001608                     
  4879                           ;store_event.c: 47:     if(lap==10)
  4880   001608  0E0A               	movlw	10
  4881   00160A  184C               	xorwf	_lap^0,w,c
  4882   00160C  A4D8               	btfss	status,2,c
  4883   00160E  EF0B  F00B         	goto	u1891
  4884   001612  EF0D  F00B         	goto	u1890
  4885   001616                     u1891:
  4886   001616  EF11  F00B         	goto	l496
  4887   00161A                     u1890:
  4888   00161A                     
  4889                           ;store_event.c: 48:     {;store_event.c: 49:         lap=0;
  4890   00161A  0E00               	movlw	0
  4891   00161C  6E4C               	movwf	_lap^0,c
  4892                           
  4893                           ;store_event.c: 50:         overflow=1;
  4894   00161E  0E01               	movlw	1
  4895   001620  6E4B               	movwf	_overflow^0,c
  4896   001622                     l496:
  4897   001622  0012               	return		;funcret
  4898   001624                     __end_of_store_event:
  4899                           	callstack 0
  4900                           
  4901 ;; *************** function _get_time *****************
  4902 ;; Defined at:
  4903 ;;		line 30 in file "dashboard.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;		None
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;		None
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  1    wreg      void 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0, cstack
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4917 ;;      Params:         0       0       0       0       0       0       0
  4918 ;;      Locals:         0       0       0       0       0       0       0
  4919 ;;      Temps:          0       0       0       0       0       0       0
  4920 ;;      Totals:         0       0       0       0       0       0       0
  4921 ;;Total ram usage:        0 bytes
  4922 ;; Hardware stack levels used: 1
  4923 ;; Hardware stack levels required when called: 5
  4924 ;; This function calls:
  4925 ;;		_read_ds1307
  4926 ;; This function is called by:
  4927 ;;		_dashboard
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text25
  4932   0019E6                     __ptext25:
  4933                           	callstack 0
  4934   0019E6                     _get_time:
  4935                           	callstack 24
  4936   0019E6                     
  4937                           ;dashboard.c: 31:     clock_reg[0] = read_ds1307(0x02);
  4938   0019E6  0E02               	movlw	2
  4939   0019E8  EC69  F00F         	call	_read_ds1307
  4940   0019EC  6E39               	movwf	_clock_reg^0,c
  4941                           
  4942                           ;dashboard.c: 32:     clock_reg[1] = read_ds1307(0x01);
  4943   0019EE  0E01               	movlw	1
  4944   0019F0  EC69  F00F         	call	_read_ds1307
  4945   0019F4  6E3A               	movwf	(_clock_reg+1)^0,c
  4946                           
  4947                           ;dashboard.c: 33:     clock_reg[2] = read_ds1307(0x00);
  4948   0019F6  0E00               	movlw	0
  4949   0019F8  EC69  F00F         	call	_read_ds1307
  4950   0019FC  6E3B               	movwf	(_clock_reg+2)^0,c
  4951   0019FE                     
  4952                           ;dashboard.c: 35:     if (clock_reg[0] & 0x40) {
  4953   0019FE  AC39               	btfss	_clock_reg^0,6,c
  4954   001A00  EF04  F00D         	goto	u1871
  4955   001A04  EF06  F00D         	goto	u1870
  4956   001A08                     u1871:
  4957   001A08  EF12  F00D         	goto	l2891
  4958   001A0C                     u1870:
  4959   001A0C                     
  4960                           ;dashboard.c: 36:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  4961   001A0C  3839               	swapf	_clock_reg^0,w,c
  4962   001A0E  0B0F               	andlw	15
  4963   001A10  0B01               	andlw	1
  4964   001A12  0F30               	addlw	48
  4965   001A14  0100               	movlb	0	; () banked
  4966   001A16  6F87               	movwf	_time& (0+255),b
  4967                           
  4968                           ;dashboard.c: 37:         time[1] = '0' + (clock_reg[0] & 0x0F);
  4969   001A18  5039               	movf	_clock_reg^0,w,c
  4970   001A1A  0B0F               	andlw	15
  4971   001A1C  0F30               	addlw	48
  4972   001A1E  6F88               	movwf	(_time+1)& (0+255),b
  4973                           
  4974                           ;dashboard.c: 38:     } else {
  4975   001A20  EF1C  F00D         	goto	l2893
  4976   001A24                     l2891:
  4977                           
  4978                           ;dashboard.c: 39:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  4979   001A24  3839               	swapf	_clock_reg^0,w,c
  4980   001A26  0B0F               	andlw	15
  4981   001A28  0B03               	andlw	3
  4982   001A2A  0F30               	addlw	48
  4983   001A2C  0100               	movlb	0	; () banked
  4984   001A2E  6F87               	movwf	_time& (0+255),b
  4985                           
  4986                           ;dashboard.c: 40:         time[1] = '0' + (clock_reg[0] & 0x0F);
  4987   001A30  5039               	movf	_clock_reg^0,w,c
  4988   001A32  0B0F               	andlw	15
  4989   001A34  0F30               	addlw	48
  4990   001A36  6F88               	movwf	(_time+1)& (0+255),b
  4991   001A38                     l2893:
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;dashboard.c: 42:     time[2] = ':';
  4995   001A38  0E3A               	movlw	58
  4996   001A3A  6F89               	movwf	(_time+2)& (0+255),b
  4997   001A3C                     
  4998                           ; BSR set to: 0
  4999                           ;dashboard.c: 43:     time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  5000   001A3C  383A               	swapf	(_clock_reg+1)^0,w,c
  5001   001A3E  0B0F               	andlw	15
  5002   001A40  0B0F               	andlw	15
  5003   001A42  0F30               	addlw	48
  5004   001A44  6F8A               	movwf	(_time+3)& (0+255),b
  5005   001A46                     
  5006                           ; BSR set to: 0
  5007                           ;dashboard.c: 44:     time[4] = '0' + (clock_reg[1] & 0x0F);
  5008   001A46  503A               	movf	(_clock_reg+1)^0,w,c
  5009   001A48  0B0F               	andlw	15
  5010   001A4A  0F30               	addlw	48
  5011   001A4C  6F8B               	movwf	(_time+4)& (0+255),b
  5012   001A4E                     
  5013                           ; BSR set to: 0
  5014                           ;dashboard.c: 45:     time[5] = ':';
  5015   001A4E  0E3A               	movlw	58
  5016   001A50  6F8C               	movwf	(_time+5)& (0+255),b
  5017                           
  5018                           ;dashboard.c: 46:     time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  5019   001A52  383B               	swapf	(_clock_reg+2)^0,w,c
  5020   001A54  0B0F               	andlw	15
  5021   001A56  0B0F               	andlw	15
  5022   001A58  0F30               	addlw	48
  5023   001A5A  6F8D               	movwf	(_time+6)& (0+255),b
  5024                           
  5025                           ;dashboard.c: 47:     time[7] = '0' + (clock_reg[2] & 0x0F);
  5026   001A5C  503B               	movf	(_clock_reg+2)^0,w,c
  5027   001A5E  0B0F               	andlw	15
  5028   001A60  0F30               	addlw	48
  5029   001A62  6F8E               	movwf	(_time+7)& (0+255),b
  5030   001A64                     
  5031                           ; BSR set to: 0
  5032                           ;dashboard.c: 48:     time[8] = '\0';
  5033   001A64  0E00               	movlw	0
  5034   001A66  6F8F               	movwf	(_time+8)& (0+255),b
  5035   001A68                     
  5036                           ; BSR set to: 0
  5037   001A68  0012               	return		;funcret
  5038   001A6A                     __end_of_get_time:
  5039                           	callstack 0
  5040                           
  5041 ;; *************** function _read_ds1307 *****************
  5042 ;; Defined at:
  5043 ;;		line 55 in file "ds1307.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  address         1    wreg     unsigned char 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;  address         1    1[COMRAM] unsigned char 
  5048 ;;  data            1    2[COMRAM] unsigned char 
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  1    wreg      unsigned char 
  5051 ;; Registers used:
  5052 ;;		wreg, status,2, cstack
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5058 ;;      Params:         0       0       0       0       0       0       0
  5059 ;;      Locals:         2       0       0       0       0       0       0
  5060 ;;      Temps:          0       0       0       0       0       0       0
  5061 ;;      Totals:         2       0       0       0       0       0       0
  5062 ;;Total ram usage:        2 bytes
  5063 ;; Hardware stack levels used: 1
  5064 ;; Hardware stack levels required when called: 4
  5065 ;; This function calls:
  5066 ;;		_i2c_read
  5067 ;;		_i2c_rep_start
  5068 ;;		_i2c_start
  5069 ;;		_i2c_stop
  5070 ;;		_i2c_write
  5071 ;; This function is called by:
  5072 ;;		_get_time
  5073 ;;		_init_ds1307
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text26
  5078   001ED2                     __ptext26:
  5079                           	callstack 0
  5080   001ED2                     _read_ds1307:
  5081                           	callstack 24
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;incstack = 0
  5085                           ;read_ds1307@address stored from wreg
  5086   001ED2  6E02               	movwf	read_ds1307@address^0,c
  5087   001ED4                     
  5088                           ;ds1307.c: 55: unsigned char read_ds1307(unsigned char address);ds1307.c: 56: {;ds1307.c
      +                          : 57:  unsigned char data;;ds1307.c: 59:  i2c_start();
  5089   001ED4  EC11  F010         	call	_i2c_start	;wreg free
  5090   001ED8                     
  5091                           ;ds1307.c: 60:  i2c_write(0xD0);
  5092   001ED8  0ED0               	movlw	208
  5093   001EDA  ECFF  F00F         	call	_i2c_write
  5094   001EDE                     
  5095                           ;ds1307.c: 61:  i2c_write(address);
  5096   001EDE  5002               	movf	read_ds1307@address^0,w,c
  5097   001EE0  ECFF  F00F         	call	_i2c_write
  5098   001EE4                     
  5099                           ;ds1307.c: 62:  i2c_rep_start();
  5100   001EE4  EC05  F010         	call	_i2c_rep_start	;wreg free
  5101   001EE8                     
  5102                           ;ds1307.c: 63:  i2c_write(0xD1);
  5103   001EE8  0ED1               	movlw	209
  5104   001EEA  ECFF  F00F         	call	_i2c_write
  5105                           
  5106                           ;ds1307.c: 64:  data = i2c_read();
  5107   001EEE  ECF9  F00F         	call	_i2c_read	;wreg free
  5108   001EF2  6E03               	movwf	read_ds1307@data^0,c
  5109   001EF4                     
  5110                           ;ds1307.c: 65:  i2c_stop();
  5111   001EF4  EC0D  F010         	call	_i2c_stop	;wreg free
  5112                           
  5113                           ;ds1307.c: 67:  return data;
  5114   001EF8  5003               	movf	read_ds1307@data^0,w,c
  5115   001EFA  0012               	return		;funcret
  5116   001EFC                     __end_of_read_ds1307:
  5117                           	callstack 0
  5118                           
  5119 ;; *************** function _i2c_rep_start *****************
  5120 ;; Defined at:
  5121 ;;		line 49 in file "i2c.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;		None
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;		None
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  1    wreg      void 
  5128 ;; Registers used:
  5129 ;;		cstack
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5135 ;;      Params:         0       0       0       0       0       0       0
  5136 ;;      Locals:         0       0       0       0       0       0       0
  5137 ;;      Temps:          0       0       0       0       0       0       0
  5138 ;;      Totals:         0       0       0       0       0       0       0
  5139 ;;Total ram usage:        0 bytes
  5140 ;; Hardware stack levels used: 1
  5141 ;; Hardware stack levels required when called: 2
  5142 ;; This function calls:
  5143 ;;		_i2c_idle
  5144 ;; This function is called by:
  5145 ;;		_read_ds1307
  5146 ;;		_read_external_eeprom
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text27
  5151   00200A                     __ptext27:
  5152                           	callstack 0
  5153   00200A                     _i2c_rep_start:
  5154                           	callstack 26
  5155   00200A                     
  5156                           ;i2c.c: 51:  RSEN = 1;
  5157   00200A  82C5               	bsf	4037,1,c	;volatile
  5158   00200C                     
  5159                           ;i2c.c: 52:  i2c_idle();
  5160   00200C  ECE8  F00F         	call	_i2c_idle	;wreg free
  5161   002010  0012               	return		;funcret
  5162   002012                     __end_of_i2c_rep_start:
  5163                           	callstack 0
  5164                           
  5165 ;; *************** function _i2c_read *****************
  5166 ;; Defined at:
  5167 ;;		line 73 in file "i2c.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;		None
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;		None
  5172 ;; Return value:  Size  Location     Type
  5173 ;;                  1    wreg      unsigned char 
  5174 ;; Registers used:
  5175 ;;		wreg, status,2, cstack
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5181 ;;      Params:         0       0       0       0       0       0       0
  5182 ;;      Locals:         0       0       0       0       0       0       0
  5183 ;;      Temps:          0       0       0       0       0       0       0
  5184 ;;      Totals:         0       0       0       0       0       0       0
  5185 ;;Total ram usage:        0 bytes
  5186 ;; Hardware stack levels used: 1
  5187 ;; Hardware stack levels required when called: 3
  5188 ;; This function calls:
  5189 ;;		_i2c_no_ack
  5190 ;;		_i2c_rx_mode
  5191 ;; This function is called by:
  5192 ;;		_read_ds1307
  5193 ;;		_read_external_eeprom
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text28
  5198   001FF2                     __ptext28:
  5199                           	callstack 0
  5200   001FF2                     _i2c_read:
  5201                           	callstack 25
  5202   001FF2                     
  5203                           ;i2c.c: 75:  i2c_rx_mode();
  5204   001FF2  EC09  F010         	call	_i2c_rx_mode	;wreg free
  5205                           
  5206                           ;i2c.c: 76:  i2c_no_ack();
  5207   001FF6  EC15  F010         	call	_i2c_no_ack	;wreg free
  5208   001FFA                     
  5209                           ;i2c.c: 78:  return SSPBUF;
  5210   001FFA  50C9               	movf	201,w,c	;volatile
  5211   001FFC  0012               	return		;funcret
  5212   001FFE                     __end_of_i2c_read:
  5213                           	callstack 0
  5214                           
  5215 ;; *************** function _i2c_rx_mode *****************
  5216 ;; Defined at:
  5217 ;;		line 61 in file "i2c.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;		None
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  1    wreg      void 
  5224 ;; Registers used:
  5225 ;;		cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5231 ;;      Params:         0       0       0       0       0       0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0
  5233 ;;      Temps:          0       0       0       0       0       0       0
  5234 ;;      Totals:         0       0       0       0       0       0       0
  5235 ;;Total ram usage:        0 bytes
  5236 ;; Hardware stack levels used: 1
  5237 ;; Hardware stack levels required when called: 2
  5238 ;; This function calls:
  5239 ;;		_i2c_idle
  5240 ;; This function is called by:
  5241 ;;		_i2c_read
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           	psect	text29
  5246   002012                     __ptext29:
  5247                           	callstack 0
  5248   002012                     _i2c_rx_mode:
  5249                           	callstack 25
  5250   002012                     
  5251                           ;i2c.c: 63:  RCEN = 1;
  5252   002012  86C5               	bsf	4037,3,c	;volatile
  5253   002014                     
  5254                           ;i2c.c: 64:  i2c_idle();
  5255   002014  ECE8  F00F         	call	_i2c_idle	;wreg free
  5256   002018  0012               	return		;funcret
  5257   00201A                     __end_of_i2c_rx_mode:
  5258                           	callstack 0
  5259                           
  5260 ;; *************** function _i2c_no_ack *****************
  5261 ;; Defined at:
  5262 ;;		line 67 in file "i2c.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		None
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5276 ;;      Params:         0       0       0       0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0
  5279 ;;      Totals:         0       0       0       0       0       0       0
  5280 ;;Total ram usage:        0 bytes
  5281 ;; Hardware stack levels used: 1
  5282 ;; Hardware stack levels required when called: 1
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_i2c_read
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text30
  5291   00202A                     __ptext30:
  5292                           	callstack 0
  5293   00202A                     _i2c_no_ack:
  5294                           	callstack 26
  5295   00202A                     
  5296                           ;i2c.c: 69:  ACKDT = 1;
  5297   00202A  8AC5               	bsf	4037,5,c	;volatile
  5298                           
  5299                           ;i2c.c: 70:  ACKEN = 1;
  5300   00202C  88C5               	bsf	4037,4,c	;volatile
  5301   00202E  0012               	return		;funcret
  5302   002030                     __end_of_i2c_no_ack:
  5303                           	callstack 0
  5304                           
  5305 ;; *************** function _display_time *****************
  5306 ;; Defined at:
  5307 ;;		line 26 in file "dashboard.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;		None
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;		None
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  1    wreg      void 
  5314 ;; Registers used:
  5315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5321 ;;      Params:         0       0       0       0       0       0       0
  5322 ;;      Locals:         0       0       0       0       0       0       0
  5323 ;;      Temps:          0       0       0       0       0       0       0
  5324 ;;      Totals:         0       0       0       0       0       0       0
  5325 ;;Total ram usage:        0 bytes
  5326 ;; Hardware stack levels used: 1
  5327 ;; Hardware stack levels required when called: 3
  5328 ;; This function calls:
  5329 ;;		_clcd_print
  5330 ;; This function is called by:
  5331 ;;		_dashboard
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	text31
  5336   001FE2                     __ptext31:
  5337                           	callstack 0
  5338   001FE2                     _display_time:
  5339                           	callstack 26
  5340   001FE2                     
  5341                           ;dashboard.c: 27:     clcd_print(time, (0xC0 + (0)));
  5342   001FE2  0E87               	movlw	low _time
  5343   001FE4  6E03               	movwf	clcd_print@data^0,c
  5344   001FE6  6A04               	clrf	(clcd_print@data+1)^0,c
  5345   001FE8  0EC0               	movlw	192
  5346   001FEA  6E05               	movwf	clcd_print@addr^0,c
  5347   001FEC  ECEC  F00D         	call	_clcd_print	;wreg free
  5348   001FF0  0012               	return		;funcret
  5349   001FF2                     __end_of_display_time:
  5350                           	callstack 0
  5351                           
  5352 ;; *************** function _clear_log *****************
  5353 ;; Defined at:
  5354 ;;		line 20 in file "clear_log.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;  key             1    wreg     unsigned char 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  key             1    7[COMRAM] unsigned char 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      void 
  5361 ;; Registers used:
  5362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5368 ;;      Params:         0       0       0       0       0       0       0
  5369 ;;      Locals:         1       0       0       0       0       0       0
  5370 ;;      Temps:          0       0       0       0       0       0       0
  5371 ;;      Totals:         1       0       0       0       0       0       0
  5372 ;;Total ram usage:        1 bytes
  5373 ;; Hardware stack levels used: 1
  5374 ;; Hardware stack levels required when called: 3
  5375 ;; This function calls:
  5376 ;;		___lwdiv
  5377 ;;		___lwmod
  5378 ;;		_clcd_print
  5379 ;; This function is called by:
  5380 ;;		_main
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text32
  5385   001840                     __ptext32:
  5386                           	callstack 0
  5387   001840                     _clear_log:
  5388                           	callstack 27
  5389                           
  5390                           ;incstack = 0
  5391                           ;clear_log@key stored from wreg
  5392   001840  6E08               	movwf	clear_log@key^0,c
  5393   001842                     
  5394                           ;clear_log.c: 20: void clear_log(char key);clear_log.c: 21: {;clear_log.c: 22:     lap=0
      +                          ;
  5395   001842  0E00               	movlw	0
  5396   001844  6E4C               	movwf	_lap^0,c
  5397                           
  5398                           ;clear_log.c: 23:     overflow=0;
  5399   001846  0E00               	movlw	0
  5400   001848  6E4B               	movwf	_overflow^0,c
  5401   00184A                     
  5402                           ;clear_log.c: 26:     clcd_print("   LOG CLEARED   ",(0x80 + (0)));
  5403   00184A  0E03               	movlw	low STR_21
  5404   00184C  6E03               	movwf	clcd_print@data^0,c
  5405   00184E  0E2F               	movlw	high STR_21
  5406   001850  6E04               	movwf	(clcd_print@data+1)^0,c
  5407   001852  0E80               	movlw	128
  5408   001854  6E05               	movwf	clcd_print@addr^0,c
  5409   001856  ECEC  F00D         	call	_clcd_print	;wreg free
  5410   00185A                     
  5411                           ;clear_log.c: 27:     clcd_print("                 ",(0xC0 + (0)));
  5412   00185A  0EF1               	movlw	low STR_22
  5413   00185C  6E03               	movwf	clcd_print@data^0,c
  5414   00185E  0E2E               	movlw	high STR_22
  5415   001860  6E04               	movwf	(clcd_print@data+1)^0,c
  5416   001862  0EC0               	movlw	192
  5417   001864  6E05               	movwf	clcd_print@addr^0,c
  5418   001866  ECEC  F00D         	call	_clcd_print	;wreg free
  5419   00186A                     
  5420                           ;clear_log.c: 30:     store[0]=time[0];
  5421   00186A  C087  F076         	movff	_time,_store
  5422   00186E                     
  5423                           ;clear_log.c: 31:     store[1]=time[1];
  5424   00186E  C088  F077         	movff	_time+1,_store+1
  5425   001872                     
  5426                           ;clear_log.c: 32:     store[2]=time[3];
  5427   001872  C08A  F078         	movff	_time+3,_store+2
  5428   001876                     
  5429                           ;clear_log.c: 33:     store[3]=time[4];
  5430   001876  C08B  F079         	movff	_time+4,_store+3
  5431   00187A                     
  5432                           ;clear_log.c: 34:     store[4]=time[6];
  5433   00187A  C08D  F07A         	movff	_time+6,_store+4
  5434   00187E                     
  5435                           ;clear_log.c: 35:     store[5]=time[7];
  5436   00187E  C08E  F07B         	movff	_time+7,_store+5
  5437   001882                     
  5438                           ;clear_log.c: 38:     store[6]='C';
  5439   001882  0E43               	movlw	67
  5440   001884  0100               	movlb	0	; () banked
  5441   001886  6F7C               	movwf	(_store+6)& (0+255),b
  5442   001888                     
  5443                           ; BSR set to: 0
  5444                           ;clear_log.c: 39:     store[7]='L';
  5445   001888  0E4C               	movlw	76
  5446   00188A  6F7D               	movwf	(_store+7)& (0+255),b
  5447   00188C                     
  5448                           ; BSR set to: 0
  5449                           ;clear_log.c: 43:         store[8]=(adc_reg_val / 10) + 48;
  5450   00188C  C042  F001         	movff	_adc_reg_val,___lwdiv@dividend
  5451   001890  C043  F002         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  5452   001894  0E00               	movlw	0
  5453   001896  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  5454   001898  0E0A               	movlw	10
  5455   00189A  6E03               	movwf	___lwdiv@divisor^0,c
  5456   00189C  ECB2  F00D         	call	___lwdiv	;wreg free
  5457   0018A0  5001               	movf	?___lwdiv^0,w,c
  5458   0018A2  0F30               	addlw	48
  5459   0018A4  0100               	movlb	0	; () banked
  5460   0018A6  6F7E               	movwf	(_store+8)& (0+255),b
  5461   0018A8                     
  5462                           ; BSR set to: 0
  5463                           ;clear_log.c: 44:         store[9]=(adc_reg_val % 10) + 48;
  5464   0018A8  C042  F001         	movff	_adc_reg_val,___lwmod@dividend
  5465   0018AC  C043  F002         	movff	_adc_reg_val+1,___lwmod@dividend+1
  5466   0018B0  0E00               	movlw	0
  5467   0018B2  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5468   0018B4  0E0A               	movlw	10
  5469   0018B6  6E03               	movwf	___lwmod@divisor^0,c
  5470   0018B8  EC54  F00E         	call	___lwmod	;wreg free
  5471   0018BC  5001               	movf	?___lwmod^0,w,c
  5472   0018BE  0F30               	addlw	48
  5473   0018C0  0100               	movlb	0	; () banked
  5474   0018C2  6F7F               	movwf	(_store+9)& (0+255),b
  5475   0018C4                     
  5476                           ; BSR set to: 0
  5477                           ;clear_log.c: 46:     if(key==16)
  5478   0018C4  0E10               	movlw	16
  5479   0018C6  1808               	xorwf	clear_log@key^0,w,c
  5480   0018C8  A4D8               	btfss	status,2,c
  5481   0018CA  EF69  F00C         	goto	u2491
  5482   0018CE  EF6B  F00C         	goto	u2490
  5483   0018D2                     u2491:
  5484   0018D2  EF6D  F00C         	goto	l551
  5485   0018D6                     u2490:
  5486   0018D6                     
  5487                           ; BSR set to: 0
  5488                           ;clear_log.c: 47:     {;clear_log.c: 48:         main_f=2;
  5489   0018D6  0E02               	movlw	2
  5490   0018D8  6E54               	movwf	_main_f^0,c
  5491   0018DA                     l551:
  5492                           
  5493                           ; BSR set to: 0
  5494   0018DA  0012               	return		;funcret
  5495   0018DC                     __end_of_clear_log:
  5496                           	callstack 0
  5497                           
  5498 ;; *************** function ___lwmod *****************
  5499 ;; Defined at:
  5500 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;  dividend        2    0[COMRAM] unsigned int 
  5503 ;;  divisor         2    2[COMRAM] unsigned int 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  counter         1    4[COMRAM] unsigned char 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  2    0[COMRAM] unsigned int 
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5515 ;;      Params:         4       0       0       0       0       0       0
  5516 ;;      Locals:         1       0       0       0       0       0       0
  5517 ;;      Temps:          0       0       0       0       0       0       0
  5518 ;;      Totals:         5       0       0       0       0       0       0
  5519 ;;Total ram usage:        5 bytes
  5520 ;; Hardware stack levels used: 1
  5521 ;; Hardware stack levels required when called: 1
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_dashboard
  5526 ;;		_store_event
  5527 ;;		_view_log
  5528 ;;		_clear_log
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           	psect	text33
  5533   001CA8                     __ptext33:
  5534                           	callstack 0
  5535   001CA8                     ___lwmod:
  5536                           	callstack 28
  5537   001CA8  5003               	movf	___lwmod@divisor^0,w,c
  5538   001CAA  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  5539   001CAC  B4D8               	btfsc	status,2,c
  5540   001CAE  EF5B  F00E         	goto	u1841
  5541   001CB2  EF5D  F00E         	goto	u1840
  5542   001CB6                     u1841:
  5543   001CB6  EF81  F00E         	goto	l1191
  5544   001CBA                     u1840:
  5545   001CBA  0E01               	movlw	1
  5546   001CBC  6E05               	movwf	___lwmod@counter^0,c
  5547   001CBE  EF65  F00E         	goto	l2775
  5548   001CC2                     l2773:
  5549   001CC2  90D8               	bcf	status,0,c
  5550   001CC4  3603               	rlcf	___lwmod@divisor^0,f,c
  5551   001CC6  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  5552   001CC8  2A05               	incf	___lwmod@counter^0,f,c
  5553   001CCA                     l2775:
  5554   001CCA  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  5555   001CCC  EF6A  F00E         	goto	u1851
  5556   001CD0  EF6C  F00E         	goto	u1850
  5557   001CD4                     u1851:
  5558   001CD4  EF61  F00E         	goto	l2773
  5559   001CD8                     u1850:
  5560   001CD8                     l2777:
  5561   001CD8  5003               	movf	___lwmod@divisor^0,w,c
  5562   001CDA  5C01               	subwf	___lwmod@dividend^0,w,c
  5563   001CDC  5004               	movf	(___lwmod@divisor+1)^0,w,c
  5564   001CDE  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  5565   001CE0  A0D8               	btfss	status,0,c
  5566   001CE2  EF75  F00E         	goto	u1861
  5567   001CE6  EF77  F00E         	goto	u1860
  5568   001CEA                     u1861:
  5569   001CEA  EF7B  F00E         	goto	l2781
  5570   001CEE                     u1860:
  5571   001CEE  5003               	movf	___lwmod@divisor^0,w,c
  5572   001CF0  5E01               	subwf	___lwmod@dividend^0,f,c
  5573   001CF2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  5574   001CF4  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  5575   001CF6                     l2781:
  5576   001CF6  90D8               	bcf	status,0,c
  5577   001CF8  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  5578   001CFA  3203               	rrcf	___lwmod@divisor^0,f,c
  5579   001CFC  2E05               	decfsz	___lwmod@counter^0,f,c
  5580   001CFE  EF6C  F00E         	goto	l2777
  5581   001D02                     l1191:
  5582   001D02  C001  F001         	movff	___lwmod@dividend,?___lwmod
  5583   001D06  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  5584   001D0A  0012               	return		;funcret
  5585   001D0C                     __end_of___lwmod:
  5586                           	callstack 0
  5587                           
  5588 ;; *************** function ___lwdiv *****************
  5589 ;; Defined at:
  5590 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;  dividend        2    0[COMRAM] unsigned int 
  5593 ;;  divisor         2    2[COMRAM] unsigned int 
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;  quotient        2    4[COMRAM] unsigned int 
  5596 ;;  counter         1    6[COMRAM] unsigned char 
  5597 ;; Return value:  Size  Location     Type
  5598 ;;                  2    0[COMRAM] unsigned int 
  5599 ;; Registers used:
  5600 ;;		wreg, status,2, status,0
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 0/0
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5606 ;;      Params:         4       0       0       0       0       0       0
  5607 ;;      Locals:         3       0       0       0       0       0       0
  5608 ;;      Temps:          0       0       0       0       0       0       0
  5609 ;;      Totals:         7       0       0       0       0       0       0
  5610 ;;Total ram usage:        7 bytes
  5611 ;; Hardware stack levels used: 1
  5612 ;; Hardware stack levels required when called: 1
  5613 ;; This function calls:
  5614 ;;		Nothing
  5615 ;; This function is called by:
  5616 ;;		_dashboard
  5617 ;;		_store_event
  5618 ;;		_view_log
  5619 ;;		_clear_log
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text34
  5624   001B64                     __ptext34:
  5625                           	callstack 0
  5626   001B64                     ___lwdiv:
  5627                           	callstack 28
  5628   001B64  0E00               	movlw	0
  5629   001B66  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  5630   001B68  0E00               	movlw	0
  5631   001B6A  6E05               	movwf	___lwdiv@quotient^0,c
  5632   001B6C  5003               	movf	___lwdiv@divisor^0,w,c
  5633   001B6E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5634   001B70  B4D8               	btfsc	status,2,c
  5635   001B72  EFBD  F00D         	goto	u1811
  5636   001B76  EFBF  F00D         	goto	u1810
  5637   001B7A                     u1811:
  5638   001B7A  EFE7  F00D         	goto	l1181
  5639   001B7E                     u1810:
  5640   001B7E  0E01               	movlw	1
  5641   001B80  6E07               	movwf	___lwdiv@counter^0,c
  5642   001B82  EFC7  F00D         	goto	l2755
  5643   001B86                     l2753:
  5644   001B86  90D8               	bcf	status,0,c
  5645   001B88  3603               	rlcf	___lwdiv@divisor^0,f,c
  5646   001B8A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5647   001B8C  2A07               	incf	___lwdiv@counter^0,f,c
  5648   001B8E                     l2755:
  5649   001B8E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  5650   001B90  EFCC  F00D         	goto	u1821
  5651   001B94  EFCE  F00D         	goto	u1820
  5652   001B98                     u1821:
  5653   001B98  EFC3  F00D         	goto	l2753
  5654   001B9C                     u1820:
  5655   001B9C                     l2757:
  5656   001B9C  90D8               	bcf	status,0,c
  5657   001B9E  3605               	rlcf	___lwdiv@quotient^0,f,c
  5658   001BA0  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5659   001BA2  5003               	movf	___lwdiv@divisor^0,w,c
  5660   001BA4  5C01               	subwf	___lwdiv@dividend^0,w,c
  5661   001BA6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  5662   001BA8  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5663   001BAA  A0D8               	btfss	status,0,c
  5664   001BAC  EFDA  F00D         	goto	u1831
  5665   001BB0  EFDC  F00D         	goto	u1830
  5666   001BB4                     u1831:
  5667   001BB4  EFE1  F00D         	goto	l2765
  5668   001BB8                     u1830:
  5669   001BB8  5003               	movf	___lwdiv@divisor^0,w,c
  5670   001BBA  5E01               	subwf	___lwdiv@dividend^0,f,c
  5671   001BBC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  5672   001BBE  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5673   001BC0  8005               	bsf	___lwdiv@quotient^0,0,c
  5674   001BC2                     l2765:
  5675   001BC2  90D8               	bcf	status,0,c
  5676   001BC4  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5677   001BC6  3203               	rrcf	___lwdiv@divisor^0,f,c
  5678   001BC8  2E07               	decfsz	___lwdiv@counter^0,f,c
  5679   001BCA  EFCE  F00D         	goto	l2757
  5680   001BCE                     l1181:
  5681   001BCE  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5682   001BD2  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5683   001BD6  0012               	return		;funcret
  5684   001BD8                     __end_of___lwdiv:
  5685                           	callstack 0
  5686                           
  5687 ;; *************** function _change_pass *****************
  5688 ;; Defined at:
  5689 ;;		line 34 in file "change_password.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  key             1    wreg     unsigned char 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  key             1   22[COMRAM] unsigned char 
  5694 ;;  delay           4   18[COMRAM] unsigned long 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  1    wreg      void 
  5697 ;; Registers used:
  5698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5704 ;;      Params:         0       0       0       0       0       0       0
  5705 ;;      Locals:         5       0       0       0       0       0       0
  5706 ;;      Temps:          2       0       0       0       0       0       0
  5707 ;;      Totals:         7       0       0       0       0       0       0
  5708 ;;Total ram usage:        7 bytes
  5709 ;; Hardware stack levels used: 1
  5710 ;; Hardware stack levels required when called: 4
  5711 ;; This function calls:
  5712 ;;		_clcd_print
  5713 ;;		_clcd_putch
  5714 ;;		_clcd_write
  5715 ;;		_my_strcp
  5716 ;;		_write_external_eeprom
  5717 ;; This function is called by:
  5718 ;;		_main
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text35
  5723   0003AC                     __ptext35:
  5724                           	callstack 0
  5725   0003AC                     _change_pass:
  5726                           	callstack 26
  5727                           
  5728                           ;incstack = 0
  5729                           ;change_pass@key stored from wreg
  5730   0003AC  6E17               	movwf	change_pass@key^0,c
  5731   0003AE                     
  5732                           ;change_password.c: 35:     if (reset_flag == 0) {
  5733   0003AE  5044               	movf	_reset_flag^0,w,c
  5734   0003B0  A4D8               	btfss	status,2,c
  5735   0003B2  EFDD  F001         	goto	u2541
  5736   0003B6  EFDF  F001         	goto	u2540
  5737   0003BA                     u2541:
  5738   0003BA  EF73  F002         	goto	l3457
  5739   0003BE                     u2540:
  5740   0003BE                     
  5741                           ;change_password.c: 36:         clcd_print("  New Password : ", (0x80 + (0)));
  5742   0003BE  0ECD               	movlw	low STR_27
  5743   0003C0  6E03               	movwf	clcd_print@data^0,c
  5744   0003C2  0E2E               	movlw	high STR_27
  5745   0003C4  6E04               	movwf	(clcd_print@data+1)^0,c
  5746   0003C6  0E80               	movlw	128
  5747   0003C8  6E05               	movwf	clcd_print@addr^0,c
  5748   0003CA  ECEC  F00D         	call	_clcd_print	;wreg free
  5749   0003CE                     
  5750                           ;change_password.c: 39:         if (del++ < 500) {
  5751   0003CE  503C               	movf	_del^0,w,c
  5752   0003D0  6E11               	movwf	??_change_pass^0,c
  5753   0003D2  503D               	movf	(_del+1)^0,w,c
  5754   0003D4  6E12               	movwf	(??_change_pass+1)^0,c
  5755   0003D6  4A3C               	infsnz	_del^0,f,c
  5756   0003D8  2A3D               	incf	(_del+1)^0,f,c
  5757   0003DA  BE12               	btfsc	(??_change_pass+1)^0,7,c
  5758   0003DC  EFFB  F001         	goto	u2550
  5759   0003E0  0EF4               	movlw	244
  5760   0003E2  5C11               	subwf	??_change_pass^0,w,c
  5761   0003E4  0E01               	movlw	1
  5762   0003E6  5812               	subwfb	(??_change_pass+1)^0,w,c
  5763   0003E8  B0D8               	btfsc	status,0,c
  5764   0003EA  EFF9  F001         	goto	u2551
  5765   0003EE  EFFB  F001         	goto	u2550
  5766   0003F2                     u2551:
  5767   0003F2  EF03  F002         	goto	l3423
  5768   0003F6                     u2550:
  5769   0003F6                     
  5770                           ;change_password.c: 40:             clcd_putch('_', (0xC0 + (ind)));
  5771   0003F6  5045               	movf	_ind^0,w,c
  5772   0003F8  0FC0               	addlw	192
  5773   0003FA  6E0F               	movwf	clcd_putch@addr^0,c
  5774   0003FC  0E5F               	movlw	95
  5775   0003FE  ECAA  F00F         	call	_clcd_putch
  5776                           
  5777                           ;change_password.c: 41:         } else if (del > 500 && del < 1000) {
  5778   000402  EF2B  F002         	goto	l3431
  5779   000406                     l3423:
  5780   000406  BE3D               	btfsc	(_del+1)^0,7,c
  5781   000408  EF0F  F002         	goto	u2561
  5782   00040C  0EF5               	movlw	245
  5783   00040E  5C3C               	subwf	_del^0,w,c
  5784   000410  0E01               	movlw	1
  5785   000412  583D               	subwfb	(_del+1)^0,w,c
  5786   000414  A0D8               	btfss	status,0,c
  5787   000416  EF0F  F002         	goto	u2561
  5788   00041A  EF11  F002         	goto	u2560
  5789   00041E                     u2561:
  5790   00041E  EF27  F002         	goto	l3429
  5791   000422                     u2560:
  5792   000422  BE3D               	btfsc	(_del+1)^0,7,c
  5793   000424  EF1F  F002         	goto	u2570
  5794   000428  0EE8               	movlw	232
  5795   00042A  5C3C               	subwf	_del^0,w,c
  5796   00042C  0E03               	movlw	3
  5797   00042E  583D               	subwfb	(_del+1)^0,w,c
  5798   000430  B0D8               	btfsc	status,0,c
  5799   000432  EF1D  F002         	goto	u2571
  5800   000436  EF1F  F002         	goto	u2570
  5801   00043A                     u2571:
  5802   00043A  EF27  F002         	goto	l3429
  5803   00043E                     u2570:
  5804   00043E                     
  5805                           ;change_password.c: 42:             clcd_putch(' ', (0xC0 + (ind)));
  5806   00043E  5045               	movf	_ind^0,w,c
  5807   000440  0FC0               	addlw	192
  5808   000442  6E0F               	movwf	clcd_putch@addr^0,c
  5809   000444  0E20               	movlw	32
  5810   000446  ECAA  F00F         	call	_clcd_putch
  5811                           
  5812                           ;change_password.c: 43:         } else
  5813   00044A  EF2B  F002         	goto	l3431
  5814   00044E                     l3429:
  5815                           
  5816                           ;change_password.c: 44:             del = 0;
  5817   00044E  0E00               	movlw	0
  5818   000450  6E3D               	movwf	(_del+1)^0,c
  5819   000452  0E00               	movlw	0
  5820   000454  6E3C               	movwf	_del^0,c
  5821   000456                     l3431:
  5822                           
  5823                           ;change_password.c: 46:         if (key == 5) {
  5824   000456  0E05               	movlw	5
  5825   000458  1817               	xorwf	change_pass@key^0,w,c
  5826   00045A  A4D8               	btfss	status,2,c
  5827   00045C  EF32  F002         	goto	u2581
  5828   000460  EF34  F002         	goto	u2580
  5829   000464                     u2581:
  5830   000464  EF43  F002         	goto	l3439
  5831   000468                     u2580:
  5832   000468                     
  5833                           ;change_password.c: 47:             temp1[ind] = '0';
  5834   000468  5045               	movf	_ind^0,w,c
  5835   00046A  0F57               	addlw	low _temp1
  5836   00046C  6ED9               	movwf	fsr2l,c
  5837   00046E  6ADA               	clrf	fsr2h,c
  5838   000470  0E30               	movlw	48
  5839   000472  6EDF               	movwf	indf2,c
  5840   000474                     
  5841                           ;change_password.c: 48:             clcd_putch('*', (0xC0 + (ind)));
  5842   000474  5045               	movf	_ind^0,w,c
  5843   000476  0FC0               	addlw	192
  5844   000478  6E0F               	movwf	clcd_putch@addr^0,c
  5845   00047A  0E2A               	movlw	42
  5846   00047C  ECAA  F00F         	call	_clcd_putch
  5847   000480                     l3437:
  5848                           
  5849                           ;change_password.c: 49:             ind++;
  5850   000480  2A45               	incf	_ind^0,f,c
  5851                           
  5852                           ;change_password.c: 50:         } else if (key == 6) {
  5853   000482  EF5A  F002         	goto	l3447
  5854   000486                     l3439:
  5855   000486  0E06               	movlw	6
  5856   000488  1817               	xorwf	change_pass@key^0,w,c
  5857   00048A  A4D8               	btfss	status,2,c
  5858   00048C  EF4A  F002         	goto	u2591
  5859   000490  EF4C  F002         	goto	u2590
  5860   000494                     u2591:
  5861   000494  EF5A  F002         	goto	l3447
  5862   000498                     u2590:
  5863   000498                     
  5864                           ;change_password.c: 51:             temp1[ind] = '1';
  5865   000498  5045               	movf	_ind^0,w,c
  5866   00049A  0F57               	addlw	low _temp1
  5867   00049C  6ED9               	movwf	fsr2l,c
  5868   00049E  6ADA               	clrf	fsr2h,c
  5869   0004A0  0E31               	movlw	49
  5870   0004A2  6EDF               	movwf	indf2,c
  5871   0004A4                     
  5872                           ;change_password.c: 52:             clcd_putch('*', (0xC0 + (ind)));
  5873   0004A4  5045               	movf	_ind^0,w,c
  5874   0004A6  0FC0               	addlw	192
  5875   0004A8  6E0F               	movwf	clcd_putch@addr^0,c
  5876   0004AA  0E2A               	movlw	42
  5877   0004AC  ECAA  F00F         	call	_clcd_putch
  5878   0004B0  EF40  F002         	goto	l3437
  5879   0004B4                     l3447:
  5880                           
  5881                           ;change_password.c: 55:         if (ind == 4) {
  5882   0004B4  0E04               	movlw	4
  5883   0004B6  1845               	xorwf	_ind^0,w,c
  5884   0004B8  A4D8               	btfss	status,2,c
  5885   0004BA  EF61  F002         	goto	u2601
  5886   0004BE  EF63  F002         	goto	u2600
  5887   0004C2                     u2601:
  5888   0004C2  EF64  F003         	goto	l687
  5889   0004C6                     u2600:
  5890   0004C6                     
  5891                           ;change_password.c: 56:             temp1[ind] = '\0';
  5892   0004C6  5045               	movf	_ind^0,w,c
  5893   0004C8  0F57               	addlw	low _temp1
  5894   0004CA  6ED9               	movwf	fsr2l,c
  5895   0004CC  6ADA               	clrf	fsr2h,c
  5896   0004CE  6ADF               	clrf	indf2,c
  5897   0004D0                     
  5898                           ;change_password.c: 57:             reset_flag = 1;
  5899   0004D0  0E01               	movlw	1
  5900   0004D2  6E44               	movwf	_reset_flag^0,c
  5901   0004D4                     
  5902                           ;change_password.c: 58:             ind = 0;
  5903   0004D4  0E00               	movlw	0
  5904   0004D6  6E45               	movwf	_ind^0,c
  5905   0004D8                     
  5906                           ;change_password.c: 59:             clcd_write(0x01, 0);
  5907   0004D8  0E00               	movlw	0
  5908   0004DA  6E01               	movwf	clcd_write@control_bit^0,c
  5909   0004DC  0E01               	movlw	1
  5910   0004DE  EC1C  F00F         	call	_clcd_write
  5911   0004E2  EF64  F003         	goto	l687
  5912   0004E6                     l3457:
  5913   0004E6  0444               	decf	_reset_flag^0,w,c
  5914   0004E8  A4D8               	btfss	status,2,c
  5915   0004EA  EF79  F002         	goto	u2611
  5916   0004EE  EF7B  F002         	goto	u2610
  5917   0004F2                     u2611:
  5918   0004F2  EF64  F003         	goto	l687
  5919   0004F6                     u2610:
  5920   0004F6                     
  5921                           ;change_password.c: 62:         clcd_print("  Retype Password : ", (0x80 + (0)));
  5922   0004F6  0E91               	movlw	low STR_28
  5923   0004F8  6E03               	movwf	clcd_print@data^0,c
  5924   0004FA  0E2E               	movlw	high STR_28
  5925   0004FC  6E04               	movwf	(clcd_print@data+1)^0,c
  5926   0004FE  0E80               	movlw	128
  5927   000500  6E05               	movwf	clcd_print@addr^0,c
  5928   000502  ECEC  F00D         	call	_clcd_print	;wreg free
  5929   000506                     
  5930                           ;change_password.c: 64:         if (del++ < 500) {
  5931   000506  503C               	movf	_del^0,w,c
  5932   000508  6E11               	movwf	??_change_pass^0,c
  5933   00050A  503D               	movf	(_del+1)^0,w,c
  5934   00050C  6E12               	movwf	(??_change_pass+1)^0,c
  5935   00050E  4A3C               	infsnz	_del^0,f,c
  5936   000510  2A3D               	incf	(_del+1)^0,f,c
  5937   000512  BE12               	btfsc	(??_change_pass+1)^0,7,c
  5938   000514  EF97  F002         	goto	u2620
  5939   000518  0EF4               	movlw	244
  5940   00051A  5C11               	subwf	??_change_pass^0,w,c
  5941   00051C  0E01               	movlw	1
  5942   00051E  5812               	subwfb	(??_change_pass+1)^0,w,c
  5943   000520  B0D8               	btfsc	status,0,c
  5944   000522  EF95  F002         	goto	u2621
  5945   000526  EF97  F002         	goto	u2620
  5946   00052A                     u2621:
  5947   00052A  EF9F  F002         	goto	l3465
  5948   00052E                     u2620:
  5949   00052E                     
  5950                           ;change_password.c: 65:             clcd_putch('_', (0xC0 + (ind)));
  5951   00052E  5045               	movf	_ind^0,w,c
  5952   000530  0FC0               	addlw	192
  5953   000532  6E0F               	movwf	clcd_putch@addr^0,c
  5954   000534  0E5F               	movlw	95
  5955   000536  ECAA  F00F         	call	_clcd_putch
  5956                           
  5957                           ;change_password.c: 66:         } else if (del > 500 && del < 1000) {
  5958   00053A  EFC7  F002         	goto	l3473
  5959   00053E                     l3465:
  5960   00053E  BE3D               	btfsc	(_del+1)^0,7,c
  5961   000540  EFAB  F002         	goto	u2631
  5962   000544  0EF5               	movlw	245
  5963   000546  5C3C               	subwf	_del^0,w,c
  5964   000548  0E01               	movlw	1
  5965   00054A  583D               	subwfb	(_del+1)^0,w,c
  5966   00054C  A0D8               	btfss	status,0,c
  5967   00054E  EFAB  F002         	goto	u2631
  5968   000552  EFAD  F002         	goto	u2630
  5969   000556                     u2631:
  5970   000556  EFC3  F002         	goto	l3471
  5971   00055A                     u2630:
  5972   00055A  BE3D               	btfsc	(_del+1)^0,7,c
  5973   00055C  EFBB  F002         	goto	u2640
  5974   000560  0EE8               	movlw	232
  5975   000562  5C3C               	subwf	_del^0,w,c
  5976   000564  0E03               	movlw	3
  5977   000566  583D               	subwfb	(_del+1)^0,w,c
  5978   000568  B0D8               	btfsc	status,0,c
  5979   00056A  EFB9  F002         	goto	u2641
  5980   00056E  EFBB  F002         	goto	u2640
  5981   000572                     u2641:
  5982   000572  EFC3  F002         	goto	l3471
  5983   000576                     u2640:
  5984   000576                     
  5985                           ;change_password.c: 67:             clcd_putch(' ', (0xC0 + (ind)));
  5986   000576  5045               	movf	_ind^0,w,c
  5987   000578  0FC0               	addlw	192
  5988   00057A  6E0F               	movwf	clcd_putch@addr^0,c
  5989   00057C  0E20               	movlw	32
  5990   00057E  ECAA  F00F         	call	_clcd_putch
  5991                           
  5992                           ;change_password.c: 68:         } else
  5993   000582  EFC7  F002         	goto	l3473
  5994   000586                     l3471:
  5995                           
  5996                           ;change_password.c: 69:             del = 0;
  5997   000586  0E00               	movlw	0
  5998   000588  6E3D               	movwf	(_del+1)^0,c
  5999   00058A  0E00               	movlw	0
  6000   00058C  6E3C               	movwf	_del^0,c
  6001   00058E                     l3473:
  6002                           
  6003                           ;change_password.c: 71:         if (key == 5) {
  6004   00058E  0E05               	movlw	5
  6005   000590  1817               	xorwf	change_pass@key^0,w,c
  6006   000592  A4D8               	btfss	status,2,c
  6007   000594  EFCE  F002         	goto	u2651
  6008   000598  EFD0  F002         	goto	u2650
  6009   00059C                     u2651:
  6010   00059C  EFDF  F002         	goto	l3481
  6011   0005A0                     u2650:
  6012   0005A0                     
  6013                           ;change_password.c: 72:             temp2[ind] = '0';
  6014   0005A0  5045               	movf	_ind^0,w,c
  6015   0005A2  0F90               	addlw	low _temp2
  6016   0005A4  6ED9               	movwf	fsr2l,c
  6017   0005A6  6ADA               	clrf	fsr2h,c
  6018   0005A8  0E30               	movlw	48
  6019   0005AA  6EDF               	movwf	indf2,c
  6020   0005AC                     
  6021                           ;change_password.c: 73:             clcd_putch('*', (0xC0 + (ind)));
  6022   0005AC  5045               	movf	_ind^0,w,c
  6023   0005AE  0FC0               	addlw	192
  6024   0005B0  6E0F               	movwf	clcd_putch@addr^0,c
  6025   0005B2  0E2A               	movlw	42
  6026   0005B4  ECAA  F00F         	call	_clcd_putch
  6027   0005B8                     l3479:
  6028                           
  6029                           ;change_password.c: 74:             ind++;
  6030   0005B8  2A45               	incf	_ind^0,f,c
  6031                           
  6032                           ;change_password.c: 75:         } else if (key == 6) {
  6033   0005BA  EFF6  F002         	goto	l3489
  6034   0005BE                     l3481:
  6035   0005BE  0E06               	movlw	6
  6036   0005C0  1817               	xorwf	change_pass@key^0,w,c
  6037   0005C2  A4D8               	btfss	status,2,c
  6038   0005C4  EFE6  F002         	goto	u2661
  6039   0005C8  EFE8  F002         	goto	u2660
  6040   0005CC                     u2661:
  6041   0005CC  EFF6  F002         	goto	l3489
  6042   0005D0                     u2660:
  6043   0005D0                     
  6044                           ;change_password.c: 76:             temp2[ind] = '1';
  6045   0005D0  5045               	movf	_ind^0,w,c
  6046   0005D2  0F90               	addlw	low _temp2
  6047   0005D4  6ED9               	movwf	fsr2l,c
  6048   0005D6  6ADA               	clrf	fsr2h,c
  6049   0005D8  0E31               	movlw	49
  6050   0005DA  6EDF               	movwf	indf2,c
  6051   0005DC                     
  6052                           ;change_password.c: 77:             clcd_putch('*', (0xC0 + (ind)));
  6053   0005DC  5045               	movf	_ind^0,w,c
  6054   0005DE  0FC0               	addlw	192
  6055   0005E0  6E0F               	movwf	clcd_putch@addr^0,c
  6056   0005E2  0E2A               	movlw	42
  6057   0005E4  ECAA  F00F         	call	_clcd_putch
  6058   0005E8  EFDC  F002         	goto	l3479
  6059   0005EC                     l3489:
  6060                           
  6061                           ;change_password.c: 80:         if (ind == 4) {
  6062   0005EC  0E04               	movlw	4
  6063   0005EE  1845               	xorwf	_ind^0,w,c
  6064   0005F0  A4D8               	btfss	status,2,c
  6065   0005F2  EFFD  F002         	goto	u2671
  6066   0005F6  EFFF  F002         	goto	u2670
  6067   0005FA                     u2671:
  6068   0005FA  EF64  F003         	goto	l687
  6069   0005FE                     u2670:
  6070   0005FE                     
  6071                           ;change_password.c: 81:             temp2[ind] = '\0';
  6072   0005FE  5045               	movf	_ind^0,w,c
  6073   000600  0F90               	addlw	low _temp2
  6074   000602  6ED9               	movwf	fsr2l,c
  6075   000604  6ADA               	clrf	fsr2h,c
  6076   000606  6ADF               	clrf	indf2,c
  6077   000608                     
  6078                           ;change_password.c: 82:             if (my_strcp(temp1, temp2) == 0) {
  6079   000608  0E57               	movlw	low _temp1
  6080   00060A  6E01               	movwf	my_strcp@one^0,c
  6081   00060C  0E90               	movlw	low _temp2
  6082   00060E  6E02               	movwf	my_strcp@two^0,c
  6083   000610  EC35  F00D         	call	_my_strcp	;wreg free
  6084   000614  5001               	movf	?_my_strcp^0,w,c
  6085   000616  1002               	iorwf	(?_my_strcp+1)^0,w,c
  6086   000618  A4D8               	btfss	status,2,c
  6087   00061A  EF11  F003         	goto	u2681
  6088   00061E  EF13  F003         	goto	u2680
  6089   000622                     u2681:
  6090   000622  EF62  F003         	goto	l3515
  6091   000626                     u2680:
  6092   000626                     
  6093                           ;change_password.c: 83:                 pass[0] = temp1[0];
  6094   000626  C057  F09A         	movff	_temp1,_pass
  6095   00062A                     
  6096                           ;change_password.c: 84:                 write_external_eeprom((200), temp1[0]);
  6097   00062A  C057  F002         	movff	_temp1,write_external_eeprom@data
  6098   00062E  0EC8               	movlw	200
  6099   000630  ECFC  F00E         	call	_write_external_eeprom
  6100   000634                     
  6101                           ;change_password.c: 85:                 pass[1] = temp1[1];
  6102   000634  C058  F09B         	movff	_temp1+1,_pass+1
  6103                           
  6104                           ;change_password.c: 86:                 write_external_eeprom((201), temp1[1]);
  6105   000638  C058  F002         	movff	_temp1+1,write_external_eeprom@data
  6106   00063C  0EC9               	movlw	201
  6107   00063E  ECFC  F00E         	call	_write_external_eeprom
  6108   000642                     
  6109                           ;change_password.c: 87:                 pass[2] = temp1[2];
  6110   000642  C059  F09C         	movff	_temp1+2,_pass+2
  6111                           
  6112                           ;change_password.c: 88:                 write_external_eeprom((202), temp1[2]);
  6113   000646  C059  F002         	movff	_temp1+2,write_external_eeprom@data
  6114   00064A  0ECA               	movlw	202
  6115   00064C  ECFC  F00E         	call	_write_external_eeprom
  6116   000650                     
  6117                           ;change_password.c: 89:                 pass[3] = temp1[3];
  6118   000650  C05A  F09D         	movff	_temp1+3,_pass+3
  6119                           
  6120                           ;change_password.c: 90:                 write_external_eeprom((203), temp1[3]);
  6121   000654  C05A  F002         	movff	_temp1+3,write_external_eeprom@data
  6122   000658  0ECB               	movlw	203
  6123   00065A  ECFC  F00E         	call	_write_external_eeprom
  6124   00065E                     
  6125                           ;change_password.c: 92:                 clcd_print(" Password Change  ", (0x80 + (0)));
  6126   00065E  0EBA               	movlw	low STR_29
  6127   000660  6E03               	movwf	clcd_print@data^0,c
  6128   000662  0E2E               	movlw	high STR_29
  6129   000664  6E04               	movwf	(clcd_print@data+1)^0,c
  6130   000666  0E80               	movlw	128
  6131   000668  6E05               	movwf	clcd_print@addr^0,c
  6132   00066A  ECEC  F00D         	call	_clcd_print	;wreg free
  6133   00066E                     
  6134                           ;change_password.c: 93:                 clcd_print("   SUCCESSFULL  ", (0xC0 + (0)));
  6135   00066E  0E15               	movlw	low STR_30
  6136   000670  6E03               	movwf	clcd_print@data^0,c
  6137   000672  0E2F               	movlw	high STR_30
  6138   000674  6E04               	movwf	(clcd_print@data+1)^0,c
  6139   000676  0EC0               	movlw	192
  6140   000678  6E05               	movwf	clcd_print@addr^0,c
  6141   00067A  ECEC  F00D         	call	_clcd_print	;wreg free
  6142   00067E                     
  6143                           ;change_password.c: 94:                 for (unsigned long int delay = 200000; delay--;)
      +                          ;
  6144   00067E  0E40               	movlw	64
  6145   000680  6E13               	movwf	change_pass@delay^0,c
  6146   000682  0E0D               	movlw	13
  6147   000684  6E14               	movwf	(change_pass@delay+1)^0,c
  6148   000686  0E03               	movlw	3
  6149   000688  6E15               	movwf	(change_pass@delay+2)^0,c
  6150   00068A  0E00               	movlw	0
  6151   00068C  6E16               	movwf	(change_pass@delay+3)^0,c
  6152   00068E                     l3511:
  6153   00068E  0613               	decf	change_pass@delay^0,f,c
  6154   000690  0E00               	movlw	0
  6155   000692  5A14               	subwfb	(change_pass@delay+1)^0,f,c
  6156   000694  5A15               	subwfb	(change_pass@delay+2)^0,f,c
  6157   000696  5A16               	subwfb	(change_pass@delay+3)^0,f,c
  6158   000698  2813               	incf	change_pass@delay^0,w,c
  6159   00069A  E10A               	bnz	u2691
  6160   00069C  2814               	incf	(change_pass@delay+1)^0,w,c
  6161   00069E  E108               	bnz	u2691
  6162   0006A0  2815               	incf	(change_pass@delay+2)^0,w,c
  6163   0006A2  E106               	bnz	u2691
  6164   0006A4  2816               	incf	(change_pass@delay+3)^0,w,c
  6165   0006A6  A4D8               	btfss	status,2,c
  6166   0006A8  EF58  F003         	goto	u2691
  6167   0006AC  EF5A  F003         	goto	u2690
  6168   0006B0                     u2691:
  6169   0006B0  EF47  F003         	goto	l3511
  6170   0006B4                     u2690:
  6171   0006B4                     
  6172                           ;change_password.c: 95:                 ind = 0;
  6173   0006B4  0E00               	movlw	0
  6174   0006B6  6E45               	movwf	_ind^0,c
  6175                           
  6176                           ;change_password.c: 96:                 reset_flag = 0;
  6177   0006B8  0E00               	movlw	0
  6178   0006BA  6E44               	movwf	_reset_flag^0,c
  6179                           
  6180                           ;change_password.c: 97:                 main_f = 2;
  6181   0006BC  0E02               	movlw	2
  6182   0006BE  6E54               	movwf	_main_f^0,c
  6183                           
  6184                           ;change_password.c: 98:             } else {
  6185   0006C0  EF64  F003         	goto	l687
  6186   0006C4                     l3515:
  6187                           
  6188                           ;change_password.c: 99:                 main_f = 2;
  6189   0006C4  0E02               	movlw	2
  6190   0006C6  6E54               	movwf	_main_f^0,c
  6191   0006C8                     l687:
  6192   0006C8  0012               	return		;funcret
  6193   0006CA                     __end_of_change_pass:
  6194                           	callstack 0
  6195                           
  6196 ;; *************** function _write_external_eeprom *****************
  6197 ;; Defined at:
  6198 ;;		line 14 in file "external_eeprom.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  address         1    wreg     unsigned char 
  6201 ;;  data            1    1[COMRAM] unsigned char 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;  address         1    4[COMRAM] unsigned char 
  6204 ;;  i               2    2[COMRAM] int 
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  1    wreg      void 
  6207 ;; Registers used:
  6208 ;;		wreg, status,2, status,0, cstack
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6214 ;;      Params:         1       0       0       0       0       0       0
  6215 ;;      Locals:         3       0       0       0       0       0       0
  6216 ;;      Temps:          0       0       0       0       0       0       0
  6217 ;;      Totals:         4       0       0       0       0       0       0
  6218 ;;Total ram usage:        4 bytes
  6219 ;; Hardware stack levels used: 1
  6220 ;; Hardware stack levels required when called: 3
  6221 ;; This function calls:
  6222 ;;		_i2c_start
  6223 ;;		_i2c_stop
  6224 ;;		_i2c_write
  6225 ;; This function is called by:
  6226 ;;		_init_config
  6227 ;;		_store_event
  6228 ;;		_change_pass
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           	psect	text36
  6233   001DF8                     __ptext36:
  6234                           	callstack 0
  6235   001DF8                     _write_external_eeprom:
  6236                           	callstack 26
  6237                           
  6238                           ;incstack = 0
  6239                           ;write_external_eeprom@address stored from wreg
  6240   001DF8  6E05               	movwf	write_external_eeprom@address^0,c
  6241   001DFA                     
  6242                           ;external_eeprom.c: 14: void write_external_eeprom(unsigned char address, unsigned char 
      +                          data);external_eeprom.c: 15: {;external_eeprom.c: 16:  i2c_start();
  6243   001DFA  EC11  F010         	call	_i2c_start	;wreg free
  6244   001DFE                     
  6245                           ;external_eeprom.c: 17:  i2c_write(0xA0);
  6246   001DFE  0EA0               	movlw	160
  6247   001E00  ECFF  F00F         	call	_i2c_write
  6248   001E04                     
  6249                           ;external_eeprom.c: 18:  i2c_write(address);
  6250   001E04  5005               	movf	write_external_eeprom@address^0,w,c
  6251   001E06  ECFF  F00F         	call	_i2c_write
  6252   001E0A                     
  6253                           ;external_eeprom.c: 19:  i2c_write(data);
  6254   001E0A  5002               	movf	write_external_eeprom@data^0,w,c
  6255   001E0C  ECFF  F00F         	call	_i2c_write
  6256   001E10                     
  6257                           ;external_eeprom.c: 20:  i2c_stop();
  6258   001E10  EC0D  F010         	call	_i2c_stop	;wreg free
  6259   001E14                     
  6260                           ;external_eeprom.c: 21:     for(int i=3000; i--;);
  6261   001E14  0E0B               	movlw	11
  6262   001E16  6E04               	movwf	(write_external_eeprom@i+1)^0,c
  6263   001E18  0EB8               	movlw	184
  6264   001E1A  6E03               	movwf	write_external_eeprom@i^0,c
  6265   001E1C                     l2717:
  6266   001E1C  0603               	decf	write_external_eeprom@i^0,f,c
  6267   001E1E  A0D8               	btfss	status,0,c
  6268   001E20  0604               	decf	(write_external_eeprom@i+1)^0,f,c
  6269   001E22  2803               	incf	write_external_eeprom@i^0,w,c
  6270   001E24  E106               	bnz	u1791
  6271   001E26  2804               	incf	(write_external_eeprom@i+1)^0,w,c
  6272   001E28  A4D8               	btfss	status,2,c
  6273   001E2A  EF19  F00F         	goto	u1791
  6274   001E2E  EF1B  F00F         	goto	u1790
  6275   001E32                     u1791:
  6276   001E32  EF0E  F00F         	goto	l2717
  6277   001E36                     u1790:
  6278   001E36  0012               	return		;funcret
  6279   001E38                     __end_of_write_external_eeprom:
  6280                           	callstack 0
  6281                           
  6282 ;; *************** function _i2c_write *****************
  6283 ;; Defined at:
  6284 ;;		line 55 in file "i2c.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  data            1    wreg     unsigned char 
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;  data            1    0[COMRAM] unsigned char 
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  1    wreg      void 
  6291 ;; Registers used:
  6292 ;;		wreg, cstack
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6298 ;;      Params:         0       0       0       0       0       0       0
  6299 ;;      Locals:         1       0       0       0       0       0       0
  6300 ;;      Temps:          0       0       0       0       0       0       0
  6301 ;;      Totals:         1       0       0       0       0       0       0
  6302 ;;Total ram usage:        1 bytes
  6303 ;; Hardware stack levels used: 1
  6304 ;; Hardware stack levels required when called: 2
  6305 ;; This function calls:
  6306 ;;		_i2c_idle
  6307 ;; This function is called by:
  6308 ;;		_write_ds1307
  6309 ;;		_read_ds1307
  6310 ;;		_write_external_eeprom
  6311 ;;		_read_external_eeprom
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           	psect	text37
  6316   001FFE                     __ptext37:
  6317                           	callstack 0
  6318   001FFE                     _i2c_write:
  6319                           	callstack 26
  6320                           
  6321                           ;incstack = 0
  6322                           ;i2c_write@data stored from wreg
  6323   001FFE  6E01               	movwf	i2c_write@data^0,c
  6324   002000                     
  6325                           ;i2c.c: 55: void i2c_write(unsigned char data);i2c.c: 56: {;i2c.c: 57:  SSPBUF = data;
  6326   002000  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  6327   002004                     
  6328                           ;i2c.c: 58:  i2c_idle();
  6329   002004  ECE8  F00F         	call	_i2c_idle	;wreg free
  6330   002008  0012               	return		;funcret
  6331   00200A                     __end_of_i2c_write:
  6332                           	callstack 0
  6333                           
  6334 ;; *************** function _i2c_stop *****************
  6335 ;; Defined at:
  6336 ;;		line 43 in file "i2c.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;		None
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      void 
  6343 ;; Registers used:
  6344 ;;		cstack
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6350 ;;      Params:         0       0       0       0       0       0       0
  6351 ;;      Locals:         0       0       0       0       0       0       0
  6352 ;;      Temps:          0       0       0       0       0       0       0
  6353 ;;      Totals:         0       0       0       0       0       0       0
  6354 ;;Total ram usage:        0 bytes
  6355 ;; Hardware stack levels used: 1
  6356 ;; Hardware stack levels required when called: 2
  6357 ;; This function calls:
  6358 ;;		_i2c_idle
  6359 ;; This function is called by:
  6360 ;;		_write_ds1307
  6361 ;;		_read_ds1307
  6362 ;;		_write_external_eeprom
  6363 ;;		_read_external_eeprom
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text38
  6368   00201A                     __ptext38:
  6369                           	callstack 0
  6370   00201A                     _i2c_stop:
  6371                           	callstack 26
  6372   00201A                     
  6373                           ;i2c.c: 45:  PEN = 1;
  6374   00201A  84C5               	bsf	4037,2,c	;volatile
  6375   00201C                     
  6376                           ;i2c.c: 46:  i2c_idle();
  6377   00201C  ECE8  F00F         	call	_i2c_idle	;wreg free
  6378   002020  0012               	return		;funcret
  6379   002022                     __end_of_i2c_stop:
  6380                           	callstack 0
  6381                           
  6382 ;; *************** function _i2c_start *****************
  6383 ;; Defined at:
  6384 ;;		line 37 in file "i2c.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      void 
  6391 ;; Registers used:
  6392 ;;		cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6398 ;;      Params:         0       0       0       0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0
  6401 ;;      Totals:         0       0       0       0       0       0       0
  6402 ;;Total ram usage:        0 bytes
  6403 ;; Hardware stack levels used: 1
  6404 ;; Hardware stack levels required when called: 2
  6405 ;; This function calls:
  6406 ;;		_i2c_idle
  6407 ;; This function is called by:
  6408 ;;		_write_ds1307
  6409 ;;		_read_ds1307
  6410 ;;		_write_external_eeprom
  6411 ;;		_read_external_eeprom
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text39
  6416   002022                     __ptext39:
  6417                           	callstack 0
  6418   002022                     _i2c_start:
  6419                           	callstack 26
  6420   002022                     
  6421                           ;i2c.c: 39:  SEN = 1;
  6422   002022  80C5               	bsf	4037,0,c	;volatile
  6423   002024                     
  6424                           ;i2c.c: 40:  i2c_idle();
  6425   002024  ECE8  F00F         	call	_i2c_idle	;wreg free
  6426   002028  0012               	return		;funcret
  6427   00202A                     __end_of_i2c_start:
  6428                           	callstack 0
  6429                           
  6430 ;; *************** function _i2c_idle *****************
  6431 ;; Defined at:
  6432 ;;		line 23 in file "i2c.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;		None
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;		None
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  1    wreg      void 
  6439 ;; Registers used:
  6440 ;;		None
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6446 ;;      Params:         0       0       0       0       0       0       0
  6447 ;;      Locals:         0       0       0       0       0       0       0
  6448 ;;      Temps:          0       0       0       0       0       0       0
  6449 ;;      Totals:         0       0       0       0       0       0       0
  6450 ;;Total ram usage:        0 bytes
  6451 ;; Hardware stack levels used: 1
  6452 ;; Hardware stack levels required when called: 1
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_i2c_start
  6457 ;;		_i2c_stop
  6458 ;;		_i2c_rep_start
  6459 ;;		_i2c_write
  6460 ;;		_i2c_rx_mode
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text40
  6465   001FD0                     __ptext40:
  6466                           	callstack 0
  6467   001FD0                     _i2c_idle:
  6468                           	callstack 26
  6469   001FD0                     l362:
  6470   001FD0  A69E               	btfss	3998,3,c	;volatile
  6471   001FD2  EFED  F00F         	goto	u1721
  6472   001FD6  EFEF  F00F         	goto	u1720
  6473   001FDA                     u1721:
  6474   001FDA  EFE8  F00F         	goto	l362
  6475   001FDE                     u1720:
  6476   001FDE                     
  6477                           ;i2c.c: 26:  SSPIF = 0;
  6478   001FDE  969E               	bcf	3998,3,c	;volatile
  6479   001FE0  0012               	return		;funcret
  6480   001FE2                     __end_of_i2c_idle:
  6481                           	callstack 0
  6482                           
  6483 ;; *************** function _my_strcp *****************
  6484 ;; Defined at:
  6485 ;;		line 22 in file "change_password.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;  one             1    0[COMRAM] PTR unsigned char 
  6488 ;;		 -> temp1(5), 
  6489 ;;  two             1    1[COMRAM] PTR unsigned char 
  6490 ;;		 -> temp2(5), 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;  k               2    6[COMRAM] int 
  6493 ;;  last            2    4[COMRAM] int 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  2    0[COMRAM] int 
  6496 ;; Registers used:
  6497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6503 ;;      Params:         2       0       0       0       0       0       0
  6504 ;;      Locals:         4       0       0       0       0       0       0
  6505 ;;      Temps:          2       0       0       0       0       0       0
  6506 ;;      Totals:         8       0       0       0       0       0       0
  6507 ;;Total ram usage:        8 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; Hardware stack levels required when called: 1
  6510 ;; This function calls:
  6511 ;;		Nothing
  6512 ;; This function is called by:
  6513 ;;		_change_pass
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	text41
  6518   001A6A                     __ptext41:
  6519                           	callstack 0
  6520   001A6A                     _my_strcp:
  6521                           	callstack 28
  6522   001A6A                     
  6523                           ;change_password.c: 23:     int k = 0, last = 0;
  6524   001A6A  0E00               	movlw	0
  6525   001A6C  6E08               	movwf	(my_strcp@k+1)^0,c
  6526   001A6E  0E00               	movlw	0
  6527   001A70  6E07               	movwf	my_strcp@k^0,c
  6528   001A72  0E00               	movlw	0
  6529   001A74  6E06               	movwf	(my_strcp@last+1)^0,c
  6530   001A76  0E00               	movlw	0
  6531   001A78  6E05               	movwf	my_strcp@last^0,c
  6532                           
  6533                           ;change_password.c: 24:     while (one[k] != '\0') {
  6534   001A7A  EF66  F00D         	goto	l2955
  6535   001A7E                     l2949:
  6536                           
  6537                           ;change_password.c: 25:         if (one[k] != two[k]) {
  6538   001A7E  5002               	movf	my_strcp@two^0,w,c
  6539   001A80  2407               	addwf	my_strcp@k^0,w,c
  6540   001A82  6ED9               	movwf	fsr2l,c
  6541   001A84  6ADA               	clrf	fsr2h,c
  6542   001A86  5001               	movf	my_strcp@one^0,w,c
  6543   001A88  2407               	addwf	my_strcp@k^0,w,c
  6544   001A8A  6EE1               	movwf	fsr1l,c
  6545   001A8C  6AE2               	clrf	fsr1h,c
  6546   001A8E  50DE               	movf	postinc2,w,c
  6547   001A90  18E6               	xorwf	postinc1,w,c
  6548   001A92  B4D8               	btfsc	status,2,c
  6549   001A94  EF4E  F00D         	goto	u1931
  6550   001A98  EF50  F00D         	goto	u1930
  6551   001A9C                     u1931:
  6552   001A9C  EF64  F00D         	goto	l2953
  6553   001AA0                     u1930:
  6554   001AA0                     
  6555                           ;change_password.c: 26:             last = one[k] - two[k];
  6556   001AA0  5001               	movf	my_strcp@one^0,w,c
  6557   001AA2  2407               	addwf	my_strcp@k^0,w,c
  6558   001AA4  6ED9               	movwf	fsr2l,c
  6559   001AA6  6ADA               	clrf	fsr2h,c
  6560   001AA8  50DF               	movf	indf2,w,c
  6561   001AAA  6E03               	movwf	??_my_strcp^0,c
  6562   001AAC  5002               	movf	my_strcp@two^0,w,c
  6563   001AAE  2407               	addwf	my_strcp@k^0,w,c
  6564   001AB0  6ED9               	movwf	fsr2l,c
  6565   001AB2  6ADA               	clrf	fsr2h,c
  6566   001AB4  50DF               	movf	indf2,w,c
  6567   001AB6  6E04               	movwf	(??_my_strcp+1)^0,c
  6568   001AB8  5004               	movf	(??_my_strcp+1)^0,w,c
  6569   001ABA  5C03               	subwf	??_my_strcp^0,w,c
  6570   001ABC  6E05               	movwf	my_strcp@last^0,c
  6571   001ABE  6A06               	clrf	(my_strcp@last+1)^0,c
  6572   001AC0  A0D8               	btfss	status,0,c
  6573   001AC2  0606               	decf	(my_strcp@last+1)^0,f,c
  6574                           
  6575                           ;change_password.c: 27:             break;
  6576   001AC4  EF72  F00D         	goto	l659
  6577   001AC8                     l2953:
  6578                           
  6579                           ;change_password.c: 29:         k++;
  6580   001AC8  4A07               	infsnz	my_strcp@k^0,f,c
  6581   001ACA  2A08               	incf	(my_strcp@k+1)^0,f,c
  6582   001ACC                     l2955:
  6583                           
  6584                           ;change_password.c: 24:     while (one[k] != '\0') {
  6585   001ACC  5001               	movf	my_strcp@one^0,w,c
  6586   001ACE  2407               	addwf	my_strcp@k^0,w,c
  6587   001AD0  6ED9               	movwf	fsr2l,c
  6588   001AD2  6ADA               	clrf	fsr2h,c
  6589   001AD4  50DF               	movf	indf2,w,c
  6590   001AD6  A4D8               	btfss	status,2,c
  6591   001AD8  EF70  F00D         	goto	u1941
  6592   001ADC  EF72  F00D         	goto	u1940
  6593   001AE0                     u1941:
  6594   001AE0  EF3F  F00D         	goto	l2949
  6595   001AE4                     u1940:
  6596   001AE4                     l659:
  6597                           
  6598                           ;change_password.c: 31:     return last;
  6599   001AE4  C005  F001         	movff	my_strcp@last,?_my_strcp
  6600   001AE8  C006  F002         	movff	my_strcp@last+1,?_my_strcp+1
  6601   001AEC  0012               	return		;funcret
  6602   001AEE                     __end_of_my_strcp:
  6603                           	callstack 0
  6604                           
  6605 ;; *************** function _clcd_putch *****************
  6606 ;; Defined at:
  6607 ;;		line 68 in file "clcd.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  data            1    wreg     const unsigned char 
  6610 ;;  addr            1   14[COMRAM] unsigned char 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;  data            1   15[COMRAM] const unsigned char 
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  1    wreg      void 
  6615 ;; Registers used:
  6616 ;;		wreg, status,2, cstack
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6622 ;;      Params:         1       0       0       0       0       0       0
  6623 ;;      Locals:         1       0       0       0       0       0       0
  6624 ;;      Temps:          0       0       0       0       0       0       0
  6625 ;;      Totals:         2       0       0       0       0       0       0
  6626 ;;Total ram usage:        2 bytes
  6627 ;; Hardware stack levels used: 1
  6628 ;; Hardware stack levels required when called: 2
  6629 ;; This function calls:
  6630 ;;		_clcd_write
  6631 ;; This function is called by:
  6632 ;;		_dashboard
  6633 ;;		_password
  6634 ;;		_menu
  6635 ;;		_view_log
  6636 ;;		_change_pass
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           	psect	text42
  6641   001F54                     __ptext42:
  6642                           	callstack 0
  6643   001F54                     _clcd_putch:
  6644                           	callstack 27
  6645                           
  6646                           ;incstack = 0
  6647                           ;clcd_putch@data stored from wreg
  6648   001F54  6E10               	movwf	clcd_putch@data^0,c
  6649   001F56                     
  6650                           ;clcd.c: 68: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 69: {
      +                          ;clcd.c: 70:  clcd_write(addr, 0);
  6651   001F56  0E00               	movlw	0
  6652   001F58  6E01               	movwf	clcd_write@control_bit^0,c
  6653   001F5A  500F               	movf	clcd_putch@addr^0,w,c
  6654   001F5C  EC1C  F00F         	call	_clcd_write
  6655                           
  6656                           ;clcd.c: 71:  clcd_write(data, 1);
  6657   001F60  0E01               	movlw	1
  6658   001F62  6E01               	movwf	clcd_write@control_bit^0,c
  6659   001F64  5010               	movf	clcd_putch@data^0,w,c
  6660   001F66  EC1C  F00F         	call	_clcd_write
  6661   001F6A  0012               	return		;funcret
  6662   001F6C                     __end_of_clcd_putch:
  6663                           	callstack 0
  6664                           
  6665 ;; *************** function _clcd_print *****************
  6666 ;; Defined at:
  6667 ;;		line 59 in file "clcd.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;  data            2    2[COMRAM] PTR const unsigned char 
  6670 ;;		 -> STR_30(17), STR_29(19), STR_28(21), STR_27(18), 
  6671 ;;		 -> STR_24(14), STR_23(18), STR_22(18), STR_21(18), 
  6672 ;;		 -> STR_20(17), STR_19(15), STR_18(16), STR_17(17), 
  6673 ;;		 -> STR_16(16), STR_15(15), STR_14(15), STR_13(17), 
  6674 ;;		 -> STR_12(6), STR_11(16), STR_10(17), STR_9(17), 
  6675 ;;		 -> time(9), STR_8(3), STR_7(3), STR_6(3), 
  6676 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  6677 ;;		 -> STR_1(3), 
  6678 ;;  addr            1    4[COMRAM] unsigned char 
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;		None
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  1    wreg      void 
  6683 ;; Registers used:
  6684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6690 ;;      Params:         3       0       0       0       0       0       0
  6691 ;;      Locals:         0       0       0       0       0       0       0
  6692 ;;      Temps:          0       0       0       0       0       0       0
  6693 ;;      Totals:         3       0       0       0       0       0       0
  6694 ;;Total ram usage:        3 bytes
  6695 ;; Hardware stack levels used: 1
  6696 ;; Hardware stack levels required when called: 2
  6697 ;; This function calls:
  6698 ;;		_clcd_write
  6699 ;; This function is called by:
  6700 ;;		_display_time
  6701 ;;		_dashboard
  6702 ;;		_password
  6703 ;;		_menu
  6704 ;;		_view_log
  6705 ;;		_clear_log
  6706 ;;		_download_log
  6707 ;;		_change_pass
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text43
  6712   001BD8                     __ptext43:
  6713                           	callstack 0
  6714   001BD8                     _clcd_print:
  6715                           	callstack 27
  6716   001BD8                     
  6717                           ;clcd.c: 59: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 60: 
      +                          {;clcd.c: 61:  clcd_write(addr, 0);
  6718   001BD8  0E00               	movlw	0
  6719   001BDA  6E01               	movwf	clcd_write@control_bit^0,c
  6720   001BDC  5005               	movf	clcd_print@addr^0,w,c
  6721   001BDE  EC1C  F00F         	call	_clcd_write
  6722                           
  6723                           ;clcd.c: 62:  while (*data != '\0')
  6724   001BE2  EF09  F00E         	goto	l2703
  6725   001BE6                     l2699:
  6726                           
  6727                           ;clcd.c: 63:  {;clcd.c: 64:   clcd_write(*data++, 1);
  6728   001BE6  0E01               	movlw	1
  6729   001BE8  6E01               	movwf	clcd_write@control_bit^0,c
  6730   001BEA  C003  FFF6         	movff	clcd_print@data,tblptrl
  6731   001BEE  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  6732   001BF2  6AF8               	clrf	tblptru,c
  6733   001BF4  0E05               	movlw	(high __ramtop+-1)
  6734   001BF6  64F7               	cpfsgt	tblptrh,c
  6735   001BF8  D003               	bra	u1767
  6736   001BFA  0008               	tblrd		*
  6737   001BFC  50F5               	movf	tablat,w,c
  6738   001BFE  D005               	bra	u1760
  6739   001C00                     u1767:
  6740   001C00  CFF6 FFE9          	movff	tblptrl,fsr0l
  6741   001C04  CFF7 FFEA          	movff	tblptrh,fsr0h
  6742   001C08  50EF               	movf	indf0,w,c
  6743   001C0A                     u1760:
  6744   001C0A  EC1C  F00F         	call	_clcd_write
  6745   001C0E  4A03               	infsnz	clcd_print@data^0,f,c
  6746   001C10  2A04               	incf	(clcd_print@data+1)^0,f,c
  6747   001C12                     l2703:
  6748                           
  6749                           ;clcd.c: 62:  while (*data != '\0')
  6750   001C12  C003  FFF6         	movff	clcd_print@data,tblptrl
  6751   001C16  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  6752   001C1A  6AF8               	clrf	tblptru,c
  6753   001C1C  0E05               	movlw	(high __ramtop+-1)
  6754   001C1E  64F7               	cpfsgt	tblptrh,c
  6755   001C20  D003               	bra	u1777
  6756   001C22  0008               	tblrd		*
  6757   001C24  50F5               	movf	tablat,w,c
  6758   001C26  D005               	bra	u1770
  6759   001C28                     u1777:
  6760   001C28  CFF6 FFE9          	movff	tblptrl,fsr0l
  6761   001C2C  CFF7 FFEA          	movff	tblptrh,fsr0h
  6762   001C30  50EF               	movf	indf0,w,c
  6763   001C32                     u1770:
  6764   001C32  0900               	iorlw	0
  6765   001C34  A4D8               	btfss	status,2,c
  6766   001C36  EF1F  F00E         	goto	u1781
  6767   001C3A  EF21  F00E         	goto	u1780
  6768   001C3E                     u1781:
  6769   001C3E  EFF3  F00D         	goto	l2699
  6770   001C42                     u1780:
  6771   001C42  0012               	return		;funcret
  6772   001C44                     __end_of_clcd_print:
  6773                           	callstack 0
  6774                           
  6775 ;; *************** function _clcd_write *****************
  6776 ;; Defined at:
  6777 ;;		line 5 in file "clcd.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;  byte            1    wreg     unsigned char 
  6780 ;;  control_bit     1    0[COMRAM] unsigned char 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;  byte            1    1[COMRAM] unsigned char 
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  1    wreg      void 
  6785 ;; Registers used:
  6786 ;;		wreg
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6792 ;;      Params:         1       0       0       0       0       0       0
  6793 ;;      Locals:         1       0       0       0       0       0       0
  6794 ;;      Temps:          0       0       0       0       0       0       0
  6795 ;;      Totals:         2       0       0       0       0       0       0
  6796 ;;Total ram usage:        2 bytes
  6797 ;; Hardware stack levels used: 1
  6798 ;; Hardware stack levels required when called: 1
  6799 ;; This function calls:
  6800 ;;		Nothing
  6801 ;; This function is called by:
  6802 ;;		_init_clcd
  6803 ;;		_clcd_print
  6804 ;;		_clcd_putch
  6805 ;;		_main
  6806 ;;		_password
  6807 ;;		_menu
  6808 ;;		_change_pass
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           	psect	text44
  6813   001E38                     __ptext44:
  6814                           	callstack 0
  6815   001E38                     _clcd_write:
  6816                           	callstack 27
  6817                           
  6818                           ;incstack = 0
  6819                           ;clcd_write@byte stored from wreg
  6820   001E38  6E02               	movwf	clcd_write@byte^0,c
  6821   001E3A                     
  6822                           ;clcd.c: 5: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 6: {;
      +                          clcd.c: 7:  RC1 = control_bit;
  6823   001E3A  B001               	btfsc	clcd_write@control_bit^0,0,c
  6824   001E3C  EF22  F00F         	goto	u1731
  6825   001E40  EF25  F00F         	goto	u1730
  6826   001E44                     u1731:
  6827   001E44  8282               	bsf	3970,1,c	;volatile
  6828   001E46  EF26  F00F         	goto	u1745
  6829   001E4A                     u1730:
  6830   001E4A  9282               	bcf	3970,1,c	;volatile
  6831   001E4C                     u1745:
  6832   001E4C                     
  6833                           ;clcd.c: 8:  PORTD = byte;
  6834   001E4C  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  6835   001E50                     
  6836                           ;clcd.c: 11:  RC2 = 1;
  6837   001E50  8482               	bsf	3970,2,c	;volatile
  6838   001E52                     
  6839                           ;clcd.c: 12:  RC2 = 0;
  6840   001E52  9482               	bcf	3970,2,c	;volatile
  6841   001E54                     
  6842                           ;clcd.c: 14:  TRISD7 = 0xFF;
  6843   001E54  8E95               	bsf	3989,7,c	;volatile
  6844   001E56                     
  6845                           ;clcd.c: 15:  RC0 = 1;
  6846   001E56  8082               	bsf	3970,0,c	;volatile
  6847   001E58                     
  6848                           ;clcd.c: 16:  RC1 = 0;
  6849   001E58  9282               	bcf	3970,1,c	;volatile
  6850   001E5A                     l2669:
  6851                           
  6852                           ;clcd.c: 19:  {;clcd.c: 20:   RC2 = 1;
  6853   001E5A  8482               	bsf	3970,2,c	;volatile
  6854   001E5C                     
  6855                           ;clcd.c: 21:   RC2 = 0;
  6856   001E5C  9482               	bcf	3970,2,c	;volatile
  6857   001E5E                     
  6858                           ;clcd.c: 22:  } while (RD7);
  6859   001E5E  BE83               	btfsc	3971,7,c	;volatile
  6860   001E60  EF34  F00F         	goto	u1751
  6861   001E64  EF36  F00F         	goto	u1750
  6862   001E68                     u1751:
  6863   001E68  EF2D  F00F         	goto	l2669
  6864   001E6C                     u1750:
  6865   001E6C                     
  6866                           ;clcd.c: 24:  RC0 = 0;
  6867   001E6C  9082               	bcf	3970,0,c	;volatile
  6868                           
  6869                           ;clcd.c: 25:  TRISD7 = 0x00;
  6870   001E6E  9E95               	bcf	3989,7,c	;volatile
  6871   001E70  0012               	return		;funcret
  6872   001E72                     __end_of_clcd_write:
  6873                           	callstack 0
  6874                           
  6875 ;; *************** function ___xxtofl *****************
  6876 ;; Defined at:
  6877 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  sign            1    wreg     unsigned char 
  6880 ;;  val             4    7[COMRAM] long 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  sign            1   15[COMRAM] unsigned char 
  6883 ;;  arg             4   17[COMRAM] unsigned long 
  6884 ;;  exp             1   16[COMRAM] unsigned char 
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  4    7[COMRAM] unsigned char 
  6887 ;; Registers used:
  6888 ;;		wreg, status,2, status,0
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6894 ;;      Params:         4       0       0       0       0       0       0
  6895 ;;      Locals:         6       0       0       0       0       0       0
  6896 ;;      Temps:          4       0       0       0       0       0       0
  6897 ;;      Totals:        14       0       0       0       0       0       0
  6898 ;;Total ram usage:       14 bytes
  6899 ;; Hardware stack levels used: 1
  6900 ;; Hardware stack levels required when called: 1
  6901 ;; This function calls:
  6902 ;;		Nothing
  6903 ;; This function is called by:
  6904 ;;		_main
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           	psect	text45
  6909   000DE6                     __ptext45:
  6910                           	callstack 0
  6911   000DE6                     ___xxtofl:
  6912                           	callstack 29
  6913                           
  6914                           ;incstack = 0
  6915                           ;___xxtofl@sign stored from wreg
  6916   000DE6  6E10               	movwf	___xxtofl@sign^0,c
  6917   000DE8  5010               	movf	___xxtofl@sign^0,w,c
  6918   000DEA  B4D8               	btfsc	status,2,c
  6919   000DEC  EFFA  F006         	goto	u3001
  6920   000DF0  EFFC  F006         	goto	u3000
  6921   000DF4                     u3001:
  6922   000DF4  EF1E  F007         	goto	l1345
  6923   000DF8                     u3000:
  6924   000DF8  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  6925   000DFA  EF03  F007         	goto	u3010
  6926   000DFE  EF01  F007         	goto	u3011
  6927   000E02                     u3011:
  6928   000E02  EF1E  F007         	goto	l1345
  6929   000E06                     u3010:
  6930   000E06  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  6931   000E0A  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  6932   000E0E  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  6933   000E12  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  6934   000E16  1E0C               	comf	??___xxtofl^0,f,c
  6935   000E18  1E0D               	comf	(??___xxtofl+1)^0,f,c
  6936   000E1A  1E0E               	comf	(??___xxtofl+2)^0,f,c
  6937   000E1C  1E0F               	comf	(??___xxtofl+3)^0,f,c
  6938   000E1E  2A0C               	incf	??___xxtofl^0,f,c
  6939   000E20  0E00               	movlw	0
  6940   000E22  220D               	addwfc	(??___xxtofl+1)^0,f,c
  6941   000E24  220E               	addwfc	(??___xxtofl+2)^0,f,c
  6942   000E26  220F               	addwfc	(??___xxtofl+3)^0,f,c
  6943   000E28  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  6944   000E2C  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  6945   000E30  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  6946   000E34  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  6947   000E38  EF26  F007         	goto	l3705
  6948   000E3C                     l1345:
  6949   000E3C  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  6950   000E40  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6951   000E44  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6952   000E48  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6953   000E4C                     l3705:
  6954   000E4C  5008               	movf	___xxtofl@val^0,w,c
  6955   000E4E  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  6956   000E50  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  6957   000E52  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  6958   000E54  A4D8               	btfss	status,2,c
  6959   000E56  EF2F  F007         	goto	u3021
  6960   000E5A  EF31  F007         	goto	u3020
  6961   000E5E                     u3021:
  6962   000E5E  EF3B  F007         	goto	l3711
  6963   000E62                     u3020:
  6964   000E62  0E00               	movlw	0
  6965   000E64  6E08               	movwf	?___xxtofl^0,c
  6966   000E66  0E00               	movlw	0
  6967   000E68  6E09               	movwf	(?___xxtofl+1)^0,c
  6968   000E6A  0E00               	movlw	0
  6969   000E6C  6E0A               	movwf	(?___xxtofl+2)^0,c
  6970   000E6E  0E00               	movlw	0
  6971   000E70  6E0B               	movwf	(?___xxtofl+3)^0,c
  6972   000E72  EFCC  F007         	goto	l1348
  6973   000E76                     l3711:
  6974   000E76  0E96               	movlw	150
  6975   000E78  6E11               	movwf	___xxtofl@exp^0,c
  6976   000E7A  EF45  F007         	goto	l3715
  6977   000E7E                     l3713:
  6978   000E7E  2A11               	incf	___xxtofl@exp^0,f,c
  6979   000E80  90D8               	bcf	status,0,c
  6980   000E82  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  6981   000E84  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  6982   000E86  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  6983   000E88  3212               	rrcf	___xxtofl@arg^0,f,c
  6984   000E8A                     l3715:
  6985   000E8A  0E00               	movlw	0
  6986   000E8C  1412               	andwf	___xxtofl@arg^0,w,c
  6987   000E8E  6E0C               	movwf	??___xxtofl^0,c
  6988   000E90  0E00               	movlw	0
  6989   000E92  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  6990   000E94  6E0D               	movwf	(??___xxtofl+1)^0,c
  6991   000E96  0E00               	movlw	0
  6992   000E98  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  6993   000E9A  6E0E               	movwf	(??___xxtofl+2)^0,c
  6994   000E9C  0EFE               	movlw	254
  6995   000E9E  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  6996   000EA0  6E0F               	movwf	(??___xxtofl+3)^0,c
  6997   000EA2  500C               	movf	??___xxtofl^0,w,c
  6998   000EA4  100D               	iorwf	(??___xxtofl+1)^0,w,c
  6999   000EA6  100E               	iorwf	(??___xxtofl+2)^0,w,c
  7000   000EA8  100F               	iorwf	(??___xxtofl+3)^0,w,c
  7001   000EAA  A4D8               	btfss	status,2,c
  7002   000EAC  EF5A  F007         	goto	u3031
  7003   000EB0  EF5C  F007         	goto	u3030
  7004   000EB4                     u3031:
  7005   000EB4  EF3F  F007         	goto	l3713
  7006   000EB8                     u3030:
  7007   000EB8  EF6A  F007         	goto	l1352
  7008   000EBC                     l3717:
  7009   000EBC  2A11               	incf	___xxtofl@exp^0,f,c
  7010   000EBE  0E01               	movlw	1
  7011   000EC0  2612               	addwf	___xxtofl@arg^0,f,c
  7012   000EC2  0E00               	movlw	0
  7013   000EC4  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  7014   000EC6  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  7015   000EC8  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  7016   000ECA  90D8               	bcf	status,0,c
  7017   000ECC  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  7018   000ECE  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  7019   000ED0  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  7020   000ED2  3212               	rrcf	___xxtofl@arg^0,f,c
  7021   000ED4                     l1352:
  7022   000ED4  0E00               	movlw	0
  7023   000ED6  1412               	andwf	___xxtofl@arg^0,w,c
  7024   000ED8  6E0C               	movwf	??___xxtofl^0,c
  7025   000EDA  0E00               	movlw	0
  7026   000EDC  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  7027   000EDE  6E0D               	movwf	(??___xxtofl+1)^0,c
  7028   000EE0  0E00               	movlw	0
  7029   000EE2  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  7030   000EE4  6E0E               	movwf	(??___xxtofl+2)^0,c
  7031   000EE6  0EFF               	movlw	255
  7032   000EE8  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  7033   000EEA  6E0F               	movwf	(??___xxtofl+3)^0,c
  7034   000EEC  500C               	movf	??___xxtofl^0,w,c
  7035   000EEE  100D               	iorwf	(??___xxtofl+1)^0,w,c
  7036   000EF0  100E               	iorwf	(??___xxtofl+2)^0,w,c
  7037   000EF2  100F               	iorwf	(??___xxtofl+3)^0,w,c
  7038   000EF4  A4D8               	btfss	status,2,c
  7039   000EF6  EF7F  F007         	goto	u3041
  7040   000EFA  EF81  F007         	goto	u3040
  7041   000EFE                     u3041:
  7042   000EFE  EF5E  F007         	goto	l3717
  7043   000F02                     u3040:
  7044   000F02  EF89  F007         	goto	l3725
  7045   000F06                     l3723:
  7046   000F06  0611               	decf	___xxtofl@exp^0,f,c
  7047   000F08  90D8               	bcf	status,0,c
  7048   000F0A  3612               	rlcf	___xxtofl@arg^0,f,c
  7049   000F0C  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  7050   000F0E  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  7051   000F10  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  7052   000F12                     l3725:
  7053   000F12  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  7054   000F14  EF8E  F007         	goto	u3051
  7055   000F18  EF90  F007         	goto	u3050
  7056   000F1C                     u3051:
  7057   000F1C  EF98  F007         	goto	l1359
  7058   000F20                     u3050:
  7059   000F20  0E02               	movlw	2
  7060   000F22  6011               	cpfslt	___xxtofl@exp^0,c
  7061   000F24  EF96  F007         	goto	u3061
  7062   000F28  EF98  F007         	goto	u3060
  7063   000F2C                     u3061:
  7064   000F2C  EF83  F007         	goto	l3723
  7065   000F30                     u3060:
  7066   000F30                     l1359:
  7067   000F30  B011               	btfsc	___xxtofl@exp^0,0,c
  7068   000F32  EF9D  F007         	goto	u3071
  7069   000F36  EF9F  F007         	goto	u3070
  7070   000F3A                     u3071:
  7071   000F3A  EFA0  F007         	goto	l3731
  7072   000F3E                     u3070:
  7073   000F3E  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  7074   000F40                     l3731:
  7075   000F40  90D8               	bcf	status,0,c
  7076   000F42  3211               	rrcf	___xxtofl@exp^0,f,c
  7077   000F44  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  7078   000F48  6A0D               	clrf	(??___xxtofl+1)^0,c
  7079   000F4A  6A0E               	clrf	(??___xxtofl+2)^0,c
  7080   000F4C  6A0F               	clrf	(??___xxtofl+3)^0,c
  7081   000F4E  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  7082   000F52  6A0E               	clrf	(??___xxtofl+2)^0,c
  7083   000F54  6A0D               	clrf	(??___xxtofl+1)^0,c
  7084   000F56  6A0C               	clrf	??___xxtofl^0,c
  7085   000F58  500C               	movf	??___xxtofl^0,w,c
  7086   000F5A  1212               	iorwf	___xxtofl@arg^0,f,c
  7087   000F5C  500D               	movf	(??___xxtofl+1)^0,w,c
  7088   000F5E  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  7089   000F60  500E               	movf	(??___xxtofl+2)^0,w,c
  7090   000F62  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  7091   000F64  500F               	movf	(??___xxtofl+3)^0,w,c
  7092   000F66  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  7093   000F68  5010               	movf	___xxtofl@sign^0,w,c
  7094   000F6A  B4D8               	btfsc	status,2,c
  7095   000F6C  EFBA  F007         	goto	u3081
  7096   000F70  EFBC  F007         	goto	u3080
  7097   000F74                     u3081:
  7098   000F74  EFC4  F007         	goto	l3741
  7099   000F78                     u3080:
  7100   000F78  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  7101   000F7A  EFC3  F007         	goto	u3090
  7102   000F7E  EFC1  F007         	goto	u3091
  7103   000F82                     u3091:
  7104   000F82  EFC4  F007         	goto	l3741
  7105   000F86                     u3090:
  7106   000F86  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  7107   000F88                     l3741:
  7108   000F88  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  7109   000F8C  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  7110   000F90  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  7111   000F94  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  7112   000F98                     l1348:
  7113   000F98  0012               	return		;funcret
  7114   000F9A                     __end_of___xxtofl:
  7115                           	callstack 0
  7116                           
  7117 ;; *************** function ___fltol *****************
  7118 ;; Defined at:
  7119 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  f1              4   46[COMRAM] unsigned char 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  exp1            1   55[COMRAM] unsigned char 
  7124 ;;  sign1           1   54[COMRAM] unsigned char 
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  4   46[COMRAM] long 
  7127 ;; Registers used:
  7128 ;;		wreg, status,2, status,0
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7134 ;;      Params:         4       0       0       0       0       0       0
  7135 ;;      Locals:         2       0       0       0       0       0       0
  7136 ;;      Temps:          4       0       0       0       0       0       0
  7137 ;;      Totals:        10       0       0       0       0       0       0
  7138 ;;Total ram usage:       10 bytes
  7139 ;; Hardware stack levels used: 1
  7140 ;; Hardware stack levels required when called: 1
  7141 ;; This function calls:
  7142 ;;		Nothing
  7143 ;; This function is called by:
  7144 ;;		_main
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text46
  7149   00143E                     __ptext46:
  7150                           	callstack 0
  7151   00143E                     ___fltol:
  7152                           	callstack 29
  7153   00143E  3431               	rlcf	(___fltol@f1+2)^0,w,c
  7154   001440  3432               	rlcf	(___fltol@f1+3)^0,w,c
  7155   001442  6E38               	movwf	___fltol@exp1^0,c
  7156   001444  5038               	movf	___fltol@exp1^0,w,c
  7157   001446  A4D8               	btfss	status,2,c
  7158   001448  EF28  F00A         	goto	u2931
  7159   00144C  EF2A  F00A         	goto	u2930
  7160   001450                     u2931:
  7161   001450  EF34  F00A         	goto	l3661
  7162   001454                     u2930:
  7163   001454                     l3657:
  7164   001454  0E00               	movlw	0
  7165   001456  6E2F               	movwf	?___fltol^0,c
  7166   001458  0E00               	movlw	0
  7167   00145A  6E30               	movwf	(?___fltol+1)^0,c
  7168   00145C  0E00               	movlw	0
  7169   00145E  6E31               	movwf	(?___fltol+2)^0,c
  7170   001460  0E00               	movlw	0
  7171   001462  6E32               	movwf	(?___fltol+3)^0,c
  7172   001464  EFA1  F00A         	goto	l987
  7173   001468                     l3661:
  7174   001468  C02F  F033         	movff	___fltol@f1,??___fltol
  7175   00146C  C030  F034         	movff	___fltol@f1+1,??___fltol+1
  7176   001470  C031  F035         	movff	___fltol@f1+2,??___fltol+2
  7177   001474  C032  F036         	movff	___fltol@f1+3,??___fltol+3
  7178   001478  0E20               	movlw	32
  7179   00147A  EF44  F00A         	goto	u2940
  7180   00147E                     u2945:
  7181   00147E  90D8               	bcf	status,0,c
  7182   001480  3236               	rrcf	(??___fltol+3)^0,f,c
  7183   001482  3235               	rrcf	(??___fltol+2)^0,f,c
  7184   001484  3234               	rrcf	(??___fltol+1)^0,f,c
  7185   001486  3233               	rrcf	??___fltol^0,f,c
  7186   001488                     u2940:
  7187   001488  2EE8               	decfsz	wreg,f,c
  7188   00148A  EF3F  F00A         	goto	u2945
  7189   00148E  5033               	movf	??___fltol^0,w,c
  7190   001490  6E37               	movwf	___fltol@sign1^0,c
  7191   001492  8E31               	bsf	(___fltol@f1+2)^0,7,c
  7192   001494  0EFF               	movlw	255
  7193   001496  162F               	andwf	___fltol@f1^0,f,c
  7194   001498  0EFF               	movlw	255
  7195   00149A  1630               	andwf	(___fltol@f1+1)^0,f,c
  7196   00149C  0EFF               	movlw	255
  7197   00149E  1631               	andwf	(___fltol@f1+2)^0,f,c
  7198   0014A0  0E00               	movlw	0
  7199   0014A2  1632               	andwf	(___fltol@f1+3)^0,f,c
  7200   0014A4  0E96               	movlw	150
  7201   0014A6  5E38               	subwf	___fltol@exp1^0,f,c
  7202   0014A8  BE38               	btfsc	___fltol@exp1^0,7,c
  7203   0014AA  EF5B  F00A         	goto	u2950
  7204   0014AE  EF59  F00A         	goto	u2951
  7205   0014B2                     u2951:
  7206   0014B2  EF71  F00A         	goto	l3681
  7207   0014B6                     u2950:
  7208   0014B6  5038               	movf	___fltol@exp1^0,w,c
  7209   0014B8  0A80               	xorlw	128
  7210   0014BA  0F97               	addlw	151
  7211   0014BC  B0D8               	btfsc	status,0,c
  7212   0014BE  EF63  F00A         	goto	u2961
  7213   0014C2  EF65  F00A         	goto	u2960
  7214   0014C6                     u2961:
  7215   0014C6  EF67  F00A         	goto	l3677
  7216   0014CA                     u2960:
  7217   0014CA  EF2A  F00A         	goto	l3657
  7218   0014CE                     l3677:
  7219   0014CE  90D8               	bcf	status,0,c
  7220   0014D0  3232               	rrcf	(___fltol@f1+3)^0,f,c
  7221   0014D2  3231               	rrcf	(___fltol@f1+2)^0,f,c
  7222   0014D4  3230               	rrcf	(___fltol@f1+1)^0,f,c
  7223   0014D6  322F               	rrcf	___fltol@f1^0,f,c
  7224   0014D8  3E38               	incfsz	___fltol@exp1^0,f,c
  7225   0014DA  EF67  F00A         	goto	l3677
  7226   0014DE  EF89  F00A         	goto	l3691
  7227   0014E2                     l3681:
  7228   0014E2  0E1F               	movlw	31
  7229   0014E4  6438               	cpfsgt	___fltol@exp1^0,c
  7230   0014E6  EF77  F00A         	goto	u2971
  7231   0014EA  EF79  F00A         	goto	u2970
  7232   0014EE                     u2971:
  7233   0014EE  EF81  F00A         	goto	l3689
  7234   0014F2                     u2970:
  7235   0014F2  EF2A  F00A         	goto	l3657
  7236   0014F6                     l3687:
  7237   0014F6  90D8               	bcf	status,0,c
  7238   0014F8  362F               	rlcf	___fltol@f1^0,f,c
  7239   0014FA  3630               	rlcf	(___fltol@f1+1)^0,f,c
  7240   0014FC  3631               	rlcf	(___fltol@f1+2)^0,f,c
  7241   0014FE  3632               	rlcf	(___fltol@f1+3)^0,f,c
  7242   001500  0638               	decf	___fltol@exp1^0,f,c
  7243   001502                     l3689:
  7244   001502  5038               	movf	___fltol@exp1^0,w,c
  7245   001504  A4D8               	btfss	status,2,c
  7246   001506  EF87  F00A         	goto	u2981
  7247   00150A  EF89  F00A         	goto	u2980
  7248   00150E                     u2981:
  7249   00150E  EF7B  F00A         	goto	l3687
  7250   001512                     u2980:
  7251   001512                     l3691:
  7252   001512  5037               	movf	___fltol@sign1^0,w,c
  7253   001514  B4D8               	btfsc	status,2,c
  7254   001516  EF8F  F00A         	goto	u2991
  7255   00151A  EF91  F00A         	goto	u2990
  7256   00151E                     u2991:
  7257   00151E  EF99  F00A         	goto	l3695
  7258   001522                     u2990:
  7259   001522  1E32               	comf	(___fltol@f1+3)^0,f,c
  7260   001524  1E31               	comf	(___fltol@f1+2)^0,f,c
  7261   001526  1E30               	comf	(___fltol@f1+1)^0,f,c
  7262   001528  6C2F               	negf	___fltol@f1^0,c
  7263   00152A  0E00               	movlw	0
  7264   00152C  2230               	addwfc	(___fltol@f1+1)^0,f,c
  7265   00152E  2231               	addwfc	(___fltol@f1+2)^0,f,c
  7266   001530  2232               	addwfc	(___fltol@f1+3)^0,f,c
  7267   001532                     l3695:
  7268   001532  C02F  F02F         	movff	___fltol@f1,?___fltol
  7269   001536  C030  F030         	movff	___fltol@f1+1,?___fltol+1
  7270   00153A  C031  F031         	movff	___fltol@f1+2,?___fltol+2
  7271   00153E  C032  F032         	movff	___fltol@f1+3,?___fltol+3
  7272   001542                     l987:
  7273   001542  0012               	return		;funcret
  7274   001544                     __end_of___fltol:
  7275                           	callstack 0
  7276                           
  7277 ;; *************** function ___fldiv *****************
  7278 ;; Defined at:
  7279 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;  b               4   21[COMRAM] long 
  7282 ;;  a               4   25[COMRAM] long 
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;  grs             4   40[COMRAM] unsigned long 
  7285 ;;  rem             4   33[COMRAM] unsigned long 
  7286 ;;  new_exp         2   38[COMRAM] short 
  7287 ;;  aexp            1   45[COMRAM] unsigned char 
  7288 ;;  bexp            1   44[COMRAM] unsigned char 
  7289 ;;  sign            1   37[COMRAM] unsigned char 
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  4   21[COMRAM] unsigned char 
  7292 ;; Registers used:
  7293 ;;		wreg, status,2, status,0
  7294 ;; Tracked objects:
  7295 ;;		On entry : 0/0
  7296 ;;		On exit  : 0/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7299 ;;      Params:         8       0       0       0       0       0       0
  7300 ;;      Locals:        13       0       0       0       0       0       0
  7301 ;;      Temps:          4       0       0       0       0       0       0
  7302 ;;      Totals:        25       0       0       0       0       0       0
  7303 ;;Total ram usage:       25 bytes
  7304 ;; Hardware stack levels used: 1
  7305 ;; Hardware stack levels required when called: 1
  7306 ;; This function calls:
  7307 ;;		Nothing
  7308 ;; This function is called by:
  7309 ;;		_main
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text47
  7314   000012                     __ptext47:
  7315                           	callstack 0
  7316   000012                     ___fldiv:
  7317                           	callstack 29
  7318   000012  5019               	movf	(___fldiv@b+3)^0,w,c
  7319   000014  0B80               	andlw	128
  7320   000016  6E26               	movwf	___fldiv@sign^0,c
  7321   000018  5019               	movf	(___fldiv@b+3)^0,w,c
  7322   00001A  2419               	addwf	(___fldiv@b+3)^0,w,c
  7323   00001C  6E2D               	movwf	___fldiv@bexp^0,c
  7324   00001E  AE18               	btfss	(___fldiv@b+2)^0,7,c
  7325   000020  EF14  F000         	goto	u2701
  7326   000024  EF16  F000         	goto	u2700
  7327   000028                     u2701:
  7328   000028  EF17  F000         	goto	l3523
  7329   00002C                     u2700:
  7330   00002C  802D               	bsf	___fldiv@bexp^0,0,c
  7331   00002E                     l3523:
  7332   00002E  502D               	movf	___fldiv@bexp^0,w,c
  7333   000030  B4D8               	btfsc	status,2,c
  7334   000032  EF1D  F000         	goto	u2711
  7335   000036  EF1F  F000         	goto	u2710
  7336   00003A                     u2711:
  7337   00003A  EF34  F000         	goto	l3533
  7338   00003E                     u2710:
  7339   00003E  282D               	incf	___fldiv@bexp^0,w,c
  7340   000040  A4D8               	btfss	status,2,c
  7341   000042  EF25  F000         	goto	u2721
  7342   000046  EF27  F000         	goto	u2720
  7343   00004A                     u2721:
  7344   00004A  EF2F  F000         	goto	l3529
  7345   00004E                     u2720:
  7346   00004E  0E00               	movlw	0
  7347   000050  6E16               	movwf	___fldiv@b^0,c
  7348   000052  0E00               	movlw	0
  7349   000054  6E17               	movwf	(___fldiv@b+1)^0,c
  7350   000056  0E00               	movlw	0
  7351   000058  6E18               	movwf	(___fldiv@b+2)^0,c
  7352   00005A  0E00               	movlw	0
  7353   00005C  6E19               	movwf	(___fldiv@b+3)^0,c
  7354   00005E                     l3529:
  7355   00005E  8E18               	bsf	(___fldiv@b+2)^0,7,c
  7356   000060  0E00               	movlw	0
  7357   000062  6E19               	movwf	(___fldiv@b+3)^0,c
  7358   000064  EF3C  F000         	goto	l3535
  7359   000068                     l3533:
  7360   000068  0E00               	movlw	0
  7361   00006A  6E16               	movwf	___fldiv@b^0,c
  7362   00006C  0E00               	movlw	0
  7363   00006E  6E17               	movwf	(___fldiv@b+1)^0,c
  7364   000070  0E00               	movlw	0
  7365   000072  6E18               	movwf	(___fldiv@b+2)^0,c
  7366   000074  0E00               	movlw	0
  7367   000076  6E19               	movwf	(___fldiv@b+3)^0,c
  7368   000078                     l3535:
  7369   000078  501D               	movf	(___fldiv@a+3)^0,w,c
  7370   00007A  0B80               	andlw	128
  7371   00007C  1A26               	xorwf	___fldiv@sign^0,f,c
  7372   00007E  501D               	movf	(___fldiv@a+3)^0,w,c
  7373   000080  241D               	addwf	(___fldiv@a+3)^0,w,c
  7374   000082  6E2E               	movwf	___fldiv@aexp^0,c
  7375   000084  AE1C               	btfss	(___fldiv@a+2)^0,7,c
  7376   000086  EF47  F000         	goto	u2731
  7377   00008A  EF49  F000         	goto	u2730
  7378   00008E                     u2731:
  7379   00008E  EF4A  F000         	goto	l3543
  7380   000092                     u2730:
  7381   000092  802E               	bsf	___fldiv@aexp^0,0,c
  7382   000094                     l3543:
  7383   000094  502E               	movf	___fldiv@aexp^0,w,c
  7384   000096  B4D8               	btfsc	status,2,c
  7385   000098  EF50  F000         	goto	u2741
  7386   00009C  EF52  F000         	goto	u2740
  7387   0000A0                     u2741:
  7388   0000A0  EF67  F000         	goto	l3553
  7389   0000A4                     u2740:
  7390   0000A4  282E               	incf	___fldiv@aexp^0,w,c
  7391   0000A6  A4D8               	btfss	status,2,c
  7392   0000A8  EF58  F000         	goto	u2751
  7393   0000AC  EF5A  F000         	goto	u2750
  7394   0000B0                     u2751:
  7395   0000B0  EF62  F000         	goto	l3549
  7396   0000B4                     u2750:
  7397   0000B4  0E00               	movlw	0
  7398   0000B6  6E1A               	movwf	___fldiv@a^0,c
  7399   0000B8  0E00               	movlw	0
  7400   0000BA  6E1B               	movwf	(___fldiv@a+1)^0,c
  7401   0000BC  0E00               	movlw	0
  7402   0000BE  6E1C               	movwf	(___fldiv@a+2)^0,c
  7403   0000C0  0E00               	movlw	0
  7404   0000C2  6E1D               	movwf	(___fldiv@a+3)^0,c
  7405   0000C4                     l3549:
  7406   0000C4  8E1C               	bsf	(___fldiv@a+2)^0,7,c
  7407   0000C6  0E00               	movlw	0
  7408   0000C8  6E1D               	movwf	(___fldiv@a+3)^0,c
  7409   0000CA  EF6F  F000         	goto	l3555
  7410   0000CE                     l3553:
  7411   0000CE  0E00               	movlw	0
  7412   0000D0  6E1A               	movwf	___fldiv@a^0,c
  7413   0000D2  0E00               	movlw	0
  7414   0000D4  6E1B               	movwf	(___fldiv@a+1)^0,c
  7415   0000D6  0E00               	movlw	0
  7416   0000D8  6E1C               	movwf	(___fldiv@a+2)^0,c
  7417   0000DA  0E00               	movlw	0
  7418   0000DC  6E1D               	movwf	(___fldiv@a+3)^0,c
  7419   0000DE                     l3555:
  7420   0000DE  501A               	movf	___fldiv@a^0,w,c
  7421   0000E0  101B               	iorwf	(___fldiv@a+1)^0,w,c
  7422   0000E2  101C               	iorwf	(___fldiv@a+2)^0,w,c
  7423   0000E4  101D               	iorwf	(___fldiv@a+3)^0,w,c
  7424   0000E6  A4D8               	btfss	status,2,c
  7425   0000E8  EF78  F000         	goto	u2761
  7426   0000EC  EF7A  F000         	goto	u2760
  7427   0000F0                     u2761:
  7428   0000F0  EF92  F000         	goto	l3567
  7429   0000F4                     u2760:
  7430   0000F4  0E00               	movlw	0
  7431   0000F6  6E16               	movwf	___fldiv@b^0,c
  7432   0000F8  0E00               	movlw	0
  7433   0000FA  6E17               	movwf	(___fldiv@b+1)^0,c
  7434   0000FC  0E00               	movlw	0
  7435   0000FE  6E18               	movwf	(___fldiv@b+2)^0,c
  7436   000100  0E00               	movlw	0
  7437   000102  6E19               	movwf	(___fldiv@b+3)^0,c
  7438   000104  0E80               	movlw	128
  7439   000106  1218               	iorwf	(___fldiv@b+2)^0,f,c
  7440   000108  0E7F               	movlw	127
  7441   00010A  1219               	iorwf	(___fldiv@b+3)^0,f,c
  7442   00010C                     l3561:
  7443   00010C  5026               	movf	___fldiv@sign^0,w,c
  7444   00010E  1219               	iorwf	(___fldiv@b+3)^0,f,c
  7445   000110  C016  F016         	movff	___fldiv@b,?___fldiv
  7446   000114  C017  F017         	movff	___fldiv@b+1,?___fldiv+1
  7447   000118  C018  F018         	movff	___fldiv@b+2,?___fldiv+2
  7448   00011C  C019  F019         	movff	___fldiv@b+3,?___fldiv+3
  7449   000120  EFD5  F001         	goto	l1272
  7450   000124                     l3567:
  7451   000124  502D               	movf	___fldiv@bexp^0,w,c
  7452   000126  A4D8               	btfss	status,2,c
  7453   000128  EF98  F000         	goto	u2771
  7454   00012C  EF9A  F000         	goto	u2770
  7455   000130                     u2771:
  7456   000130  EFA4  F000         	goto	l3575
  7457   000134                     u2770:
  7458   000134  0E00               	movlw	0
  7459   000136  6E16               	movwf	?___fldiv^0,c
  7460   000138  0E00               	movlw	0
  7461   00013A  6E17               	movwf	(?___fldiv+1)^0,c
  7462   00013C  0E00               	movlw	0
  7463   00013E  6E18               	movwf	(?___fldiv+2)^0,c
  7464   000140  0E00               	movlw	0
  7465   000142  6E19               	movwf	(?___fldiv+3)^0,c
  7466   000144  EFD5  F001         	goto	l1272
  7467   000148                     l3575:
  7468   000148  502E               	movf	___fldiv@aexp^0,w,c
  7469   00014A  C02D  F01E         	movff	___fldiv@bexp,??___fldiv
  7470   00014E  6A1F               	clrf	(??___fldiv+1)^0,c
  7471   000150  5E1E               	subwf	??___fldiv^0,f,c
  7472   000152  0E00               	movlw	0
  7473   000154  5A1F               	subwfb	(??___fldiv+1)^0,f,c
  7474   000156  0E7F               	movlw	127
  7475   000158  241E               	addwf	??___fldiv^0,w,c
  7476   00015A  6E27               	movwf	___fldiv@new_exp^0,c
  7477   00015C  0E00               	movlw	0
  7478   00015E  201F               	addwfc	(??___fldiv+1)^0,w,c
  7479   000160  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  7480   000162  C016  F022         	movff	___fldiv@b,___fldiv@rem
  7481   000166  C017  F023         	movff	___fldiv@b+1,___fldiv@rem+1
  7482   00016A  C018  F024         	movff	___fldiv@b+2,___fldiv@rem+2
  7483   00016E  C019  F025         	movff	___fldiv@b+3,___fldiv@rem+3
  7484   000172  0E00               	movlw	0
  7485   000174  6E16               	movwf	___fldiv@b^0,c
  7486   000176  0E00               	movlw	0
  7487   000178  6E17               	movwf	(___fldiv@b+1)^0,c
  7488   00017A  0E00               	movlw	0
  7489   00017C  6E18               	movwf	(___fldiv@b+2)^0,c
  7490   00017E  0E00               	movlw	0
  7491   000180  6E19               	movwf	(___fldiv@b+3)^0,c
  7492   000182  0E00               	movlw	0
  7493   000184  6E29               	movwf	___fldiv@grs^0,c
  7494   000186  0E00               	movlw	0
  7495   000188  6E2A               	movwf	(___fldiv@grs+1)^0,c
  7496   00018A  0E00               	movlw	0
  7497   00018C  6E2B               	movwf	(___fldiv@grs+2)^0,c
  7498   00018E  0E00               	movlw	0
  7499   000190  6E2C               	movwf	(___fldiv@grs+3)^0,c
  7500   000192  0E00               	movlw	0
  7501   000194  6E2E               	movwf	___fldiv@aexp^0,c
  7502   000196  EF05  F001         	goto	l1274
  7503   00019A                     l3585:
  7504   00019A  502E               	movf	___fldiv@aexp^0,w,c
  7505   00019C  B4D8               	btfsc	status,2,c
  7506   00019E  EFD3  F000         	goto	u2781
  7507   0001A2  EFD5  F000         	goto	u2780
  7508   0001A6                     u2781:
  7509   0001A6  EFEC  F000         	goto	l3593
  7510   0001AA                     u2780:
  7511   0001AA  90D8               	bcf	status,0,c
  7512   0001AC  3622               	rlcf	___fldiv@rem^0,f,c
  7513   0001AE  3623               	rlcf	(___fldiv@rem+1)^0,f,c
  7514   0001B0  3624               	rlcf	(___fldiv@rem+2)^0,f,c
  7515   0001B2  3625               	rlcf	(___fldiv@rem+3)^0,f,c
  7516   0001B4  90D8               	bcf	status,0,c
  7517   0001B6  3616               	rlcf	___fldiv@b^0,f,c
  7518   0001B8  3617               	rlcf	(___fldiv@b+1)^0,f,c
  7519   0001BA  3618               	rlcf	(___fldiv@b+2)^0,f,c
  7520   0001BC  3619               	rlcf	(___fldiv@b+3)^0,f,c
  7521   0001BE  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  7522   0001C0  EFE4  F000         	goto	u2791
  7523   0001C4  EFE6  F000         	goto	u2790
  7524   0001C8                     u2791:
  7525   0001C8  EFE7  F000         	goto	l1277
  7526   0001CC                     u2790:
  7527   0001CC  8016               	bsf	___fldiv@b^0,0,c
  7528   0001CE                     l1277:
  7529   0001CE  90D8               	bcf	status,0,c
  7530   0001D0  3629               	rlcf	___fldiv@grs^0,f,c
  7531   0001D2  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  7532   0001D4  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  7533   0001D6  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  7534   0001D8                     l3593:
  7535   0001D8  501A               	movf	___fldiv@a^0,w,c
  7536   0001DA  5C22               	subwf	___fldiv@rem^0,w,c
  7537   0001DC  501B               	movf	(___fldiv@a+1)^0,w,c
  7538   0001DE  5823               	subwfb	(___fldiv@rem+1)^0,w,c
  7539   0001E0  501C               	movf	(___fldiv@a+2)^0,w,c
  7540   0001E2  5824               	subwfb	(___fldiv@rem+2)^0,w,c
  7541   0001E4  501D               	movf	(___fldiv@a+3)^0,w,c
  7542   0001E6  5825               	subwfb	(___fldiv@rem+3)^0,w,c
  7543   0001E8  A0D8               	btfss	status,0,c
  7544   0001EA  EFF9  F000         	goto	u2801
  7545   0001EE  EFFB  F000         	goto	u2800
  7546   0001F2                     u2801:
  7547   0001F2  EF04  F001         	goto	l3599
  7548   0001F6                     u2800:
  7549   0001F6  8C2C               	bsf	(___fldiv@grs+3)^0,6,c
  7550   0001F8  501A               	movf	___fldiv@a^0,w,c
  7551   0001FA  5E22               	subwf	___fldiv@rem^0,f,c
  7552   0001FC  501B               	movf	(___fldiv@a+1)^0,w,c
  7553   0001FE  5A23               	subwfb	(___fldiv@rem+1)^0,f,c
  7554   000200  501C               	movf	(___fldiv@a+2)^0,w,c
  7555   000202  5A24               	subwfb	(___fldiv@rem+2)^0,f,c
  7556   000204  501D               	movf	(___fldiv@a+3)^0,w,c
  7557   000206  5A25               	subwfb	(___fldiv@rem+3)^0,f,c
  7558   000208                     l3599:
  7559   000208  2A2E               	incf	___fldiv@aexp^0,f,c
  7560   00020A                     l1274:
  7561   00020A  0E19               	movlw	25
  7562   00020C  642E               	cpfsgt	___fldiv@aexp^0,c
  7563   00020E  EF0B  F001         	goto	u2811
  7564   000212  EF0D  F001         	goto	u2810
  7565   000216                     u2811:
  7566   000216  EFCD  F000         	goto	l3585
  7567   00021A                     u2810:
  7568   00021A  5022               	movf	___fldiv@rem^0,w,c
  7569   00021C  1023               	iorwf	(___fldiv@rem+1)^0,w,c
  7570   00021E  1024               	iorwf	(___fldiv@rem+2)^0,w,c
  7571   000220  1025               	iorwf	(___fldiv@rem+3)^0,w,c
  7572   000222  B4D8               	btfsc	status,2,c
  7573   000224  EF16  F001         	goto	u2821
  7574   000228  EF18  F001         	goto	u2820
  7575   00022C                     u2821:
  7576   00022C  EF30  F001         	goto	l3611
  7577   000230                     u2820:
  7578   000230  8029               	bsf	___fldiv@grs^0,0,c
  7579   000232  EF30  F001         	goto	l3611
  7580   000236                     l3605:
  7581   000236  90D8               	bcf	status,0,c
  7582   000238  3616               	rlcf	___fldiv@b^0,f,c
  7583   00023A  3617               	rlcf	(___fldiv@b+1)^0,f,c
  7584   00023C  3618               	rlcf	(___fldiv@b+2)^0,f,c
  7585   00023E  3619               	rlcf	(___fldiv@b+3)^0,f,c
  7586   000240  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  7587   000242  EF25  F001         	goto	u2831
  7588   000246  EF27  F001         	goto	u2830
  7589   00024A                     u2831:
  7590   00024A  EF28  F001         	goto	l1283
  7591   00024E                     u2830:
  7592   00024E  8016               	bsf	___fldiv@b^0,0,c
  7593   000250                     l1283:
  7594   000250  90D8               	bcf	status,0,c
  7595   000252  3629               	rlcf	___fldiv@grs^0,f,c
  7596   000254  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  7597   000256  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  7598   000258  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  7599   00025A  0627               	decf	___fldiv@new_exp^0,f,c
  7600   00025C  A0D8               	btfss	status,0,c
  7601   00025E  0628               	decf	(___fldiv@new_exp+1)^0,f,c
  7602   000260                     l3611:
  7603   000260  AE18               	btfss	(___fldiv@b+2)^0,7,c
  7604   000262  EF35  F001         	goto	u2841
  7605   000266  EF37  F001         	goto	u2840
  7606   00026A                     u2841:
  7607   00026A  EF1B  F001         	goto	l3605
  7608   00026E                     u2840:
  7609   00026E  0E00               	movlw	0
  7610   000270  6E2E               	movwf	___fldiv@aexp^0,c
  7611   000272  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  7612   000274  EF3E  F001         	goto	u2851
  7613   000278  EF40  F001         	goto	u2850
  7614   00027C                     u2851:
  7615   00027C  EF64  F001         	goto	l1285
  7616   000280                     u2850:
  7617   000280  0EFF               	movlw	255
  7618   000282  1429               	andwf	___fldiv@grs^0,w,c
  7619   000284  6E1E               	movwf	??___fldiv^0,c
  7620   000286  0EFF               	movlw	255
  7621   000288  142A               	andwf	(___fldiv@grs+1)^0,w,c
  7622   00028A  6E1F               	movwf	(??___fldiv+1)^0,c
  7623   00028C  0EFF               	movlw	255
  7624   00028E  142B               	andwf	(___fldiv@grs+2)^0,w,c
  7625   000290  6E20               	movwf	(??___fldiv+2)^0,c
  7626   000292  0E7F               	movlw	127
  7627   000294  142C               	andwf	(___fldiv@grs+3)^0,w,c
  7628   000296  6E21               	movwf	(??___fldiv+3)^0,c
  7629   000298  501E               	movf	??___fldiv^0,w,c
  7630   00029A  101F               	iorwf	(??___fldiv+1)^0,w,c
  7631   00029C  1020               	iorwf	(??___fldiv+2)^0,w,c
  7632   00029E  1021               	iorwf	(??___fldiv+3)^0,w,c
  7633   0002A0  B4D8               	btfsc	status,2,c
  7634   0002A2  EF55  F001         	goto	u2861
  7635   0002A6  EF57  F001         	goto	u2860
  7636   0002AA                     u2861:
  7637   0002AA  EF5B  F001         	goto	l1286
  7638   0002AE                     u2860:
  7639   0002AE                     l3619:
  7640   0002AE  0E01               	movlw	1
  7641   0002B0  6E2E               	movwf	___fldiv@aexp^0,c
  7642   0002B2  EF64  F001         	goto	l1285
  7643   0002B6                     l1286:
  7644   0002B6  A016               	btfss	___fldiv@b^0,0,c
  7645   0002B8  EF60  F001         	goto	u2871
  7646   0002BC  EF62  F001         	goto	u2870
  7647   0002C0                     u2871:
  7648   0002C0  EF64  F001         	goto	l1285
  7649   0002C4                     u2870:
  7650   0002C4  EF57  F001         	goto	l3619
  7651   0002C8                     l1285:
  7652   0002C8  502E               	movf	___fldiv@aexp^0,w,c
  7653   0002CA  B4D8               	btfsc	status,2,c
  7654   0002CC  EF6A  F001         	goto	u2881
  7655   0002D0  EF6C  F001         	goto	u2880
  7656   0002D4                     u2881:
  7657   0002D4  EF90  F001         	goto	l3631
  7658   0002D8                     u2880:
  7659   0002D8  0E01               	movlw	1
  7660   0002DA  2616               	addwf	___fldiv@b^0,f,c
  7661   0002DC  0E00               	movlw	0
  7662   0002DE  2217               	addwfc	(___fldiv@b+1)^0,f,c
  7663   0002E0  2218               	addwfc	(___fldiv@b+2)^0,f,c
  7664   0002E2  2219               	addwfc	(___fldiv@b+3)^0,f,c
  7665   0002E4  A019               	btfss	(___fldiv@b+3)^0,0,c
  7666   0002E6  EF77  F001         	goto	u2891
  7667   0002EA  EF79  F001         	goto	u2890
  7668   0002EE                     u2891:
  7669   0002EE  EF90  F001         	goto	l3631
  7670   0002F2                     u2890:
  7671   0002F2  C016  F01E         	movff	___fldiv@b,??___fldiv
  7672   0002F6  C017  F01F         	movff	___fldiv@b+1,??___fldiv+1
  7673   0002FA  C018  F020         	movff	___fldiv@b+2,??___fldiv+2
  7674   0002FE  C019  F021         	movff	___fldiv@b+3,??___fldiv+3
  7675   000302  3421               	rlcf	(??___fldiv+3)^0,w,c
  7676   000304  3221               	rrcf	(??___fldiv+3)^0,f,c
  7677   000306  3220               	rrcf	(??___fldiv+2)^0,f,c
  7678   000308  321F               	rrcf	(??___fldiv+1)^0,f,c
  7679   00030A  321E               	rrcf	??___fldiv^0,f,c
  7680   00030C  C01E  F016         	movff	??___fldiv,___fldiv@b
  7681   000310  C01F  F017         	movff	??___fldiv+1,___fldiv@b+1
  7682   000314  C020  F018         	movff	??___fldiv+2,___fldiv@b+2
  7683   000318  C021  F019         	movff	??___fldiv+3,___fldiv@b+3
  7684   00031C  4A27               	infsnz	___fldiv@new_exp^0,f,c
  7685   00031E  2A28               	incf	(___fldiv@new_exp+1)^0,f,c
  7686   000320                     l3631:
  7687   000320  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7688   000322  EF9B  F001         	goto	u2901
  7689   000326  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  7690   000328  E108               	bnz	u2900
  7691   00032A  2827               	incf	___fldiv@new_exp^0,w,c
  7692   00032C  A0D8               	btfss	status,0,c
  7693   00032E  EF9B  F001         	goto	u2901
  7694   000332  EF9D  F001         	goto	u2900
  7695   000336                     u2901:
  7696   000336  EFA8  F001         	goto	l3635
  7697   00033A                     u2900:
  7698   00033A  0E00               	movlw	0
  7699   00033C  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  7700   00033E  6827               	setf	___fldiv@new_exp^0,c
  7701   000340  0E00               	movlw	0
  7702   000342  6E16               	movwf	___fldiv@b^0,c
  7703   000344  0E00               	movlw	0
  7704   000346  6E17               	movwf	(___fldiv@b+1)^0,c
  7705   000348  0E00               	movlw	0
  7706   00034A  6E18               	movwf	(___fldiv@b+2)^0,c
  7707   00034C  0E00               	movlw	0
  7708   00034E  6E19               	movwf	(___fldiv@b+3)^0,c
  7709   000350                     l3635:
  7710   000350  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7711   000352  EFB5  F001         	goto	u2910
  7712   000356  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  7713   000358  E106               	bnz	u2911
  7714   00035A  0427               	decf	___fldiv@new_exp^0,w,c
  7715   00035C  B0D8               	btfsc	status,0,c
  7716   00035E  EFB3  F001         	goto	u2911
  7717   000362  EFB5  F001         	goto	u2910
  7718   000366                     u2911:
  7719   000366  EFC3  F001         	goto	l3639
  7720   00036A                     u2910:
  7721   00036A  0E00               	movlw	0
  7722   00036C  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  7723   00036E  0E00               	movlw	0
  7724   000370  6E27               	movwf	___fldiv@new_exp^0,c
  7725   000372  0E00               	movlw	0
  7726   000374  6E16               	movwf	___fldiv@b^0,c
  7727   000376  0E00               	movlw	0
  7728   000378  6E17               	movwf	(___fldiv@b+1)^0,c
  7729   00037A  0E00               	movlw	0
  7730   00037C  6E18               	movwf	(___fldiv@b+2)^0,c
  7731   00037E  0E00               	movlw	0
  7732   000380  6E19               	movwf	(___fldiv@b+3)^0,c
  7733   000382  0E00               	movlw	0
  7734   000384  6E26               	movwf	___fldiv@sign^0,c
  7735   000386                     l3639:
  7736   000386  C027  F02D         	movff	___fldiv@new_exp,___fldiv@bexp
  7737   00038A  A02D               	btfss	___fldiv@bexp^0,0,c
  7738   00038C  EFCA  F001         	goto	u2921
  7739   000390  EFCC  F001         	goto	u2920
  7740   000394                     u2921:
  7741   000394  EFCF  F001         	goto	l3645
  7742   000398                     u2920:
  7743   000398  8E18               	bsf	(___fldiv@b+2)^0,7,c
  7744   00039A  EFD0  F001         	goto	l3647
  7745   00039E                     l3645:
  7746   00039E  9E18               	bcf	(___fldiv@b+2)^0,7,c
  7747   0003A0                     l3647:
  7748   0003A0  90D8               	bcf	status,0,c
  7749   0003A2  302D               	rrcf	___fldiv@bexp^0,w,c
  7750   0003A4  6E19               	movwf	(___fldiv@b+3)^0,c
  7751   0003A6  EF86  F000         	goto	l3561
  7752   0003AA                     l1272:
  7753   0003AA  0012               	return		;funcret
  7754   0003AC                     __end_of___fldiv:
  7755                           	callstack 0
  7756                           
  7757 ;; *************** function _isr *****************
  7758 ;; Defined at:
  7759 ;;		line 6 in file "isr.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;		None
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;		None
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  1    wreg      void 
  7766 ;; Registers used:
  7767 ;;		wreg, status,2, status,0
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7773 ;;      Params:         0       0       0       0       0       0       0
  7774 ;;      Locals:         0       0       0       0       0       0       0
  7775 ;;      Temps:          0       0       0       0       0       0       0
  7776 ;;      Totals:         0       0       0       0       0       0       0
  7777 ;;Total ram usage:        0 bytes
  7778 ;; Hardware stack levels used: 1
  7779 ;; This function calls:
  7780 ;;		Nothing
  7781 ;; This function is called by:
  7782 ;;		Interrupt level 2
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           
  7786                           	psect	intcode
  7787   000008                     __pintcode:
  7788                           	callstack 0
  7789   000008                     _isr:
  7790                           	callstack 24
  7791                           
  7792                           ;incstack = 0
  7793   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7794   00000A  ED86  F00E         	call	int_func,f	;refresh shadow registers
  7795                           
  7796                           	psect	intcode_body
  7797   001D0C                     __pintcode_body:
  7798                           	callstack 24
  7799   001D0C                     int_func:
  7800                           	callstack 24
  7801   001D0C  0006               	pop		; remove dummy address from shadow register refresh
  7802   001D0E                     
  7803                           ;isr.c: 8:  static unsigned long count;;isr.c: 10:  if (TMR0IF)
  7804   001D0E  A4F2               	btfss	4082,2,c	;volatile
  7805   001D10  EF8C  F00E         	goto	i2u323_41
  7806   001D14  EF8E  F00E         	goto	i2u323_40
  7807   001D18                     i2u323_41:
  7808   001D18  EFB3  F00E         	goto	i2l424
  7809   001D1C                     i2u323_40:
  7810   001D1C                     
  7811                           ;isr.c: 11:  {;isr.c: 12:   TMR0 = TMR0 + 8;
  7812   001D1C  0E08               	movlw	8
  7813   001D1E  24D6               	addwf	214,w,c	;volatile
  7814   001D20  6ED6               	movwf	214,c	;volatile
  7815   001D22  0E00               	movlw	0
  7816   001D24  20D7               	addwfc	215,w,c	;volatile
  7817   001D26  6ED7               	movwf	215,c	;volatile
  7818                           
  7819                           ;isr.c: 14:   if (count++ == 20000)
  7820   001D28  0E01               	movlw	1
  7821   001D2A  0100               	movlb	0	; () banked
  7822   001D2C  2781               	addwf	isr@count& (0+255),f,b
  7823   001D2E  0E00               	movlw	0
  7824   001D30  2382               	addwfc	(isr@count+1)& (0+255),f,b
  7825   001D32  2383               	addwfc	(isr@count+2)& (0+255),f,b
  7826   001D34  2384               	addwfc	(isr@count+3)& (0+255),f,b
  7827   001D36  0E21               	movlw	33
  7828   001D38  1981               	xorwf	isr@count& (0+255),w,b
  7829   001D3A  E109               	bnz	i2u324_41
  7830   001D3C  0E4E               	movlw	78
  7831   001D3E  1982               	xorwf	(isr@count+1)& (0+255),w,b
  7832   001D40  1183               	iorwf	(isr@count+2)& (0+255),w,b
  7833   001D42  1184               	iorwf	(isr@count+3)& (0+255),w,b
  7834   001D44  A4D8               	btfss	status,2,c
  7835   001D46  EFA7  F00E         	goto	i2u324_41
  7836   001D4A  EFA9  F00E         	goto	i2u324_40
  7837   001D4E                     i2u324_41:
  7838   001D4E  EFB2  F00E         	goto	i2l3817
  7839   001D52                     i2u324_40:
  7840   001D52                     
  7841                           ; BSR set to: 0
  7842                           ;isr.c: 15:   {;isr.c: 17:    count = 0;
  7843   001D52  0E00               	movlw	0
  7844   001D54  6F81               	movwf	isr@count& (0+255),b
  7845   001D56  0E00               	movlw	0
  7846   001D58  6F82               	movwf	(isr@count+1)& (0+255),b
  7847   001D5A  0E00               	movlw	0
  7848   001D5C  6F83               	movwf	(isr@count+2)& (0+255),b
  7849   001D5E  0E00               	movlw	0
  7850   001D60  6F84               	movwf	(isr@count+3)& (0+255),b
  7851   001D62                     
  7852                           ; BSR set to: 0
  7853                           ;isr.c: 18:             tick_count--;
  7854   001D62  065D               	decf	_tick_count^0,f,c
  7855   001D64                     i2l3817:
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;isr.c: 22:   TMR0IF = 0;
  7859   001D64  94F2               	bcf	4082,2,c	;volatile
  7860   001D66                     i2l424:
  7861   001D66  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7862   001D68  0011               	retfie		f
  7863   001D6A                     __end_of_isr:
  7864                           	callstack 0
  7865                           
  7866                           	psect	rparam
  7867   000000                     
  7868                           	psect	temp
  7869   00005F                     btemp:
  7870                           	callstack 0
  7871   00005F                     	ds	1
  7872   000000                     int$flags	set	btemp
  7873   000000                     wtemp8	set	btemp+1
  7874   000000                     ttemp5	set	btemp+1
  7875   000000                     ttemp6	set	btemp+4
  7876   000000                     ttemp7	set	btemp+8
  7877                           
  7878                           	psect	idloc
  7879                           
  7880                           ;Config register IDLOC0 @ 0x200000
  7881                           ;	unspecified, using default values
  7882   200000                     	org	2097152
  7883   200000  FF                 	db	255
  7884                           
  7885                           ;Config register IDLOC1 @ 0x200001
  7886                           ;	unspecified, using default values
  7887   200001                     	org	2097153
  7888   200001  FF                 	db	255
  7889                           
  7890                           ;Config register IDLOC2 @ 0x200002
  7891                           ;	unspecified, using default values
  7892   200002                     	org	2097154
  7893   200002  FF                 	db	255
  7894                           
  7895                           ;Config register IDLOC3 @ 0x200003
  7896                           ;	unspecified, using default values
  7897   200003                     	org	2097155
  7898   200003  FF                 	db	255
  7899                           
  7900                           ;Config register IDLOC4 @ 0x200004
  7901                           ;	unspecified, using default values
  7902   200004                     	org	2097156
  7903   200004  FF                 	db	255
  7904                           
  7905                           ;Config register IDLOC5 @ 0x200005
  7906                           ;	unspecified, using default values
  7907   200005                     	org	2097157
  7908   200005  FF                 	db	255
  7909                           
  7910                           ;Config register IDLOC6 @ 0x200006
  7911                           ;	unspecified, using default values
  7912   200006                     	org	2097158
  7913   200006  FF                 	db	255
  7914                           
  7915                           ;Config register IDLOC7 @ 0x200007
  7916                           ;	unspecified, using default values
  7917   200007                     	org	2097159
  7918   200007  FF                 	db	255
  7919                           
  7920                           	psect	config
  7921                           
  7922                           ; Padding undefined space
  7923   300000                     	org	3145728
  7924   300000  FF                 	db	255
  7925                           
  7926                           ;Config register CONFIG1H @ 0x300001
  7927                           ;	unspecified, using default values
  7928                           ;	Oscillator Selection bits
  7929                           ;	OSC = 0x7, unprogrammed default
  7930                           ;	Fail-Safe Clock Monitor Enable bit
  7931                           ;	FCMEN = 0x0, unprogrammed default
  7932                           ;	Internal/External Oscillator Switchover bit
  7933                           ;	IESO = 0x0, unprogrammed default
  7934   300001                     	org	3145729
  7935   300001  07                 	db	7
  7936                           
  7937                           ;Config register CONFIG2L @ 0x300002
  7938                           ;	unspecified, using default values
  7939                           ;	Power-up Timer Enable bit
  7940                           ;	PWRT = 0x1, unprogrammed default
  7941                           ;	Brown-out Reset Enable bits
  7942                           ;	BOREN = 0x3, unprogrammed default
  7943                           ;	Brown-out Reset Voltage bits
  7944                           ;	BORV = 0x3, unprogrammed default
  7945   300002                     	org	3145730
  7946   300002  1F                 	db	31
  7947                           
  7948                           ;Config register CONFIG2H @ 0x300003
  7949                           ;	unspecified, using default values
  7950                           ;	Watchdog Timer Enable bit
  7951                           ;	WDT = 0x1, unprogrammed default
  7952                           ;	Watchdog Timer Postscale Select bits
  7953                           ;	WDTPS = 0xF, unprogrammed default
  7954   300003                     	org	3145731
  7955   300003  1F                 	db	31
  7956                           
  7957                           ; Padding undefined space
  7958   300004                     	org	3145732
  7959   300004  FF                 	db	255
  7960                           
  7961                           ;Config register CONFIG3H @ 0x300005
  7962                           ;	unspecified, using default values
  7963                           ;	PORTB A/D Enable bit
  7964                           ;	PBADEN = 0x1, unprogrammed default
  7965                           ;	Low-Power Timer 1 Oscillator Enable bit
  7966                           ;	LPT1OSC = 0x0, unprogrammed default
  7967                           ;	MCLR Pin Enable bit
  7968                           ;	MCLRE = 0x1, unprogrammed default
  7969   300005                     	org	3145733
  7970   300005  82                 	db	130
  7971                           
  7972                           ;Config register CONFIG4L @ 0x300006
  7973                           ;	unspecified, using default values
  7974                           ;	Stack Full/Underflow Reset Enable bit
  7975                           ;	STVREN = 0x1, unprogrammed default
  7976                           ;	Single-Supply ICSP Enable bit
  7977                           ;	LVP = 0x1, unprogrammed default
  7978                           ;	Boot Block Size Select bit
  7979                           ;	BBSIZ = 0x0, unprogrammed default
  7980                           ;	Extended Instruction Set Enable bit
  7981                           ;	XINST = 0x0, unprogrammed default
  7982                           ;	Background Debugger Enable bit
  7983                           ;	DEBUG = 0x1, unprogrammed default
  7984   300006                     	org	3145734
  7985   300006  85                 	db	133
  7986                           
  7987                           ; Padding undefined space
  7988   300007                     	org	3145735
  7989   300007  FF                 	db	255
  7990                           
  7991                           ;Config register CONFIG5L @ 0x300008
  7992                           ;	unspecified, using default values
  7993                           ;	Code Protection bit
  7994                           ;	CP0 = 0x1, unprogrammed default
  7995                           ;	Code Protection bit
  7996                           ;	CP1 = 0x1, unprogrammed default
  7997                           ;	Code Protection bit
  7998                           ;	CP2 = 0x1, unprogrammed default
  7999                           ;	Code Protection bit
  8000                           ;	CP3 = 0x1, unprogrammed default
  8001   300008                     	org	3145736
  8002   300008  0F                 	db	15
  8003                           
  8004                           ;Config register CONFIG5H @ 0x300009
  8005                           ;	unspecified, using default values
  8006                           ;	Boot Block Code Protection bit
  8007                           ;	CPB = 0x1, unprogrammed default
  8008                           ;	Data EEPROM Code Protection bit
  8009                           ;	CPD = 0x1, unprogrammed default
  8010   300009                     	org	3145737
  8011   300009  C0                 	db	192
  8012                           
  8013                           ;Config register CONFIG6L @ 0x30000A
  8014                           ;	unspecified, using default values
  8015                           ;	Write Protection bit
  8016                           ;	WRT0 = 0x1, unprogrammed default
  8017                           ;	Write Protection bit
  8018                           ;	WRT1 = 0x1, unprogrammed default
  8019                           ;	Write Protection bit
  8020                           ;	WRT2 = 0x1, unprogrammed default
  8021                           ;	Write Protection bit
  8022                           ;	WRT3 = 0x1, unprogrammed default
  8023   30000A                     	org	3145738
  8024   30000A  0F                 	db	15
  8025                           
  8026                           ;Config register CONFIG6H @ 0x30000B
  8027                           ;	unspecified, using default values
  8028                           ;	Configuration Register Write Protection bit
  8029                           ;	WRTC = 0x1, unprogrammed default
  8030                           ;	Boot Block Write Protection bit
  8031                           ;	WRTB = 0x1, unprogrammed default
  8032                           ;	Data EEPROM Write Protection bit
  8033                           ;	WRTD = 0x1, unprogrammed default
  8034   30000B                     	org	3145739
  8035   30000B  E0                 	db	224
  8036                           
  8037                           ;Config register CONFIG7L @ 0x30000C
  8038                           ;	unspecified, using default values
  8039                           ;	Table Read Protection bit
  8040                           ;	EBTR0 = 0x1, unprogrammed default
  8041                           ;	Table Read Protection bit
  8042                           ;	EBTR1 = 0x1, unprogrammed default
  8043                           ;	Table Read Protection bit
  8044                           ;	EBTR2 = 0x1, unprogrammed default
  8045                           ;	Table Read Protection bit
  8046                           ;	EBTR3 = 0x1, unprogrammed default
  8047   30000C                     	org	3145740
  8048   30000C  0F                 	db	15
  8049                           
  8050                           ;Config register CONFIG7H @ 0x30000D
  8051                           ;	unspecified, using default values
  8052                           ;	Boot Block Table Read Protection bit
  8053                           ;	EBTRB = 0x1, unprogrammed default
  8054   30000D                     	org	3145741
  8055   30000D  40                 	db	64
  8056                           tosu	equ	0xFFF
  8057                           tosh	equ	0xFFE
  8058                           tosl	equ	0xFFD
  8059                           stkptr	equ	0xFFC
  8060                           pclatu	equ	0xFFB
  8061                           pclath	equ	0xFFA
  8062                           pcl	equ	0xFF9
  8063                           tblptru	equ	0xFF8
  8064                           tblptrh	equ	0xFF7
  8065                           tblptrl	equ	0xFF6
  8066                           tablat	equ	0xFF5
  8067                           prodh	equ	0xFF4
  8068                           prodl	equ	0xFF3
  8069                           indf0	equ	0xFEF
  8070                           postinc0	equ	0xFEE
  8071                           postdec0	equ	0xFED
  8072                           preinc0	equ	0xFEC
  8073                           plusw0	equ	0xFEB
  8074                           fsr0h	equ	0xFEA
  8075                           fsr0l	equ	0xFE9
  8076                           wreg	equ	0xFE8
  8077                           indf1	equ	0xFE7
  8078                           postinc1	equ	0xFE6
  8079                           postdec1	equ	0xFE5
  8080                           preinc1	equ	0xFE4
  8081                           plusw1	equ	0xFE3
  8082                           fsr1h	equ	0xFE2
  8083                           fsr1l	equ	0xFE1
  8084                           bsr	equ	0xFE0
  8085                           indf2	equ	0xFDF
  8086                           postinc2	equ	0xFDE
  8087                           postdec2	equ	0xFDD
  8088                           preinc2	equ	0xFDC
  8089                           plusw2	equ	0xFDB
  8090                           fsr2h	equ	0xFDA
  8091                           fsr2l	equ	0xFD9
  8092                           status	equ	0xFD8

Data Sizes:
    Strings     365
    Constant    0
    Data        29
    BSS         98
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      94
    BANK0           160      0      89
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[3]), STR_10(CODE[17]), STR_11(CODE[16]), STR_12(CODE[6]), 
		 -> STR_13(CODE[17]), STR_14(CODE[15]), STR_15(CODE[15]), STR_16(CODE[16]), 
		 -> STR_17(CODE[17]), STR_18(CODE[16]), STR_19(CODE[15]), STR_2(CODE[3]), 
		 -> STR_20(CODE[17]), STR_21(CODE[18]), STR_22(CODE[18]), STR_23(CODE[18]), 
		 -> STR_24(CODE[14]), STR_27(CODE[18]), STR_28(CODE[21]), STR_29(CODE[19]), 
		 -> STR_3(CODE[3]), STR_30(CODE[17]), STR_4(CODE[3]), STR_5(CODE[3]), 
		 -> STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), STR_9(CODE[17]), 
		 -> time(BANK0[9]), 

    events	PTR unsigned char [8] size(2) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), 

    logs	PTR unsigned char [5] size(2) Largest target is 17
		 -> STR_15(CODE[15]), STR_16(CODE[16]), STR_17(CODE[17]), STR_18(CODE[16]), 
		 -> STR_19(CODE[15]), 

    my_strcmp@one	PTR unsigned char  size(1) Largest target is 5
		 -> pass(BANK0[5]), 

    my_strcmp@two	PTR unsigned char  size(1) Largest target is 5
		 -> temp_password(BANK0[5]), 

    my_strcp@one	PTR unsigned char  size(1) Largest target is 5
		 -> temp1(COMRAM[5]), 

    my_strcp@two	PTR unsigned char  size(1) Largest target is 5
		 -> temp2(BANK0[5]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_25(CODE[20]), STR_26(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _view_log->_clcd_putch
    _password->_clcd_putch
    _menu->_clcd_putch
    _init_config->_write_external_eeprom
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _download_log->___awmod
    _read_external_eeprom->_i2c_write
    _puts->_putch
    ___awmod->___awdiv
    _dashboard->_clcd_putch
    _store_event->___lwdiv
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_time->_clcd_print
    _clear_log->___lwdiv
    _change_pass->_clcd_putch
    _write_external_eeprom->_i2c_write
    _clcd_putch->___awmod
    _clcd_print->_clcd_write
    ___xxtofl->_read_adc
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   79128
                            ___fldiv
                            ___fltol
                           ___xxtofl
                        _change_pass
                         _clcd_write
                          _clear_log
                          _dashboard
                       _download_log
                        _init_config
                               _menu
                           _password
                           _read_adc
                      _read_switches
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                             8     8      0   11191
                                             16 COMRAM     8     8      0
                            ___awmod
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      30
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _password                                            15    15      0   11891
                                             16 COMRAM    15    15      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                          _my_strcmp
 ---------------------------------------------------------------------------------
 (2) _my_strcmp                                            8     6      2     398
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _menu                                                 1     1      0    9983
                                             16 COMRAM     1     1      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _init_config                                          2     2      0    2848
                                              5 COMRAM     2     2      0
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                        _init_timer0
                          _init_uart
               _read_external_eeprom
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     506
                                              3 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     370
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    1412
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _download_log                                         2     2      0    5669
                                             14 COMRAM     2     2      0
                            ___awmod
                         _clcd_print
                              _putch
                               _puts
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     219
                                              1 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _dashboard                                            0     0      0   16854
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                       _display_time
                           _get_time
                        _store_event
 ---------------------------------------------------------------------------------
 (2) _store_event                                          3     3      0    2400
                                              7 COMRAM     3     3      0
                            ___lwdiv
                            ___lwmod
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0    4367
                         _clcd_print
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            1     1      0    5926
                                              7 COMRAM     1     1      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _change_pass                                          7     7      0   11177
                                             16 COMRAM     7     7      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                           _my_strcp
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _write_external_eeprom                                4     3      1     773
                                              1 COMRAM     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _my_strcp                                             8     6      2     398
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    4116
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    4367
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           2     1      1    1412
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              7 COMRAM    14    10      4
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             46 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
       _read_adc (ARG)
     _read_adc (ARG)
   ___fltol
     ___fldiv (ARG)
     ___xxtofl (ARG)
     _read_adc (ARG)
   ___xxtofl
   _change_pass
     _clcd_print
       _clcd_write
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
       _clcd_write (ARG)
     _clcd_write
     _my_strcp
     _write_external_eeprom
       _i2c_start
         _i2c_idle
       _i2c_stop
         _i2c_idle
       _i2c_write
         _i2c_idle
   _clcd_write
   _clear_log
     ___lwdiv
     ___lwmod
     _clcd_print
   _dashboard
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_putch
     _display_time
       _clcd_print
     _get_time
       _read_ds1307
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
         _i2c_stop
         _i2c_write
     _store_event
       ___lwdiv
       ___lwmod
       _write_external_eeprom
   _download_log
     ___awmod
     _clcd_print
     _putch
     _puts
       _putch
     _read_external_eeprom
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_stop
       _i2c_write
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
     _init_matrix_keypad
     _init_timer0
     _init_uart
     _read_external_eeprom
     _write_external_eeprom
   _menu
     _clcd_print
     _clcd_putch
     _clcd_write
   _password
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _my_strcmp
   _read_adc
   _read_switches
     _scan_key
   _view_log
     ___awmod
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_putch
     _read_external_eeprom

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
BITBIGSFRll        281      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      59       5       55.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     38      5E       1      100.0%
BITBIGSFRhhhlhh     19      0       0      17        0.0%
BITBIGSFRlhhhhh     10      0       0      19        0.0%
BITBIGSFRlhl         F      0       0      23        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRhhhlhh      B      0       0      18        0.0%
BITBIGSFRlhhhhl      9      0       0      20        0.0%
BITBIGSFRlhhl        7      0       0      22        0.0%
BITBIGSFRlhhhl       2      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B7      25        0.0%
DATA                 0      0      B7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu May 30 14:50:45 2024

                 my_strcmp@one 0001                   my_strcmp@two 0002                   ___fldiv@aexp 002E  
                 ___fldiv@bexp 002D                              _i 0051                   ___fldiv@sign 0026  
        _write_external_eeprom 1DF8                 clcd_print@addr 0005                 clcd_print@data 0003  
                my_strcmp@last 0005                             l33 1F1A                             l36 1DCA  
                           l61 1E6C                             l62 1E70                             l71 1C42  
                           l39 1DF6                             l65 183E                             l74 1F6A  
                           _GO 7E11                   ___awdiv@sign 0006             _init_matrix_keypad 1FBE  
                          l301 09B0                            l206 1B62                            l119 1960  
                          l152 0DDE                            l233 1FF0                            l321 1F38  
                          l324 1EFA                            l173 1FCE                            l181 1378  
                          l406 1E36                            l238 1A68                            l246 1334  
                          l318 1DB0                            l191 13FE                            l184 13A6  
                          l176 1350                            l409 1ED0                            l193 1412  
                          l185 13E2                            l177 143C                            l362 1FD0  
                          l610 1FBC                            l194 143A                            l186 13BA  
                          l178 138C                            l291 09B0                            l195 1426  
                          l179 1364                            l523 09CA                            l364 1FDE  
                          l372 2028                            l188 13CE                            l365 1FE0  
                          l381 2008                            l613 1F84                            l533 0BFC  
                          l390 1FFC                            l622 1EA6                            l278 19DC  
                          l375 2020                            l551 18DA                            l359 1F80  
                          l439 1FAA                            l279 19E4                            l384 2018  
                          l616 1F96                            l378 2010                            l474 1218  
                          l387 202E                            l660 1AEC                            l496 1622  
                          l585 10DC                            l921 16E6                            l578 0FCE  
                          l659 1AE4                            l934 1796                            l687 06C8  
                          _CKE 7E3E                            l987 1542                            _GIE 7F97  
                          _RC0 7C10                            _RC1 7C11                            _RC2 7C12  
                          _RD7 7C1F                            u200 13A0                            u201 139C  
                          u210 13B4                            u211 13B0                            u220 13C8  
                          u221 13C4                            u230 13DC                            u231 13D8  
                          u240 13F8                            u160 134A                            u241 13F4  
                          u161 1346                            u250 140C                            u170 135E  
                          u251 1408                            u171 135A                            u260 1420  
                          u180 1372                            u500 1B00                            u261 141C  
                          u181 136E                            u501 1AFC                            u270 1434  
                          u190 1386                            u510 1B16                            u271 1430  
                          u191 1382                            u511 1B12                            u520 1B26  
                          _PEN 7E2A                            u521 1B22                            u530 1B40  
                          u531 1B3C                            u540 1B58                            u541 1B54  
                          _SEN 7E28                            _PSA 7EAB                            _SMP 7E3F  
                ?_display_time 0001                    _start_index 004A                            _del 003C  
                          _lap 004C                            _ind 0045                            _key 0056  
                          _isr 0008                            _var 0047                 clcd_putch@addr 000F  
               clcd_putch@data 0010                   ___awmod@sign 000E                            wreg 0FE8  
          ?_init_matrix_keypad 0001                   ___fltol@exp1 0038                           l3001 16E8  
                         l3011 1714                           l3003 16EC                           l1181 1BCE  
                         l3101 12D2                           l3021 174C                           l3013 171C  
                         l3005 16FA                           l1191 1D02                           l3111 132C  
                         l3103 12E4                           l3031 1786                           l3023 1762  
                         l3015 172E                           l3007 1702                           l1272 03AA  
                         l1352 0ED4                           l1345 0E3C                           l3113 1330  
                         l3105 12E8                           l3033 178E                           l3025 176A  
                         l3017 1736                           l3009 1706                           l3201 1140  
                         l3121 0714                           l3041 1DD8                           l1601 134A  
                         l1274 020A                           l1283 0250                           l3107 12EC  
                         l3027 1770                           l3019 173E                           l3051 18E8  
                         l3211 1180                           l3203 1154                           l3131 0776  
                         l3123 0730                           l3115 06CC                           l3043 1DEE  
                         l1348 0F98                           l1188 1BD6                           l1285 02C8  
                         l1277 01CE                           l3109 130C                           l3029 1776  
                         l3053 18F0                           l3221 11BA                           l3213 1190  
                         l3205 1166                           l3141 07B2                           l3133 0782  
                         l3125 074C                           l3117 06DC                           l3037 1DB4  
                         l1613 1372                           l3301 0B08                           l1286 02B6  
                         l1198 1D0A                           l1359 0F30                           l3071 121A  
                         l3063 1928                           l3055 18F4                           l3047 18DC  
                         l3231 11F0                           l3223 11C0                           l3207 1176  
                         l3215 1194                           l3151 07FC                           l3135 078E  
                         l3127 075C                           l3119 0704                           l3039 1DC8  
                         l1623 13A0                           l1607 135E                           l3311 0B70  
                         l3303 0B34                           l3081 126A                           l3073 122A  
                         l3401 1088                           l3065 193A                           l3057 1920  
                         l3049 18E4                           l3233 11F4                           l3225 11D0  
                         l3217 11A6                           l3209 117A                           l3161 0828  
                         l3153 0806                           l3145 07C2                           l3137 0794  
                         l3129 0764                           l1641 13DC                           l3321 0BAA  
                         l3313 0B7C                           l3305 0B38                           l3241 09B4  
                         l3091 12A4                           l3083 126E                           l3075 1246  
                         l3403 1090                           l3411 10BC                           l3067 193E  
                         l3235 11F8                           l3219 11B6                           l3227 11D4  
                         l3171 08C6                           l3163 0848                           l3155 080A  
                         l3147 07D4                           l3139 07A6                           l1651 140C  
                         l1635 13C8                           l1619 1386                           l3331 0BE4  
                         l3323 0BB4                           l3315 0B88                           l3307 0B54  
                         l3251 0A20                           l3243 09C6                           l2701 1C0E  
                         l3501 0642                           l3421 03F6                           l3341 186A  
                         l3085 1280                           l3093 12A8                           l3077 1258  
                         l3413 10CE                           l3405 1098                           l3069 195A  
                         l3237 120A                           l3229 11E6                           l3181 0922  
                         l3173 08EC                           l3165 0866                           l3157 0812  
                         l3149 07DE                           l1645 13F8                           l1629 13B4  
                         l3333 0BF0                           l3325 0BC0                           l3317 0B92  
                         l3309 0B64                           l3261 0A4A                           l3253 0A22  
                         l3245 09DA                           l2703 1C12                           l2711 1E0A  
                         l3511 068E                           l3503 0650                           l3431 0456  
                         l3423 0406                           l3415 03AE                           l3351 187E  
                         l3343 186E                           l3335 1842                           l3095 12B8  
                         l3087 1292                           l3079 1268                           l3407 10AE  
                         l3239 1214                           l3191 099E                           l3183 092E  
                         l3175 08FC                           l3167 0898                           l3159 0822  
                         l1663 1434                           l3327 0BCC                           l3319 0B9E  
                         l3271 0A5E                           l3263 0A4E                           l3255 0A34  
                         l3247 09DE                           l3601 021A                           l3521 002C  
                         l2713 1E10                           l2705 1DFA                           l3513 06B4  
                         l3505 065E                           l3441 0498                           l3433 0468  
                         l3425 0422                           l3417 03BE                           l3361 18C4  
                         l3353 1882                           l3345 1872                           l3337 184A  
                         l2721 1ED8                           l3097 12BC                           l3089 12A2  
                         l3409 10BA                           l2801 17BE                           l3193 09A2  
                         l3185 093E                           l3177 0904                           l3169 08B6  
                         l1657 1420                           l3329 0BD8                           l3281 0AB4  
                         l3273 0A64                           l3265 0A52                           l3257 0A44  
                         l3249 09F0                           l3603 0230                           l3611 0260  
                         l3531 0060                           l3523 002E                           l2715 1E14  
                         l2707 1DFE                           l3507 066E                           l3515 06C4  
                         l3451 04D0                           l3443 04A4                           l3435 0474  
                         l3427 043E                           l3419 03CE                           l3363 18D6  
                         l3355 1888                           l3347 1876                           l3339 185A  
                         l2651 2014                           l2723 1EDE                           l3099 12C0  
                         l3371 0FDE                           l2811 17F0                           l2803 17CE  
                         l3195 10E0                           l3187 095E                           l3179 0912  
                         l1667 143A                           l3291 0AEE                           l3283 0AB8  
                         l3275 0A68                           l3267 0A56                           l3259 0A46  
                         l3613 026E                           l3605 0236                           l3541 0092  
                         l3525 003E                           l3533 0068                           l3517 0012  
                         l3701 0DF8                           l2661 1E52                           l2717 1E1C  
                         l2709 1E04                           l3509 067E                           l3461 0506  
                         l3453 04D4                           l3437 0480                           l3429 044E  
                         l3357 188C                           l3349 187A                           l2653 202A  
                         l2725 1EE4                           l2901 1A64                           l3373 0FE2  
                         l3365 0F9A                           l2821 181E                           l2813 17FA  
                         l2805 17D8                           l2741 1F34                           l2733 1F1E  
                         l3197 1118                           l3189 099C                           l1861 1B00  
                         l3293 0AFE                           l3285 0ACA                           l3277 0A84  
                         l3269 0A5A                           l3623 02D8                           l3631 0320  
                         l3615 0272                           l3607 0240                           l3551 00C6  
                         l3543 0094                           l3535 0078                           l3527 004E  
                         l3519 001E                           l3711 0E76                           l3703 0E06  
                         l2671 1E5C                           l2663 1E54                           l2655 1E3A  
                         l2647 1FD0                           l3471 0586                           l3463 052E  
                         l3455 04D8                           l3447 04B4                           l3439 0486  
                         l2751 1B7E                           l3359 18A8                           l2727 1EE8  
                         l2719 1ED4                           l2911 15D8                           l2903 1544  
                         l2743 1F84                           l3391 1056                           l3383 0FFE  
                         l3375 0FEE                           l3367 0FBA                           l2823 182C  
                         l2815 1802                           l2807 17E0                           l2735 1F22  
                         l2831 1FC6                           l3199 1128                           l1599 1336  
                         l1863 1B06                           l3287 0ADA                           l3295 0B00  
                         l3279 0AA4                           l3641 038A                           l3633 033A  
                         l3625 02E4                           l3617 0280                           l3609 024E  
                         l3561 010C                           l3545 00A4                           l3553 00CE  
                         l3537 007E                           l3529 005E                           l3721 0ECA  
                         l3713 0E7E                           l3705 0E4C                           l2673 1E5E  
                         l2665 1E56                           l2657 1E4C                           l2681 2004  
                         l3481 05BE                           l3473 058E                           l3465 053E  
                         l3449 04C6                           l3457 04E6                           l2761 1BB8  
                         l2753 1B86                           l2649 2012                           l2729 1EF4  
                         l2921 15F6                           l2905 155C                           l2745 1F92  
                         l3393 105C                           l3385 1026                           l3377 0FF6  
                         l3369 0FCA                           l2825 1836                           l2817 180C  
                         l2809 17EA                           l2737 1F28                           l2841 1F7A  
                         l2833 1FC8                           l1865 1B16                           l1873 1B30  
                         l3289 0ADC                           l3801 0DAA                           l3643 0398  
                         l3635 0350                           l3627 02F2                           l3619 02AE  
                         l3571 0134                           l3563 0110                           l3555 00DE  
                         l3547 00B4                           l3539 0084                           l3731 0F40  
                         l3723 0F06                           l3715 0E8A                           l3707 0E62  
                         l2667 1E58                           l2659 1E50                           l2827 1F56  
                         l2675 2022                           l2683 201A                           l3491 05FE  
                         l3483 05D0                           l3475 05A0                           l3467 055A  
                         l3459 04F6                           l2763 1BC0                           l2755 1B8E  
                         l2747 1B64                           l2771 1CBA                           l2691 1FF2  
                         l2923 1606                           l2907 15A0                           l3395 1064  
                         l3387 102A                           l2819 1814                           l2739 1F2E  
                         l2851 1D7E                           l2843 1F7C                           l2835 1F6C  
                         l2931 1976                           l1875 1B40                           l1883 1B60  
                         l1867 1B26                           l1859 1AF0                           l3803 0DBA  
                         l3645 039E                           l3637 036A                           l3629 031C  
                         l3581 0182                           l3557 00F4                           l3549 00C4  
                         l3661 1468                           l3741 0F88                           l3733 0F44  
                         l3725 0F12                           l3717 0EBC                           l2669 1E5A  
                         l2677 2024                           l2685 201C                           l3493 0608  
                         l3485 05DC                           l3477 05AC                           l3469 0576  
                         l2765 1BC2                           l2757 1B9C                           l2749 1B6C  
                         l2781 1CF6                           l2773 1CC2                           l2693 1FFA  
                         l2925 1608                           l2917 15DC                           l2909 15BC  
                         l2941 1E76                           l3397 106C                           l3389 1046  
                         l2853 1D92                           l2845 1F7E                           l2837 1F70  
                         l2829 1FBE                           l2861 1FA8                           l2933 1998  
                         l1877 1B48                           l3805 0DC2                           l3647 03A0  
                         l3639 0386                           l3591 01CC                           l3583 0192  
                         l3575 0148                           l3559 0104                           l3567 0124  
                         l3671 14B6                           l3663 1492                           l3655 143E  
                         l3735 0F68                           l3727 0F20                           l3719 0EBE  
                         l2951 1AA0                           l2679 2000                           l3495 0626  
                         l3479 05B8                           l2767 1BC8                           l2759 1BA2  
                         l2783 1CFC                           l2775 1CCA                           l2687 200A  
                         l2927 161A                           l2919 15F4                           l2943 1E86  
                         l2871 1EAE                           l3399 1082                           l2791 1798  
                         l2855 1D9C                           l2847 1D6A                           l2839 1F78  
                         l2863 1FAC                           l2935 19C0                           l1879 1B58  
                         l3807 0DD4                           l3751 0C1A                           l3593 01D8  
                         l3585 019A                           l3577 0162                           l3569 0134  
                         l3681 14E2                           l3665 1494                           l3657 1454  
                         l3737 0F78                           l3729 0F3E                           l2697 1BD8  
                         l2953 1AC8                           l3497 062A                           l3489 05EC  
                         l2777 1CD8                           l2769 1CA8                           l2689 200C  
                         l2945 1E8A                           l2873 1EB4                           l2785 1EFC  
                         l2793 179C                           l2849 1D72                           l2857 1F98  
                         l2865 1FB6                           l2961 1636                           l2937 19C4  
                         l2929 1962                           l3753 0C1E                           l3761 0C4A  
                         l3745 0BFE                           l3595 01F6                           l3587 01AA  
                         l3579 0172                           l3691 1512                           l3667 14A4  
                         l3739 0F86                           l2699 1BE6                           l2955 1ACC  
                         l2947 1A6A                           l3499 0634                           l2779 1CEE  
                         l2883 1FE2                           l2891 1A24                           l2939 1E72  
                         l2875 1EBA                           l2787 1F10                           l2795 17A2  
                         l2859 1FA0                           l2867 1FBA                           l2971 165C  
                         l2963 163E                           l3763 0C64                           l3771 0C9C  
                         l3755 0C22                           l3747 0C02                           l3597 01F8  
                         l3589 01BE                           l3693 1522                           l3677 14CE  
                         l3669 14A8                           l2949 1A7E                           l2893 1A38  
                         l2885 19E6                           l2877 1EBE                           l2869 1EAA  
                         l2789 1F18                           l2797 17A4                           l2981 1694  
                         l2973 1664                           l2965 1642                           l2957 1624  
                         l3781 0D24                           l3773 0CF4                           l3765 0C80  
                         l3757 0C38                           l3749 0C0A                           l3599 0208  
                         l3695 1532                           l3687 14F6                           l3679 14D8  
                         l2895 1A3C                           l2887 19FE                           l2879 1ECA  
                         l2799 17B4                           l2991 16C0                           l2983 169A  
                         l2975 1676                           l2967 1650                           l2959 1628  
                         l3791 0D62                           l3775 0D04                           l3783 0D2C  
                         l3767 0C88                           l3759 0C42                           l3689 1502  
                         l2897 1A46                           l2889 1A0C                           l2985 16B0  
                         l2977 167E                           l2993 16C6                           l2969 1658  
                         l3793 0D74                           l3785 0D3C                           l3777 0D08  
                         l3769 0C90                           l3699 0DE8                           l2899 1A4E  
                         l2995 16D6                           l2987 16B8                           l2979 1686  
                         l3795 0D84                           l3787 0D46                           l3779 0D1A  
                         l2997 16DE                           l2989 16BA                           l3797 0D8E  
                         l3789 0D58                           l3799 0DA0                           _ADFM 7E07  
                         ?_isr 0001                           _ADON 7E10                           STR_1 2FF8  
                         STR_2 2FFB                           STR_3 2FF5                           STR_4 2FE9  
                         STR_5 2FEC                           STR_6 2FEF                           STR_7 2FF2  
                         STR_8 2FE6                           STR_9 2F6A                           _BRGH 7D62  
                         _CREN 7D5C                           _T0CS 7EAD                           u2000 16D6  
                         u2001 16D2                           u2010 16FA                           u2011 16F6  
                         u2100 1268                           u2020 1714                           u2101 1264  
                         u2021 1710                           u2110 1280                           u2030 172E  
                         u2111 127C                           u2031 172A                           u3000 0DF8  
                         u2120 1292                           u2040 174C                           u2200 0776  
                         u3001 0DF4                           u2121 128E                           u2041 1748  
                         u2201 0772                           u3010 0E06                           u2130 12A2  
                         u2050 1762                           u2210 07A6                           u3011 0E02  
                         u2131 129E                           u2051 175E                           u2211 07A2  
                         u3020 0E62                           u2140 12B8                           u2060 1786  
                         u2300 1176                           u2220 07D4                           u3100 0C1A  
                         u3021 0E5E                           u2141 12B4                           u2061 1782  
                         u2301 1172                           u2221 07D0                           u3101 0C16  
                         u3030 0EB8                           u2150 12D2                           u2310 1190  
                         u2230 07FC                           u2070 1DD8                           u3110 0C38  
                         u3031 0EB4                           u2151 12CE                           u2311 118C  
                         u2231 07F8                           u2071 1DD4                           u3111 0C34  
                         u3040 0F02                           u2160 12E4                           u2080 195A  
                         u2320 11A6                           u2240 0822                           u2400 0A20  
                         u3200 0DA0                           u3120 0C64                           u3041 0EFE  
                         u2161 12E0                           u2081 1956                           u2321 11A2  
                         u2241 081E                           u2401 0A1C                           u3201 0D9C  
                         u3121 0C60                           u3050 0F20                           u2090 1258  
                         u2330 11B6                           u2250 08EC                           u2170 0704  
                         u2410 0A34                           u3210 0DBA                           u3130 0C80  
                         u3051 0F1C                           u2091 1254                           u2331 11B2  
                         u2251 08E8                           u2171 0700                           u2411 0A30  
                         u3211 0DB6                           u3131 0C7C                           u3060 0F30  
                         u2500 0FCA                           u2340 11D0                           u2260 08FC  
                         u2180 0730                           u2420 0A44                           u3220 0DD4  
                         u3140 0D04                           u3061 0F2C                           u2501 0FC6  
                         u2341 11CC                           u2261 08F8                           u2181 072C  
                         u2421 0A40                           u3221 0DD0                           u3141 0D00  
                         u3070 0F3E                           u2510 0FDE                           u2350 11E6  
                         u2270 099C                           u2190 074C                           u2430 0AB4  
                         u3150 0D1A                           u3071 0F3A                           u2511 0FDA  
                         u2351 11E2                           u2271 0998                           u2191 0748  
                         u2431 0AB0                           u3151 0D16                           u3080 0F78  
                         u1720 1FDE                           u2600 04C6                           u1800 1F92  
                         u2520 1046                           u2360 120A                           u2280 1128  
                         u2440 0ACA                           u3160 0D3C                           u3081 0F74  
                         u1721 1FDA                           u2601 04C2                           u1801 1F8E  
                         u2521 1042                           u2361 1206                           u2281 1124  
                         u2441 0AC6                           u3161 0D38                           u3090 0F86  
                         u1730 1E4A                           u2610 04F6                           u1810 1B7E  
                         u2530 10CE                           u2290 1166                           u2450 0ADA  
                         u2370 09C6                           u3170 0D58                           u3091 0F82  
                         u1731 1E44                           u2611 04F2                           u1811 1B7A  
                         u2531 10CA                           u3307 1824                           u2291 1162  
                         u2451 0AD6                           u2371 09C2                           u3171 0D54  
                         u2700 002C                           u2620 052E                           u2540 03BE  
                         u1820 1B9C                           u1900 1998                           u2460 0AEE  
                         u2380 09DA                           u3180 0D74                           u2701 0028  
                         u2621 052A                           u2541 03BA                           u1821 1B98  
                         u3317 1838                           u1901 1994                           u2461 0AEA  
                         u2381 09D6                           u3181 0D70                           u2710 003E  
                         u1750 1E6C                           u2630 055A                           u2550 03F6  
                         u1830 1BB8                           u1910 19DC                           u2470 0AFE  
                         u2390 09F0                           u3190 0D84                           u2711 003A  
                         u1751 1E68                           u2631 0556                           u2551 03F2  
                         u1831 1BB4                           u1911 19D8                           u2471 0AFA  
                         u2391 09EC                           u3191 0D80                           u2800 01F6  
                         u2720 004E                           u1760 1C0A                           u2640 0576  
                         u2560 0422                           u1840 1CBA                           u1920 1EA6  
                         u2480 0B54                           u2801 01F2                           u2721 004A  
                         u1745 1E4C                           u2641 0572                           u2561 041E  
                         u1841 1CB6                           u1921 1EA2                           u3257 17AA  
                         u2481 0B50                           u2810 021A                           u2730 0092  
                         u1770 1C32                           u1930 1AA0                           u2650 05A0  
                         u2570 043E                           u1850 1CD8                           u2490 18D6  
        ?_read_external_eeprom 0001                           u2811 0216                           u2731 008E  
                         u1931 1A9C                           u2651 059C                           u2571 043A  
                         u1851 1CD4                           u2491 18D2                           u3267 17C4  
                         u2900 033A                           u2820 0230                           u2740 00A4  
                         u1780 1C42                           u1940 1AE4                           u2660 05D0  
                         u2580 0468                           u1860 1CEE                           u2901 0336  
                         u2821 022C                           u2741 00A0                           u1781 1C3E  
                         u1941 1AE0                           u2661 05CC                           u2581 0464  
                         u1861 1CEA                           u3277 17DA                           u2910 036A  
                         u2830 024E                           u2750 00B4                           u1790 1E36  
                         u2670 05FE                           u2590 0498                           u1870 1A0C  
                         u1950 1636                           u2911 0366                           u2831 024A  
                         u2751 00B0                           u1767 1C00                           u1791 1E32  
                         u2671 05FA                           u2591 0494                           u1871 1A08  
                         u3287 17FC                           u1951 1632                           u2920 0398  
                         u2840 026E                           u2760 00F4                           u2680 0626  
                         u1880 1606                           u1960 1650                           u2921 0394  
                         u2841 026A                           u2761 00F0                           u1777 1C28  
                         u2681 0622                           u1881 1602                           u3297 180E  
                         u1961 164C                           u2850 0280                           u2770 0134  
                         u2930 1454                           u2690 06B4                           u1890 161A  
                         u1970 1676                           u2851 027C                           u2771 0130  
                         u2931 1450                           u2691 06B0                           u1891 1616  
                         u1971 1672                           _PEIE 7F96                           u2860 02AE  
                         u2780 01AA                           u2940 1488                           u1980 1694  
                         u2861 02AA                           u2781 01A6                           u1981 1690  
                         u2870 02C4                           u2790 01CC                           u2950 14B6  
                         u1990 16B0                           u2871 02C0                           u2791 01C8  
                         u2951 14B2                           u1991 16AC                           u2880 02D8  
                         u2960 14CA                           u2881 02D4                           u2961 14C6  
                         u2945 147E                           u2890 02F2                           u2970 14F2  
                         u2891 02EE                           u2971 14EE                           _RCIE 7CED  
                         u2980 1512                           _RCEN 7E2B                           _RCIF 7CF5  
                         u2981 150E                           u2990 1522                           u2991 151E  
                         _RBPU 7F8F                           _TMR0 0FD6                           _SPEN 7D5F  
                         _RSEN 7E29                           _TXIF 7CF4                           _main 0BFE  
                         _last 0046                           _menu 10DE                           _pass 009A  
                         _logs 00AF                           _time 0087                           fsr0h 0FEA  
                         fsr1h 0FE2                           indf0 0FEF                           fsr2h 0FDA  
                         fsr0l 0FE9                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005F                           _puts 1E72  
                         prodl 0FF3                           start 000E                ___fldiv@new_exp 0027  
         ??_init_matrix_keypad 0001                   ___param_bank 0000                 clcd_write@byte 0002  
                  _store_event 1544                  _i2c_rep_start 200A                  ??_i2c_rx_mode 0001  
                        ??_isr 0001                   ?_init_ds1307 0001                  ___fltol@sign1 0037  
                        _ADCS0 7E00                          _ADCS1 7E01                          _ADCS2 7E02  
                        ?_main 0001                   ?_read_ds1307 0001                          _ACKEN 7E2C  
                        _ACKDT 7E2D                 ??_display_time 0006                          ?_menu 0001  
                        _BCLIF 7D0B                __end_of___fldiv 03AC                          _ACQT0 7E03  
                        _ACQT1 7E04                          _ACQT2 7E05                __end_of___awdiv 16E8  
                        STR_10 2F59                          STR_11 2F9B                          STR_12 2EFD  
                        STR_20 2F26                          STR_13 2F48                          STR_21 2F03  
                        STR_14 2FC9                          STR_30 2F15                          STR_22 2EF1  
                        STR_23 2EDF                          STR_15 2FAB                          STR_24 2FD8  
                        STR_16 2F8B                          STR_25 2EA6                          STR_17 2F37  
                        STR_26 2EB7                          STR_18 2F7B                          STR_27 2ECD  
                        STR_19 2FBA                          STR_28 2E91                __end_of___awmod 1798  
                        STR_29 2EBA                __end_of___fltol 1544                          ?_puts 0002  
              ___awdiv@divisor 0003                __end_of___lwdiv 1BD8                __end_of___lwmod 1D0C  
                 ?_init_config 0001                          i2l424 1D66                ___awdiv@counter 0005  
                        _VCFG0 7E0C                          _VCFG1 7E0D                          _RCREG 0FAE  
                        _SPBRG 0FAF                          _PORTB 0F81                          _PORTD 0F83  
                        _TRISB 0F93                          _TRISC 0F94                          _TRISD 0F95  
                        _SSPIF 7CF3                          _TXREG 0FAD                   ?_init_timer0 0001  
    write_external_eeprom@data 0002                          _delay 003E                          _index 0050  
                        _temp1 0057                          _temp2 0090                          _putch 1F82  
                        _start 0048                          _store 0076                          tablat 0FF5  
                        puts@s 0002                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 0FD8                          wtemp8 0060  
             init_ds1307@dummy 0004                     _i2c_no_ack 202A                __initialization 1C44  
               ?_i2c_rep_start 0001         ?_write_external_eeprom 0002                   __end_of_main 0DE6  
                 __end_of_menu 121A                   __end_of_puts 1EA8               __end_of_i2c_idle 1FE2  
             __end_of_i2c_read 1FFE               __end_of_i2c_stop 2022                  ?_download_log 0001  
                       ??_main 0039                         ??_menu 0011                         ??_puts 0004  
                __activetblptr 0002            __end_of_i2c_rx_mode 201A                         _ADCON0 0FC2  
                       _ADCON1 0FC1               read_switches@key 0052         ??_read_external_eeprom 0002  
                       _ADRESH 0FC4                         _ADRESL 0FC3                         _T08BIT 7EAE  
             ___awdiv@dividend 0001                         ?_putch 0001                         _GODONE 7E11  
                       i2l3811 1D1C                         i2l3813 1D52                         i2l3815 1D62  
                       i2l3817 1D64                         i2l3809 1D0E                   _write_ds1307 1F1C  
                       _TMR0IE 7F95                         _TMR0IF 7F92                         _TMR0ON 7EAF  
                       _SSPADD 0FC8                         _TRISC3 7CA3                         _TRISC4 7CA4  
                       _TRISC6 7CA6                         _TRISC7 7CA7                         _TRISD7 7CAF  
                       _SSPBUF 0FC9               __end_of___xxtofl 0F9A               __end_of_get_time 1A6A  
                    ??___fldiv 001E                      ??___awdiv 0005                         _chance 005C  
                    ??___awmod 000D                      ??___fltol 0033                      ??___lwdiv 0005  
                    ??___lwmod 0005                         _main_f 0054               __end_of_init_i2c 1F82  
             __end_of_init_adc 1F1C                         _events 009F                         _menu_f 0053  
             __end_of_read_adc 1DF8                         clear_0 1C88                         clear_1 1C94  
               ??_download_log 000F               ___awdiv@quotient 0007                ___awmod@divisor 000B  
                       isa$std 0001               __end_of_scan_key 143E                ___awmod@counter 000D  
             __end_of_password 09B2                   __pdataCOMRAM 005C                   __mediumconst 2E90  
             __end_of_my_strcp 1AEE                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8               __end_of_view_log 0BFE                   ___xxtofl@arg 0012  
                 ___xxtofl@exp 0011                   ___xxtofl@val 0008                     __accesstop 0060  
      __end_of__initialization 1C9A           __end_of_display_time 1FF2                  ___rparam_used 0001  
                   ___fltol@f1 002F                ??_i2c_rep_start 0001                    ?_i2c_no_ack 0001  
               __pcstackCOMRAM 0001                   __pidataBANK0 1F3A                    _i2c_rx_mode 2012  
                __end_of_putch 1F98              __end_of_i2c_start 202A              __end_of_i2c_write 200A  
                      ??_putch 0001                     __pbssBANK0 0060         write_external_eeprom@i 0003  
                    ?_i2c_idle 0001                      ?_i2c_read 0001                      ?_i2c_stop 0001  
                   _clcd_print 1BD8                     _clcd_putch 1F54                     _clcd_write 1E38  
 write_external_eeprom@address 0005                   ?_store_event 0001                read_ds1307@data 0003  
            read_switches@once 005E                        _ACKSTAT 7E2E                      ?___xxtofl 0008  
                  password@key 001F                        _SSPCON1 0FC6                      ?_get_time 0001  
                _read_switches 1AEE                     ??_i2c_idle 0001                     ??_i2c_read 0001  
            __end_of_dashboard 1336                     ??_i2c_stop 0001                      ?_init_i2c 0001  
         __end_of_download_log 10DE                      ?_init_adc 0001                      ?_read_adc 0001  
            __end_of_clear_log 18DC                      ?_scan_key 0001        ??_write_external_eeprom 0003  
                      __Hparam 0000                      ?_password 0001                        __Lparam 0000  
                    ?_my_strcp 0001                        ___fldiv 0012                        ___awdiv 1624  
                      ___awmod 16E8                      ?_view_log 0001                        ___fltol 143E  
                      ___lwdiv 1B64                   store_event@k 000A                        ___lwmod 1CA8  
                      __pcinit 1C44                        __ramtop 0600                        __ptext0 0BFE  
                      __ptext1 09B2                        __ptext2 1AEE                        __ptext3 1336  
                      __ptext4 1DB2                        __ptext5 06CA                        __ptext6 1962  
                      __ptext7 1624                        __ptext8 10DE                        __ptext9 18DC  
            __end_of_init_clcd 1840                     ??___xxtofl 000C              __end_of_init_uart 1FBE  
             ___awmod@dividend 0009                  ??_change_pass 0011                        _pre_key 0055  
                 init_config@j 0006                 ?_read_switches 0001                     ??_get_time 0004  
               __pintcode_body 1D0C           end_of_initialization 1C9A                        menu@key 0011  
                   ??_init_i2c 0001                     ??_init_adc 0001                  __Lmediumconst 2E90  
                   ??_read_adc 0003                        int_func 1D0C                     ??_scan_key 0001  
                  ?_clcd_print 0003                    ?_clcd_putch 000F                    ?_clcd_write 0001  
            __end_of_my_strcmp 19E6                     ??_password 0011                     _tick_count 005D  
                   _reset_flag 0044                     ??_my_strcp 0003                        postdec1 0FE5  
                      postdec2 0FDD                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE                     ??_view_log 0011                 _download_array 0060  
                    _PORTBbits 0F81                read_adc@channel 0007                  password@delay 001B  
                 _display_time 1FE2                  i2c_write@data 0001                     _view_array 006B  
                ___xxtofl@sign 0010                    my_strcp@one 0001                    my_strcp@two 0002  
              read_adc@reg_val 0005                    ___fldiv@grs 0029                    ___fldiv@rem 0022  
                   _star_index 004E            __end_of_change_pass 06CA       read_external_eeprom@data 0003  
                 ??_i2c_no_ack 0001                   ?_i2c_rx_mode 0001                  __pidataCOMRAM 2030  
                  _adc_reg_val 0042                    view_log@key 0018            start_initialization 1C44  
              ??_read_switches 0001                      _i2c_start 2022               change_pass@delay 0013  
                  __end_of_isr 1D6A                      _i2c_write 1FFE             __end_of_i2c_no_ack 2030  
        __end_of_i2c_rep_start 2012                  ??_init_ds1307 0004                    __pdataBANK0 009F  
                ??_read_ds1307 0002                   _download_log 0F9A    read_switches@detection_type 0001  
                ??_init_config 0006                      ___fldiv@a 001A                      ___fldiv@b 0016  
                ??_init_timer0 0001                    __pbssCOMRAM 0039                    _change_pass 03AC  
                   ?_i2c_start 0001                     ?_i2c_write 0001                 change_pass@key 0017  
                    _dashboard 121A               ___lwdiv@dividend 0001  __end_of_write_external_eeprom 1E38  
                    _clear_log 1840                      __pintcode 0008                  __pmediumconst 2E90  
                     ?___fldiv 0016                       ?___awdiv 0001                       ?___awmod 0009  
                     ?___fltol 002F             read_ds1307@address 0002                       ?___lwdiv 0001  
                    _clock_reg 0039                       ?___lwmod 0001                    _apend_index 0049  
          __end_of_init_ds1307 1DB2            __end_of_read_ds1307 1EFC               ___lwdiv@quotient 0005  
                    _init_clcd 1798            __end_of_init_config 1962                      _init_uart 1FAC  
                    _log_index 004D                  ?_write_ds1307 0002            __end_of_init_timer0 1FAC  
  read_external_eeprom@address 0002                   ??_clcd_print 0006                   ??_clcd_putch 0010  
   __end_of_init_matrix_keypad 1FD0                   ??_clcd_write 0002                     ?_dashboard 0001  
                     i2u323_40 1D1C                       i2u323_41 1D18                       i2u324_40 1D52  
                     i2u324_41 1D4E                     ?_clear_log 0001                      _my_strcmp 1962  
                 password@wait 0013                  download_log@j 000F          clcd_write@control_bit 0001  
                   my_strcmp@k 0007                      _star_flag 004F                    ??_i2c_start 0001  
           __end_of_clcd_print 1C44                    ??_i2c_write 0001             __end_of_clcd_putch 1F6C  
           __end_of_clcd_write 1E72                     ?_init_clcd 0001                     ?_init_uart 0001  
                    copy_data0 1C58                 ??_write_ds1307 0003                       _i2c_idle 1FD0  
                     _i2c_read 1FF2                       _i2c_stop 201A                  _temp_password 0095  
                     __Hrparam 0000                   clear_log@key 0008                       __Lrparam 0000  
                   ?_my_strcmp 0001   __end_of_read_external_eeprom 1ED2                    _init_ds1307 1D6A  
                  _read_ds1307 1ED2                    _init_config 18DC                       ___xxtofl 0DE6  
          write_ds1307@address 0003                    _init_timer0 1F98                ___lwdiv@divisor 0003  
              ___lwdiv@counter 0007                       __ptext10 1FAC                       __ptext11 1F98  
                     __ptext20 1E72                       __ptext12 1FBE                       __ptext21 1F82  
                     __ptext13 1F6C                       __ptext30 202A                       __ptext22 16E8  
                     __ptext14 1D6A                       __ptext31 1FE2                       __ptext23 121A  
                     __ptext15 1F1C                       __ptext40 1FD0                       __ptext32 1840  
                     __ptext24 1544                       __ptext16 1798                       __ptext41 1A6A  
                     __ptext33 1CA8                       __ptext25 19E6                       __ptext17 1EFC  
                     __ptext42 1F54                       __ptext34 1B64                       __ptext26 1ED2  
                     __ptext18 0F9A                       __ptext43 1BD8                       __ptext35 03AC  
                     __ptext27 200A                       __ptext19 1EA8                       __ptext44 1E38  
                     __ptext36 1DF8                       __ptext28 1FF2                       __ptext45 0DE6  
                     __ptext37 1FFE                       __ptext29 2012                       __ptext46 143E  
                     __ptext38 201A                       __ptext47 0012                       __ptext39 2022  
                     _get_time 19E6                       _init_i2c 1F6C                       _init_adc 1EFC  
                     _read_adc 1DB2                       _key_time 0040                       _scan_key 1336  
                  ??_dashboard 0011                       _password 06CA                    ??_clear_log 0008  
                ??_store_event 0008                       isa$xinst 0000                       _my_strcp 1A6A  
                     _overflow 004B                       int$flags 005F                       _view_log 09B2  
                    my_strcp@k 0007                      view_log@j 0016                      putch@byte 0001  
                 ?_change_pass 0001                       isr@count 0081                    ??_init_clcd 0003  
        __end_of_read_switches 1B64                    ??_init_uart 0001                       intlevel2 0000  
             ___lwmod@dividend 0001                    ??_my_strcmp 0003           __end_of_write_ds1307 1F3A  
          __end_of_store_event 1624                ___lwmod@divisor 0003                ___lwmod@counter 0005  
                  _press_delay 0085               write_ds1307@data 0002           _read_external_eeprom 1EA8  
                 my_strcp@last 0005  
