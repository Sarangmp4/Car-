

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 24 16:45:08 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4580 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     
    87                           	psect	idataCOMRAM
    88   001350                     __pidataCOMRAM:
    89                           	callstack 0
    90                           
    91                           ;initializer for dashboard@F10501
    92   001350  88                 	db	low STR_2
    93   001351  8B                 	db	low STR_3
    94   001352  85                 	db	low STR_4
    95   001353  79                 	db	low STR_5
    96   001354  7C                 	db	low STR_6
    97   001355  7F                 	db	low STR_7
    98   001356  82                 	db	low STR_8
    99   001357  76                 	db	low STR_9
   100                           
   101                           ;initializer for _chance
   102   001358  03                 	db	3
   103                           
   104                           ;initializer for _tick_count
   105   001359  BE                 	db	190
   106                           
   107                           ;initializer for read_switches@once
   108   00135A  01                 	db	1
   109                           
   110                           ;initializer for _pass
   111   00135B  30                 	db	48
   112   00135C  30                 	db	48
   113   00135D  30                 	db	48
   114   00135E  30                 	db	48
   115   00135F  00                 	db	0
   116   000000                     _SSPADD	set	4040
   117   000000                     _SSPCON1	set	4038
   118   000000                     _ADRESL	set	4035
   119   000000                     _ADRESH	set	4036
   120   000000                     _ACKSTAT	set	32302
   121   000000                     _CKE	set	32318
   122   000000                     _RBPU	set	32655
   123   000000                     _PEIE	set	32662
   124   000000                     _VCFG1	set	32269
   125   000000                     _GODONE	set	32273
   126   000000                     _PORTBbits	set	3969
   127   000000                     _ADCON1	set	4033
   128   000000                     _TRISD	set	3989
   129   000000                     _ADCON0	set	4034
   130   000000                     _TMR0IE	set	32661
   131   000000                     _PSA	set	32427
   132   000000                     _TMR0ON	set	32431
   133   000000                     _T0CS	set	32429
   134   000000                     _TMR0IF	set	32658
   135   000000                     _ACKEN	set	32300
   136   000000                     _ACKDT	set	32301
   137   000000                     _RCEN	set	32299
   138   000000                     _RSEN	set	32297
   139   000000                     _PEN	set	32298
   140   000000                     _SEN	set	32296
   141   000000                     _SMP	set	32319
   142   000000                     _TRISC4	set	31908
   143   000000                     _TRISC3	set	31907
   144   000000                     _GIE	set	32663
   145   000000                     _RD7	set	31775
   146   000000                     _RC0	set	31760
   147   000000                     _RC2	set	31762
   148   000000                     _GO	set	32273
   149   000000                     _ADON	set	32272
   150   000000                     _VCFG0	set	32268
   151   000000                     _ADCS2	set	32258
   152   000000                     _ADCS1	set	32257
   153   000000                     _ADCS0	set	32256
   154   000000                     _ACQT0	set	32259
   155   000000                     _ACQT1	set	32260
   156   000000                     _ACQT2	set	32261
   157   000000                     _PORTB	set	3969
   158   000000                     _RC1	set	31761
   159   000000                     _ADFM	set	32263
   160   000000                     _TRISB	set	3987
   161   000000                     _TRISC	set	3988
   162   000000                     _PORTD	set	3971
   163   000000                     _TRISD7	set	31919
   164   000000                     _SSPIF	set	31987
   165   000000                     _TMR0	set	4054
   166   000000                     _SSPBUF	set	4041
   167   000000                     _T08BIT	set	32430
   168   000000                     _BCLIF	set	32011
   169                           
   170                           	psect	smallconst
   171   000600                     __psmallconst:
   172                           	callstack 0
   173   000600  00                 	db	0
   174   000601                     STR_12:
   175   000601  20                 	db	32
   176   000602  20                 	db	32
   177   000603  20                 	db	32
   178   000604  20                 	db	32
   179   000605  20                 	db	32
   180   000606  20                 	db	32
   181   000607  53                 	db	83	;'S'
   182   000608  55                 	db	85	;'U'
   183   000609  43                 	db	67	;'C'
   184   00060A  43                 	db	67	;'C'
   185   00060B  45                 	db	69	;'E'
   186   00060C  53                 	db	83	;'S'
   187   00060D  53                 	db	83	;'S'
   188   00060E  20                 	db	32
   189   00060F  20                 	db	32
   190   000610  20                 	db	32
   191   000611  20                 	db	32
   192   000612  20                 	db	32
   193   000613  00                 	db	0
   194   000614                     STR_14:
   195   000614  20                 	db	32
   196   000615  20                 	db	32
   197   000616  20                 	db	32
   198   000617  54                 	db	84	;'T'
   199   000618  72                 	db	114	;'r'
   200   000619  79                 	db	121	;'y'
   201   00061A  20                 	db	32
   202   00061B  41                 	db	65	;'A'
   203   00061C  67                 	db	103	;'g'
   204   00061D  61                 	db	97	;'a'
   205   00061E  69                 	db	105	;'i'
   206   00061F  6E                 	db	110	;'n'
   207   000620  20                 	db	32
   208   000621  20                 	db	32
   209   000622  20                 	db	32
   210   000623  20                 	db	32
   211   000624  00                 	db	0
   212   000625                     STR_10:
   213   000625  20                 	db	32
   214   000626  45                 	db	69	;'E'
   215   000627  6E                 	db	110	;'n'
   216   000628  74                 	db	116	;'t'
   217   000629  65                 	db	101	;'e'
   218   00062A  72                 	db	114	;'r'
   219   00062B  20                 	db	32
   220   00062C  50                 	db	80	;'P'
   221   00062D  61                 	db	97	;'a'
   222   00062E  73                 	db	115	;'s'
   223   00062F  73                 	db	115	;'s'
   224   000630  77                 	db	119	;'w'
   225   000631  6F                 	db	111	;'o'
   226   000632  72                 	db	114	;'r'
   227   000633  64                 	db	100	;'d'
   228   000634  20                 	db	32
   229   000635  00                 	db	0
   230   000636                     STR_1:
   231   000636  20                 	db	32
   232   000637  20                 	db	32
   233   000638  54                 	db	84	;'T'
   234   000639  49                 	db	73	;'I'
   235   00063A  4D                 	db	77	;'M'
   236   00063B  45                 	db	69	;'E'
   237   00063C  20                 	db	32
   238   00063D  20                 	db	32
   239   00063E  20                 	db	32
   240   00063F  20                 	db	32
   241   000640  45                 	db	69	;'E'
   242   000641  56                 	db	86	;'V'
   243   000642  20                 	db	32
   244   000643  20                 	db	32
   245   000644  53                 	db	83	;'S'
   246   000645  50                 	db	80	;'P'
   247   000646  00                 	db	0
   248   000647                     STR_11:
   249   000647  20                 	db	32
   250   000648  20                 	db	32
   251   000649  20                 	db	32
   252   00064A  20                 	db	32
   253   00064B  20                 	db	32
   254   00064C  20                 	db	32
   255   00064D  20                 	db	32
   256   00064E  20                 	db	32
   257   00064F  20                 	db	32
   258   000650  20                 	db	32
   259   000651  20                 	db	32
   260   000652  20                 	db	32
   261   000653  20                 	db	32
   262   000654  20                 	db	32
   263   000655  20                 	db	32
   264   000656  00                 	db	0
   265   000657                     STR_13:
   266   000657  20                 	db	32
   267   000658  41                 	db	65	;'A'
   268   000659  74                 	db	116	;'t'
   269   00065A  74                 	db	116	;'t'
   270   00065B  65                 	db	101	;'e'
   271   00065C  6D                 	db	109	;'m'
   272   00065D  70                 	db	112	;'p'
   273   00065E  74                 	db	116	;'t'
   274   00065F  20                 	db	32
   275   000660  46                 	db	70	;'F'
   276   000661  61                 	db	97	;'a'
   277   000662  69                 	db	105	;'i'
   278   000663  6C                 	db	108	;'l'
   279   000664  65                 	db	101	;'e'
   280   000665  64                 	db	100	;'d'
   281   000666  00                 	db	0
   282   000667                     STR_15:
   283   000667  20                 	db	32
   284   000668  43                 	db	67	;'C'
   285   000669  68                 	db	104	;'h'
   286   00066A  61                 	db	97	;'a'
   287   00066B  6E                 	db	110	;'n'
   288   00066C  63                 	db	99	;'c'
   289   00066D  65                 	db	101	;'e'
   290   00066E  73                 	db	115	;'s'
   291   00066F  20                 	db	32
   292   000670  4C                 	db	76	;'L'
   293   000671  65                 	db	101	;'e'
   294   000672  66                 	db	102	;'f'
   295   000673  74                 	db	116	;'t'
   296   000674  20                 	db	32
   297   000675  00                 	db	0
   298   000676                     STR_9:
   299   000676  43                 	db	67	;'C'
   300   000677  20                 	db	32
   301   000678  00                 	db	0
   302   000679                     STR_5:
   303   000679  47                 	db	71	;'G'
   304   00067A  31                 	db	49	;'1'
   305   00067B  00                 	db	0
   306   00067C                     STR_6:
   307   00067C  47                 	db	71	;'G'
   308   00067D  32                 	db	50	;'2'
   309   00067E  00                 	db	0
   310   00067F                     STR_7:
   311   00067F  47                 	db	71	;'G'
   312   000680  33                 	db	51	;'3'
   313   000681  00                 	db	0
   314   000682                     STR_8:
   315   000682  47                 	db	71	;'G'
   316   000683  34                 	db	52	;'4'
   317   000684  00                 	db	0
   318   000685                     STR_4:
   319   000685  47                 	db	71	;'G'
   320   000686  4E                 	db	78	;'N'
   321   000687  00                 	db	0
   322   000688                     STR_2:
   323   000688  4F                 	db	79	;'O'
   324   000689  4E                 	db	78	;'N'
   325   00068A  00                 	db	0
   326   00068B                     STR_3:
   327   00068B  47                 	db	71	;'G'
   328   00068C  52                 	db	82	;'R'
   329   00068D  00                 	db	0
   330   00068E  00                 	db	0	; dummy byte at the end
   331   000000                     
   332                           ; #config settings
   333                           
   334                           	psect	cinit
   335   0011EE                     __pcinit:
   336                           	callstack 0
   337   0011EE                     start_initialization:
   338                           	callstack 0
   339   0011EE                     __initialization:
   340                           	callstack 0
   341                           
   342                           ; Initialize objects allocated to COMRAM (16 bytes)
   343                           ; load TBLPTR registers with __pidataCOMRAM
   344   0011EE  0E50               	movlw	low __pidataCOMRAM
   345   0011F0  6EF6               	movwf	tblptrl,c
   346   0011F2  0E13               	movlw	high __pidataCOMRAM
   347   0011F4  6EF7               	movwf	tblptrh,c
   348   0011F6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   349   0011F8  6EF8               	movwf	tblptru,c
   350   0011FA  EE00  F03A         	lfsr	0,__pdataCOMRAM
   351   0011FE  EE10 F010          	lfsr	1,16
   352   001202                     copy_data0:
   353   001202  0009               	tblrd		*+
   354   001204  CFF5 FFEE          	movff	tablat,postinc0
   355   001208  50E5               	movf	postdec1,w,c
   356   00120A  50E1               	movf	fsr1l,w,c
   357   00120C  E1FA               	bnz	copy_data0
   358                           
   359                           ; Clear objects allocated to COMRAM (29 bytes)
   360   00120E  EE00  F001         	lfsr	0,__pbssCOMRAM
   361   001212  0E1D               	movlw	29
   362   001214                     clear_0:
   363   001214  6AEE               	clrf	postinc0,c
   364   001216  06E8               	decf	wreg,f,c
   365   001218  E1FD               	bnz	clear_0
   366   00121A                     end_of_initialization:
   367                           	callstack 0
   368   00121A                     __end_of__initialization:
   369                           	callstack 0
   370   00121A  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   371   00121C  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   372   00121E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   373   001220  6EF8               	movwf	tblptru,c
   374   001222  0100               	movlb	0
   375   001224  EFA6  F007         	goto	_main	;jump to C main() function
   376                           
   377                           	psect	bssCOMRAM
   378   000001                     __pbssCOMRAM:
   379                           	callstack 0
   380   000001                     isr@count:
   381                           	callstack 0
   382   000001                     	ds	4
   383   000005                     _clock_reg:
   384                           	callstack 0
   385   000005                     	ds	3
   386   000008                     _delay:
   387                           	callstack 0
   388   000008                     	ds	2
   389   00000A                     _i:
   390                           	callstack 0
   391   00000A                     	ds	2
   392   00000C                     _adc_reg_val:
   393                           	callstack 0
   394   00000C                     	ds	2
   395   00000E                     read_switches@key:
   396                           	callstack 0
   397   00000E                     	ds	1
   398   00000F                     _key:
   399                           	callstack 0
   400   00000F                     	ds	1
   401   000010                     _time:
   402                           	callstack 0
   403   000010                     	ds	9
   404   000019                     _temp_password:
   405                           	callstack 0
   406   000019                     	ds	5
   407                           
   408                           	psect	dataCOMRAM
   409   00003A                     __pdataCOMRAM:
   410                           	callstack 0
   411   00003A                     dashboard@F10501:
   412                           	callstack 0
   413   00003A                     	ds	8
   414   000042                     _chance:
   415                           	callstack 0
   416   000042                     	ds	1
   417   000043                     _tick_count:
   418                           	callstack 0
   419   000043                     	ds	1
   420   000044                     read_switches@once:
   421                           	callstack 0
   422   000044                     	ds	1
   423   000045                     _pass:
   424                           	callstack 0
   425   000045                     	ds	5
   426                           
   427                           	psect	cstackCOMRAM
   428   00001E                     __pcstackCOMRAM:
   429                           	callstack 0
   430   00001E                     ?_read_adc:
   431                           	callstack 0
   432   00001E                     ?_my_strcmp:
   433                           	callstack 0
   434   00001E                     ?___awdiv:
   435                           	callstack 0
   436   00001E                     ?___lwdiv:
   437                           	callstack 0
   438   00001E                     clcd_write@control_bit:
   439                           	callstack 0
   440   00001E                     read_switches@detection_type:
   441                           	callstack 0
   442   00001E                     my_strcmp@one:
   443                           	callstack 0
   444   00001E                     i2c_write@data:
   445                           	callstack 0
   446   00001E                     ___awdiv@dividend:
   447                           	callstack 0
   448   00001E                     ___lwdiv@dividend:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x0
   452   00001E                     	ds	1
   453   00001F                     clcd_write@byte:
   454                           	callstack 0
   455   00001F                     my_strcmp@two:
   456                           	callstack 0
   457   00001F                     write_ds1307@data:
   458                           	callstack 0
   459   00001F                     read_ds1307@address:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x1
   463   00001F                     	ds	1
   464   000020                     ??_read_adc:
   465   000020                     ??_init_clcd:
   466   000020                     ??_my_strcmp:
   467   000020                     write_ds1307@address:
   468                           	callstack 0
   469   000020                     read_ds1307@data:
   470                           	callstack 0
   471   000020                     clcd_print@data:
   472                           	callstack 0
   473   000020                     ___awdiv@divisor:
   474                           	callstack 0
   475   000020                     ___lwdiv@divisor:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x2
   479   000020                     	ds	1
   480   000021                     init_ds1307@dummy:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x3
   484   000021                     	ds	1
   485   000022                     clcd_print@addr:
   486                           	callstack 0
   487   000022                     ___awdiv@counter:
   488                           	callstack 0
   489   000022                     read_adc@reg_val:
   490                           	callstack 0
   491   000022                     my_strcmp@last:
   492                           	callstack 0
   493   000022                     ___lwdiv@quotient:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x4
   497   000022                     	ds	1
   498   000023                     ___awdiv@sign:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x5
   502   000023                     	ds	1
   503   000024                     read_adc@channel:
   504                           	callstack 0
   505   000024                     ___lwdiv@counter:
   506                           	callstack 0
   507   000024                     my_strcmp@k:
   508                           	callstack 0
   509   000024                     ___awdiv@quotient:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x6
   513   000024                     	ds	1
   514   000025                     ?___lwmod:
   515                           	callstack 0
   516   000025                     ___lwmod@dividend:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x7
   520   000025                     	ds	1
   521   000026                     ?___awmod:
   522                           	callstack 0
   523   000026                     ___awmod@dividend:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x8
   527   000026                     	ds	1
   528   000027                     ___lwmod@divisor:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x9
   532   000027                     	ds	1
   533   000028                     ___awmod@divisor:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0xA
   537   000028                     	ds	1
   538   000029                     ___lwmod@counter:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0xB
   542   000029                     	ds	1
   543   00002A                     ___awmod@counter:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0xC
   547   00002A                     	ds	1
   548   00002B                     ___awmod@sign:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0xD
   552   00002B                     	ds	1
   553   00002C                     clcd_putch@addr:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0xE
   557   00002C                     	ds	1
   558   00002D                     clcd_putch@data:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0xF
   562   00002D                     	ds	1
   563   00002E                     ??_dashboard:
   564   00002E                     ??_password:
   565                           
   566                           ; 1 bytes @ 0x10
   567   00002E                     	ds	1
   568   00002F                     dashboard@events:
   569                           	callstack 0
   570                           
   571                           ; 8 bytes @ 0x11
   572   00002F                     	ds	1
   573   000030                     password@wait:
   574                           	callstack 0
   575                           
   576                           ; 8 bytes @ 0x12
   577   000030                     	ds	8
   578   000038                     password@key:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x1A
   582   000038                     	ds	1
   583   000039                     main@main_f:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0x1B
   587   000039                     	ds	1
   588                           
   589 ;;
   590 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   591 ;;
   592 ;; *************** function _main *****************
   593 ;; Defined at:
   594 ;;		line 34 in file "main.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;  main_f          1   27[COMRAM] unsigned char 
   599 ;;  menu_f          1    0        unsigned char 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   609 ;;      Params:         0       0       0       0       0       0       0
   610 ;;      Locals:         1       0       0       0       0       0       0
   611 ;;      Temps:          0       0       0       0       0       0       0
   612 ;;      Totals:         1       0       0       0       0       0       0
   613 ;;Total ram usage:        1 bytes
   614 ;; Hardware stack levels required when called: 7
   615 ;; This function calls:
   616 ;;		_clcd_write
   617 ;;		_dashboard
   618 ;;		_init_config
   619 ;;		_password
   620 ;;		_read_adc
   621 ;;		_read_switches
   622 ;; This function is called by:
   623 ;;		Startup code after reset
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text0
   628   000F4C                     __ptext0:
   629                           	callstack 0
   630   000F4C                     _main:
   631                           	callstack 24
   632   000F4C                     
   633                           ;main.c: 35:     init_config();
   634   000F4C  EC56  F009         	call	_init_config	;wreg free
   635   000F50                     
   636                           ;main.c: 37:     char main_f = 0, menu_f = 0;
   637   000F50  0E00               	movlw	0
   638   000F52  6E39               	movwf	main@main_f^0,c
   639   000F54                     l112:
   640                           
   641                           ;main.c: 40:         key = read_switches(1);
   642   000F54  0E01               	movlw	1
   643   000F56  EC6B  F007         	call	_read_switches
   644   000F5A  6E0F               	movwf	_key^0,c
   645                           
   646                           ;main.c: 41:         adc_reg_val = read_adc(0x04);
   647   000F5C  0E04               	movlw	4
   648   000F5E  ECD4  F008         	call	_read_adc
   649   000F62  C01E  F00C         	movff	?_read_adc,_adc_reg_val
   650   000F66  C01F  F00D         	movff	?_read_adc+1,_adc_reg_val+1
   651   000F6A                     
   652                           ;main.c: 43:         if (main_f == 0) {
   653   000F6A  5039               	movf	main@main_f^0,w,c
   654   000F6C  A4D8               	btfss	status,2,c
   655   000F6E  EFBB  F007         	goto	u1181
   656   000F72  EFBD  F007         	goto	u1180
   657   000F76                     u1181:
   658   000F76  EFD1  F007         	goto	l2021
   659   000F7A                     u1180:
   660   000F7A                     
   661                           ;main.c: 44:             dashboard();
   662   000F7A  EC9A  F004         	call	_dashboard	;wreg free
   663   000F7E                     
   664                           ;main.c: 45:             if (key == 5) {
   665   000F7E  0E05               	movlw	5
   666   000F80  180F               	xorwf	_key^0,w,c
   667   000F82  A4D8               	btfss	status,2,c
   668   000F84  EFC6  F007         	goto	u1191
   669   000F88  EFC8  F007         	goto	u1190
   670   000F8C                     u1191:
   671   000F8C  EFAA  F007         	goto	l112
   672   000F90                     u1190:
   673   000F90                     
   674                           ;main.c: 46:                 clcd_write(0x01, 0);
   675   000F90  0E00               	movlw	0
   676   000F92  6E1E               	movwf	clcd_write@control_bit^0,c
   677   000F94  0E01               	movlw	1
   678   000F96  EC14  F009         	call	_clcd_write
   679   000F9A                     
   680                           ;main.c: 47:                 main_f = 1;
   681   000F9A  0E01               	movlw	1
   682   000F9C  6E39               	movwf	main@main_f^0,c
   683   000F9E  EFAA  F007         	goto	l112
   684   000FA2                     l2021:
   685   000FA2  0439               	decf	main@main_f^0,w,c
   686   000FA4  A4D8               	btfss	status,2,c
   687   000FA6  EFD7  F007         	goto	u1201
   688   000FAA  EFD9  F007         	goto	u1200
   689   000FAE                     u1201:
   690   000FAE  EFAA  F007         	goto	l112
   691   000FB2                     u1200:
   692   000FB2                     
   693                           ;main.c: 50:             password(key);
   694   000FB2  500F               	movf	_key^0,w,c
   695   000FB4  EC48  F003         	call	_password
   696   000FB8  EFAA  F007         	goto	l112
   697   000FBC  EF07  F000         	goto	start
   698   000FC0                     __end_of_main:
   699                           	callstack 0
   700                           
   701 ;; *************** function _read_switches *****************
   702 ;; Defined at:
   703 ;;		line 89 in file "matrix_keypad.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;  detection_ty    1    wreg     unsigned char 
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  detection_ty    1    0[COMRAM] unsigned char 
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      unsigned char 
   710 ;; Registers used:
   711 ;;		wreg, status,2, status,0, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   717 ;;      Params:         0       0       0       0       0       0       0
   718 ;;      Locals:         1       0       0       0       0       0       0
   719 ;;      Temps:          0       0       0       0       0       0       0
   720 ;;      Totals:         1       0       0       0       0       0       0
   721 ;;Total ram usage:        1 bytes
   722 ;; Hardware stack levels used: 1
   723 ;; Hardware stack levels required when called: 2
   724 ;; This function calls:
   725 ;;		_scan_key
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text1
   732   000ED6                     __ptext1:
   733                           	callstack 0
   734   000ED6                     _read_switches:
   735                           	callstack 28
   736                           
   737                           ;incstack = 0
   738                           ;read_switches@detection_type stored from wreg
   739   000ED6  6E1E               	movwf	read_switches@detection_type^0,c
   740   000ED8                     
   741                           ;matrix_keypad.c: 89: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 90: {;matrix_keypad.c: 91:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 93:  if (detection_type == 1)
   742   000ED8  041E               	decf	read_switches@detection_type^0,w,c
   743   000EDA  A4D8               	btfss	status,2,c
   744   000EDC  EF72  F007         	goto	u421
   745   000EE0  EF74  F007         	goto	u420
   746   000EE4                     u421:
   747   000EE4  EF98  F007         	goto	l1489
   748   000EE8                     u420:
   749   000EE8                     
   750                           ;matrix_keypad.c: 94:  {;matrix_keypad.c: 95:   key = scan_key();
   751   000EE8  EC57  F005         	call	_scan_key	;wreg free
   752   000EEC  6E0E               	movwf	read_switches@key^0,c
   753   000EEE                     
   754                           ;matrix_keypad.c: 96:   if(key != 0xFF && once )
   755   000EEE  280E               	incf	read_switches@key^0,w,c
   756   000EF0  B4D8               	btfsc	status,2,c
   757   000EF2  EF7D  F007         	goto	u431
   758   000EF6  EF7F  F007         	goto	u430
   759   000EFA                     u431:
   760   000EFA  EF8C  F007         	goto	l1485
   761   000EFE                     u430:
   762   000EFE  5044               	movf	read_switches@once^0,w,c
   763   000F00  B4D8               	btfsc	status,2,c
   764   000F02  EF85  F007         	goto	u441
   765   000F06  EF87  F007         	goto	u440
   766   000F0A                     u441:
   767   000F0A  EF8C  F007         	goto	l1485
   768   000F0E                     u440:
   769   000F0E                     
   770                           ;matrix_keypad.c: 97:   {;matrix_keypad.c: 98:    once = 0;
   771   000F0E  0E00               	movlw	0
   772   000F10  6E44               	movwf	read_switches@once^0,c
   773                           
   774                           ;matrix_keypad.c: 99:    return key;
   775   000F12  500E               	movf	read_switches@key^0,w,c
   776   000F14  EFA5  F007         	goto	l165
   777   000F18                     l1485:
   778   000F18  280E               	incf	read_switches@key^0,w,c
   779   000F1A  A4D8               	btfss	status,2,c
   780   000F1C  EF92  F007         	goto	u451
   781   000F20  EF94  F007         	goto	u450
   782   000F24                     u451:
   783   000F24  EFA4  F007         	goto	l1495
   784   000F28                     u450:
   785   000F28                     
   786                           ;matrix_keypad.c: 102:   {;matrix_keypad.c: 103:    once = 1;
   787   000F28  0E01               	movlw	1
   788   000F2A  6E44               	movwf	read_switches@once^0,c
   789   000F2C  EFA4  F007         	goto	l1495
   790   000F30                     l1489:
   791   000F30  501E               	movf	read_switches@detection_type^0,w,c
   792   000F32  A4D8               	btfss	status,2,c
   793   000F34  EF9E  F007         	goto	u461
   794   000F38  EFA0  F007         	goto	u460
   795   000F3C                     u461:
   796   000F3C  EFA4  F007         	goto	l1495
   797   000F40                     u460:
   798   000F40                     
   799                           ;matrix_keypad.c: 107:  {;matrix_keypad.c: 108:   return scan_key();
   800   000F40  EC57  F005         	call	_scan_key	;wreg free
   801   000F44  EFA5  F007         	goto	l165
   802   000F48                     l1495:
   803                           
   804                           ;matrix_keypad.c: 111:  return 0xFF;
   805   000F48  0EFF               	movlw	255
   806   000F4A                     l165:
   807   000F4A  0012               	return		;funcret
   808   000F4C                     __end_of_read_switches:
   809                           	callstack 0
   810                           
   811 ;; *************** function _scan_key *****************
   812 ;; Defined at:
   813 ;;		line 19 in file "matrix_keypad.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      unsigned char 
   820 ;; Registers used:
   821 ;;		wreg
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   827 ;;      Params:         0       0       0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0       0       0
   829 ;;      Temps:          0       0       0       0       0       0       0
   830 ;;      Totals:         0       0       0       0       0       0       0
   831 ;;Total ram usage:        0 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 1
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_read_switches
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text2
   842   000AAE                     __ptext2:
   843                           	callstack 0
   844   000AAE                     _scan_key:
   845                           	callstack 28
   846   000AAE                     
   847                           ;matrix_keypad.c: 21:  PORTBbits.RB5 = 0;
   848   000AAE  9A81               	bcf	129,5,c	;volatile
   849                           
   850                           ;matrix_keypad.c: 22:  PORTBbits.RB6 = 1;
   851   000AB0  8C81               	bsf	129,6,c	;volatile
   852                           
   853                           ;matrix_keypad.c: 23:  PORTBbits.RB7 = 1;
   854   000AB2  8E81               	bsf	129,7,c	;volatile
   855                           
   856                           ;matrix_keypad.c: 25:  if (PORTBbits.RB1 == 0)
   857   000AB4  B281               	btfsc	129,1,c	;volatile
   858   000AB6  EF5F  F005         	goto	u81
   859   000ABA  EF61  F005         	goto	u80
   860   000ABE                     u81:
   861   000ABE  EF64  F005         	goto	l135
   862   000AC2                     u80:
   863   000AC2                     
   864                           ;matrix_keypad.c: 26:  {;matrix_keypad.c: 27:   return 1;
   865   000AC2  0E01               	movlw	1
   866   000AC4  EFDA  F005         	goto	l136
   867   000AC8                     l135:
   868   000AC8  B481               	btfsc	129,2,c	;volatile
   869   000ACA  EF69  F005         	goto	u91
   870   000ACE  EF6B  F005         	goto	u90
   871   000AD2                     u91:
   872   000AD2  EF6E  F005         	goto	l138
   873   000AD6                     u90:
   874   000AD6                     
   875                           ;matrix_keypad.c: 30:  {;matrix_keypad.c: 31:   return 4;
   876   000AD6  0E04               	movlw	4
   877   000AD8  EFDA  F005         	goto	l136
   878   000ADC                     l138:
   879   000ADC  B681               	btfsc	129,3,c	;volatile
   880   000ADE  EF73  F005         	goto	u101
   881   000AE2  EF75  F005         	goto	u100
   882   000AE6                     u101:
   883   000AE6  EF78  F005         	goto	l140
   884   000AEA                     u100:
   885   000AEA                     
   886                           ;matrix_keypad.c: 34:  {;matrix_keypad.c: 35:   return 7;
   887   000AEA  0E07               	movlw	7
   888   000AEC  EFDA  F005         	goto	l136
   889   000AF0                     l140:
   890   000AF0  B881               	btfsc	129,4,c	;volatile
   891   000AF2  EF7D  F005         	goto	u111
   892   000AF6  EF7F  F005         	goto	u110
   893   000AFA                     u111:
   894   000AFA  EF82  F005         	goto	l137
   895   000AFE                     u110:
   896   000AFE                     
   897                           ;matrix_keypad.c: 38:  {;matrix_keypad.c: 39:   return 10;
   898   000AFE  0E0A               	movlw	10
   899   000B00  EFDA  F005         	goto	l136
   900   000B04                     l137:
   901                           
   902                           ;matrix_keypad.c: 42:  PORTBbits.RB5 = 1;
   903   000B04  8A81               	bsf	129,5,c	;volatile
   904                           
   905                           ;matrix_keypad.c: 43:  PORTBbits.RB6 = 0;
   906   000B06  9C81               	bcf	129,6,c	;volatile
   907                           
   908                           ;matrix_keypad.c: 44:  PORTBbits.RB7 = 1;
   909   000B08  8E81               	bsf	129,7,c	;volatile
   910                           
   911                           ;matrix_keypad.c: 46:  if (PORTBbits.RB1 == 0)
   912   000B0A  B281               	btfsc	129,1,c	;volatile
   913   000B0C  EF8A  F005         	goto	u121
   914   000B10  EF8C  F005         	goto	u120
   915   000B14                     u121:
   916   000B14  EF8F  F005         	goto	l143
   917   000B18                     u120:
   918   000B18                     
   919                           ;matrix_keypad.c: 47:  {;matrix_keypad.c: 48:   return 2;
   920   000B18  0E02               	movlw	2
   921   000B1A  EFDA  F005         	goto	l136
   922   000B1E                     l143:
   923   000B1E  B481               	btfsc	129,2,c	;volatile
   924   000B20  EF94  F005         	goto	u131
   925   000B24  EF96  F005         	goto	u130
   926   000B28                     u131:
   927   000B28  EF99  F005         	goto	l145
   928   000B2C                     u130:
   929   000B2C                     
   930                           ;matrix_keypad.c: 51:  {;matrix_keypad.c: 52:   return 5;
   931   000B2C  0E05               	movlw	5
   932   000B2E  EFDA  F005         	goto	l136
   933   000B32                     l145:
   934   000B32  B681               	btfsc	129,3,c	;volatile
   935   000B34  EF9E  F005         	goto	u141
   936   000B38  EFA0  F005         	goto	u140
   937   000B3C                     u141:
   938   000B3C  EFA3  F005         	goto	l147
   939   000B40                     u140:
   940   000B40                     
   941                           ;matrix_keypad.c: 55:  {;matrix_keypad.c: 56:   return 8;
   942   000B40  0E08               	movlw	8
   943   000B42  EFDA  F005         	goto	l136
   944   000B46                     l147:
   945   000B46  B881               	btfsc	129,4,c	;volatile
   946   000B48  EFA8  F005         	goto	u151
   947   000B4C  EFAA  F005         	goto	u150
   948   000B50                     u151:
   949   000B50  EFAD  F005         	goto	l144
   950   000B54                     u150:
   951   000B54                     
   952                           ;matrix_keypad.c: 59:  {;matrix_keypad.c: 60:   return 11;
   953   000B54  0E0B               	movlw	11
   954   000B56  EFDA  F005         	goto	l136
   955   000B5A                     l144:
   956                           
   957                           ;matrix_keypad.c: 63:  PORTBbits.RB5 = 1;
   958   000B5A  8A81               	bsf	129,5,c	;volatile
   959                           
   960                           ;matrix_keypad.c: 64:  PORTBbits.RB6 = 1;
   961   000B5C  8C81               	bsf	129,6,c	;volatile
   962                           
   963                           ;matrix_keypad.c: 65:  PORTBbits.RB7 = 0;
   964   000B5E  9E81               	bcf	129,7,c	;volatile
   965                           
   966                           ;matrix_keypad.c: 67:  PORTBbits.RB7 = 0;
   967   000B60  9E81               	bcf	129,7,c	;volatile
   968                           
   969                           ;matrix_keypad.c: 69:  if (PORTBbits.RB1 == 0)
   970   000B62  B281               	btfsc	129,1,c	;volatile
   971   000B64  EFB6  F005         	goto	u161
   972   000B68  EFB8  F005         	goto	u160
   973   000B6C                     u161:
   974   000B6C  EFBB  F005         	goto	l150
   975   000B70                     u160:
   976   000B70                     
   977                           ;matrix_keypad.c: 70:  {;matrix_keypad.c: 71:   return 3;
   978   000B70  0E03               	movlw	3
   979   000B72  EFDA  F005         	goto	l136
   980   000B76                     l150:
   981   000B76  B481               	btfsc	129,2,c	;volatile
   982   000B78  EFC0  F005         	goto	u171
   983   000B7C  EFC2  F005         	goto	u170
   984   000B80                     u171:
   985   000B80  EFC5  F005         	goto	l152
   986   000B84                     u170:
   987   000B84                     
   988                           ;matrix_keypad.c: 74:  {;matrix_keypad.c: 75:   return 6;
   989   000B84  0E06               	movlw	6
   990   000B86  EFDA  F005         	goto	l136
   991   000B8A                     l152:
   992   000B8A  B681               	btfsc	129,3,c	;volatile
   993   000B8C  EFCA  F005         	goto	u181
   994   000B90  EFCC  F005         	goto	u180
   995   000B94                     u181:
   996   000B94  EFCF  F005         	goto	l154
   997   000B98                     u180:
   998   000B98                     
   999                           ;matrix_keypad.c: 78:  {;matrix_keypad.c: 79:   return 9;
  1000   000B98  0E09               	movlw	9
  1001   000B9A  EFDA  F005         	goto	l136
  1002   000B9E                     l154:
  1003   000B9E  B881               	btfsc	129,4,c	;volatile
  1004   000BA0  EFD4  F005         	goto	u191
  1005   000BA4  EFD6  F005         	goto	u190
  1006   000BA8                     u191:
  1007   000BA8  EFD9  F005         	goto	l153
  1008   000BAC                     u190:
  1009   000BAC                     
  1010                           ;matrix_keypad.c: 82:  {;matrix_keypad.c: 83:   return 12;
  1011   000BAC  0E0C               	movlw	12
  1012   000BAE  EFDA  F005         	goto	l136
  1013   000BB2                     l153:
  1014   000BB2                     
  1015                           ;matrix_keypad.c: 86:  return 0xFF;
  1016   000BB2  0EFF               	movlw	255
  1017   000BB4                     l136:
  1018   000BB4  0012               	return		;funcret
  1019   000BB6                     __end_of_scan_key:
  1020                           	callstack 0
  1021                           
  1022 ;; *************** function _read_adc *****************
  1023 ;; Defined at:
  1024 ;;		line 43 in file "adc.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  channel         1    wreg     unsigned char 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  channel         1    6[COMRAM] unsigned char 
  1029 ;;  reg_val         2    4[COMRAM] unsigned short 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  2    0[COMRAM] unsigned short 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1039 ;;      Params:         2       0       0       0       0       0       0
  1040 ;;      Locals:         3       0       0       0       0       0       0
  1041 ;;      Temps:          2       0       0       0       0       0       0
  1042 ;;      Totals:         7       0       0       0       0       0       0
  1043 ;;Total ram usage:        7 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; Hardware stack levels required when called: 1
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text3
  1054   0011A8                     __ptext3:
  1055                           	callstack 0
  1056   0011A8                     _read_adc:
  1057                           	callstack 29
  1058                           
  1059                           ;incstack = 0
  1060                           ;read_adc@channel stored from wreg
  1061   0011A8  6E24               	movwf	read_adc@channel^0,c
  1062   0011AA                     
  1063                           ;adc.c: 43: unsigned short read_adc(unsigned char channel);adc.c: 44: {;adc.c: 45:  unsi
      +                          gned short reg_val;;adc.c: 48:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  1064   0011AA  C024  F020         	movff	read_adc@channel,??_read_adc
  1065   0011AE  90D8               	bcf	status,0,c
  1066   0011B0  3620               	rlcf	??_read_adc^0,f,c
  1067   0011B2  90D8               	bcf	status,0,c
  1068   0011B4  3620               	rlcf	??_read_adc^0,f,c
  1069   0011B6  50C2               	movf	194,w,c	;volatile
  1070   0011B8  0BC3               	andlw	195
  1071   0011BA  1020               	iorwf	??_read_adc^0,w,c
  1072   0011BC  6EC2               	movwf	194,c	;volatile
  1073   0011BE                     
  1074                           ;adc.c: 51:  GO = 1;
  1075   0011BE  82C2               	bsf	4034,1,c	;volatile
  1076   0011C0                     l36:
  1077   0011C0  B2C2               	btfsc	4034,1,c	;volatile
  1078   0011C2  EFE5  F008         	goto	u981
  1079   0011C6  EFE7  F008         	goto	u980
  1080   0011CA                     u981:
  1081   0011CA  EFE0  F008         	goto	l36
  1082   0011CE                     u980:
  1083   0011CE                     
  1084                           ;adc.c: 53:  reg_val = (ADRESH << 8) | ADRESL;
  1085   0011CE  50C3               	movf	195,w,c	;volatile
  1086   0011D0  CFC4 F020          	movff	4036,??_read_adc	;volatile
  1087   0011D4  6A21               	clrf	(??_read_adc+1)^0,c
  1088   0011D6  C020  F021         	movff	??_read_adc,??_read_adc+1
  1089   0011DA  6A20               	clrf	??_read_adc^0,c
  1090   0011DC  1020               	iorwf	??_read_adc^0,w,c
  1091   0011DE  6E22               	movwf	read_adc@reg_val^0,c
  1092   0011E0  5021               	movf	(??_read_adc+1)^0,w,c
  1093   0011E2  6E23               	movwf	(read_adc@reg_val+1)^0,c
  1094   0011E4                     
  1095                           ;adc.c: 55:  return reg_val;
  1096   0011E4  C022  F01E         	movff	read_adc@reg_val,?_read_adc
  1097   0011E8  C023  F01F         	movff	read_adc@reg_val+1,?_read_adc+1
  1098   0011EC  0012               	return		;funcret
  1099   0011EE                     __end_of_read_adc:
  1100                           	callstack 0
  1101                           
  1102 ;; *************** function _password *****************
  1103 ;; Defined at:
  1104 ;;		line 36 in file "password.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  key             1    wreg     unsigned char 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  key             1   26[COMRAM] unsigned char 
  1109 ;;  wait            8   18[COMRAM] unsigned long long 
  1110 ;;  flag            2    0        int 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1120 ;;      Params:         0       0       0       0       0       0       0
  1121 ;;      Locals:         9       0       0       0       0       0       0
  1122 ;;      Temps:          2       0       0       0       0       0       0
  1123 ;;      Totals:        11       0       0       0       0       0       0
  1124 ;;Total ram usage:       11 bytes
  1125 ;; Hardware stack levels used: 1
  1126 ;; Hardware stack levels required when called: 3
  1127 ;; This function calls:
  1128 ;;		___awdiv
  1129 ;;		___awmod
  1130 ;;		_clcd_print
  1131 ;;		_clcd_putch
  1132 ;;		_clcd_write
  1133 ;;		_my_strcmp
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text4
  1140   000690                     __ptext4:
  1141                           	callstack 0
  1142   000690                     _password:
  1143                           	callstack 27
  1144                           
  1145                           ;incstack = 0
  1146                           ;password@key stored from wreg
  1147   000690  6E38               	movwf	password@key^0,c
  1148   000692                     
  1149                           ;password.c: 38:     clcd_print(" Enter Password ", (0x80 + (0)));
  1150   000692  0E25               	movlw	low STR_10
  1151   000694  6E20               	movwf	clcd_print@data^0,c
  1152   000696  5020               	movf	clcd_print@data^0,w,c
  1153   000698  A4D8               	btfss	status,2,c
  1154   00069A  0E06               	movlw	high __smallconst
  1155   00069C  6E21               	movwf	(clcd_print@data+1)^0,c
  1156   00069E  0E80               	movlw	128
  1157   0006A0  6E22               	movwf	clcd_print@addr^0,c
  1158   0006A2  EC1A  F008         	call	_clcd_print	;wreg free
  1159   0006A6                     
  1160                           ;password.c: 42:     if (delay++ < 500) {
  1161   0006A6  5008               	movf	_delay^0,w,c
  1162   0006A8  6E2E               	movwf	??_password^0,c
  1163   0006AA  5009               	movf	(_delay+1)^0,w,c
  1164   0006AC  6E2F               	movwf	(??_password+1)^0,c
  1165   0006AE  4A08               	infsnz	_delay^0,f,c
  1166   0006B0  2A09               	incf	(_delay+1)^0,f,c
  1167   0006B2  BE2F               	btfsc	(??_password+1)^0,7,c
  1168   0006B4  EF67  F003         	goto	u1090
  1169   0006B8  0EF4               	movlw	244
  1170   0006BA  5C2E               	subwf	??_password^0,w,c
  1171   0006BC  0E01               	movlw	1
  1172   0006BE  582F               	subwfb	(??_password+1)^0,w,c
  1173   0006C0  B0D8               	btfsc	status,0,c
  1174   0006C2  EF65  F003         	goto	u1091
  1175   0006C6  EF67  F003         	goto	u1090
  1176   0006CA                     u1091:
  1177   0006CA  EF6F  F003         	goto	l1945
  1178   0006CE                     u1090:
  1179   0006CE                     
  1180                           ;password.c: 43:         clcd_putch('_', (0xC0 + (i)));
  1181   0006CE  500A               	movf	_i^0,w,c
  1182   0006D0  0FC0               	addlw	192
  1183   0006D2  6E2C               	movwf	clcd_putch@addr^0,c
  1184   0006D4  0E5F               	movlw	95
  1185   0006D6  EC74  F009         	call	_clcd_putch
  1186                           
  1187                           ;password.c: 44:     } else if (delay > 500 && delay < 1000) {
  1188   0006DA  EF97  F003         	goto	l1953
  1189   0006DE                     l1945:
  1190   0006DE  BE09               	btfsc	(_delay+1)^0,7,c
  1191   0006E0  EF7B  F003         	goto	u1101
  1192   0006E4  0EF5               	movlw	245
  1193   0006E6  5C08               	subwf	_delay^0,w,c
  1194   0006E8  0E01               	movlw	1
  1195   0006EA  5809               	subwfb	(_delay+1)^0,w,c
  1196   0006EC  A0D8               	btfss	status,0,c
  1197   0006EE  EF7B  F003         	goto	u1101
  1198   0006F2  EF7D  F003         	goto	u1100
  1199   0006F6                     u1101:
  1200   0006F6  EF93  F003         	goto	l1951
  1201   0006FA                     u1100:
  1202   0006FA  BE09               	btfsc	(_delay+1)^0,7,c
  1203   0006FC  EF8B  F003         	goto	u1110
  1204   000700  0EE8               	movlw	232
  1205   000702  5C08               	subwf	_delay^0,w,c
  1206   000704  0E03               	movlw	3
  1207   000706  5809               	subwfb	(_delay+1)^0,w,c
  1208   000708  B0D8               	btfsc	status,0,c
  1209   00070A  EF89  F003         	goto	u1111
  1210   00070E  EF8B  F003         	goto	u1110
  1211   000712                     u1111:
  1212   000712  EF93  F003         	goto	l1951
  1213   000716                     u1110:
  1214   000716                     
  1215                           ;password.c: 45:         clcd_putch(' ', (0xC0 + (i)));
  1216   000716  500A               	movf	_i^0,w,c
  1217   000718  0FC0               	addlw	192
  1218   00071A  6E2C               	movwf	clcd_putch@addr^0,c
  1219   00071C  0E20               	movlw	32
  1220   00071E  EC74  F009         	call	_clcd_putch
  1221                           
  1222                           ;password.c: 46:     } else
  1223   000722  EF97  F003         	goto	l1953
  1224   000726                     l1951:
  1225                           
  1226                           ;password.c: 47:         delay = 0;
  1227   000726  0E00               	movlw	0
  1228   000728  6E09               	movwf	(_delay+1)^0,c
  1229   00072A  0E00               	movlw	0
  1230   00072C  6E08               	movwf	_delay^0,c
  1231   00072E                     l1953:
  1232                           
  1233                           ;password.c: 49:     if (key == 5) {
  1234   00072E  0E05               	movlw	5
  1235   000730  1838               	xorwf	password@key^0,w,c
  1236   000732  A4D8               	btfss	status,2,c
  1237   000734  EF9E  F003         	goto	u1121
  1238   000738  EFA0  F003         	goto	u1120
  1239   00073C                     u1121:
  1240   00073C  EFB0  F003         	goto	l1961
  1241   000740                     u1120:
  1242   000740                     
  1243                           ;password.c: 50:         temp_password[i] = '0';
  1244   000740  500A               	movf	_i^0,w,c
  1245   000742  0F19               	addlw	low _temp_password
  1246   000744  6ED9               	movwf	fsr2l,c
  1247   000746  6ADA               	clrf	fsr2h,c
  1248   000748  0E30               	movlw	48
  1249   00074A  6EDF               	movwf	indf2,c
  1250   00074C                     
  1251                           ;password.c: 51:         clcd_putch('*', (0xC0 + (i)));
  1252   00074C  500A               	movf	_i^0,w,c
  1253   00074E  0FC0               	addlw	192
  1254   000750  6E2C               	movwf	clcd_putch@addr^0,c
  1255   000752  0E2A               	movlw	42
  1256   000754  EC74  F009         	call	_clcd_putch
  1257   000758                     l1959:
  1258                           
  1259                           ;password.c: 52:         i++;
  1260   000758  4A0A               	infsnz	_i^0,f,c
  1261   00075A  2A0B               	incf	(_i+1)^0,f,c
  1262                           
  1263                           ;password.c: 54:     }
  1264   00075C  EFC7  F003         	goto	l1969
  1265   000760                     l1961:
  1266   000760  0E06               	movlw	6
  1267   000762  1838               	xorwf	password@key^0,w,c
  1268   000764  A4D8               	btfss	status,2,c
  1269   000766  EFB7  F003         	goto	u1131
  1270   00076A  EFB9  F003         	goto	u1130
  1271   00076E                     u1131:
  1272   00076E  EFC7  F003         	goto	l1969
  1273   000772                     u1130:
  1274   000772                     
  1275                           ;password.c: 56:         temp_password[i] = '1';
  1276   000772  500A               	movf	_i^0,w,c
  1277   000774  0F19               	addlw	low _temp_password
  1278   000776  6ED9               	movwf	fsr2l,c
  1279   000778  6ADA               	clrf	fsr2h,c
  1280   00077A  0E31               	movlw	49
  1281   00077C  6EDF               	movwf	indf2,c
  1282   00077E                     
  1283                           ;password.c: 57:         clcd_putch('*', (0xC0 + (i)));
  1284   00077E  500A               	movf	_i^0,w,c
  1285   000780  0FC0               	addlw	192
  1286   000782  6E2C               	movwf	clcd_putch@addr^0,c
  1287   000784  0E2A               	movlw	42
  1288   000786  EC74  F009         	call	_clcd_putch
  1289   00078A  EFAC  F003         	goto	l1959
  1290   00078E                     l1969:
  1291                           
  1292                           ;password.c: 62:     if (i == 4) {
  1293   00078E  0E04               	movlw	4
  1294   000790  180A               	xorwf	_i^0,w,c
  1295   000792  100B               	iorwf	(_i+1)^0,w,c
  1296   000794  A4D8               	btfss	status,2,c
  1297   000796  EFCF  F003         	goto	u1141
  1298   00079A  EFD1  F003         	goto	u1140
  1299   00079E                     u1141:
  1300   00079E  EF99  F004         	goto	l251
  1301   0007A2                     u1140:
  1302   0007A2                     
  1303                           ;password.c: 63:         temp_password[i] = '\0';
  1304   0007A2  500A               	movf	_i^0,w,c
  1305   0007A4  0F19               	addlw	low _temp_password
  1306   0007A6  6ED9               	movwf	fsr2l,c
  1307   0007A8  6ADA               	clrf	fsr2h,c
  1308   0007AA  6ADF               	clrf	indf2,c
  1309   0007AC                     
  1310                           ;password.c: 65:         if (my_strcmp(pass, temp_password) == 0)
  1311   0007AC  0E45               	movlw	low _pass
  1312   0007AE  6E1E               	movwf	my_strcmp@one^0,c
  1313   0007B0  0E19               	movlw	low _temp_password
  1314   0007B2  6E1F               	movwf	my_strcmp@two^0,c
  1315   0007B4  ECE9  F006         	call	_my_strcmp	;wreg free
  1316   0007B8  501E               	movf	?_my_strcmp^0,w,c
  1317   0007BA  101F               	iorwf	(?_my_strcmp+1)^0,w,c
  1318   0007BC  A4D8               	btfss	status,2,c
  1319   0007BE  EFE3  F003         	goto	u1151
  1320   0007C2  EFE5  F003         	goto	u1150
  1321   0007C6                     u1151:
  1322   0007C6  EFFB  F003         	goto	l1977
  1323   0007CA                     u1150:
  1324   0007CA                     
  1325                           ;password.c: 66:         {;password.c: 68:             clcd_print("               ", (0x
      +                          80 + (0)));
  1326   0007CA  0E47               	movlw	low STR_11
  1327   0007CC  6E20               	movwf	clcd_print@data^0,c
  1328   0007CE  5020               	movf	clcd_print@data^0,w,c
  1329   0007D0  A4D8               	btfss	status,2,c
  1330   0007D2  0E06               	movlw	high __smallconst
  1331   0007D4  6E21               	movwf	(clcd_print@data+1)^0,c
  1332   0007D6  0E80               	movlw	128
  1333   0007D8  6E22               	movwf	clcd_print@addr^0,c
  1334   0007DA  EC1A  F008         	call	_clcd_print	;wreg free
  1335                           
  1336                           ;password.c: 69:             clcd_print("      SUCCESS     ", (0xC0 + (0)));
  1337   0007DE  0E01               	movlw	low STR_12
  1338   0007E0  6E20               	movwf	clcd_print@data^0,c
  1339   0007E2  5020               	movf	clcd_print@data^0,w,c
  1340   0007E4  A4D8               	btfss	status,2,c
  1341   0007E6  0E06               	movlw	high __smallconst
  1342   0007E8  6E21               	movwf	(clcd_print@data+1)^0,c
  1343   0007EA  0EC0               	movlw	192
  1344   0007EC  6E22               	movwf	clcd_print@addr^0,c
  1345   0007EE  EC1A  F008         	call	_clcd_print	;wreg free
  1346   0007F2                     l242:
  1347   0007F2  EFF9  F003         	goto	l242
  1348   0007F6                     l1977:
  1349                           
  1350                           ;password.c: 75:             chance--;
  1351   0007F6  0642               	decf	_chance^0,f,c
  1352   0007F8                     
  1353                           ;password.c: 76:             i = 0;
  1354   0007F8  0E00               	movlw	0
  1355   0007FA  6E0B               	movwf	(_i+1)^0,c
  1356   0007FC  0E00               	movlw	0
  1357   0007FE  6E0A               	movwf	_i^0,c
  1358   000800                     
  1359                           ;password.c: 77:             if (chance == 0) {
  1360   000800  5042               	movf	_chance^0,w,c
  1361   000802  A4D8               	btfss	status,2,c
  1362   000804  EF06  F004         	goto	u1161
  1363   000808  EF08  F004         	goto	u1160
  1364   00080C                     u1161:
  1365   00080C  EF4B  F004         	goto	l1993
  1366   000810                     u1160:
  1367   000810                     
  1368                           ;password.c: 78:                 clcd_print(" Attempt Failed", (0x80 + (0)));
  1369   000810  0E57               	movlw	low STR_13
  1370   000812  6E20               	movwf	clcd_print@data^0,c
  1371   000814  5020               	movf	clcd_print@data^0,w,c
  1372   000816  A4D8               	btfss	status,2,c
  1373   000818  0E06               	movlw	high __smallconst
  1374   00081A  6E21               	movwf	(clcd_print@data+1)^0,c
  1375   00081C  0E80               	movlw	128
  1376   00081E  6E22               	movwf	clcd_print@addr^0,c
  1377   000820  EC1A  F008         	call	_clcd_print	;wreg free
  1378   000824                     
  1379                           ;password.c: 79:                 clcd_putch('0' + (tick_count / 100), (0xC0 + (5)));
  1380   000824  0EC5               	movlw	197
  1381   000826  6E2C               	movwf	clcd_putch@addr^0,c
  1382   000828  C043  F01E         	movff	_tick_count,___awdiv@dividend
  1383   00082C  6A1F               	clrf	(___awdiv@dividend+1)^0,c
  1384   00082E  0E00               	movlw	0
  1385   000830  6E21               	movwf	(___awdiv@divisor+1)^0,c
  1386   000832  0E64               	movlw	100
  1387   000834  6E20               	movwf	___awdiv@divisor^0,c
  1388   000836  ECDB  F005         	call	___awdiv	;wreg free
  1389   00083A  501E               	movf	?___awdiv^0,w,c
  1390   00083C  0F30               	addlw	48
  1391   00083E  EC74  F009         	call	_clcd_putch
  1392   000842                     
  1393                           ;password.c: 80: clcd_putch('0' + (tick_count / 10) % 10, (0xC0 + (6)));
  1394   000842  0EC6               	movlw	198
  1395   000844  6E2C               	movwf	clcd_putch@addr^0,c
  1396   000846  0E00               	movlw	0
  1397   000848  6E21               	movwf	(___awdiv@divisor+1)^0,c
  1398   00084A  0E0A               	movlw	10
  1399   00084C  6E20               	movwf	___awdiv@divisor^0,c
  1400   00084E  C043  F01E         	movff	_tick_count,___awdiv@dividend
  1401   000852  6A1F               	clrf	(___awdiv@dividend+1)^0,c
  1402   000854  ECDB  F005         	call	___awdiv	;wreg free
  1403   000858  C01E  F026         	movff	?___awdiv,___awmod@dividend
  1404   00085C  C01F  F027         	movff	?___awdiv+1,___awmod@dividend+1
  1405   000860  0E00               	movlw	0
  1406   000862  6E29               	movwf	(___awmod@divisor+1)^0,c
  1407   000864  0E0A               	movlw	10
  1408   000866  6E28               	movwf	___awmod@divisor^0,c
  1409   000868  EC3D  F006         	call	___awmod	;wreg free
  1410   00086C  5026               	movf	?___awmod^0,w,c
  1411   00086E  0F30               	addlw	48
  1412   000870  EC74  F009         	call	_clcd_putch
  1413   000874                     
  1414                           ;password.c: 81: clcd_putch('0' + (tick_count % 10), (0xC0 + (7)));
  1415   000874  0EC7               	movlw	199
  1416   000876  6E2C               	movwf	clcd_putch@addr^0,c
  1417   000878  C043  F026         	movff	_tick_count,___awmod@dividend
  1418   00087C  6A27               	clrf	(___awmod@dividend+1)^0,c
  1419   00087E  0E00               	movlw	0
  1420   000880  6E29               	movwf	(___awmod@divisor+1)^0,c
  1421   000882  0E0A               	movlw	10
  1422   000884  6E28               	movwf	___awmod@divisor^0,c
  1423   000886  EC3D  F006         	call	___awmod	;wreg free
  1424   00088A  5026               	movf	?___awmod^0,w,c
  1425   00088C  0F30               	addlw	48
  1426   00088E  EC74  F009         	call	_clcd_putch
  1427   000892                     
  1428                           ;password.c: 83:             }
  1429   000892  EF99  F004         	goto	l251
  1430   000896                     l1993:
  1431                           
  1432                           ;password.c: 86:                 clcd_print("   Try Again    ", (0x80 + (0)));
  1433   000896  0E14               	movlw	low STR_14
  1434   000898  6E20               	movwf	clcd_print@data^0,c
  1435   00089A  5020               	movf	clcd_print@data^0,w,c
  1436   00089C  A4D8               	btfss	status,2,c
  1437   00089E  0E06               	movlw	high __smallconst
  1438   0008A0  6E21               	movwf	(clcd_print@data+1)^0,c
  1439   0008A2  0E80               	movlw	128
  1440   0008A4  6E22               	movwf	clcd_print@addr^0,c
  1441   0008A6  EC1A  F008         	call	_clcd_print	;wreg free
  1442   0008AA                     
  1443                           ;password.c: 87:                 clcd_putch('0' + chance, (0xC0 + (0)));
  1444   0008AA  0EC0               	movlw	192
  1445   0008AC  6E2C               	movwf	clcd_putch@addr^0,c
  1446   0008AE  5042               	movf	_chance^0,w,c
  1447   0008B0  0F30               	addlw	48
  1448   0008B2  EC74  F009         	call	_clcd_putch
  1449   0008B6                     
  1450                           ;password.c: 88:                 clcd_print(" Chances Left ", (0xC0 + (1)));
  1451   0008B6  0E67               	movlw	low STR_15
  1452   0008B8  6E20               	movwf	clcd_print@data^0,c
  1453   0008BA  5020               	movf	clcd_print@data^0,w,c
  1454   0008BC  A4D8               	btfss	status,2,c
  1455   0008BE  0E06               	movlw	high __smallconst
  1456   0008C0  6E21               	movwf	(clcd_print@data+1)^0,c
  1457   0008C2  0EC1               	movlw	193
  1458   0008C4  6E22               	movwf	clcd_print@addr^0,c
  1459   0008C6  EC1A  F008         	call	_clcd_print	;wreg free
  1460   0008CA                     
  1461                           ;password.c: 89:                 for (unsigned long long int wait = 500000; wait--;);
  1462   0008CA  0E20               	movlw	32
  1463   0008CC  6E30               	movwf	password@wait^0,c
  1464   0008CE  0EA1               	movlw	161
  1465   0008D0  6E31               	movwf	(password@wait+1)^0,c
  1466   0008D2  0E07               	movlw	7
  1467   0008D4  6E32               	movwf	(password@wait+2)^0,c
  1468   0008D6  0E00               	movlw	0
  1469   0008D8  6E33               	movwf	(password@wait+3)^0,c
  1470   0008DA  0E00               	movlw	0
  1471   0008DC  6E34               	movwf	(password@wait+4)^0,c
  1472   0008DE  0E00               	movlw	0
  1473   0008E0  6E35               	movwf	(password@wait+5)^0,c
  1474   0008E2  0E00               	movlw	0
  1475   0008E4  6E36               	movwf	(password@wait+6)^0,c
  1476   0008E6  0E00               	movlw	0
  1477   0008E8  6E37               	movwf	(password@wait+7)^0,c
  1478   0008EA                     l2001:
  1479   0008EA  0630               	decf	password@wait^0,f,c
  1480   0008EC  0E00               	movlw	0
  1481   0008EE  5A31               	subwfb	(password@wait+1)^0,f,c
  1482   0008F0  5A32               	subwfb	(password@wait+2)^0,f,c
  1483   0008F2  5A33               	subwfb	(password@wait+3)^0,f,c
  1484   0008F4  5A34               	subwfb	(password@wait+4)^0,f,c
  1485   0008F6  5A35               	subwfb	(password@wait+5)^0,f,c
  1486   0008F8  5A36               	subwfb	(password@wait+6)^0,f,c
  1487   0008FA  5A37               	subwfb	(password@wait+7)^0,f,c
  1488   0008FC  2830               	incf	password@wait^0,w,c
  1489   0008FE  E112               	bnz	u1171
  1490   000900  2831               	incf	(password@wait+1)^0,w,c
  1491   000902  E110               	bnz	u1171
  1492   000904  2832               	incf	(password@wait+2)^0,w,c
  1493   000906  E10E               	bnz	u1171
  1494   000908  2833               	incf	(password@wait+3)^0,w,c
  1495   00090A  E10C               	bnz	u1171
  1496   00090C  2834               	incf	(password@wait+4)^0,w,c
  1497   00090E  E10A               	bnz	u1171
  1498   000910  2835               	incf	(password@wait+5)^0,w,c
  1499   000912  E108               	bnz	u1171
  1500   000914  2836               	incf	(password@wait+6)^0,w,c
  1501   000916  E106               	bnz	u1171
  1502   000918  2837               	incf	(password@wait+7)^0,w,c
  1503   00091A  A4D8               	btfss	status,2,c
  1504   00091C  EF92  F004         	goto	u1171
  1505   000920  EF94  F004         	goto	u1170
  1506   000924                     u1171:
  1507   000924  EF75  F004         	goto	l2001
  1508   000928                     u1170:
  1509   000928                     
  1510                           ;password.c: 90:                 clcd_write(0x01, 0);
  1511   000928  0E00               	movlw	0
  1512   00092A  6E1E               	movwf	clcd_write@control_bit^0,c
  1513   00092C  0E01               	movlw	1
  1514   00092E  EC14  F009         	call	_clcd_write
  1515   000932                     l251:
  1516   000932  0012               	return		;funcret
  1517   000934                     __end_of_password:
  1518                           	callstack 0
  1519                           
  1520 ;; *************** function _my_strcmp *****************
  1521 ;; Defined at:
  1522 ;;		line 21 in file "password.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  one             1    0[COMRAM] PTR unsigned char 
  1525 ;;		 -> pass(5), 
  1526 ;;  two             1    1[COMRAM] PTR unsigned char 
  1527 ;;		 -> temp_password(5), 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  k               2    6[COMRAM] int 
  1530 ;;  last            2    4[COMRAM] int 
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  2    0[COMRAM] int 
  1533 ;; Registers used:
  1534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1540 ;;      Params:         2       0       0       0       0       0       0
  1541 ;;      Locals:         4       0       0       0       0       0       0
  1542 ;;      Temps:          2       0       0       0       0       0       0
  1543 ;;      Totals:         8       0       0       0       0       0       0
  1544 ;;Total ram usage:        8 bytes
  1545 ;; Hardware stack levels used: 1
  1546 ;; Hardware stack levels required when called: 1
  1547 ;; This function calls:
  1548 ;;		Nothing
  1549 ;; This function is called by:
  1550 ;;		_password
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           	psect	text5
  1555   000DD2                     __ptext5:
  1556                           	callstack 0
  1557   000DD2                     _my_strcmp:
  1558                           	callstack 28
  1559   000DD2                     
  1560                           ;password.c: 22:     int k = 0, last = 0;
  1561   000DD2  0E00               	movlw	0
  1562   000DD4  6E25               	movwf	(my_strcmp@k+1)^0,c
  1563   000DD6  0E00               	movlw	0
  1564   000DD8  6E24               	movwf	my_strcmp@k^0,c
  1565   000DDA  0E00               	movlw	0
  1566   000DDC  6E23               	movwf	(my_strcmp@last+1)^0,c
  1567   000DDE  0E00               	movlw	0
  1568   000DE0  6E22               	movwf	my_strcmp@last^0,c
  1569                           
  1570                           ;password.c: 23:     while (one[k] != '\0') {
  1571   000DE2  EF1A  F007         	goto	l1759
  1572   000DE6                     l1753:
  1573                           
  1574                           ;password.c: 24:         if (one[k] != two[k]) {
  1575   000DE6  501F               	movf	my_strcmp@two^0,w,c
  1576   000DE8  2424               	addwf	my_strcmp@k^0,w,c
  1577   000DEA  6ED9               	movwf	fsr2l,c
  1578   000DEC  6ADA               	clrf	fsr2h,c
  1579   000DEE  501E               	movf	my_strcmp@one^0,w,c
  1580   000DF0  2424               	addwf	my_strcmp@k^0,w,c
  1581   000DF2  6EE1               	movwf	fsr1l,c
  1582   000DF4  6AE2               	clrf	fsr1h,c
  1583   000DF6  50DE               	movf	postinc2,w,c
  1584   000DF8  18E6               	xorwf	postinc1,w,c
  1585   000DFA  B4D8               	btfsc	status,2,c
  1586   000DFC  EF02  F007         	goto	u781
  1587   000E00  EF04  F007         	goto	u780
  1588   000E04                     u781:
  1589   000E04  EF18  F007         	goto	l1757
  1590   000E08                     u780:
  1591   000E08                     
  1592                           ;password.c: 25:             last = one[k] - two[k];
  1593   000E08  501E               	movf	my_strcmp@one^0,w,c
  1594   000E0A  2424               	addwf	my_strcmp@k^0,w,c
  1595   000E0C  6ED9               	movwf	fsr2l,c
  1596   000E0E  6ADA               	clrf	fsr2h,c
  1597   000E10  50DF               	movf	indf2,w,c
  1598   000E12  6E20               	movwf	??_my_strcmp^0,c
  1599   000E14  501F               	movf	my_strcmp@two^0,w,c
  1600   000E16  2424               	addwf	my_strcmp@k^0,w,c
  1601   000E18  6ED9               	movwf	fsr2l,c
  1602   000E1A  6ADA               	clrf	fsr2h,c
  1603   000E1C  50DF               	movf	indf2,w,c
  1604   000E1E  6E21               	movwf	(??_my_strcmp+1)^0,c
  1605   000E20  5021               	movf	(??_my_strcmp+1)^0,w,c
  1606   000E22  5C20               	subwf	??_my_strcmp^0,w,c
  1607   000E24  6E22               	movwf	my_strcmp@last^0,c
  1608   000E26  6A23               	clrf	(my_strcmp@last+1)^0,c
  1609   000E28  A0D8               	btfss	status,0,c
  1610   000E2A  0623               	decf	(my_strcmp@last+1)^0,f,c
  1611                           
  1612                           ;password.c: 26:             break;
  1613   000E2C  EF26  F007         	goto	l223
  1614   000E30                     l1757:
  1615                           
  1616                           ;password.c: 28:         k++;
  1617   000E30  4A24               	infsnz	my_strcmp@k^0,f,c
  1618   000E32  2A25               	incf	(my_strcmp@k+1)^0,f,c
  1619   000E34                     l1759:
  1620                           
  1621                           ;password.c: 23:     while (one[k] != '\0') {
  1622   000E34  501E               	movf	my_strcmp@one^0,w,c
  1623   000E36  2424               	addwf	my_strcmp@k^0,w,c
  1624   000E38  6ED9               	movwf	fsr2l,c
  1625   000E3A  6ADA               	clrf	fsr2h,c
  1626   000E3C  50DF               	movf	indf2,w,c
  1627   000E3E  A4D8               	btfss	status,2,c
  1628   000E40  EF24  F007         	goto	u791
  1629   000E44  EF26  F007         	goto	u790
  1630   000E48                     u791:
  1631   000E48  EFF3  F006         	goto	l1753
  1632   000E4C                     u790:
  1633   000E4C                     l223:
  1634                           
  1635                           ;password.c: 30:     return last;
  1636   000E4C  C022  F01E         	movff	my_strcmp@last,?_my_strcmp
  1637   000E50  C023  F01F         	movff	my_strcmp@last+1,?_my_strcmp+1
  1638   000E54  0012               	return		;funcret
  1639   000E56                     __end_of_my_strcmp:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function ___awmod *****************
  1643 ;; Defined at:
  1644 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  dividend        2    8[COMRAM] int 
  1647 ;;  divisor         2   10[COMRAM] int 
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  sign            1   13[COMRAM] unsigned char 
  1650 ;;  counter         1   12[COMRAM] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  2    8[COMRAM] int 
  1653 ;; Registers used:
  1654 ;;		wreg, status,2, status,0
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1660 ;;      Params:         4       0       0       0       0       0       0
  1661 ;;      Locals:         2       0       0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0
  1663 ;;      Totals:         6       0       0       0       0       0       0
  1664 ;;Total ram usage:        6 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; Hardware stack levels required when called: 1
  1667 ;; This function calls:
  1668 ;;		Nothing
  1669 ;; This function is called by:
  1670 ;;		_password
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text6
  1675   000C7A                     __ptext6:
  1676                           	callstack 0
  1677   000C7A                     ___awmod:
  1678                           	callstack 28
  1679   000C7A  0E00               	movlw	0
  1680   000C7C  6E2B               	movwf	___awmod@sign^0,c
  1681   000C7E  BE27               	btfsc	(___awmod@dividend+1)^0,7,c
  1682   000C80  EF46  F006         	goto	u860
  1683   000C84  EF44  F006         	goto	u861
  1684   000C88                     u861:
  1685   000C88  EF4C  F006         	goto	l1813
  1686   000C8C                     u860:
  1687   000C8C  6C26               	negf	___awmod@dividend^0,c
  1688   000C8E  1E27               	comf	(___awmod@dividend+1)^0,f,c
  1689   000C90  B0D8               	btfsc	status,0,c
  1690   000C92  2A27               	incf	(___awmod@dividend+1)^0,f,c
  1691   000C94  0E01               	movlw	1
  1692   000C96  6E2B               	movwf	___awmod@sign^0,c
  1693   000C98                     l1813:
  1694   000C98  BE29               	btfsc	(___awmod@divisor+1)^0,7,c
  1695   000C9A  EF53  F006         	goto	u870
  1696   000C9E  EF51  F006         	goto	u871
  1697   000CA2                     u871:
  1698   000CA2  EF57  F006         	goto	l1817
  1699   000CA6                     u870:
  1700   000CA6  6C28               	negf	___awmod@divisor^0,c
  1701   000CA8  1E29               	comf	(___awmod@divisor+1)^0,f,c
  1702   000CAA  B0D8               	btfsc	status,0,c
  1703   000CAC  2A29               	incf	(___awmod@divisor+1)^0,f,c
  1704   000CAE                     l1817:
  1705   000CAE  5028               	movf	___awmod@divisor^0,w,c
  1706   000CB0  1029               	iorwf	(___awmod@divisor+1)^0,w,c
  1707   000CB2  B4D8               	btfsc	status,2,c
  1708   000CB4  EF5E  F006         	goto	u881
  1709   000CB8  EF60  F006         	goto	u880
  1710   000CBC                     u881:
  1711   000CBC  EF84  F006         	goto	l1833
  1712   000CC0                     u880:
  1713   000CC0  0E01               	movlw	1
  1714   000CC2  6E2A               	movwf	___awmod@counter^0,c
  1715   000CC4  EF68  F006         	goto	l1823
  1716   000CC8                     l1821:
  1717   000CC8  90D8               	bcf	status,0,c
  1718   000CCA  3628               	rlcf	___awmod@divisor^0,f,c
  1719   000CCC  3629               	rlcf	(___awmod@divisor+1)^0,f,c
  1720   000CCE  2A2A               	incf	___awmod@counter^0,f,c
  1721   000CD0                     l1823:
  1722   000CD0  AE29               	btfss	(___awmod@divisor+1)^0,7,c
  1723   000CD2  EF6D  F006         	goto	u891
  1724   000CD6  EF6F  F006         	goto	u890
  1725   000CDA                     u891:
  1726   000CDA  EF64  F006         	goto	l1821
  1727   000CDE                     u890:
  1728   000CDE                     l1825:
  1729   000CDE  5028               	movf	___awmod@divisor^0,w,c
  1730   000CE0  5C26               	subwf	___awmod@dividend^0,w,c
  1731   000CE2  5029               	movf	(___awmod@divisor+1)^0,w,c
  1732   000CE4  5827               	subwfb	(___awmod@dividend+1)^0,w,c
  1733   000CE6  A0D8               	btfss	status,0,c
  1734   000CE8  EF78  F006         	goto	u901
  1735   000CEC  EF7A  F006         	goto	u900
  1736   000CF0                     u901:
  1737   000CF0  EF7E  F006         	goto	l1829
  1738   000CF4                     u900:
  1739   000CF4  5028               	movf	___awmod@divisor^0,w,c
  1740   000CF6  5E26               	subwf	___awmod@dividend^0,f,c
  1741   000CF8  5029               	movf	(___awmod@divisor+1)^0,w,c
  1742   000CFA  5A27               	subwfb	(___awmod@dividend+1)^0,f,c
  1743   000CFC                     l1829:
  1744   000CFC  90D8               	bcf	status,0,c
  1745   000CFE  3229               	rrcf	(___awmod@divisor+1)^0,f,c
  1746   000D00  3228               	rrcf	___awmod@divisor^0,f,c
  1747   000D02  2E2A               	decfsz	___awmod@counter^0,f,c
  1748   000D04  EF6F  F006         	goto	l1825
  1749   000D08                     l1833:
  1750   000D08  502B               	movf	___awmod@sign^0,w,c
  1751   000D0A  B4D8               	btfsc	status,2,c
  1752   000D0C  EF8A  F006         	goto	u911
  1753   000D10  EF8C  F006         	goto	u910
  1754   000D14                     u911:
  1755   000D14  EF90  F006         	goto	l1837
  1756   000D18                     u910:
  1757   000D18  6C26               	negf	___awmod@dividend^0,c
  1758   000D1A  1E27               	comf	(___awmod@dividend+1)^0,f,c
  1759   000D1C  B0D8               	btfsc	status,0,c
  1760   000D1E  2A27               	incf	(___awmod@dividend+1)^0,f,c
  1761   000D20                     l1837:
  1762   000D20  C026  F026         	movff	___awmod@dividend,?___awmod
  1763   000D24  C027  F027         	movff	___awmod@dividend+1,?___awmod+1
  1764   000D28  0012               	return		;funcret
  1765   000D2A                     __end_of___awmod:
  1766                           	callstack 0
  1767                           
  1768 ;; *************** function ___awdiv *****************
  1769 ;; Defined at:
  1770 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  dividend        2    0[COMRAM] int 
  1773 ;;  divisor         2    2[COMRAM] int 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  quotient        2    6[COMRAM] int 
  1776 ;;  sign            1    5[COMRAM] unsigned char 
  1777 ;;  counter         1    4[COMRAM] unsigned char 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  2    0[COMRAM] int 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1787 ;;      Params:         4       0       0       0       0       0       0
  1788 ;;      Locals:         4       0       0       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0
  1790 ;;      Totals:         8       0       0       0       0       0       0
  1791 ;;Total ram usage:        8 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; Hardware stack levels required when called: 1
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_password
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text7
  1802   000BB6                     __ptext7:
  1803                           	callstack 0
  1804   000BB6                     ___awdiv:
  1805                           	callstack 28
  1806   000BB6  0E00               	movlw	0
  1807   000BB8  6E23               	movwf	___awdiv@sign^0,c
  1808   000BBA  BE21               	btfsc	(___awdiv@divisor+1)^0,7,c
  1809   000BBC  EFE4  F005         	goto	u800
  1810   000BC0  EFE2  F005         	goto	u801
  1811   000BC4                     u801:
  1812   000BC4  EFEA  F005         	goto	l1769
  1813   000BC8                     u800:
  1814   000BC8  6C20               	negf	___awdiv@divisor^0,c
  1815   000BCA  1E21               	comf	(___awdiv@divisor+1)^0,f,c
  1816   000BCC  B0D8               	btfsc	status,0,c
  1817   000BCE  2A21               	incf	(___awdiv@divisor+1)^0,f,c
  1818   000BD0  0E01               	movlw	1
  1819   000BD2  6E23               	movwf	___awdiv@sign^0,c
  1820   000BD4                     l1769:
  1821   000BD4  BE1F               	btfsc	(___awdiv@dividend+1)^0,7,c
  1822   000BD6  EFF1  F005         	goto	u810
  1823   000BDA  EFEF  F005         	goto	u811
  1824   000BDE                     u811:
  1825   000BDE  EFF7  F005         	goto	l1775
  1826   000BE2                     u810:
  1827   000BE2  6C1E               	negf	___awdiv@dividend^0,c
  1828   000BE4  1E1F               	comf	(___awdiv@dividend+1)^0,f,c
  1829   000BE6  B0D8               	btfsc	status,0,c
  1830   000BE8  2A1F               	incf	(___awdiv@dividend+1)^0,f,c
  1831   000BEA  0E01               	movlw	1
  1832   000BEC  1A23               	xorwf	___awdiv@sign^0,f,c
  1833   000BEE                     l1775:
  1834   000BEE  0E00               	movlw	0
  1835   000BF0  6E25               	movwf	(___awdiv@quotient+1)^0,c
  1836   000BF2  0E00               	movlw	0
  1837   000BF4  6E24               	movwf	___awdiv@quotient^0,c
  1838   000BF6  5020               	movf	___awdiv@divisor^0,w,c
  1839   000BF8  1021               	iorwf	(___awdiv@divisor+1)^0,w,c
  1840   000BFA  B4D8               	btfsc	status,2,c
  1841   000BFC  EF02  F006         	goto	u821
  1842   000C00  EF04  F006         	goto	u820
  1843   000C04                     u821:
  1844   000C04  EF2C  F006         	goto	l1797
  1845   000C08                     u820:
  1846   000C08  0E01               	movlw	1
  1847   000C0A  6E22               	movwf	___awdiv@counter^0,c
  1848   000C0C  EF0C  F006         	goto	l1783
  1849   000C10                     l1781:
  1850   000C10  90D8               	bcf	status,0,c
  1851   000C12  3620               	rlcf	___awdiv@divisor^0,f,c
  1852   000C14  3621               	rlcf	(___awdiv@divisor+1)^0,f,c
  1853   000C16  2A22               	incf	___awdiv@counter^0,f,c
  1854   000C18                     l1783:
  1855   000C18  AE21               	btfss	(___awdiv@divisor+1)^0,7,c
  1856   000C1A  EF11  F006         	goto	u831
  1857   000C1E  EF13  F006         	goto	u830
  1858   000C22                     u831:
  1859   000C22  EF08  F006         	goto	l1781
  1860   000C26                     u830:
  1861   000C26                     l1785:
  1862   000C26  90D8               	bcf	status,0,c
  1863   000C28  3624               	rlcf	___awdiv@quotient^0,f,c
  1864   000C2A  3625               	rlcf	(___awdiv@quotient+1)^0,f,c
  1865   000C2C  5020               	movf	___awdiv@divisor^0,w,c
  1866   000C2E  5C1E               	subwf	___awdiv@dividend^0,w,c
  1867   000C30  5021               	movf	(___awdiv@divisor+1)^0,w,c
  1868   000C32  581F               	subwfb	(___awdiv@dividend+1)^0,w,c
  1869   000C34  A0D8               	btfss	status,0,c
  1870   000C36  EF1F  F006         	goto	u841
  1871   000C3A  EF21  F006         	goto	u840
  1872   000C3E                     u841:
  1873   000C3E  EF26  F006         	goto	l1793
  1874   000C42                     u840:
  1875   000C42  5020               	movf	___awdiv@divisor^0,w,c
  1876   000C44  5E1E               	subwf	___awdiv@dividend^0,f,c
  1877   000C46  5021               	movf	(___awdiv@divisor+1)^0,w,c
  1878   000C48  5A1F               	subwfb	(___awdiv@dividend+1)^0,f,c
  1879   000C4A  8024               	bsf	___awdiv@quotient^0,0,c
  1880   000C4C                     l1793:
  1881   000C4C  90D8               	bcf	status,0,c
  1882   000C4E  3221               	rrcf	(___awdiv@divisor+1)^0,f,c
  1883   000C50  3220               	rrcf	___awdiv@divisor^0,f,c
  1884   000C52  2E22               	decfsz	___awdiv@counter^0,f,c
  1885   000C54  EF13  F006         	goto	l1785
  1886   000C58                     l1797:
  1887   000C58  5023               	movf	___awdiv@sign^0,w,c
  1888   000C5A  B4D8               	btfsc	status,2,c
  1889   000C5C  EF32  F006         	goto	u851
  1890   000C60  EF34  F006         	goto	u850
  1891   000C64                     u851:
  1892   000C64  EF38  F006         	goto	l1801
  1893   000C68                     u850:
  1894   000C68  6C24               	negf	___awdiv@quotient^0,c
  1895   000C6A  1E25               	comf	(___awdiv@quotient+1)^0,f,c
  1896   000C6C  B0D8               	btfsc	status,0,c
  1897   000C6E  2A25               	incf	(___awdiv@quotient+1)^0,f,c
  1898   000C70                     l1801:
  1899   000C70  C024  F01E         	movff	___awdiv@quotient,?___awdiv
  1900   000C74  C025  F01F         	movff	___awdiv@quotient+1,?___awdiv+1
  1901   000C78  0012               	return		;funcret
  1902   000C7A                     __end_of___awdiv:
  1903                           	callstack 0
  1904                           
  1905 ;; *************** function _init_config *****************
  1906 ;; Defined at:
  1907 ;;		line 18 in file "main.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, status,2, status,0, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1921 ;;      Params:         0       0       0       0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0       0       0
  1924 ;;      Totals:         0       0       0       0       0       0       0
  1925 ;;Total ram usage:        0 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; Hardware stack levels required when called: 6
  1928 ;; This function calls:
  1929 ;;		_init_adc
  1930 ;;		_init_clcd
  1931 ;;		_init_ds1307
  1932 ;;		_init_i2c
  1933 ;;		_init_matrix_keypad
  1934 ;;		_init_timer0
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text8
  1941   0012AC                     __ptext8:
  1942                           	callstack 0
  1943   0012AC                     _init_config:
  1944                           	callstack 24
  1945   0012AC                     
  1946                           ;main.c: 19:     init_clcd();
  1947   0012AC  EC95  F006         	call	_init_clcd	;wreg free
  1948                           
  1949                           ;main.c: 20:     init_matrix_keypad();
  1950   0012B0  EC96  F009         	call	_init_matrix_keypad	;wreg free
  1951   0012B4                     
  1952                           ;main.c: 21:     init_adc();
  1953   0012B4  EC46  F009         	call	_init_adc	;wreg free
  1954   0012B8                     
  1955                           ;main.c: 22:     init_i2c();
  1956   0012B8  EC8B  F009         	call	_init_i2c	;wreg free
  1957                           
  1958                           ;main.c: 23:     init_ds1307();
  1959   0012BC  ECB0  F008         	call	_init_ds1307	;wreg free
  1960   0012C0                     
  1961                           ;main.c: 25:     PEIE = 1;
  1962   0012C0  8CF2               	bsf	4082,6,c	;volatile
  1963   0012C2                     
  1964                           ;main.c: 27:  init_timer0();
  1965   0012C2  EC80  F009         	call	_init_timer0	;wreg free
  1966   0012C6                     
  1967                           ;main.c: 29:  GIE = 1;
  1968   0012C6  8EF2               	bsf	4082,7,c	;volatile
  1969   0012C8  0012               	return		;funcret
  1970   0012CA                     __end_of_init_config:
  1971                           	callstack 0
  1972                           
  1973 ;; *************** function _init_timer0 *****************
  1974 ;; Defined at:
  1975 ;;		line 4 in file "timer0.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, status,2
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1989 ;;      Params:         0       0       0       0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0
  1992 ;;      Totals:         0       0       0       0       0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; Hardware stack levels required when called: 1
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_init_config
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text9
  2004   001300                     __ptext9:
  2005                           	callstack 0
  2006   001300                     _init_timer0:
  2007                           	callstack 28
  2008   001300                     
  2009                           ;timer0.c: 12:  T08BIT = 1;
  2010   001300  8CD5               	bsf	4053,6,c	;volatile
  2011                           
  2012                           ;timer0.c: 15:  T0CS = 0;
  2013   001302  9AD5               	bcf	4053,5,c	;volatile
  2014                           
  2015                           ;timer0.c: 18:  TMR0ON = 1;
  2016   001304  8ED5               	bsf	4053,7,c	;volatile
  2017                           
  2018                           ;timer0.c: 21:  PSA = 1;
  2019   001306  86D5               	bsf	4053,3,c	;volatile
  2020   001308                     
  2021                           ;timer0.c: 24:  TMR0 = 6;
  2022   001308  0E00               	movlw	0
  2023   00130A  6ED7               	movwf	215,c	;volatile
  2024   00130C  0E06               	movlw	6
  2025   00130E  6ED6               	movwf	214,c	;volatile
  2026   001310                     
  2027                           ;timer0.c: 27:  TMR0IF = 0;
  2028   001310  94F2               	bcf	4082,2,c	;volatile
  2029   001312                     
  2030                           ;timer0.c: 30:  TMR0IE = 1;
  2031   001312  8AF2               	bsf	4082,5,c	;volatile
  2032   001314  0012               	return		;funcret
  2033   001316                     __end_of_init_timer0:
  2034                           	callstack 0
  2035                           
  2036 ;; *************** function _init_matrix_keypad *****************
  2037 ;; Defined at:
  2038 ;;		line 5 in file "matrix_keypad.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2052 ;;      Params:         0       0       0       0       0       0       0
  2053 ;;      Locals:         0       0       0       0       0       0       0
  2054 ;;      Temps:          0       0       0       0       0       0       0
  2055 ;;      Totals:         0       0       0       0       0       0       0
  2056 ;;Total ram usage:        0 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; Hardware stack levels required when called: 1
  2059 ;; This function calls:
  2060 ;;		Nothing
  2061 ;; This function is called by:
  2062 ;;		_init_config
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text10
  2067   00132C                     __ptext10:
  2068                           	callstack 0
  2069   00132C                     _init_matrix_keypad:
  2070                           	callstack 28
  2071   00132C                     
  2072                           ;matrix_keypad.c: 8:  ADCON1 = 0x0F;
  2073   00132C  0E0F               	movlw	15
  2074   00132E  6EC1               	movwf	193,c	;volatile
  2075                           
  2076                           ;matrix_keypad.c: 11:  TRISB = 0x1E;
  2077   001330  0E1E               	movlw	30
  2078   001332  6E93               	movwf	147,c	;volatile
  2079   001334                     
  2080                           ;matrix_keypad.c: 14:  RBPU = 0;
  2081   001334  9EF1               	bcf	4081,7,c	;volatile
  2082   001336                     
  2083                           ;matrix_keypad.c: 16:  PORTB = PORTB | 0xE0;
  2084   001336  5081               	movf	129,w,c	;volatile
  2085   001338  09E0               	iorlw	224
  2086   00133A  6E81               	movwf	129,c	;volatile
  2087   00133C  0012               	return		;funcret
  2088   00133E                     __end_of_init_matrix_keypad:
  2089                           	callstack 0
  2090                           
  2091 ;; *************** function _init_i2c *****************
  2092 ;; Defined at:
  2093 ;;		line 4 in file "i2c.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      void 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2107 ;;      Params:         0       0       0       0       0       0       0
  2108 ;;      Locals:         0       0       0       0       0       0       0
  2109 ;;      Temps:          0       0       0       0       0       0       0
  2110 ;;      Totals:         0       0       0       0       0       0       0
  2111 ;;Total ram usage:        0 bytes
  2112 ;; Hardware stack levels used: 1
  2113 ;; Hardware stack levels required when called: 1
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_init_config
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text11
  2122   001316                     __ptext11:
  2123                           	callstack 0
  2124   001316                     _init_i2c:
  2125                           	callstack 28
  2126   001316                     
  2127                           ;i2c.c: 7:  TRISC3 = 1;
  2128   001316  8694               	bsf	3988,3,c	;volatile
  2129                           
  2130                           ;i2c.c: 8:  TRISC4 = 1;
  2131   001318  8894               	bsf	3988,4,c	;volatile
  2132   00131A                     
  2133                           ;i2c.c: 10:  SSPCON1 = 0x28;
  2134   00131A  0E28               	movlw	40
  2135   00131C  6EC6               	movwf	198,c	;volatile
  2136                           
  2137                           ;i2c.c: 12:  SSPADD = 0x31;
  2138   00131E  0E31               	movlw	49
  2139   001320  6EC8               	movwf	200,c	;volatile
  2140   001322                     
  2141                           ;i2c.c: 14:  CKE = 0;
  2142   001322  9CC7               	bcf	4039,6,c	;volatile
  2143   001324                     
  2144                           ;i2c.c: 16:  SMP = 1;
  2145   001324  8EC7               	bsf	4039,7,c	;volatile
  2146   001326                     
  2147                           ;i2c.c: 18:  SSPIF = 0;
  2148   001326  969E               	bcf	3998,3,c	;volatile
  2149   001328                     
  2150                           ;i2c.c: 20:  BCLIF = 0;
  2151   001328  96A1               	bcf	4001,3,c	;volatile
  2152   00132A  0012               	return		;funcret
  2153   00132C                     __end_of_init_i2c:
  2154                           	callstack 0
  2155                           
  2156 ;; *************** function _init_ds1307 *****************
  2157 ;; Defined at:
  2158 ;;		line 13 in file "ds1307.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  dummy           1    3[COMRAM] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2172 ;;      Params:         0       0       0       0       0       0       0
  2173 ;;      Locals:         1       0       0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0       0
  2175 ;;      Totals:         1       0       0       0       0       0       0
  2176 ;;Total ram usage:        1 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 5
  2179 ;; This function calls:
  2180 ;;		_read_ds1307
  2181 ;;		_write_ds1307
  2182 ;; This function is called by:
  2183 ;;		_init_config
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text12
  2188   001160                     __ptext12:
  2189                           	callstack 0
  2190   001160                     _init_ds1307:
  2191                           	callstack 24
  2192   001160                     
  2193                           ;ds1307.c: 15:  unsigned char dummy;;ds1307.c: 18:  dummy = read_ds1307(0x00);
  2194   001160  0E00               	movlw	0
  2195   001162  EC31  F009         	call	_read_ds1307
  2196   001166  6E21               	movwf	init_ds1307@dummy^0,c
  2197   001168                     
  2198                           ;ds1307.c: 19:  write_ds1307(0x00, dummy | 0x80);
  2199   001168  5021               	movf	init_ds1307@dummy^0,w,c
  2200   00116A  0980               	iorlw	128
  2201   00116C  6E1F               	movwf	write_ds1307@data^0,c
  2202   00116E  0E00               	movlw	0
  2203   001170  EC65  F009         	call	_write_ds1307
  2204   001174                     
  2205                           ;ds1307.c: 22:  dummy = read_ds1307(0x02);
  2206   001174  0E02               	movlw	2
  2207   001176  EC31  F009         	call	_read_ds1307
  2208   00117A  6E21               	movwf	init_ds1307@dummy^0,c
  2209                           
  2210                           ;ds1307.c: 23:  write_ds1307(0x02, dummy | 0x40);
  2211   00117C  5021               	movf	init_ds1307@dummy^0,w,c
  2212   00117E  0940               	iorlw	64
  2213   001180  6E1F               	movwf	write_ds1307@data^0,c
  2214   001182  0E02               	movlw	2
  2215   001184  EC65  F009         	call	_write_ds1307
  2216   001188                     
  2217                           ;ds1307.c: 38:  write_ds1307(0x07, 0x93);
  2218   001188  0E93               	movlw	147
  2219   00118A  6E1F               	movwf	write_ds1307@data^0,c
  2220   00118C  0E07               	movlw	7
  2221   00118E  EC65  F009         	call	_write_ds1307
  2222   001192                     
  2223                           ;ds1307.c: 41:  dummy = read_ds1307(0x00);
  2224   001192  0E00               	movlw	0
  2225   001194  EC31  F009         	call	_read_ds1307
  2226   001198  6E21               	movwf	init_ds1307@dummy^0,c
  2227                           
  2228                           ;ds1307.c: 42:  write_ds1307(0x00, dummy & 0x7F);
  2229   00119A  5021               	movf	init_ds1307@dummy^0,w,c
  2230   00119C  0B7F               	andlw	127
  2231   00119E  6E1F               	movwf	write_ds1307@data^0,c
  2232   0011A0  0E00               	movlw	0
  2233   0011A2  EC65  F009         	call	_write_ds1307
  2234   0011A6  0012               	return		;funcret
  2235   0011A8                     __end_of_init_ds1307:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function _write_ds1307 *****************
  2239 ;; Defined at:
  2240 ;;		line 46 in file "ds1307.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  address         1    wreg     unsigned char 
  2243 ;;  data            1    1[COMRAM] unsigned char 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  address         1    2[COMRAM] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2255 ;;      Params:         1       0       0       0       0       0       0
  2256 ;;      Locals:         1       0       0       0       0       0       0
  2257 ;;      Temps:          0       0       0       0       0       0       0
  2258 ;;      Totals:         2       0       0       0       0       0       0
  2259 ;;Total ram usage:        2 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 3
  2262 ;; This function calls:
  2263 ;;		_i2c_start
  2264 ;;		_i2c_stop
  2265 ;;		_i2c_write
  2266 ;; This function is called by:
  2267 ;;		_init_ds1307
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text13
  2272   0012CA                     __ptext13:
  2273                           	callstack 0
  2274   0012CA                     _write_ds1307:
  2275                           	callstack 25
  2276                           
  2277                           ;incstack = 0
  2278                           ;write_ds1307@address stored from wreg
  2279   0012CA  6E20               	movwf	write_ds1307@address^0,c
  2280   0012CC                     
  2281                           ;ds1307.c: 46: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 47
      +                          : {;ds1307.c: 48:  i2c_start();
  2282   0012CC  ECC8  F009         	call	_i2c_start	;wreg free
  2283   0012D0                     
  2284                           ;ds1307.c: 49:  i2c_write(0xD0);
  2285   0012D0  0ED0               	movlw	208
  2286   0012D2  ECB8  F009         	call	_i2c_write
  2287   0012D6                     
  2288                           ;ds1307.c: 50:  i2c_write(address);
  2289   0012D6  5020               	movf	write_ds1307@address^0,w,c
  2290   0012D8  ECB8  F009         	call	_i2c_write
  2291   0012DC                     
  2292                           ;ds1307.c: 51:  i2c_write(data);
  2293   0012DC  501F               	movf	write_ds1307@data^0,w,c
  2294   0012DE  ECB8  F009         	call	_i2c_write
  2295   0012E2                     
  2296                           ;ds1307.c: 52:  i2c_stop();
  2297   0012E2  ECC4  F009         	call	_i2c_stop	;wreg free
  2298   0012E6  0012               	return		;funcret
  2299   0012E8                     __end_of_write_ds1307:
  2300                           	callstack 0
  2301                           
  2302 ;; *************** function _init_clcd *****************
  2303 ;; Defined at:
  2304 ;;		line 28 in file "clcd.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;		None
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      void 
  2311 ;; Registers used:
  2312 ;;		wreg, status,2, status,0, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2318 ;;      Params:         0       0       0       0       0       0       0
  2319 ;;      Locals:         0       0       0       0       0       0       0
  2320 ;;      Temps:          1       0       0       0       0       0       0
  2321 ;;      Totals:         1       0       0       0       0       0       0
  2322 ;;Total ram usage:        1 bytes
  2323 ;; Hardware stack levels used: 1
  2324 ;; Hardware stack levels required when called: 2
  2325 ;; This function calls:
  2326 ;;		_clcd_write
  2327 ;; This function is called by:
  2328 ;;		_init_config
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text14
  2333   000D2A                     __ptext14:
  2334                           	callstack 0
  2335   000D2A                     _init_clcd:
  2336                           	callstack 27
  2337   000D2A                     
  2338                           ;clcd.c: 31:  TRISD = 0x00;
  2339   000D2A  0E00               	movlw	0
  2340   000D2C  6E95               	movwf	149,c	;volatile
  2341   000D2E                     
  2342                           ;clcd.c: 33:  TRISC = TRISC & 0xF8;
  2343   000D2E  5094               	movf	148,w,c	;volatile
  2344   000D30  0BF8               	andlw	248
  2345   000D32  6E94               	movwf	148,c	;volatile
  2346   000D34                     
  2347                           ;clcd.c: 35:  RC0 = 0;
  2348   000D34  9082               	bcf	3970,0,c	;volatile
  2349   000D36                     
  2350                           ;clcd.c: 39:     _delay((unsigned long)((30)*(20000000/4000.0)));
  2351   000D36  0EC3               	movlw	195
  2352   000D38  6E20               	movwf	??_init_clcd^0,c
  2353   000D3A  0ECD               	movlw	205
  2354   000D3C                     u1237:
  2355   000D3C  2EE8               	decfsz	wreg,f,c
  2356   000D3E  D7FE               	bra	u1237
  2357   000D40  2E20               	decfsz	??_init_clcd^0,f,c
  2358   000D42  D7FC               	bra	u1237
  2359   000D44  0000               	nop	
  2360   000D46                     
  2361                           ;clcd.c: 42:     clcd_write(0x33, 0 );
  2362   000D46  0E00               	movlw	0
  2363   000D48  6E1E               	movwf	clcd_write@control_bit^0,c
  2364   000D4A  0E33               	movlw	51
  2365   000D4C  EC14  F009         	call	_clcd_write
  2366   000D50                     
  2367                           ;clcd.c: 43:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2368   000D50  0E1B               	movlw	27
  2369   000D52  6E20               	movwf	??_init_clcd^0,c
  2370   000D54  0E9E               	movlw	158
  2371   000D56                     u1247:
  2372   000D56  2EE8               	decfsz	wreg,f,c
  2373   000D58  D7FE               	bra	u1247
  2374   000D5A  2E20               	decfsz	??_init_clcd^0,f,c
  2375   000D5C  D7FC               	bra	u1247
  2376   000D5E  D000               	nop2	
  2377   000D60                     
  2378                           ;clcd.c: 44:     clcd_write(0x33, 0 );
  2379   000D60  0E00               	movlw	0
  2380   000D62  6E1E               	movwf	clcd_write@control_bit^0,c
  2381   000D64  0E33               	movlw	51
  2382   000D66  EC14  F009         	call	_clcd_write
  2383   000D6A                     
  2384                           ;clcd.c: 45:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2385   000D6A  0EA6               	movlw	166
  2386   000D6C                     u1257:
  2387   000D6C  2EE8               	decfsz	wreg,f,c
  2388   000D6E  D7FE               	bra	u1257
  2389   000D70  D000               	nop2	
  2390   000D72                     
  2391                           ;clcd.c: 46:     clcd_write(0x33, 0 );
  2392   000D72  0E00               	movlw	0
  2393   000D74  6E1E               	movwf	clcd_write@control_bit^0,c
  2394   000D76  0E33               	movlw	51
  2395   000D78  EC14  F009         	call	_clcd_write
  2396   000D7C                     
  2397                           ;clcd.c: 47:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  2398   000D7C  D000               	nop2		;2 cycle nop
  2399   000D7E  D000               	nop2		;2 cycle nop
  2400   000D80  0000               	nop	
  2401   000D82                     
  2402                           ;clcd.c: 49:     clcd_write(0x02, 0);
  2403   000D82  0E00               	movlw	0
  2404   000D84  6E1E               	movwf	clcd_write@control_bit^0,c
  2405   000D86  0E02               	movlw	2
  2406   000D88  EC14  F009         	call	_clcd_write
  2407   000D8C                     
  2408                           ;clcd.c: 50:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2409   000D8C  0EA6               	movlw	166
  2410   000D8E                     u1267:
  2411   000D8E  2EE8               	decfsz	wreg,f,c
  2412   000D90  D7FE               	bra	u1267
  2413   000D92  D000               	nop2	
  2414   000D94                     
  2415                           ;clcd.c: 51:     clcd_write(0x38, 0);
  2416   000D94  0E00               	movlw	0
  2417   000D96  6E1E               	movwf	clcd_write@control_bit^0,c
  2418   000D98  0E38               	movlw	56
  2419   000D9A  EC14  F009         	call	_clcd_write
  2420   000D9E                     
  2421                           ;clcd.c: 52:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2422   000D9E  0EA6               	movlw	166
  2423   000DA0                     u1277:
  2424   000DA0  2EE8               	decfsz	wreg,f,c
  2425   000DA2  D7FE               	bra	u1277
  2426   000DA4  D000               	nop2	
  2427   000DA6                     
  2428                           ;clcd.c: 53:     clcd_write(0x01, 0);
  2429   000DA6  0E00               	movlw	0
  2430   000DA8  6E1E               	movwf	clcd_write@control_bit^0,c
  2431   000DAA  0E01               	movlw	1
  2432   000DAC  EC14  F009         	call	_clcd_write
  2433   000DB0                     
  2434                           ;clcd.c: 54:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  2435   000DB0  0E04               	movlw	4
  2436   000DB2  6E20               	movwf	??_init_clcd^0,c
  2437   000DB4  0E3E               	movlw	62
  2438   000DB6                     u1287:
  2439   000DB6  2EE8               	decfsz	wreg,f,c
  2440   000DB8  D7FE               	bra	u1287
  2441   000DBA  2E20               	decfsz	??_init_clcd^0,f,c
  2442   000DBC  D7FC               	bra	u1287
  2443   000DBE                     
  2444                           ;clcd.c: 55:     clcd_write(0x0C, 0);
  2445   000DBE  0E00               	movlw	0
  2446   000DC0  6E1E               	movwf	clcd_write@control_bit^0,c
  2447   000DC2  0E0C               	movlw	12
  2448   000DC4  EC14  F009         	call	_clcd_write
  2449   000DC8                     
  2450                           ;clcd.c: 56:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2451   000DC8  0EA6               	movlw	166
  2452   000DCA                     u1297:
  2453   000DCA  2EE8               	decfsz	wreg,f,c
  2454   000DCC  D7FE               	bra	u1297
  2455   000DCE  D000               	nop2	
  2456   000DD0  0012               	return		;funcret
  2457   000DD2                     __end_of_init_clcd:
  2458                           	callstack 0
  2459                           
  2460 ;; *************** function _init_adc *****************
  2461 ;; Defined at:
  2462 ;;		line 4 in file "adc.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;		None
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2476 ;;      Params:         0       0       0       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0
  2479 ;;      Totals:         0       0       0       0       0       0       0
  2480 ;;Total ram usage:        0 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; Hardware stack levels required when called: 1
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_init_config
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text15
  2491   00128C                     __ptext15:
  2492                           	callstack 0
  2493   00128C                     _init_adc:
  2494                           	callstack 28
  2495   00128C                     
  2496                           ;adc.c: 7:  ADFM = 1;
  2497   00128C  8EC0               	bsf	4032,7,c	;volatile
  2498                           
  2499                           ;adc.c: 13:  ACQT2 = 0;
  2500   00128E  9AC0               	bcf	4032,5,c	;volatile
  2501                           
  2502                           ;adc.c: 14:  ACQT1 = 1;
  2503   001290  88C0               	bsf	4032,4,c	;volatile
  2504                           
  2505                           ;adc.c: 15:  ACQT0 = 0;
  2506   001292  96C0               	bcf	4032,3,c	;volatile
  2507                           
  2508                           ;adc.c: 21:  ADCS0 = 0;
  2509   001294  90C0               	bcf	4032,0,c	;volatile
  2510                           
  2511                           ;adc.c: 22:  ADCS1 = 1;
  2512   001296  82C0               	bsf	4032,1,c	;volatile
  2513                           
  2514                           ;adc.c: 23:  ADCS2 = 0;
  2515   001298  94C0               	bcf	4032,2,c	;volatile
  2516                           
  2517                           ;adc.c: 26:  GODONE = 0;
  2518   00129A  92C2               	bcf	4034,1,c	;volatile
  2519                           
  2520                           ;adc.c: 31:  VCFG1 = 0;
  2521   00129C  9AC1               	bcf	4033,5,c	;volatile
  2522                           
  2523                           ;adc.c: 33:  VCFG0 = 0;
  2524   00129E  98C1               	bcf	4033,4,c	;volatile
  2525   0012A0                     
  2526                           ;adc.c: 36:  ADRESH = 0;
  2527   0012A0  0E00               	movlw	0
  2528   0012A2  6EC4               	movwf	196,c	;volatile
  2529                           
  2530                           ;adc.c: 37:  ADRESL = 0;
  2531   0012A4  0E00               	movlw	0
  2532   0012A6  6EC3               	movwf	195,c	;volatile
  2533   0012A8                     
  2534                           ;adc.c: 40:  ADON = 1;
  2535   0012A8  80C2               	bsf	4034,0,c	;volatile
  2536   0012AA  0012               	return		;funcret
  2537   0012AC                     __end_of_init_adc:
  2538                           	callstack 0
  2539                           
  2540 ;; *************** function _dashboard *****************
  2541 ;; Defined at:
  2542 ;;		line 50 in file "dashboard.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  events          8   17[COMRAM] PTR unsigned char [8]
  2547 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_6(3), 
  2548 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2558 ;;      Params:         0       0       0       0       0       0       0
  2559 ;;      Locals:         8       0       0       0       0       0       0
  2560 ;;      Temps:          1       0       0       0       0       0       0
  2561 ;;      Totals:         9       0       0       0       0       0       0
  2562 ;;Total ram usage:        9 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 6
  2565 ;; This function calls:
  2566 ;;		___lwdiv
  2567 ;;		___lwmod
  2568 ;;		_clcd_print
  2569 ;;		_clcd_putch
  2570 ;;		_display_time
  2571 ;;		_get_time
  2572 ;; This function is called by:
  2573 ;;		_main
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text16
  2578   000934                     __ptext16:
  2579                           	callstack 0
  2580   000934                     _dashboard:
  2581                           	callstack 24
  2582   000934                     
  2583                           ;dashboard.c: 52:     clcd_print("  TIME    EV  SP", (0x80 + (0)));
  2584   000934  0E36               	movlw	low STR_1
  2585   000936  6E20               	movwf	clcd_print@data^0,c
  2586   000938  5020               	movf	clcd_print@data^0,w,c
  2587   00093A  A4D8               	btfss	status,2,c
  2588   00093C  0E06               	movlw	high __smallconst
  2589   00093E  6E21               	movwf	(clcd_print@data+1)^0,c
  2590   000940  0E80               	movlw	128
  2591   000942  6E22               	movwf	clcd_print@addr^0,c
  2592   000944  EC1A  F008         	call	_clcd_print	;wreg free
  2593   000948                     
  2594                           ;dashboard.c: 55:     char *events[8] = {"ON", "GR", "GN", "G1", "G2", "G3", "G4", "C "}
      +                          ;
  2595   000948  EE20  F03A         	lfsr	2,dashboard@F10501
  2596   00094C  EE10  F02F         	lfsr	1,dashboard@events
  2597   000950  0E07               	movlw	7
  2598   000952                     u991:
  2599   000952  CFDB FFE3          	movff	plusw2,plusw1
  2600   000956  06E8               	decf	wreg,f,c
  2601   000958  E2FC               	bc	u991
  2602   00095A                     
  2603                           ;dashboard.c: 59:     clcd_print(events[i], (0xC0 + (10)));
  2604   00095A  500A               	movf	_i^0,w,c
  2605   00095C  0F2F               	addlw	low dashboard@events
  2606   00095E  6ED9               	movwf	fsr2l,c
  2607   000960  6ADA               	clrf	fsr2h,c
  2608   000962  50DF               	movf	indf2,w,c
  2609   000964  6E2E               	movwf	??_dashboard^0,c
  2610   000966  C02E  F020         	movff	??_dashboard,clcd_print@data
  2611   00096A  5020               	movf	clcd_print@data^0,w,c
  2612   00096C  A4D8               	btfss	status,2,c
  2613   00096E  0E06               	movlw	high __smallconst
  2614   000970  6E21               	movwf	(clcd_print@data+1)^0,c
  2615   000972  0ECA               	movlw	202
  2616   000974  6E22               	movwf	clcd_print@addr^0,c
  2617   000976  EC1A  F008         	call	_clcd_print	;wreg free
  2618   00097A                     
  2619                           ;dashboard.c: 62:     if (key == 2) {
  2620   00097A  0E02               	movlw	2
  2621   00097C  180F               	xorwf	_key^0,w,c
  2622   00097E  A4D8               	btfss	status,2,c
  2623   000980  EFC4  F004         	goto	u1001
  2624   000984  EFC6  F004         	goto	u1000
  2625   000988                     u1001:
  2626   000988  EFD6  F004         	goto	l1913
  2627   00098C                     u1000:
  2628   00098C                     
  2629                           ;dashboard.c: 63:         if (i < 6) {
  2630   00098C  BE0B               	btfsc	(_i+1)^0,7,c
  2631   00098E  EFD4  F004         	goto	u1010
  2632   000992  500B               	movf	(_i+1)^0,w,c
  2633   000994  E107               	bnz	u1011
  2634   000996  0E06               	movlw	6
  2635   000998  5C0A               	subwf	_i^0,w,c
  2636   00099A  B0D8               	btfsc	status,0,c
  2637   00099C  EFD2  F004         	goto	u1011
  2638   0009A0  EFD4  F004         	goto	u1010
  2639   0009A4                     u1011:
  2640   0009A4  EFD6  F004         	goto	l1913
  2641   0009A8                     u1010:
  2642   0009A8                     
  2643                           ;dashboard.c: 64:             i++;
  2644   0009A8  4A0A               	infsnz	_i^0,f,c
  2645   0009AA  2A0B               	incf	(_i+1)^0,f,c
  2646   0009AC                     l1913:
  2647                           
  2648                           ;dashboard.c: 68:     if (key == 3 && i != 7) {
  2649   0009AC  0E03               	movlw	3
  2650   0009AE  180F               	xorwf	_key^0,w,c
  2651   0009B0  A4D8               	btfss	status,2,c
  2652   0009B2  EFDD  F004         	goto	u1021
  2653   0009B6  EFDF  F004         	goto	u1020
  2654   0009BA                     u1021:
  2655   0009BA  EFFA  F004         	goto	l1921
  2656   0009BE                     u1020:
  2657   0009BE  0E07               	movlw	7
  2658   0009C0  180A               	xorwf	_i^0,w,c
  2659   0009C2  100B               	iorwf	(_i+1)^0,w,c
  2660   0009C4  B4D8               	btfsc	status,2,c
  2661   0009C6  EFE7  F004         	goto	u1031
  2662   0009CA  EFE9  F004         	goto	u1030
  2663   0009CE                     u1031:
  2664   0009CE  EFFA  F004         	goto	l1921
  2665   0009D2                     u1030:
  2666   0009D2                     
  2667                           ;dashboard.c: 69:         if (i > 1) {
  2668   0009D2  BE0B               	btfsc	(_i+1)^0,7,c
  2669   0009D4  EFF5  F004         	goto	u1041
  2670   0009D8  500B               	movf	(_i+1)^0,w,c
  2671   0009DA  E109               	bnz	u1040
  2672   0009DC  0E02               	movlw	2
  2673   0009DE  5C0A               	subwf	_i^0,w,c
  2674   0009E0  A0D8               	btfss	status,0,c
  2675   0009E2  EFF5  F004         	goto	u1041
  2676   0009E6  EFF7  F004         	goto	u1040
  2677   0009EA                     u1041:
  2678   0009EA  EFFA  F004         	goto	l1921
  2679   0009EE                     u1040:
  2680   0009EE                     
  2681                           ;dashboard.c: 70:             i--;
  2682   0009EE  060A               	decf	_i^0,f,c
  2683   0009F0  A0D8               	btfss	status,0,c
  2684   0009F2  060B               	decf	(_i+1)^0,f,c
  2685   0009F4                     l1921:
  2686                           
  2687                           ;dashboard.c: 74:     if (key == 1) {
  2688   0009F4  040F               	decf	_key^0,w,c
  2689   0009F6  A4D8               	btfss	status,2,c
  2690   0009F8  EF00  F005         	goto	u1051
  2691   0009FC  EF02  F005         	goto	u1050
  2692   000A00                     u1051:
  2693   000A00  EF06  F005         	goto	l1925
  2694   000A04                     u1050:
  2695   000A04                     
  2696                           ;dashboard.c: 75:         i = 7;
  2697   000A04  0E00               	movlw	0
  2698   000A06  6E0B               	movwf	(_i+1)^0,c
  2699   000A08  0E07               	movlw	7
  2700   000A0A  6E0A               	movwf	_i^0,c
  2701   000A0C                     l1925:
  2702                           
  2703                           ;dashboard.c: 78:     if (i == 7 && key == 2) {
  2704   000A0C  0E07               	movlw	7
  2705   000A0E  180A               	xorwf	_i^0,w,c
  2706   000A10  100B               	iorwf	(_i+1)^0,w,c
  2707   000A12  A4D8               	btfss	status,2,c
  2708   000A14  EF0E  F005         	goto	u1061
  2709   000A18  EF10  F005         	goto	u1060
  2710   000A1C                     u1061:
  2711   000A1C  EF1D  F005         	goto	l1931
  2712   000A20                     u1060:
  2713   000A20  0E02               	movlw	2
  2714   000A22  180F               	xorwf	_key^0,w,c
  2715   000A24  A4D8               	btfss	status,2,c
  2716   000A26  EF17  F005         	goto	u1071
  2717   000A2A  EF19  F005         	goto	u1070
  2718   000A2E                     u1071:
  2719   000A2E  EF1D  F005         	goto	l1931
  2720   000A32                     u1070:
  2721   000A32                     
  2722                           ;dashboard.c: 79:         i = 2;
  2723   000A32  0E00               	movlw	0
  2724   000A34  6E0B               	movwf	(_i+1)^0,c
  2725   000A36  0E02               	movlw	2
  2726   000A38  6E0A               	movwf	_i^0,c
  2727   000A3A                     l1931:
  2728                           
  2729                           ;dashboard.c: 84:     if (adc_reg_val < 1000)
  2730   000A3A  0EE8               	movlw	232
  2731   000A3C  5C0C               	subwf	_adc_reg_val^0,w,c
  2732   000A3E  0E03               	movlw	3
  2733   000A40  580D               	subwfb	(_adc_reg_val+1)^0,w,c
  2734   000A42  B0D8               	btfsc	status,0,c
  2735   000A44  EF26  F005         	goto	u1081
  2736   000A48  EF28  F005         	goto	u1080
  2737   000A4C                     u1081:
  2738   000A4C  EF52  F005         	goto	l204
  2739   000A50                     u1080:
  2740   000A50                     
  2741                           ;dashboard.c: 85:     {;dashboard.c: 86:         clcd_putch(((adc_reg_val / 100) + 48), 
      +                          (0xC0 + (14)));
  2742   000A50  0ECE               	movlw	206
  2743   000A52  6E2C               	movwf	clcd_putch@addr^0,c
  2744   000A54  C00C  F01E         	movff	_adc_reg_val,___lwdiv@dividend
  2745   000A58  C00D  F01F         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  2746   000A5C  0E00               	movlw	0
  2747   000A5E  6E21               	movwf	(___lwdiv@divisor+1)^0,c
  2748   000A60  0E64               	movlw	100
  2749   000A62  6E20               	movwf	___lwdiv@divisor^0,c
  2750   000A64  ECE0  F007         	call	___lwdiv	;wreg free
  2751   000A68  501E               	movf	?___lwdiv^0,w,c
  2752   000A6A  0F30               	addlw	48
  2753   000A6C  EC74  F009         	call	_clcd_putch
  2754                           
  2755                           ;dashboard.c: 87:         clcd_putch(((adc_reg_val / 10 % 10) + 48), (0xC0 + (15)));
  2756   000A70  0ECF               	movlw	207
  2757   000A72  6E2C               	movwf	clcd_putch@addr^0,c
  2758   000A74  0E00               	movlw	0
  2759   000A76  6E21               	movwf	(___lwdiv@divisor+1)^0,c
  2760   000A78  0E0A               	movlw	10
  2761   000A7A  6E20               	movwf	___lwdiv@divisor^0,c
  2762   000A7C  C00C  F01E         	movff	_adc_reg_val,___lwdiv@dividend
  2763   000A80  C00D  F01F         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  2764   000A84  ECE0  F007         	call	___lwdiv	;wreg free
  2765   000A88  C01E  F025         	movff	?___lwdiv,___lwmod@dividend
  2766   000A8C  C01F  F026         	movff	?___lwdiv+1,___lwmod@dividend+1
  2767   000A90  0E00               	movlw	0
  2768   000A92  6E28               	movwf	(___lwmod@divisor+1)^0,c
  2769   000A94  0E0A               	movlw	10
  2770   000A96  6E27               	movwf	___lwmod@divisor^0,c
  2771   000A98  EC50  F008         	call	___lwmod	;wreg free
  2772   000A9C  5025               	movf	?___lwmod^0,w,c
  2773   000A9E  0F30               	addlw	48
  2774   000AA0  EC74  F009         	call	_clcd_putch
  2775   000AA4                     l204:
  2776                           
  2777                           ;dashboard.c: 91:     get_time();
  2778   000AA4  EC2B  F007         	call	_get_time	;wreg free
  2779   000AA8                     
  2780                           ;dashboard.c: 92:     display_time();
  2781   000AA8  ECB0  F009         	call	_display_time	;wreg free
  2782   000AAC  0012               	return		;funcret
  2783   000AAE                     __end_of_dashboard:
  2784                           	callstack 0
  2785                           
  2786 ;; *************** function _get_time *****************
  2787 ;; Defined at:
  2788 ;;		line 29 in file "dashboard.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2802 ;;      Params:         0       0       0       0       0       0       0
  2803 ;;      Locals:         0       0       0       0       0       0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0
  2805 ;;      Totals:         0       0       0       0       0       0       0
  2806 ;;Total ram usage:        0 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 5
  2809 ;; This function calls:
  2810 ;;		_read_ds1307
  2811 ;; This function is called by:
  2812 ;;		_dashboard
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text17
  2817   000E56                     __ptext17:
  2818                           	callstack 0
  2819   000E56                     _get_time:
  2820                           	callstack 24
  2821   000E56                     
  2822                           ;dashboard.c: 30:     clock_reg[0] = read_ds1307(0x02);
  2823   000E56  0E02               	movlw	2
  2824   000E58  EC31  F009         	call	_read_ds1307
  2825   000E5C  6E05               	movwf	_clock_reg^0,c
  2826                           
  2827                           ;dashboard.c: 31:     clock_reg[1] = read_ds1307(0x01);
  2828   000E5E  0E01               	movlw	1
  2829   000E60  EC31  F009         	call	_read_ds1307
  2830   000E64  6E06               	movwf	(_clock_reg+1)^0,c
  2831                           
  2832                           ;dashboard.c: 32:     clock_reg[2] = read_ds1307(0x00);
  2833   000E66  0E00               	movlw	0
  2834   000E68  EC31  F009         	call	_read_ds1307
  2835   000E6C  6E07               	movwf	(_clock_reg+2)^0,c
  2836   000E6E                     
  2837                           ;dashboard.c: 34:     if (clock_reg[0] & 0x40) {
  2838   000E6E  AC05               	btfss	_clock_reg^0,6,c
  2839   000E70  EF3C  F007         	goto	u201
  2840   000E74  EF3E  F007         	goto	u200
  2841   000E78                     u201:
  2842   000E78  EF49  F007         	goto	l1309
  2843   000E7C                     u200:
  2844   000E7C                     
  2845                           ;dashboard.c: 35:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  2846   000E7C  3805               	swapf	_clock_reg^0,w,c
  2847   000E7E  0B0F               	andlw	15
  2848   000E80  0B01               	andlw	1
  2849   000E82  0F30               	addlw	48
  2850   000E84  6E10               	movwf	_time^0,c
  2851                           
  2852                           ;dashboard.c: 36:         time[1] = '0' + (clock_reg[0] & 0x0F);
  2853   000E86  5005               	movf	_clock_reg^0,w,c
  2854   000E88  0B0F               	andlw	15
  2855   000E8A  0F30               	addlw	48
  2856   000E8C  6E11               	movwf	(_time+1)^0,c
  2857                           
  2858                           ;dashboard.c: 37:     } else {
  2859   000E8E  EF52  F007         	goto	l1311
  2860   000E92                     l1309:
  2861                           
  2862                           ;dashboard.c: 38:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  2863   000E92  3805               	swapf	_clock_reg^0,w,c
  2864   000E94  0B0F               	andlw	15
  2865   000E96  0B03               	andlw	3
  2866   000E98  0F30               	addlw	48
  2867   000E9A  6E10               	movwf	_time^0,c
  2868                           
  2869                           ;dashboard.c: 39:         time[1] = '0' + (clock_reg[0] & 0x0F);
  2870   000E9C  5005               	movf	_clock_reg^0,w,c
  2871   000E9E  0B0F               	andlw	15
  2872   000EA0  0F30               	addlw	48
  2873   000EA2  6E11               	movwf	(_time+1)^0,c
  2874   000EA4                     l1311:
  2875                           
  2876                           ;dashboard.c: 41:     time[2] = ':';
  2877   000EA4  0E3A               	movlw	58
  2878   000EA6  6E12               	movwf	(_time+2)^0,c
  2879   000EA8                     
  2880                           ;dashboard.c: 42:     time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  2881   000EA8  3806               	swapf	(_clock_reg+1)^0,w,c
  2882   000EAA  0B0F               	andlw	15
  2883   000EAC  0B0F               	andlw	15
  2884   000EAE  0F30               	addlw	48
  2885   000EB0  6E13               	movwf	(_time+3)^0,c
  2886   000EB2                     
  2887                           ;dashboard.c: 43:     time[4] = '0' + (clock_reg[1] & 0x0F);
  2888   000EB2  5006               	movf	(_clock_reg+1)^0,w,c
  2889   000EB4  0B0F               	andlw	15
  2890   000EB6  0F30               	addlw	48
  2891   000EB8  6E14               	movwf	(_time+4)^0,c
  2892   000EBA                     
  2893                           ;dashboard.c: 44:     time[5] = ':';
  2894   000EBA  0E3A               	movlw	58
  2895   000EBC  6E15               	movwf	(_time+5)^0,c
  2896                           
  2897                           ;dashboard.c: 45:     time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  2898   000EBE  3807               	swapf	(_clock_reg+2)^0,w,c
  2899   000EC0  0B0F               	andlw	15
  2900   000EC2  0B0F               	andlw	15
  2901   000EC4  0F30               	addlw	48
  2902   000EC6  6E16               	movwf	(_time+6)^0,c
  2903                           
  2904                           ;dashboard.c: 46:     time[7] = '0' + (clock_reg[2] & 0x0F);
  2905   000EC8  5007               	movf	(_clock_reg+2)^0,w,c
  2906   000ECA  0B0F               	andlw	15
  2907   000ECC  0F30               	addlw	48
  2908   000ECE  6E17               	movwf	(_time+7)^0,c
  2909   000ED0                     
  2910                           ;dashboard.c: 47:     time[8] = '\0';
  2911   000ED0  0E00               	movlw	0
  2912   000ED2  6E18               	movwf	(_time+8)^0,c
  2913   000ED4  0012               	return		;funcret
  2914   000ED6                     __end_of_get_time:
  2915                           	callstack 0
  2916                           
  2917 ;; *************** function _read_ds1307 *****************
  2918 ;; Defined at:
  2919 ;;		line 55 in file "ds1307.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  address         1    wreg     unsigned char 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  address         1    1[COMRAM] unsigned char 
  2924 ;;  data            1    2[COMRAM] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      unsigned char 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2934 ;;      Params:         0       0       0       0       0       0       0
  2935 ;;      Locals:         2       0       0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0
  2937 ;;      Totals:         2       0       0       0       0       0       0
  2938 ;;Total ram usage:        2 bytes
  2939 ;; Hardware stack levels used: 1
  2940 ;; Hardware stack levels required when called: 4
  2941 ;; This function calls:
  2942 ;;		_i2c_read
  2943 ;;		_i2c_rep_start
  2944 ;;		_i2c_start
  2945 ;;		_i2c_stop
  2946 ;;		_i2c_write
  2947 ;; This function is called by:
  2948 ;;		_get_time
  2949 ;;		_init_ds1307
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text18
  2954   001262                     __ptext18:
  2955                           	callstack 0
  2956   001262                     _read_ds1307:
  2957                           	callstack 24
  2958                           
  2959                           ;incstack = 0
  2960                           ;read_ds1307@address stored from wreg
  2961   001262  6E1F               	movwf	read_ds1307@address^0,c
  2962   001264                     
  2963                           ;ds1307.c: 55: unsigned char read_ds1307(unsigned char address);ds1307.c: 56: {;ds1307.c
      +                          : 57:  unsigned char data;;ds1307.c: 59:  i2c_start();
  2964   001264  ECC8  F009         	call	_i2c_start	;wreg free
  2965   001268                     
  2966                           ;ds1307.c: 60:  i2c_write(0xD0);
  2967   001268  0ED0               	movlw	208
  2968   00126A  ECB8  F009         	call	_i2c_write
  2969   00126E                     
  2970                           ;ds1307.c: 61:  i2c_write(address);
  2971   00126E  501F               	movf	read_ds1307@address^0,w,c
  2972   001270  ECB8  F009         	call	_i2c_write
  2973   001274                     
  2974                           ;ds1307.c: 62:  i2c_rep_start();
  2975   001274  ECCC  F009         	call	_i2c_rep_start	;wreg free
  2976   001278                     
  2977                           ;ds1307.c: 63:  i2c_write(0xD1);
  2978   001278  0ED1               	movlw	209
  2979   00127A  ECB8  F009         	call	_i2c_write
  2980                           
  2981                           ;ds1307.c: 64:  data = i2c_read();
  2982   00127E  ECBE  F009         	call	_i2c_read	;wreg free
  2983   001282  6E20               	movwf	read_ds1307@data^0,c
  2984   001284                     
  2985                           ;ds1307.c: 65:  i2c_stop();
  2986   001284  ECC4  F009         	call	_i2c_stop	;wreg free
  2987                           
  2988                           ;ds1307.c: 67:  return data;
  2989   001288  5020               	movf	read_ds1307@data^0,w,c
  2990   00128A  0012               	return		;funcret
  2991   00128C                     __end_of_read_ds1307:
  2992                           	callstack 0
  2993                           
  2994 ;; *************** function _i2c_write *****************
  2995 ;; Defined at:
  2996 ;;		line 55 in file "i2c.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  data            1    wreg     unsigned char 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;  data            1    0[COMRAM] unsigned char 
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3010 ;;      Params:         0       0       0       0       0       0       0
  3011 ;;      Locals:         1       0       0       0       0       0       0
  3012 ;;      Temps:          0       0       0       0       0       0       0
  3013 ;;      Totals:         1       0       0       0       0       0       0
  3014 ;;Total ram usage:        1 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 2
  3017 ;; This function calls:
  3018 ;;		_i2c_idle
  3019 ;; This function is called by:
  3020 ;;		_write_ds1307
  3021 ;;		_read_ds1307
  3022 ;;		_write_external_eeprom
  3023 ;;		_read_external_eeprom
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text19
  3028   001370                     __ptext19:
  3029                           	callstack 0
  3030   001370                     _i2c_write:
  3031                           	callstack 25
  3032                           
  3033                           ;incstack = 0
  3034                           ;i2c_write@data stored from wreg
  3035   001370  6E1E               	movwf	i2c_write@data^0,c
  3036   001372                     
  3037                           ;i2c.c: 55: void i2c_write(unsigned char data);i2c.c: 56: {;i2c.c: 57:  SSPBUF = data;
  3038   001372  C01E  FFC9         	movff	i2c_write@data,4041	;volatile
  3039   001376                     
  3040                           ;i2c.c: 58:  i2c_idle();
  3041   001376  EC9F  F009         	call	_i2c_idle	;wreg free
  3042   00137A  0012               	return		;funcret
  3043   00137C                     __end_of_i2c_write:
  3044                           	callstack 0
  3045                           
  3046 ;; *************** function _i2c_stop *****************
  3047 ;; Defined at:
  3048 ;;		line 43 in file "i2c.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;		None
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3062 ;;      Params:         0       0       0       0       0       0       0
  3063 ;;      Locals:         0       0       0       0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0
  3065 ;;      Totals:         0       0       0       0       0       0       0
  3066 ;;Total ram usage:        0 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 2
  3069 ;; This function calls:
  3070 ;;		_i2c_idle
  3071 ;; This function is called by:
  3072 ;;		_write_ds1307
  3073 ;;		_read_ds1307
  3074 ;;		_write_external_eeprom
  3075 ;;		_read_external_eeprom
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text20
  3080   001388                     __ptext20:
  3081                           	callstack 0
  3082   001388                     _i2c_stop:
  3083                           	callstack 25
  3084   001388                     
  3085                           ;i2c.c: 45:  PEN = 1;
  3086   001388  84C5               	bsf	4037,2,c	;volatile
  3087   00138A                     
  3088                           ;i2c.c: 46:  i2c_idle();
  3089   00138A  EC9F  F009         	call	_i2c_idle	;wreg free
  3090   00138E  0012               	return		;funcret
  3091   001390                     __end_of_i2c_stop:
  3092                           	callstack 0
  3093                           
  3094 ;; *************** function _i2c_start *****************
  3095 ;; Defined at:
  3096 ;;		line 37 in file "i2c.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3110 ;;      Params:         0       0       0       0       0       0       0
  3111 ;;      Locals:         0       0       0       0       0       0       0
  3112 ;;      Temps:          0       0       0       0       0       0       0
  3113 ;;      Totals:         0       0       0       0       0       0       0
  3114 ;;Total ram usage:        0 bytes
  3115 ;; Hardware stack levels used: 1
  3116 ;; Hardware stack levels required when called: 2
  3117 ;; This function calls:
  3118 ;;		_i2c_idle
  3119 ;; This function is called by:
  3120 ;;		_write_ds1307
  3121 ;;		_read_ds1307
  3122 ;;		_write_external_eeprom
  3123 ;;		_read_external_eeprom
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           	psect	text21
  3128   001390                     __ptext21:
  3129                           	callstack 0
  3130   001390                     _i2c_start:
  3131                           	callstack 25
  3132   001390                     
  3133                           ;i2c.c: 39:  SEN = 1;
  3134   001390  80C5               	bsf	4037,0,c	;volatile
  3135   001392                     
  3136                           ;i2c.c: 40:  i2c_idle();
  3137   001392  EC9F  F009         	call	_i2c_idle	;wreg free
  3138   001396  0012               	return		;funcret
  3139   001398                     __end_of_i2c_start:
  3140                           	callstack 0
  3141                           
  3142 ;; *************** function _i2c_rep_start *****************
  3143 ;; Defined at:
  3144 ;;		line 49 in file "i2c.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;		None
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;		None
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3158 ;;      Params:         0       0       0       0       0       0       0
  3159 ;;      Locals:         0       0       0       0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0
  3161 ;;      Totals:         0       0       0       0       0       0       0
  3162 ;;Total ram usage:        0 bytes
  3163 ;; Hardware stack levels used: 1
  3164 ;; Hardware stack levels required when called: 2
  3165 ;; This function calls:
  3166 ;;		_i2c_idle
  3167 ;; This function is called by:
  3168 ;;		_read_ds1307
  3169 ;;		_read_external_eeprom
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text22
  3174   001398                     __ptext22:
  3175                           	callstack 0
  3176   001398                     _i2c_rep_start:
  3177                           	callstack 25
  3178   001398                     
  3179                           ;i2c.c: 51:  RSEN = 1;
  3180   001398  82C5               	bsf	4037,1,c	;volatile
  3181   00139A                     
  3182                           ;i2c.c: 52:  i2c_idle();
  3183   00139A  EC9F  F009         	call	_i2c_idle	;wreg free
  3184   00139E  0012               	return		;funcret
  3185   0013A0                     __end_of_i2c_rep_start:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function _i2c_read *****************
  3189 ;; Defined at:
  3190 ;;		line 73 in file "i2c.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      unsigned char 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3204 ;;      Params:         0       0       0       0       0       0       0
  3205 ;;      Locals:         0       0       0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0
  3207 ;;      Totals:         0       0       0       0       0       0       0
  3208 ;;Total ram usage:        0 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; Hardware stack levels required when called: 3
  3211 ;; This function calls:
  3212 ;;		_i2c_no_ack
  3213 ;;		_i2c_rx_mode
  3214 ;; This function is called by:
  3215 ;;		_read_ds1307
  3216 ;;		_read_external_eeprom
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text23
  3221   00137C                     __ptext23:
  3222                           	callstack 0
  3223   00137C                     _i2c_read:
  3224                           	callstack 24
  3225   00137C                     
  3226                           ;i2c.c: 75:  i2c_rx_mode();
  3227   00137C  ECD0  F009         	call	_i2c_rx_mode	;wreg free
  3228                           
  3229                           ;i2c.c: 76:  i2c_no_ack();
  3230   001380  ECD4  F009         	call	_i2c_no_ack	;wreg free
  3231   001384                     
  3232                           ;i2c.c: 78:  return SSPBUF;
  3233   001384  50C9               	movf	201,w,c	;volatile
  3234   001386  0012               	return		;funcret
  3235   001388                     __end_of_i2c_read:
  3236                           	callstack 0
  3237                           
  3238 ;; *************** function _i2c_rx_mode *****************
  3239 ;; Defined at:
  3240 ;;		line 61 in file "i2c.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;		None
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3254 ;;      Params:         0       0       0       0       0       0       0
  3255 ;;      Locals:         0       0       0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0       0       0
  3257 ;;      Totals:         0       0       0       0       0       0       0
  3258 ;;Total ram usage:        0 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; Hardware stack levels required when called: 2
  3261 ;; This function calls:
  3262 ;;		_i2c_idle
  3263 ;; This function is called by:
  3264 ;;		_i2c_read
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           	psect	text24
  3269   0013A0                     __ptext24:
  3270                           	callstack 0
  3271   0013A0                     _i2c_rx_mode:
  3272                           	callstack 24
  3273   0013A0                     
  3274                           ;i2c.c: 63:  RCEN = 1;
  3275   0013A0  86C5               	bsf	4037,3,c	;volatile
  3276   0013A2                     
  3277                           ;i2c.c: 64:  i2c_idle();
  3278   0013A2  EC9F  F009         	call	_i2c_idle	;wreg free
  3279   0013A6  0012               	return		;funcret
  3280   0013A8                     __end_of_i2c_rx_mode:
  3281                           	callstack 0
  3282                           
  3283 ;; *************** function _i2c_idle *****************
  3284 ;; Defined at:
  3285 ;;		line 23 in file "i2c.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		None
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3299 ;;      Params:         0       0       0       0       0       0       0
  3300 ;;      Locals:         0       0       0       0       0       0       0
  3301 ;;      Temps:          0       0       0       0       0       0       0
  3302 ;;      Totals:         0       0       0       0       0       0       0
  3303 ;;Total ram usage:        0 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; Hardware stack levels required when called: 1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_i2c_start
  3310 ;;		_i2c_stop
  3311 ;;		_i2c_rep_start
  3312 ;;		_i2c_write
  3313 ;;		_i2c_rx_mode
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text25
  3318   00133E                     __ptext25:
  3319                           	callstack 0
  3320   00133E                     _i2c_idle:
  3321                           	callstack 25
  3322   00133E                     l312:
  3323   00133E  A69E               	btfss	3998,3,c	;volatile
  3324   001340  EFA4  F009         	goto	u11
  3325   001344  EFA6  F009         	goto	u10
  3326   001348                     u11:
  3327   001348  EF9F  F009         	goto	l312
  3328   00134C                     u10:
  3329   00134C                     
  3330                           ;i2c.c: 26:  SSPIF = 0;
  3331   00134C  969E               	bcf	3998,3,c	;volatile
  3332   00134E  0012               	return		;funcret
  3333   001350                     __end_of_i2c_idle:
  3334                           	callstack 0
  3335                           
  3336 ;; *************** function _i2c_no_ack *****************
  3337 ;; Defined at:
  3338 ;;		line 67 in file "i2c.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		None
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3352 ;;      Params:         0       0       0       0       0       0       0
  3353 ;;      Locals:         0       0       0       0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0       0       0
  3355 ;;      Totals:         0       0       0       0       0       0       0
  3356 ;;Total ram usage:        0 bytes
  3357 ;; Hardware stack levels used: 1
  3358 ;; Hardware stack levels required when called: 1
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_i2c_read
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text26
  3367   0013A8                     __ptext26:
  3368                           	callstack 0
  3369   0013A8                     _i2c_no_ack:
  3370                           	callstack 25
  3371   0013A8                     
  3372                           ;i2c.c: 69:  ACKDT = 1;
  3373   0013A8  8AC5               	bsf	4037,5,c	;volatile
  3374                           
  3375                           ;i2c.c: 70:  ACKEN = 1;
  3376   0013AA  88C5               	bsf	4037,4,c	;volatile
  3377   0013AC  0012               	return		;funcret
  3378   0013AE                     __end_of_i2c_no_ack:
  3379                           	callstack 0
  3380                           
  3381 ;; *************** function _display_time *****************
  3382 ;; Defined at:
  3383 ;;		line 25 in file "dashboard.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3397 ;;      Params:         0       0       0       0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0       0       0
  3400 ;;      Totals:         0       0       0       0       0       0       0
  3401 ;;Total ram usage:        0 bytes
  3402 ;; Hardware stack levels used: 1
  3403 ;; Hardware stack levels required when called: 3
  3404 ;; This function calls:
  3405 ;;		_clcd_print
  3406 ;; This function is called by:
  3407 ;;		_dashboard
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text27
  3412   001360                     __ptext27:
  3413                           	callstack 0
  3414   001360                     _display_time:
  3415                           	callstack 26
  3416   001360                     
  3417                           ;dashboard.c: 26:     clcd_print(time, (0xC0 + (0)));
  3418   001360  0E10               	movlw	low _time
  3419   001362  6E20               	movwf	clcd_print@data^0,c
  3420   001364  6A21               	clrf	(clcd_print@data+1)^0,c
  3421   001366  0EC0               	movlw	192
  3422   001368  6E22               	movwf	clcd_print@addr^0,c
  3423   00136A  EC1A  F008         	call	_clcd_print	;wreg free
  3424   00136E  0012               	return		;funcret
  3425   001370                     __end_of_display_time:
  3426                           	callstack 0
  3427                           
  3428 ;; *************** function _clcd_print *****************
  3429 ;; Defined at:
  3430 ;;		line 59 in file "clcd.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  data            2    2[COMRAM] PTR const unsigned char 
  3433 ;;		 -> STR_15(15), STR_14(17), STR_13(16), STR_12(19), 
  3434 ;;		 -> STR_11(16), STR_10(17), STR_9(3), STR_8(3), 
  3435 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
  3436 ;;		 -> STR_3(3), STR_2(3), STR_1(17), time(9), 
  3437 ;;  addr            1    4[COMRAM] unsigned char 
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;		None
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  1    wreg      void 
  3442 ;; Registers used:
  3443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3449 ;;      Params:         3       0       0       0       0       0       0
  3450 ;;      Locals:         0       0       0       0       0       0       0
  3451 ;;      Temps:          0       0       0       0       0       0       0
  3452 ;;      Totals:         3       0       0       0       0       0       0
  3453 ;;Total ram usage:        3 bytes
  3454 ;; Hardware stack levels used: 1
  3455 ;; Hardware stack levels required when called: 2
  3456 ;; This function calls:
  3457 ;;		_clcd_write
  3458 ;; This function is called by:
  3459 ;;		_display_time
  3460 ;;		_dashboard
  3461 ;;		_password
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text28
  3466   001034                     __ptext28:
  3467                           	callstack 0
  3468   001034                     _clcd_print:
  3469                           	callstack 27
  3470   001034                     
  3471                           ;clcd.c: 59: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 60: 
      +                          {;clcd.c: 61:  clcd_write(addr, 0);
  3472   001034  0E00               	movlw	0
  3473   001036  6E1E               	movwf	clcd_write@control_bit^0,c
  3474   001038  5022               	movf	clcd_print@addr^0,w,c
  3475   00103A  EC14  F009         	call	_clcd_write
  3476                           
  3477                           ;clcd.c: 62:  while (*data != '\0')
  3478   00103E  EF37  F008         	goto	l1689
  3479   001042                     l1685:
  3480                           
  3481                           ;clcd.c: 63:  {;clcd.c: 64:   clcd_write(*data++, 1);
  3482   001042  0E01               	movlw	1
  3483   001044  6E1E               	movwf	clcd_write@control_bit^0,c
  3484   001046  C020  FFF6         	movff	clcd_print@data,tblptrl
  3485   00104A  C021  FFF7         	movff	clcd_print@data+1,tblptrh
  3486   00104E  6AF8               	clrf	tblptru,c
  3487   001050  0E05               	movlw	(high __ramtop+-1)
  3488   001052  64F7               	cpfsgt	tblptrh,c
  3489   001054  D003               	bra	u757
  3490   001056  0008               	tblrd		*
  3491   001058  50F5               	movf	tablat,w,c
  3492   00105A  D005               	bra	u750
  3493   00105C                     u757:
  3494   00105C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3495   001060  CFF7 FFEA          	movff	tblptrh,fsr0h
  3496   001064  50EF               	movf	indf0,w,c
  3497   001066                     u750:
  3498   001066  EC14  F009         	call	_clcd_write
  3499   00106A  4A20               	infsnz	clcd_print@data^0,f,c
  3500   00106C  2A21               	incf	(clcd_print@data+1)^0,f,c
  3501   00106E                     l1689:
  3502                           
  3503                           ;clcd.c: 62:  while (*data != '\0')
  3504   00106E  C020  FFF6         	movff	clcd_print@data,tblptrl
  3505   001072  C021  FFF7         	movff	clcd_print@data+1,tblptrh
  3506   001076  6AF8               	clrf	tblptru,c
  3507   001078  0E05               	movlw	(high __ramtop+-1)
  3508   00107A  64F7               	cpfsgt	tblptrh,c
  3509   00107C  D003               	bra	u767
  3510   00107E  0008               	tblrd		*
  3511   001080  50F5               	movf	tablat,w,c
  3512   001082  D005               	bra	u760
  3513   001084                     u767:
  3514   001084  CFF6 FFE9          	movff	tblptrl,fsr0l
  3515   001088  CFF7 FFEA          	movff	tblptrh,fsr0h
  3516   00108C  50EF               	movf	indf0,w,c
  3517   00108E                     u760:
  3518   00108E  0900               	iorlw	0
  3519   001090  A4D8               	btfss	status,2,c
  3520   001092  EF4D  F008         	goto	u771
  3521   001096  EF4F  F008         	goto	u770
  3522   00109A                     u771:
  3523   00109A  EF21  F008         	goto	l1685
  3524   00109E                     u770:
  3525   00109E  0012               	return		;funcret
  3526   0010A0                     __end_of_clcd_print:
  3527                           	callstack 0
  3528                           
  3529 ;; *************** function _clcd_putch *****************
  3530 ;; Defined at:
  3531 ;;		line 68 in file "clcd.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  data            1    wreg     const unsigned char 
  3534 ;;  addr            1   14[COMRAM] unsigned char 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  data            1   15[COMRAM] const unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3546 ;;      Params:         1       0       0       0       0       0       0
  3547 ;;      Locals:         1       0       0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0
  3549 ;;      Totals:         2       0       0       0       0       0       0
  3550 ;;Total ram usage:        2 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 2
  3553 ;; This function calls:
  3554 ;;		_clcd_write
  3555 ;; This function is called by:
  3556 ;;		_dashboard
  3557 ;;		_password
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text29
  3562   0012E8                     __ptext29:
  3563                           	callstack 0
  3564   0012E8                     _clcd_putch:
  3565                           	callstack 27
  3566                           
  3567                           ;incstack = 0
  3568                           ;clcd_putch@data stored from wreg
  3569   0012E8  6E2D               	movwf	clcd_putch@data^0,c
  3570   0012EA                     
  3571                           ;clcd.c: 68: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 69: {
      +                          ;clcd.c: 70:  clcd_write(addr, 0);
  3572   0012EA  0E00               	movlw	0
  3573   0012EC  6E1E               	movwf	clcd_write@control_bit^0,c
  3574   0012EE  502C               	movf	clcd_putch@addr^0,w,c
  3575   0012F0  EC14  F009         	call	_clcd_write
  3576                           
  3577                           ;clcd.c: 71:  clcd_write(data, 1);
  3578   0012F4  0E01               	movlw	1
  3579   0012F6  6E1E               	movwf	clcd_write@control_bit^0,c
  3580   0012F8  502D               	movf	clcd_putch@data^0,w,c
  3581   0012FA  EC14  F009         	call	_clcd_write
  3582   0012FE  0012               	return		;funcret
  3583   001300                     __end_of_clcd_putch:
  3584                           	callstack 0
  3585                           
  3586 ;; *************** function _clcd_write *****************
  3587 ;; Defined at:
  3588 ;;		line 5 in file "clcd.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  byte            1    wreg     unsigned char 
  3591 ;;  control_bit     1    0[COMRAM] unsigned char 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  byte            1    1[COMRAM] unsigned char 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3603 ;;      Params:         1       0       0       0       0       0       0
  3604 ;;      Locals:         1       0       0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0
  3606 ;;      Totals:         2       0       0       0       0       0       0
  3607 ;;Total ram usage:        2 bytes
  3608 ;; Hardware stack levels used: 1
  3609 ;; Hardware stack levels required when called: 1
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_init_clcd
  3614 ;;		_clcd_print
  3615 ;;		_clcd_putch
  3616 ;;		_main
  3617 ;;		_password
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text30
  3622   001228                     __ptext30:
  3623                           	callstack 0
  3624   001228                     _clcd_write:
  3625                           	callstack 28
  3626                           
  3627                           ;incstack = 0
  3628                           ;clcd_write@byte stored from wreg
  3629   001228  6E1F               	movwf	clcd_write@byte^0,c
  3630   00122A                     
  3631                           ;clcd.c: 5: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 6: {;
      +                          clcd.c: 7:  RC1 = control_bit;
  3632   00122A  B01E               	btfsc	clcd_write@control_bit^0,0,c
  3633   00122C  EF1A  F009         	goto	u721
  3634   001230  EF1D  F009         	goto	u720
  3635   001234                     u721:
  3636   001234  8282               	bsf	3970,1,c	;volatile
  3637   001236  EF1E  F009         	goto	u735
  3638   00123A                     u720:
  3639   00123A  9282               	bcf	3970,1,c	;volatile
  3640   00123C                     u735:
  3641   00123C                     
  3642                           ;clcd.c: 8:  PORTD = byte;
  3643   00123C  C01F  FF83         	movff	clcd_write@byte,3971	;volatile
  3644   001240                     
  3645                           ;clcd.c: 11:  RC2 = 1;
  3646   001240  8482               	bsf	3970,2,c	;volatile
  3647   001242                     
  3648                           ;clcd.c: 12:  RC2 = 0;
  3649   001242  9482               	bcf	3970,2,c	;volatile
  3650   001244                     
  3651                           ;clcd.c: 14:  TRISD7 = 0xFF;
  3652   001244  8E95               	bsf	3989,7,c	;volatile
  3653   001246                     
  3654                           ;clcd.c: 15:  RC0 = 1;
  3655   001246  8082               	bsf	3970,0,c	;volatile
  3656   001248                     
  3657                           ;clcd.c: 16:  RC1 = 0;
  3658   001248  9282               	bcf	3970,1,c	;volatile
  3659   00124A                     l1677:
  3660                           
  3661                           ;clcd.c: 19:  {;clcd.c: 20:   RC2 = 1;
  3662   00124A  8482               	bsf	3970,2,c	;volatile
  3663   00124C                     
  3664                           ;clcd.c: 21:   RC2 = 0;
  3665   00124C  9482               	bcf	3970,2,c	;volatile
  3666   00124E                     
  3667                           ;clcd.c: 22:  } while (RD7);
  3668   00124E  BE83               	btfsc	3971,7,c	;volatile
  3669   001250  EF2C  F009         	goto	u741
  3670   001254  EF2E  F009         	goto	u740
  3671   001258                     u741:
  3672   001258  EF25  F009         	goto	l1677
  3673   00125C                     u740:
  3674   00125C                     
  3675                           ;clcd.c: 24:  RC0 = 0;
  3676   00125C  9082               	bcf	3970,0,c	;volatile
  3677                           
  3678                           ;clcd.c: 25:  TRISD7 = 0x00;
  3679   00125E  9E95               	bcf	3989,7,c	;volatile
  3680   001260  0012               	return		;funcret
  3681   001262                     __end_of_clcd_write:
  3682                           	callstack 0
  3683                           
  3684 ;; *************** function ___lwmod *****************
  3685 ;; Defined at:
  3686 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;  dividend        2    7[COMRAM] unsigned int 
  3689 ;;  divisor         2    9[COMRAM] unsigned int 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;  counter         1   11[COMRAM] unsigned char 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  2    7[COMRAM] unsigned int 
  3694 ;; Registers used:
  3695 ;;		wreg, status,2, status,0
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3701 ;;      Params:         4       0       0       0       0       0       0
  3702 ;;      Locals:         1       0       0       0       0       0       0
  3703 ;;      Temps:          0       0       0       0       0       0       0
  3704 ;;      Totals:         5       0       0       0       0       0       0
  3705 ;;Total ram usage:        5 bytes
  3706 ;; Hardware stack levels used: 1
  3707 ;; Hardware stack levels required when called: 1
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		_dashboard
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text31
  3716   0010A0                     __ptext31:
  3717                           	callstack 0
  3718   0010A0                     ___lwmod:
  3719                           	callstack 28
  3720   0010A0  5027               	movf	___lwmod@divisor^0,w,c
  3721   0010A2  1028               	iorwf	(___lwmod@divisor+1)^0,w,c
  3722   0010A4  B4D8               	btfsc	status,2,c
  3723   0010A6  EF57  F008         	goto	u951
  3724   0010AA  EF59  F008         	goto	u950
  3725   0010AE                     u951:
  3726   0010AE  EF7D  F008         	goto	l895
  3727   0010B2                     u950:
  3728   0010B2  0E01               	movlw	1
  3729   0010B4  6E29               	movwf	___lwmod@counter^0,c
  3730   0010B6  EF61  F008         	goto	l1869
  3731   0010BA                     l1867:
  3732   0010BA  90D8               	bcf	status,0,c
  3733   0010BC  3627               	rlcf	___lwmod@divisor^0,f,c
  3734   0010BE  3628               	rlcf	(___lwmod@divisor+1)^0,f,c
  3735   0010C0  2A29               	incf	___lwmod@counter^0,f,c
  3736   0010C2                     l1869:
  3737   0010C2  AE28               	btfss	(___lwmod@divisor+1)^0,7,c
  3738   0010C4  EF66  F008         	goto	u961
  3739   0010C8  EF68  F008         	goto	u960
  3740   0010CC                     u961:
  3741   0010CC  EF5D  F008         	goto	l1867
  3742   0010D0                     u960:
  3743   0010D0                     l1871:
  3744   0010D0  5027               	movf	___lwmod@divisor^0,w,c
  3745   0010D2  5C25               	subwf	___lwmod@dividend^0,w,c
  3746   0010D4  5028               	movf	(___lwmod@divisor+1)^0,w,c
  3747   0010D6  5826               	subwfb	(___lwmod@dividend+1)^0,w,c
  3748   0010D8  A0D8               	btfss	status,0,c
  3749   0010DA  EF71  F008         	goto	u971
  3750   0010DE  EF73  F008         	goto	u970
  3751   0010E2                     u971:
  3752   0010E2  EF77  F008         	goto	l1875
  3753   0010E6                     u970:
  3754   0010E6  5027               	movf	___lwmod@divisor^0,w,c
  3755   0010E8  5E25               	subwf	___lwmod@dividend^0,f,c
  3756   0010EA  5028               	movf	(___lwmod@divisor+1)^0,w,c
  3757   0010EC  5A26               	subwfb	(___lwmod@dividend+1)^0,f,c
  3758   0010EE                     l1875:
  3759   0010EE  90D8               	bcf	status,0,c
  3760   0010F0  3228               	rrcf	(___lwmod@divisor+1)^0,f,c
  3761   0010F2  3227               	rrcf	___lwmod@divisor^0,f,c
  3762   0010F4  2E29               	decfsz	___lwmod@counter^0,f,c
  3763   0010F6  EF68  F008         	goto	l1871
  3764   0010FA                     l895:
  3765   0010FA  C025  F025         	movff	___lwmod@dividend,?___lwmod
  3766   0010FE  C026  F026         	movff	___lwmod@dividend+1,?___lwmod+1
  3767   001102  0012               	return		;funcret
  3768   001104                     __end_of___lwmod:
  3769                           	callstack 0
  3770                           
  3771 ;; *************** function ___lwdiv *****************
  3772 ;; Defined at:
  3773 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  dividend        2    0[COMRAM] unsigned int 
  3776 ;;  divisor         2    2[COMRAM] unsigned int 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  quotient        2    4[COMRAM] unsigned int 
  3779 ;;  counter         1    6[COMRAM] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  2    0[COMRAM] unsigned int 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3789 ;;      Params:         4       0       0       0       0       0       0
  3790 ;;      Locals:         3       0       0       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0
  3792 ;;      Totals:         7       0       0       0       0       0       0
  3793 ;;Total ram usage:        7 bytes
  3794 ;; Hardware stack levels used: 1
  3795 ;; Hardware stack levels required when called: 1
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_dashboard
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text32
  3804   000FC0                     __ptext32:
  3805                           	callstack 0
  3806   000FC0                     ___lwdiv:
  3807                           	callstack 28
  3808   000FC0  0E00               	movlw	0
  3809   000FC2  6E23               	movwf	(___lwdiv@quotient+1)^0,c
  3810   000FC4  0E00               	movlw	0
  3811   000FC6  6E22               	movwf	___lwdiv@quotient^0,c
  3812   000FC8  5020               	movf	___lwdiv@divisor^0,w,c
  3813   000FCA  1021               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3814   000FCC  B4D8               	btfsc	status,2,c
  3815   000FCE  EFEB  F007         	goto	u921
  3816   000FD2  EFED  F007         	goto	u920
  3817   000FD6                     u921:
  3818   000FD6  EF15  F008         	goto	l885
  3819   000FDA                     u920:
  3820   000FDA  0E01               	movlw	1
  3821   000FDC  6E24               	movwf	___lwdiv@counter^0,c
  3822   000FDE  EFF5  F007         	goto	l1849
  3823   000FE2                     l1847:
  3824   000FE2  90D8               	bcf	status,0,c
  3825   000FE4  3620               	rlcf	___lwdiv@divisor^0,f,c
  3826   000FE6  3621               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3827   000FE8  2A24               	incf	___lwdiv@counter^0,f,c
  3828   000FEA                     l1849:
  3829   000FEA  AE21               	btfss	(___lwdiv@divisor+1)^0,7,c
  3830   000FEC  EFFA  F007         	goto	u931
  3831   000FF0  EFFC  F007         	goto	u930
  3832   000FF4                     u931:
  3833   000FF4  EFF1  F007         	goto	l1847
  3834   000FF8                     u930:
  3835   000FF8                     l1851:
  3836   000FF8  90D8               	bcf	status,0,c
  3837   000FFA  3622               	rlcf	___lwdiv@quotient^0,f,c
  3838   000FFC  3623               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3839   000FFE  5020               	movf	___lwdiv@divisor^0,w,c
  3840   001000  5C1E               	subwf	___lwdiv@dividend^0,w,c
  3841   001002  5021               	movf	(___lwdiv@divisor+1)^0,w,c
  3842   001004  581F               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3843   001006  A0D8               	btfss	status,0,c
  3844   001008  EF08  F008         	goto	u941
  3845   00100C  EF0A  F008         	goto	u940
  3846   001010                     u941:
  3847   001010  EF0F  F008         	goto	l1859
  3848   001014                     u940:
  3849   001014  5020               	movf	___lwdiv@divisor^0,w,c
  3850   001016  5E1E               	subwf	___lwdiv@dividend^0,f,c
  3851   001018  5021               	movf	(___lwdiv@divisor+1)^0,w,c
  3852   00101A  5A1F               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3853   00101C  8022               	bsf	___lwdiv@quotient^0,0,c
  3854   00101E                     l1859:
  3855   00101E  90D8               	bcf	status,0,c
  3856   001020  3221               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3857   001022  3220               	rrcf	___lwdiv@divisor^0,f,c
  3858   001024  2E24               	decfsz	___lwdiv@counter^0,f,c
  3859   001026  EFFC  F007         	goto	l1851
  3860   00102A                     l885:
  3861   00102A  C022  F01E         	movff	___lwdiv@quotient,?___lwdiv
  3862   00102E  C023  F01F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3863   001032  0012               	return		;funcret
  3864   001034                     __end_of___lwdiv:
  3865                           	callstack 0
  3866                           
  3867 ;; *************** function _isr *****************
  3868 ;; Defined at:
  3869 ;;		line 6 in file "isr.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;		None
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3883 ;;      Params:         0       0       0       0       0       0       0
  3884 ;;      Locals:         0       0       0       0       0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0
  3886 ;;      Totals:         0       0       0       0       0       0       0
  3887 ;;Total ram usage:        0 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		Interrupt level 2
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	intcode
  3897   000008                     __pintcode:
  3898                           	callstack 0
  3899   000008                     _isr:
  3900                           	callstack 24
  3901                           
  3902                           ;incstack = 0
  3903   000008  824A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3904   00000A  ED82  F008         	call	int_func,f	;refresh shadow registers
  3905                           
  3906                           	psect	intcode_body
  3907   001104                     __pintcode_body:
  3908                           	callstack 24
  3909   001104                     int_func:
  3910                           	callstack 24
  3911   001104  0006               	pop		; remove dummy address from shadow register refresh
  3912   001106                     
  3913                           ;isr.c: 8:  static unsigned long count;;isr.c: 10:  if (TMR0IF)
  3914   001106  A4F2               	btfss	4082,2,c	;volatile
  3915   001108  EF88  F008         	goto	i2u121_41
  3916   00110C  EF8A  F008         	goto	i2u121_40
  3917   001110                     i2u121_41:
  3918   001110  EFAE  F008         	goto	i2l374
  3919   001114                     i2u121_40:
  3920   001114                     
  3921                           ;isr.c: 11:  {;isr.c: 12:   TMR0 = TMR0 + 8;
  3922   001114  0E08               	movlw	8
  3923   001116  24D6               	addwf	214,w,c	;volatile
  3924   001118  6ED6               	movwf	214,c	;volatile
  3925   00111A  0E00               	movlw	0
  3926   00111C  20D7               	addwfc	215,w,c	;volatile
  3927   00111E  6ED7               	movwf	215,c	;volatile
  3928                           
  3929                           ;isr.c: 14:   if (count++ == 20000)
  3930   001120  0E01               	movlw	1
  3931   001122  2601               	addwf	isr@count^0,f,c
  3932   001124  0E00               	movlw	0
  3933   001126  2202               	addwfc	(isr@count+1)^0,f,c
  3934   001128  2203               	addwfc	(isr@count+2)^0,f,c
  3935   00112A  2204               	addwfc	(isr@count+3)^0,f,c
  3936   00112C  0E21               	movlw	33
  3937   00112E  1801               	xorwf	isr@count^0,w,c
  3938   001130  E109               	bnz	i2u122_41
  3939   001132  0E4E               	movlw	78
  3940   001134  1802               	xorwf	(isr@count+1)^0,w,c
  3941   001136  1003               	iorwf	(isr@count+2)^0,w,c
  3942   001138  1004               	iorwf	(isr@count+3)^0,w,c
  3943   00113A  A4D8               	btfss	status,2,c
  3944   00113C  EFA2  F008         	goto	i2u122_41
  3945   001140  EFA4  F008         	goto	i2u122_40
  3946   001144                     i2u122_41:
  3947   001144  EFAD  F008         	goto	i2l2033
  3948   001148                     i2u122_40:
  3949   001148                     
  3950                           ;isr.c: 15:   {;isr.c: 16:    count = 0;
  3951   001148  0E00               	movlw	0
  3952   00114A  6E01               	movwf	isr@count^0,c
  3953   00114C  0E00               	movlw	0
  3954   00114E  6E02               	movwf	(isr@count+1)^0,c
  3955   001150  0E00               	movlw	0
  3956   001152  6E03               	movwf	(isr@count+2)^0,c
  3957   001154  0E00               	movlw	0
  3958   001156  6E04               	movwf	(isr@count+3)^0,c
  3959   001158                     
  3960                           ;isr.c: 17:             tick_count--;
  3961   001158  0643               	decf	_tick_count^0,f,c
  3962   00115A                     i2l2033:
  3963                           
  3964                           ;isr.c: 20:   TMR0IF = 0;
  3965   00115A  94F2               	bcf	4082,2,c	;volatile
  3966   00115C                     i2l374:
  3967   00115C  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3968   00115E  0011               	retfie		f
  3969   001160                     __end_of_isr:
  3970                           	callstack 0
  3971                           
  3972                           	psect	rparam
  3973   000000                     
  3974                           	psect	temp
  3975   00004A                     btemp:
  3976                           	callstack 0
  3977   00004A                     	ds	1
  3978   000000                     int$flags	set	btemp
  3979   000000                     wtemp8	set	btemp+1
  3980   000000                     ttemp5	set	btemp+1
  3981   000000                     ttemp6	set	btemp+4
  3982   000000                     ttemp7	set	btemp+8
  3983                           
  3984                           	psect	idloc
  3985                           
  3986                           ;Config register IDLOC0 @ 0x200000
  3987                           ;	unspecified, using default values
  3988   200000                     	org	2097152
  3989   200000  FF                 	db	255
  3990                           
  3991                           ;Config register IDLOC1 @ 0x200001
  3992                           ;	unspecified, using default values
  3993   200001                     	org	2097153
  3994   200001  FF                 	db	255
  3995                           
  3996                           ;Config register IDLOC2 @ 0x200002
  3997                           ;	unspecified, using default values
  3998   200002                     	org	2097154
  3999   200002  FF                 	db	255
  4000                           
  4001                           ;Config register IDLOC3 @ 0x200003
  4002                           ;	unspecified, using default values
  4003   200003                     	org	2097155
  4004   200003  FF                 	db	255
  4005                           
  4006                           ;Config register IDLOC4 @ 0x200004
  4007                           ;	unspecified, using default values
  4008   200004                     	org	2097156
  4009   200004  FF                 	db	255
  4010                           
  4011                           ;Config register IDLOC5 @ 0x200005
  4012                           ;	unspecified, using default values
  4013   200005                     	org	2097157
  4014   200005  FF                 	db	255
  4015                           
  4016                           ;Config register IDLOC6 @ 0x200006
  4017                           ;	unspecified, using default values
  4018   200006                     	org	2097158
  4019   200006  FF                 	db	255
  4020                           
  4021                           ;Config register IDLOC7 @ 0x200007
  4022                           ;	unspecified, using default values
  4023   200007                     	org	2097159
  4024   200007  FF                 	db	255
  4025                           
  4026                           	psect	config
  4027                           
  4028                           ; Padding undefined space
  4029   300000                     	org	3145728
  4030   300000  FF                 	db	255
  4031                           
  4032                           ;Config register CONFIG1H @ 0x300001
  4033                           ;	unspecified, using default values
  4034                           ;	Oscillator Selection bits
  4035                           ;	OSC = 0x7, unprogrammed default
  4036                           ;	Fail-Safe Clock Monitor Enable bit
  4037                           ;	FCMEN = 0x0, unprogrammed default
  4038                           ;	Internal/External Oscillator Switchover bit
  4039                           ;	IESO = 0x0, unprogrammed default
  4040   300001                     	org	3145729
  4041   300001  07                 	db	7
  4042                           
  4043                           ;Config register CONFIG2L @ 0x300002
  4044                           ;	unspecified, using default values
  4045                           ;	Power-up Timer Enable bit
  4046                           ;	PWRT = 0x1, unprogrammed default
  4047                           ;	Brown-out Reset Enable bits
  4048                           ;	BOREN = 0x3, unprogrammed default
  4049                           ;	Brown-out Reset Voltage bits
  4050                           ;	BORV = 0x3, unprogrammed default
  4051   300002                     	org	3145730
  4052   300002  1F                 	db	31
  4053                           
  4054                           ;Config register CONFIG2H @ 0x300003
  4055                           ;	unspecified, using default values
  4056                           ;	Watchdog Timer Enable bit
  4057                           ;	WDT = 0x1, unprogrammed default
  4058                           ;	Watchdog Timer Postscale Select bits
  4059                           ;	WDTPS = 0xF, unprogrammed default
  4060   300003                     	org	3145731
  4061   300003  1F                 	db	31
  4062                           
  4063                           ; Padding undefined space
  4064   300004                     	org	3145732
  4065   300004  FF                 	db	255
  4066                           
  4067                           ;Config register CONFIG3H @ 0x300005
  4068                           ;	unspecified, using default values
  4069                           ;	PORTB A/D Enable bit
  4070                           ;	PBADEN = 0x1, unprogrammed default
  4071                           ;	Low-Power Timer 1 Oscillator Enable bit
  4072                           ;	LPT1OSC = 0x0, unprogrammed default
  4073                           ;	MCLR Pin Enable bit
  4074                           ;	MCLRE = 0x1, unprogrammed default
  4075   300005                     	org	3145733
  4076   300005  82                 	db	130
  4077                           
  4078                           ;Config register CONFIG4L @ 0x300006
  4079                           ;	unspecified, using default values
  4080                           ;	Stack Full/Underflow Reset Enable bit
  4081                           ;	STVREN = 0x1, unprogrammed default
  4082                           ;	Single-Supply ICSP Enable bit
  4083                           ;	LVP = 0x1, unprogrammed default
  4084                           ;	Boot Block Size Select bit
  4085                           ;	BBSIZ = 0x0, unprogrammed default
  4086                           ;	Extended Instruction Set Enable bit
  4087                           ;	XINST = 0x0, unprogrammed default
  4088                           ;	Background Debugger Enable bit
  4089                           ;	DEBUG = 0x1, unprogrammed default
  4090   300006                     	org	3145734
  4091   300006  85                 	db	133
  4092                           
  4093                           ; Padding undefined space
  4094   300007                     	org	3145735
  4095   300007  FF                 	db	255
  4096                           
  4097                           ;Config register CONFIG5L @ 0x300008
  4098                           ;	unspecified, using default values
  4099                           ;	Code Protection bit
  4100                           ;	CP0 = 0x1, unprogrammed default
  4101                           ;	Code Protection bit
  4102                           ;	CP1 = 0x1, unprogrammed default
  4103                           ;	Code Protection bit
  4104                           ;	CP2 = 0x1, unprogrammed default
  4105                           ;	Code Protection bit
  4106                           ;	CP3 = 0x1, unprogrammed default
  4107   300008                     	org	3145736
  4108   300008  0F                 	db	15
  4109                           
  4110                           ;Config register CONFIG5H @ 0x300009
  4111                           ;	unspecified, using default values
  4112                           ;	Boot Block Code Protection bit
  4113                           ;	CPB = 0x1, unprogrammed default
  4114                           ;	Data EEPROM Code Protection bit
  4115                           ;	CPD = 0x1, unprogrammed default
  4116   300009                     	org	3145737
  4117   300009  C0                 	db	192
  4118                           
  4119                           ;Config register CONFIG6L @ 0x30000A
  4120                           ;	unspecified, using default values
  4121                           ;	Write Protection bit
  4122                           ;	WRT0 = 0x1, unprogrammed default
  4123                           ;	Write Protection bit
  4124                           ;	WRT1 = 0x1, unprogrammed default
  4125                           ;	Write Protection bit
  4126                           ;	WRT2 = 0x1, unprogrammed default
  4127                           ;	Write Protection bit
  4128                           ;	WRT3 = 0x1, unprogrammed default
  4129   30000A                     	org	3145738
  4130   30000A  0F                 	db	15
  4131                           
  4132                           ;Config register CONFIG6H @ 0x30000B
  4133                           ;	unspecified, using default values
  4134                           ;	Configuration Register Write Protection bit
  4135                           ;	WRTC = 0x1, unprogrammed default
  4136                           ;	Boot Block Write Protection bit
  4137                           ;	WRTB = 0x1, unprogrammed default
  4138                           ;	Data EEPROM Write Protection bit
  4139                           ;	WRTD = 0x1, unprogrammed default
  4140   30000B                     	org	3145739
  4141   30000B  E0                 	db	224
  4142                           
  4143                           ;Config register CONFIG7L @ 0x30000C
  4144                           ;	unspecified, using default values
  4145                           ;	Table Read Protection bit
  4146                           ;	EBTR0 = 0x1, unprogrammed default
  4147                           ;	Table Read Protection bit
  4148                           ;	EBTR1 = 0x1, unprogrammed default
  4149                           ;	Table Read Protection bit
  4150                           ;	EBTR2 = 0x1, unprogrammed default
  4151                           ;	Table Read Protection bit
  4152                           ;	EBTR3 = 0x1, unprogrammed default
  4153   30000C                     	org	3145740
  4154   30000C  0F                 	db	15
  4155                           
  4156                           ;Config register CONFIG7H @ 0x30000D
  4157                           ;	unspecified, using default values
  4158                           ;	Boot Block Table Read Protection bit
  4159                           ;	EBTRB = 0x1, unprogrammed default
  4160   30000D                     	org	3145741
  4161   30000D  40                 	db	64
  4162                           tosu	equ	0xFFF
  4163                           tosh	equ	0xFFE
  4164                           tosl	equ	0xFFD
  4165                           stkptr	equ	0xFFC
  4166                           pclatu	equ	0xFFB
  4167                           pclath	equ	0xFFA
  4168                           pcl	equ	0xFF9
  4169                           tblptru	equ	0xFF8
  4170                           tblptrh	equ	0xFF7
  4171                           tblptrl	equ	0xFF6
  4172                           tablat	equ	0xFF5
  4173                           prodh	equ	0xFF4
  4174                           prodl	equ	0xFF3
  4175                           indf0	equ	0xFEF
  4176                           postinc0	equ	0xFEE
  4177                           postdec0	equ	0xFED
  4178                           preinc0	equ	0xFEC
  4179                           plusw0	equ	0xFEB
  4180                           fsr0h	equ	0xFEA
  4181                           fsr0l	equ	0xFE9
  4182                           wreg	equ	0xFE8
  4183                           indf1	equ	0xFE7
  4184                           postinc1	equ	0xFE6
  4185                           postdec1	equ	0xFE5
  4186                           preinc1	equ	0xFE4
  4187                           plusw1	equ	0xFE3
  4188                           fsr1h	equ	0xFE2
  4189                           fsr1l	equ	0xFE1
  4190                           bsr	equ	0xFE0
  4191                           indf2	equ	0xFDF
  4192                           postinc2	equ	0xFDE
  4193                           postdec2	equ	0xFDD
  4194                           preinc2	equ	0xFDC
  4195                           plusw2	equ	0xFDB
  4196                           fsr2h	equ	0xFDA
  4197                           fsr2l	equ	0xFD9
  4198                           status	equ	0xFD8

Data Sizes:
    Strings     141
    Constant    0
    Data        16
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      73
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[17]), STR_10(CODE[17]), STR_11(CODE[16]), STR_12(CODE[19]), 
		 -> STR_13(CODE[16]), STR_14(CODE[17]), STR_15(CODE[15]), STR_2(CODE[3]), 
		 -> STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), STR_6(CODE[3]), 
		 -> STR_7(CODE[3]), STR_8(CODE[3]), STR_9(CODE[3]), time(COMRAM[9]), 

    dashboard@events	PTR unsigned char [8] size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 
		 -> STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), STR_9(CODE[3]), 

    dashboard@F10501	PTR unsigned char [8] size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 
		 -> STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), STR_9(CODE[3]), 

    my_strcmp@one	PTR unsigned char  size(1) Largest target is 5
		 -> pass(COMRAM[5]), 

    my_strcmp@two	PTR unsigned char  size(1) Largest target is 5
		 -> temp_password(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_password
    _password->_clcd_putch
    ___awmod->___awdiv
    _init_config->_init_ds1307
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _dashboard->_clcd_putch
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_time->_clcd_print
    _clcd_print->_clcd_write
    _clcd_putch->___awmod
    ___lwmod->___lwdiv

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   17285
                                             27 COMRAM     1     1      0
                         _clcd_write
                          _dashboard
                        _init_config
                           _password
                           _read_adc
                      _read_switches
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      30
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _password                                            13    13      0    7006
                                             16 COMRAM    11    11      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                          _my_strcmp
 ---------------------------------------------------------------------------------
 (2) _my_strcmp                                            8     6      2     398
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    1509
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     477
                                              3 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     363
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    1032
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dashboard                                            9     9      0    7616
                                             16 COMRAM     9     9      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                       _display_time
                           _get_time
 ---------------------------------------------------------------------------------
 (2) _get_time                                             0     0      0      45
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      45
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      15
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (5) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0    2467
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    2467
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    1836
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           2     1      1    1032
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_write
   _dashboard
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _clcd_print
       _clcd_write
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
       _clcd_write (ARG)
     _display_time
       _clcd_print
     _get_time
       _read_ds1307
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
           _i2c_idle
         _i2c_stop
           _i2c_idle
         _i2c_write
           _i2c_idle
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
     _init_matrix_keypad
     _init_timer0
   _password
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _my_strcmp
   _read_adc
   _read_switches
     _scan_key

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      25        0.0%
BITBIGSFRll        281      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      49       1       77.7%
BITBIGSFRlhhhh      1E      0       0      19        0.0%
BITBIGSFRhhhlhh     19      0       0      17        0.0%
BITBIGSFRlhl         F      0       0      22        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRhhhlhh      B      0       0      18        0.0%
BITBIGSFRlhhl        8      0       0      21        0.0%
BITBIGSFRlhhhl       2      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49      24        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 24 16:45:08 2024

               my_strcmp@one 001E                 my_strcmp@two 001F                            _i 000A  
             clcd_print@addr 0022               clcd_print@data 0020                my_strcmp@last 0022  
                         l33 12AA                           l36 11C0                           l61 125C  
                         l62 1260                           l71 109E                           l39 11EC  
                         l65 0DD0                           l74 12FE                           _GO 7E11  
                         u10 134C                           u11 1348                           u80 0AC2  
                         u81 0ABE                           u90 0AD6                           u91 0AD2  
               ___awdiv@sign 0023           _init_matrix_keypad 132C                          l103 12C8  
                        l112 0F54                          l204 0AA4                          l132 133C  
                        l140 0AF0                          l205 0AAC                          l150 0B76  
                        l223 0E4C                          l143 0B1E                          l135 0AC8  
                        l312 133E                          l224 0E54                          l152 0B8A  
                        l144 0B5A                          l136 0BB4                          l153 0BB2  
                        l145 0B32                          l137 0B04                          l314 134C  
                        l322 1396                          l242 07F2                          l154 0B9E  
                        l138 0ADC                          l315 134E                          l331 137A  
                        l243 07F2                          l251 0932                          l147 0B46  
                        l340 1386                          l325 138E                          l309 132A  
                        l165 0F4A                          l334 13A6                          l271 12E6  
                        l328 139E                          l337 13AC                          l193 0ED4  
                        l274 128A                          l188 136E                          l268 11A6  
                        l391 1314                          l625 0C78                          l902 1102  
                        l638 0D28                          _CKE 7E3E                          l892 1032  
                        l885 102A                          l895 10FA                          _GIE 7F97  
                        _RC0 7C10                          _RC1 7C11                          _RC2 7C12  
                        u100 0AEA                          u101 0AE6                          u110 0AFE  
                        u111 0AFA                          _RD7 7C1F                          u200 0E7C  
                        u120 0B18                          u201 0E78                          u121 0B14  
                        u130 0B2C                          u131 0B28                          u140 0B40  
                        u141 0B3C                          u150 0B54                          u151 0B50  
                        u160 0B70                          u161 0B6C                          u170 0B84  
                        u171 0B80                          u180 0B98                          u420 0EE8  
                        u181 0B94                          u421 0EE4                          u190 0BAC  
                        u430 0EFE                          u191 0BA8                          u431 0EFA  
                        u440 0F0E                          _PEN 7E2A                          u441 0F0A  
                        u450 0F28                          u451 0F24                          u460 0F40  
                        u461 0F3C                          u720 123A                          u800 0BC8  
                        u721 1234                          u801 0BC4                          u810 0BE2  
                        u811 0BDE                          u740 125C                          u820 0C08  
                        u900 0CF4                          _SEN 7E28                          u741 1258  
                        u821 0C04                          u901 0CF0                          u750 1066  
                        u830 0C26                          u910 0D18                          u735 123C  
                        u831 0C22                          u911 0D14                          _PSA 7EAB  
                        u920 0FDA                          u760 108E                          u840 0C42  
                        u921 0FD6                          u841 0C3E                          u930 0FF8  
                        u770 109E                          u850 0C68                          u931 0FF4  
                        u771 109A                          u851 0C64                          u940 1014  
                        u860 0C8C                          u780 0E08                          u941 1010  
                        u757 105C                          u861 0C88                          u781 0E04  
                        u950 10B2                          u870 0CA6                          u790 0E4C  
                        u951 10AE                          u767 1084                          u871 0CA2  
                        u791 0E48                          u960 10D0                          u880 0CC0  
                        u961 10CC                          u881 0CBC                          u970 10E6  
                        u890 0CDE                          u971 10E2                          u891 0CDA  
                        u980 11CE                          u981 11CA                          _SMP 7E3F  
                        u991 0952                ?_display_time 001E                          _key 000F  
                        _isr 0008               clcd_putch@addr 002C               clcd_putch@data 002D  
               ___awmod@sign 002B                          wreg 0FE8          ?_init_matrix_keypad 001E  
                       l1101 1376                         l1111 137C                         l1103 1388  
                       l1113 1384                         l1105 138A                         l1201 131A  
                       l2001 08EA                         l1107 1398                         l1131 1274  
                       l1203 1322                         l2003 0928                         l2011 0F6A  
                       l1109 139A                         l1133 1278                         l1125 1264  
                       l1205 1324                         l1221 1300                         l2013 0F7A  
                       l2021 0FA2                         l2005 0F4C                         l1071 13A2  
                       l1135 1284                         l1127 1268                         l1311 0EA4  
                       l1303 0E56                         l1151 12A0                         l1207 1326  
                       l1223 1308                         l1231 0AC2                         l2023 0FB2  
                       l2015 0F7E                         l2007 0F50                         l1073 13A8  
                       l1129 126E                         l1313 0EA8                         l1305 0E6E  
                       l1153 12A8                         l1209 1328                         l1225 1310  
                       l2017 0F90                         l2009 0F54                         l1067 133E  
                       l1315 0EB2                         l1307 0E7C                         l1227 1312  
                       l1243 0AEA                         l2019 0F9A                         l1069 13A0  
                       l1317 0EBA                         l1309 0E92                         l1149 128C  
                       l1253 0B18                         l1237 0AD6                         l1229 0AAE  
                       l1095 1390                         l1319 0ED0                         l1271 0B54  
                       l1097 1392                         l1193 132C                         l1281 0B84  
                       l1265 0B40                         l1249 0AFE                         l1099 1372  
                       l1195 1334                         l1275 0B70                         l1259 0B2C  
                       l1701 0D2A                         l1197 1336                         l1293 0BAC  
                       l1711 0D50                         l1703 0D2E                         l1199 1316  
                       l1287 0B98                         l1471 0ED8                         l1721 0D82  
                       l1713 0D60                         l1705 0D34                         l1801 0C70  
                       l1297 0BB2                         l1473 0EE8                         l1731 0DB0  
                       l1723 0D8C                         l1715 0D6A                         l1707 0D36  
                       l1811 0C94                         l1491 0F40                         l1475 0EEE  
                       l1901 0934                         l1733 0DBE                         l1725 0D94  
                       l1717 0D72                         l1709 0D46                         l1741 1168  
                       l1821 0CC8                         l1813 0C98                         l1805 0C7A  
                       l1477 0EFE                         l1485 0F18                         l1671 1244  
                       l1663 122A                         l1911 09A8                         l1903 0948  
                       l1735 0DC8                         l1727 0D9E                         l1719 0D7C  
                       l1743 1174                         l1831 0D02                         l1823 0CD0  
                       l1815 0CA6                         l1807 0C7E                         l1751 0DD2  
                       l1487 0F28                         l1495 0F48                         l1479 0F0E  
                       l1841 0FC0                         l1681 124E                         l1673 1246  
                       l1665 123C                         l1737 12EA                         l1921 09F4  
                       l1913 09AC                         l1905 095A                         l1729 0DA6  
                       l1745 1188                         l1761 0BB6                         l1825 0CDE  
                       l1833 0D08                         l1817 0CAE                         l1809 0C8C  
                       l1753 0DE6                         l1489 0F30                         l1851 0FF8  
                       l1843 0FC8                         l1675 1248                         l1667 1240  
                       l1683 1034                         l1931 0A3A                         l1923 0A04  
                       l1915 09BE                         l1907 097A                         l1691 12CC  
                       l1747 1192                         l1739 1160                         l1771 0BE2  
                       l1763 0BBA                         l1835 0D18                         l1827 0CF4  
                       l1819 0CC0                         l1755 0E08                         l1861 1024  
                       l1853 0FFE                         l1845 0FDA                         l1677 124A  
                       l1669 1242                         l1685 1042                         l1749 1360  
                       l1933 0A50                         l1925 0A0C                         l1917 09D2  
                       l1909 098C                         l1693 12D0                         l1781 0C10  
                       l1773 0BEA                         l1765 0BC8                         l1837 0D20  
                       l1829 0CFC                         l1757 0E30                         l1941 06A6  
                       l1855 1014                         l1847 0FE2                         l1871 10D0  
                       l1863 10A0                         l1679 124C                         l1687 106A  
                       l1935 0AA8                         l1927 0A20                         l1919 09EE  
                       l1695 12D6                         l1791 0C4A                         l1783 0C18  
                       l1775 0BEE                         l1767 0BD0                         l1759 0E34  
                       l1951 0726                         l1943 06CE                         l1857 101C  
                       l1849 0FEA                         l1873 10E6                         l1865 10B2  
                       l1689 106E                         l1929 0A32                         l1697 12DC  
                       l1793 0C4C                         l1785 0C26                         l1777 0BF6  
                       l1769 0BD4                         l1961 0760                         l1953 072E  
                       l1945 06DE                         l1937 0692                         l1881 11BE  
                       l1859 101E                         l1875 10EE                         l1867 10BA  
                       l1699 12E2                         l1891 12B4                         l1795 0C52  
                       l1787 0C2C                         l1779 0C08                         l1971 07A2  
                       l1963 0772                         l1955 0740                         l1947 06FA  
                       l1939 0692                         l1883 11CE                         l1877 10F4  
                       l1869 10C2                         l1893 12B8                         l1789 0C42  
                       l1797 0C58                         l1981 0800                         l1973 07AC  
                       l1965 077E                         l1957 074C                         l1949 0716  
                       l1885 11E4                         l1895 12C0                         l1799 0C68  
                       l1991 0892                         l1983 0810                         l1975 07CA  
                       l1959 0758                         l1879 11AA                         l1897 12C2  
                       l1889 12AC                         l1985 0824                         l1993 0896  
                       l1977 07F6                         l1969 078E                         l1899 12C6  
                       l1995 08AA                         l1987 0842                         l1979 07F8  
                       l1997 08B6                         l1989 0874                         l1999 08CA  
                       _ADFM 7E07                         ?_isr 001E                         _ADON 7E10  
                       STR_1 0636                         STR_2 0688                         STR_3 068B  
                       STR_4 0685                         STR_5 0679                         STR_6 067C  
                       STR_7 067F                         STR_8 0682                         STR_9 0676  
                       u1000 098C                         u1001 0988                         _T0CS 7EAD  
                       u1010 09A8                         u1011 09A4                         u1020 09BE  
                       u1100 06FA                         u1021 09BA                         u1101 06F6  
                       u1030 09D2                         u1110 0716                         u1031 09CE  
                       u1111 0712                         u1040 09EE                         u1120 0740  
                       u1200 0FB2                         u1041 09EA                         u1121 073C  
                       u1201 0FAE                         u1050 0A04                         u1130 0772  
                       u1051 0A00                         u1131 076E                         u1060 0A20  
                       u1140 07A2                         u1061 0A1C                         u1141 079E  
                       u1070 0A32                         u1150 07CA                         u1071 0A2E  
                       u1151 07C6                         u1080 0A50                         u1160 0810  
                       u1081 0A4C                         u1161 080C                         u1170 0928  
                       u1090 06CE                         u1171 0924                         u1091 06CA  
                       u1180 0F7A                         u1237 0D3C                         u1181 0F76  
                       u1190 0F90                         u1247 0D56                         u1191 0F8C  
                       u1257 0D6C                         u1267 0D8E                         u1277 0DA0  
                       u1287 0DB6                         u1297 0DCA                         _PEIE 7F96  
                       _RCEN 7E2B                         _RBPU 7F8F                         _TMR0 0FD6  
                       _RSEN 7E29                         _main 0F4C                         _pass 0045  
                       _time 0010                         fsr0h 0FEA                         fsr1h 0FE2  
                       indf0 0FEF                         fsr2h 0FDA                         fsr0l 0FE9  
                       indf2 0FDF                         fsr1l 0FE1                         fsr2l 0FD9  
                       btemp 004A                         start 000E         ??_init_matrix_keypad 001E  
               ___param_bank 0000               clcd_write@byte 001F                _i2c_rep_start 1398  
              ??_i2c_rx_mode 001E                        ??_isr 001E                 ?_init_ds1307 001E  
                      _ADCS0 7E00                        _ADCS1 7E01                        _ADCS2 7E02  
                      ?_main 001E                 ?_read_ds1307 001E                        _ACKEN 7E2C  
                      _ACKDT 7E2D               ??_display_time 0023                        _BCLIF 7D0B  
                      _ACQT0 7E03                        _ACQT1 7E04                        _ACQT2 7E05  
            __end_of___awdiv 0C7A                        STR_10 0625                        STR_11 0647  
                      STR_12 0601                        STR_13 0657                        STR_14 0614  
                      STR_15 0667              __end_of___awmod 0D2A              ___awdiv@divisor 0020  
            __end_of___lwdiv 1034              __end_of___lwmod 1104                 ?_init_config 001E  
                      i2l374 115C              ___awdiv@counter 0022                        _VCFG0 7E0C  
                      _VCFG1 7E0D                        _PORTB 0F81                        _PORTD 0F83  
                      _TRISB 0F93                        _TRISC 0F94                        _TRISD 0F95  
                      _SSPIF 7CF3                 ?_init_timer0 001E                        _delay 0008  
                      tablat 0FF5                        plusw1 0FE3                        plusw2 0FDB  
                      ttemp5 004B                        ttemp6 004E                        ttemp7 0052  
                      status 0FD8                        wtemp8 004B             init_ds1307@dummy 0021  
                 _i2c_no_ack 13A8              __initialization 11EE               ?_i2c_rep_start 001E  
               __end_of_main 0FC0             __end_of_i2c_idle 1350             __end_of_i2c_read 1388  
           __end_of_i2c_stop 1390                       ??_main 0039                __activetblptr 0002  
        __end_of_i2c_rx_mode 13A8                       _ADCON0 0FC2                       _ADCON1 0FC1  
           read_switches@key 000E                       _ADRESH 0FC4                       _ADRESL 0FC3  
                     _T08BIT 7EAE             ___awdiv@dividend 001E                       _GODONE 7E11  
                     i2l2031 1158                       i2l2033 115A                       i2l2025 1106  
                     i2l2027 1114                       i2l2029 1148                 _write_ds1307 12CA  
                     _TMR0IE 7F95                       _TMR0IF 7F92                       _TMR0ON 7EAF  
                     _SSPADD 0FC8                       _TRISC3 7CA3                       _TRISC4 7CA4  
                     _TRISD7 7CAF                       _SSPBUF 0FC9             __end_of_get_time 0ED6  
                  ??___awdiv 0022                       _chance 0042                    ??___awmod 002A  
                  ??___lwdiv 0022                    ??___lwmod 0029             __end_of_init_i2c 132C  
           __end_of_init_adc 12AC             __end_of_read_adc 11EE                       clear_0 1214  
           ___awdiv@quotient 0024              ___awmod@divisor 0028                       isa$std 0001  
           __end_of_scan_key 0BB6              ___awmod@counter 002A             __end_of_password 0934  
               __pdataCOMRAM 003A                 __mediumconst 0000                       tblptrh 0FF7  
                     tblptrl 0FF6                       tblptru 0FF8                   __accesstop 0060  
    __end_of__initialization 121A         __end_of_display_time 1370                ___rparam_used 0001  
            ??_i2c_rep_start 001E                  ?_i2c_no_ack 001E               __pcstackCOMRAM 001E  
                _i2c_rx_mode 13A0            __end_of_i2c_start 1398            __end_of_i2c_write 137C  
                  ?_i2c_idle 001E                    ?_i2c_read 001E                    ?_i2c_stop 001E  
                 _clcd_print 1034                   _clcd_putch 12E8                   _clcd_write 1228  
            read_ds1307@data 0020            read_switches@once 0044                      _ACKSTAT 7E2E  
                password@key 0038                      _SSPCON1 0FC6                    ?_get_time 001E  
              _read_switches 0ED6                   ??_i2c_idle 001E                   ??_i2c_read 001E  
          __end_of_dashboard 0AAE                   ??_i2c_stop 001E                    ?_init_i2c 001E  
                  ?_init_adc 001E                    ?_read_adc 001E                    ?_scan_key 001E  
                    __Hparam 0000                    ?_password 001E                      __Lparam 0000  
                    ___awdiv 0BB6                      ___awmod 0C7A                      ___lwdiv 0FC0  
                    ___lwmod 10A0                 __psmallconst 0600                      __pcinit 11EE  
                    __ramtop 0600                      __ptext0 0F4C                      __ptext1 0ED6  
                    __ptext2 0AAE                      __ptext3 11A8                      __ptext4 0690  
                    __ptext5 0DD2                      __ptext6 0C7A                      __ptext7 0BB6  
                    __ptext8 12AC                      __ptext9 1300            __end_of_init_clcd 0DD2  
           ___awmod@dividend 0026               ?_read_switches 001E                   ??_get_time 0021  
             __pintcode_body 1104         end_of_initialization 121A                   ??_init_i2c 001E  
                 ??_init_adc 001E                __Lmediumconst 0000                   ??_read_adc 0020  
                    int_func 1104                   ??_scan_key 001E                  ?_clcd_print 0020  
                ?_clcd_putch 002C                  ?_clcd_write 001E            __end_of_my_strcmp 0E56  
                 ??_password 002E                   _tick_count 0043                      postdec1 0FE5  
                    postinc0 0FEE                      postinc1 0FE6                      postinc2 0FDE  
                  _PORTBbits 0F81              read_adc@channel 0024                 _display_time 1360  
              i2c_write@data 001E              read_adc@reg_val 0022                   main@main_f 0039  
               ??_i2c_no_ack 001E                 ?_i2c_rx_mode 001E                __pidataCOMRAM 1350  
                _adc_reg_val 000C          start_initialization 11EE              ??_read_switches 001E  
                  _i2c_start 1390                  __end_of_isr 1160                    _i2c_write 1370  
         __end_of_i2c_no_ack 13AE        __end_of_i2c_rep_start 13A0                ??_init_ds1307 0021  
              ??_read_ds1307 001F  read_switches@detection_type 001E                ??_init_config 0022  
              ??_init_timer0 001E                  __pbssCOMRAM 0001                   ?_i2c_start 001E  
                 ?_i2c_write 001E                    _dashboard 0934             ___lwdiv@dividend 001E  
                  __pintcode 0008                     ?___awdiv 001E                     ?___awmod 0026  
         read_ds1307@address 001F                     ?___lwdiv 001E                    _clock_reg 0005  
                   ?___lwmod 0025                  __smallconst 0600          __end_of_init_ds1307 11A8  
        __end_of_read_ds1307 128C             ___lwdiv@quotient 0022                    _init_clcd 0D2A  
        __end_of_init_config 12CA                ?_write_ds1307 001F          __end_of_init_timer0 1316  
               ??_clcd_print 0023                 ??_clcd_putch 002D   __end_of_init_matrix_keypad 133E  
               ??_clcd_write 001F                   ?_dashboard 001E                     i2u121_40 1114  
                   i2u121_41 1110                     i2u122_40 1148                     i2u122_41 1144  
                  _my_strcmp 0DD2                 password@wait 0030        clcd_write@control_bit 001E  
                 my_strcmp@k 0024                  ??_i2c_start 001E           __end_of_clcd_print 10A0  
                ??_i2c_write 001E           __end_of_clcd_putch 1300           __end_of_clcd_write 1262  
                 ?_init_clcd 001E                    copy_data0 1202               ??_write_ds1307 0020  
                   _i2c_idle 133E                     _i2c_read 137C                     _i2c_stop 1388  
              _temp_password 0019                     __Hrparam 0000                     __Lrparam 0000  
                 ?_my_strcmp 001E                  _init_ds1307 1160                  _read_ds1307 1262  
                _init_config 12AC          write_ds1307@address 0020                  _init_timer0 1300  
            ___lwdiv@divisor 0020              ___lwdiv@counter 0024                     __ptext10 132C  
                   __ptext11 1316                     __ptext20 1388                     __ptext12 1160  
                   __ptext21 1390                     __ptext13 12CA                     __ptext30 1228  
                   __ptext22 1398                     __ptext14 0D2A                     __ptext31 10A0  
                   __ptext23 137C                     __ptext15 128C                     __ptext32 0FC0  
                   __ptext24 13A0                     __ptext16 0934                     __ptext25 133E  
                   __ptext17 0E56                     __ptext26 13A8                     __ptext18 1262  
                   __ptext27 1360                     __ptext19 1370                     __ptext28 1034  
                   __ptext29 12E8                     _get_time 0E56                     _init_i2c 1316  
                   _init_adc 128C                     _read_adc 11A8                     _scan_key 0AAE  
                ??_dashboard 002E                     _password 0690                     isa$xinst 0000  
                   int$flags 004A                     isr@count 0001              dashboard@F10501 003A  
                ??_init_clcd 0020        __end_of_read_switches 0F4C                     intlevel2 0000  
           ___lwmod@dividend 0025                  ??_my_strcmp 0020         __end_of_write_ds1307 12E8  
            dashboard@events 002F              ___lwmod@divisor 0027              ___lwmod@counter 0029  
           write_ds1307@data 001F  
