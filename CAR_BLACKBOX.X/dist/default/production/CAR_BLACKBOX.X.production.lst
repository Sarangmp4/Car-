

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed May 22 16:44:18 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4580 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81                           	psect	idataCOMRAM
    82   00100E                     __pidataCOMRAM:
    83                           	callstack 0
    84                           
    85                           ;initializer for dashboard@F10501
    86   00100E  87                 	db	low STR_3
    87   00100F  8A                 	db	low STR_4
    88   001010  84                 	db	low STR_5
    89   001011  78                 	db	low STR_6
    90   001012  7B                 	db	low STR_7
    91   001013  7E                 	db	low STR_8
    92   001014  81                 	db	low STR_9
    93   001015  75                 	db	low STR_10
    94                           
    95                           ;initializer for password@F10489
    96   001016  30                 	db	48
    97   001017  30                 	db	48
    98   001018  30                 	db	48
    99   001019  30                 	db	48
   100                           
   101                           ;initializer for _chance
   102   00101A  03                 	db	3
   103                           
   104                           ;initializer for read_switches@once
   105   00101B  01                 	db	1
   106   000000                     _SSPADD	set	4040
   107   000000                     _SSPCON1	set	4038
   108   000000                     _ADRESL	set	4035
   109   000000                     _ADRESH	set	4036
   110   000000                     _ACKSTAT	set	32302
   111   000000                     _CKE	set	32318
   112   000000                     _RBPU	set	32655
   113   000000                     _VCFG1	set	32269
   114   000000                     _GODONE	set	32273
   115   000000                     _PORTBbits	set	3969
   116   000000                     _ADCON1	set	4033
   117   000000                     _TRISD	set	3989
   118   000000                     _ADCON0	set	4034
   119   000000                     _ACKEN	set	32300
   120   000000                     _ACKDT	set	32301
   121   000000                     _RCEN	set	32299
   122   000000                     _RSEN	set	32297
   123   000000                     _PEN	set	32298
   124   000000                     _SEN	set	32296
   125   000000                     _SMP	set	32319
   126   000000                     _TRISC4	set	31908
   127   000000                     _TRISC3	set	31907
   128   000000                     _RD7	set	31775
   129   000000                     _RC0	set	31760
   130   000000                     _RC2	set	31762
   131   000000                     _GO	set	32273
   132   000000                     _ADON	set	32272
   133   000000                     _VCFG0	set	32268
   134   000000                     _ADCS2	set	32258
   135   000000                     _ADCS1	set	32257
   136   000000                     _ADCS0	set	32256
   137   000000                     _ACQT0	set	32259
   138   000000                     _ACQT1	set	32260
   139   000000                     _ACQT2	set	32261
   140   000000                     _PORTB	set	3969
   141   000000                     _RC1	set	31761
   142   000000                     _ADFM	set	32263
   143   000000                     _TRISB	set	3987
   144   000000                     _TRISC	set	3988
   145   000000                     _PORTD	set	3971
   146   000000                     _TRISD7	set	31919
   147   000000                     _SSPIF	set	31987
   148   000000                     _SSPBUF	set	4041
   149   000000                     _BCLIF	set	32011
   150                           
   151                           	psect	smallconst
   152   000600                     __psmallconst:
   153                           	callstack 0
   154   000600  00                 	db	0
   155   000601                     STR_14:
   156   000601  56                 	db	86	;'V'
   157   000602  65                 	db	101	;'e'
   158   000603  72                 	db	114	;'r'
   159   000604  69                 	db	105	;'i'
   160   000605  66                 	db	102	;'f'
   161   000606  69                 	db	105	;'i'
   162   000607  63                 	db	99	;'c'
   163   000608  61                 	db	97	;'a'
   164   000609  74                 	db	116	;'t'
   165   00060A  69                 	db	105	;'i'
   166   00060B  6F                 	db	111	;'o'
   167   00060C  6E                 	db	110	;'n'
   168   00060D  20                 	db	32
   169   00060E  66                 	db	102	;'f'
   170   00060F  61                 	db	97	;'a'
   171   000610  69                 	db	105	;'i'
   172   000611  6C                 	db	108	;'l'
   173   000612  65                 	db	101	;'e'
   174   000613  64                 	db	100	;'d'
   175   000614  00                 	db	0
   176   000615                     STR_15:
   177   000615  20                 	db	32
   178   000616  20                 	db	32
   179   000617  20                 	db	32
   180   000618  54                 	db	84	;'T'
   181   000619  72                 	db	114	;'r'
   182   00061A  79                 	db	121	;'y'
   183   00061B  20                 	db	32
   184   00061C  41                 	db	65	;'A'
   185   00061D  67                 	db	103	;'g'
   186   00061E  61                 	db	97	;'a'
   187   00061F  69                 	db	105	;'i'
   188   000620  6E                 	db	110	;'n'
   189   000621  20                 	db	32
   190   000622  20                 	db	32
   191   000623  20                 	db	32
   192   000624  20                 	db	32
   193   000625  00                 	db	0
   194   000626                     STR_11:
   195   000626  20                 	db	32
   196   000627  45                 	db	69	;'E'
   197   000628  6E                 	db	110	;'n'
   198   000629  74                 	db	116	;'t'
   199   00062A  65                 	db	101	;'e'
   200   00062B  72                 	db	114	;'r'
   201   00062C  20                 	db	32
   202   00062D  50                 	db	80	;'P'
   203   00062E  61                 	db	97	;'a'
   204   00062F  73                 	db	115	;'s'
   205   000630  73                 	db	115	;'s'
   206   000631  77                 	db	119	;'w'
   207   000632  6F                 	db	111	;'o'
   208   000633  72                 	db	114	;'r'
   209   000634  64                 	db	100	;'d'
   210   000635  20                 	db	32
   211   000636  00                 	db	0
   212   000637                     STR_1:
   213   000637  20                 	db	32
   214   000638  20                 	db	32
   215   000639  54                 	db	84	;'T'
   216   00063A  49                 	db	73	;'I'
   217   00063B  4D                 	db	77	;'M'
   218   00063C  45                 	db	69	;'E'
   219   00063D  20                 	db	32
   220   00063E  20                 	db	32
   221   00063F  20                 	db	32
   222   000640  20                 	db	32
   223   000641  45                 	db	69	;'E'
   224   000642  56                 	db	86	;'V'
   225   000643  20                 	db	32
   226   000644  20                 	db	32
   227   000645  53                 	db	83	;'S'
   228   000646  50                 	db	80	;'P'
   229   000647  00                 	db	0
   230   000648                     STR_16:
   231   000648  20                 	db	32
   232   000649  43                 	db	67	;'C'
   233   00064A  68                 	db	104	;'h'
   234   00064B  61                 	db	97	;'a'
   235   00064C  6E                 	db	110	;'n'
   236   00064D  63                 	db	99	;'c'
   237   00064E  65                 	db	101	;'e'
   238   00064F  73                 	db	115	;'s'
   239   000650  20                 	db	32
   240   000651  4C                 	db	76	;'L'
   241   000652  65                 	db	101	;'e'
   242   000653  66                 	db	102	;'f'
   243   000654  74                 	db	116	;'t'
   244   000655  20                 	db	32
   245   000656  00                 	db	0
   246   000657                     STR_13:
   247   000657  41                 	db	65	;'A'
   248   000658  74                 	db	116	;'t'
   249   000659  74                 	db	116	;'t'
   250   00065A  65                 	db	101	;'e'
   251   00065B  6D                 	db	109	;'m'
   252   00065C  70                 	db	112	;'p'
   253   00065D  74                 	db	116	;'t'
   254   00065E  20                 	db	32
   255   00065F  4F                 	db	79	;'O'
   256   000660  76                 	db	118	;'v'
   257   000661  65                 	db	101	;'e'
   258   000662  72                 	db	114	;'r'
   259   000663  00                 	db	0
   260   000664                     STR_2:
   261   000664  30                 	db	48	;'0'
   262   000665  30                 	db	48	;'0'
   263   000666  3A                 	db	58	;':'
   264   000667  30                 	db	48	;'0'
   265   000668  30                 	db	48	;'0'
   266   000669  3A                 	db	58	;':'
   267   00066A  30                 	db	48	;'0'
   268   00066B  30                 	db	48	;'0'
   269   00066C  00                 	db	0
   270   00066D                     STR_12:
   271   00066D  53                 	db	83	;'S'
   272   00066E  55                 	db	85	;'U'
   273   00066F  43                 	db	67	;'C'
   274   000670  43                 	db	67	;'C'
   275   000671  45                 	db	69	;'E'
   276   000672  53                 	db	83	;'S'
   277   000673  53                 	db	83	;'S'
   278   000674  00                 	db	0
   279   000675                     STR_10:
   280   000675  43                 	db	67	;'C'
   281   000676  20                 	db	32
   282   000677  00                 	db	0
   283   000678                     STR_6:
   284   000678  47                 	db	71	;'G'
   285   000679  31                 	db	49	;'1'
   286   00067A  00                 	db	0
   287   00067B                     STR_7:
   288   00067B  47                 	db	71	;'G'
   289   00067C  32                 	db	50	;'2'
   290   00067D  00                 	db	0
   291   00067E                     STR_8:
   292   00067E  47                 	db	71	;'G'
   293   00067F  33                 	db	51	;'3'
   294   000680  00                 	db	0
   295   000681                     STR_9:
   296   000681  47                 	db	71	;'G'
   297   000682  34                 	db	52	;'4'
   298   000683  00                 	db	0
   299   000684                     STR_5:
   300   000684  47                 	db	71	;'G'
   301   000685  4E                 	db	78	;'N'
   302   000686  00                 	db	0
   303   000687                     STR_3:
   304   000687  4F                 	db	79	;'O'
   305   000688  4E                 	db	78	;'N'
   306   000689  00                 	db	0
   307   00068A                     STR_4:
   308   00068A  47                 	db	71	;'G'
   309   00068B  52                 	db	82	;'R'
   310   00068C  00                 	db	0
   311   00068D  00                 	db	0	; dummy byte at the end
   312   000000                     
   313                           ; #config settings
   314                           
   315                           	psect	cinit
   316   000F0E                     __pcinit:
   317                           	callstack 0
   318   000F0E                     start_initialization:
   319                           	callstack 0
   320   000F0E                     __initialization:
   321                           	callstack 0
   322                           
   323                           ; Initialize objects allocated to COMRAM (14 bytes)
   324                           ; load TBLPTR registers with __pidataCOMRAM
   325   000F0E  0E0E               	movlw	low __pidataCOMRAM
   326   000F10  6EF6               	movwf	tblptrl,c
   327   000F12  0E10               	movlw	high __pidataCOMRAM
   328   000F14  6EF7               	movwf	tblptrh,c
   329   000F16  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   330   000F18  6EF8               	movwf	tblptru,c
   331   000F1A  EE00  F02B         	lfsr	0,__pdataCOMRAM
   332   000F1E  EE10 F00E          	lfsr	1,14
   333   000F22                     copy_data0:
   334   000F22  0009               	tblrd		*+
   335   000F24  CFF5 FFEE          	movff	tablat,postinc0
   336   000F28  50E5               	movf	postdec1,w,c
   337   000F2A  50E1               	movf	fsr1l,w,c
   338   000F2C  E1FA               	bnz	copy_data0
   339                           
   340                           ; Clear objects allocated to COMRAM (18 bytes)
   341   000F2E  EE00  F019         	lfsr	0,__pbssCOMRAM
   342   000F32  0E12               	movlw	18
   343   000F34                     clear_0:
   344   000F34  6AEE               	clrf	postinc0,c
   345   000F36  06E8               	decf	wreg,f,c
   346   000F38  E1FD               	bnz	clear_0
   347   000F3A                     end_of_initialization:
   348                           	callstack 0
   349   000F3A                     __end_of__initialization:
   350                           	callstack 0
   351   000F3A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   352   000F3C  6EF8               	movwf	tblptru,c
   353   000F3E  0100               	movlb	0
   354   000F40  EFDA  F006         	goto	_main	;jump to C main() function
   355                           
   356                           	psect	bssCOMRAM
   357   000019                     __pbssCOMRAM:
   358                           	callstack 0
   359   000019                     _clock_reg:
   360                           	callstack 0
   361   000019                     	ds	3
   362   00001C                     _i:
   363                           	callstack 0
   364   00001C                     	ds	2
   365   00001E                     _adc_reg_val:
   366                           	callstack 0
   367   00001E                     	ds	2
   368   000020                     read_switches@key:
   369                           	callstack 0
   370   000020                     	ds	1
   371   000021                     _key:
   372                           	callstack 0
   373   000021                     	ds	1
   374   000022                     _time:
   375                           	callstack 0
   376   000022                     	ds	9
   377                           
   378                           	psect	dataCOMRAM
   379   00002B                     __pdataCOMRAM:
   380                           	callstack 0
   381   00002B                     dashboard@F10501:
   382                           	callstack 0
   383   00002B                     	ds	8
   384   000033                     password@F10489:
   385                           	callstack 0
   386   000033                     	ds	4
   387   000037                     _chance:
   388                           	callstack 0
   389   000037                     	ds	1
   390   000038                     read_switches@once:
   391                           	callstack 0
   392   000038                     	ds	1
   393                           
   394                           	psect	cstackCOMRAM
   395   000001                     __pcstackCOMRAM:
   396                           	callstack 0
   397   000001                     ?_read_adc:
   398                           	callstack 0
   399   000001                     ?_my_strcmp:
   400                           	callstack 0
   401   000001                     ?___lwdiv:
   402                           	callstack 0
   403   000001                     clcd_write@control_bit:
   404                           	callstack 0
   405   000001                     read_switches@detection_type:
   406                           	callstack 0
   407   000001                     my_strcmp@one:
   408                           	callstack 0
   409   000001                     i2c_write@data:
   410                           	callstack 0
   411   000001                     ___lwdiv@dividend:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x0
   415   000001                     	ds	1
   416   000002                     clcd_write@byte:
   417                           	callstack 0
   418   000002                     my_strcmp@two:
   419                           	callstack 0
   420   000002                     write_ds1307@data:
   421                           	callstack 0
   422   000002                     read_ds1307@address:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x1
   426   000002                     	ds	1
   427   000003                     ??_read_adc:
   428   000003                     ??_init_clcd:
   429   000003                     ??_my_strcmp:
   430   000003                     write_ds1307@address:
   431                           	callstack 0
   432   000003                     read_ds1307@data:
   433                           	callstack 0
   434   000003                     clcd_print@data:
   435                           	callstack 0
   436   000003                     ___lwdiv@divisor:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x2
   440   000003                     	ds	1
   441   000004                     init_ds1307@dummy:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x3
   445   000004                     	ds	1
   446   000005                     clcd_print@addr:
   447                           	callstack 0
   448   000005                     read_adc@reg_val:
   449                           	callstack 0
   450   000005                     my_strcmp@flag:
   451                           	callstack 0
   452   000005                     ___lwdiv@quotient:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x4
   456   000005                     	ds	1
   457   000006                     
   458                           ; 1 bytes @ 0x5
   459   000006                     	ds	1
   460   000007                     read_adc@channel:
   461                           	callstack 0
   462   000007                     ___lwdiv@counter:
   463                           	callstack 0
   464   000007                     my_strcmp@i:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x6
   468   000007                     	ds	1
   469   000008                     ?___lwmod:
   470                           	callstack 0
   471   000008                     ___lwmod@dividend:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x7
   475   000008                     	ds	2
   476   00000A                     ___lwmod@divisor:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x9
   480   00000A                     	ds	2
   481   00000C                     ___lwmod@counter:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0xB
   485   00000C                     	ds	1
   486   00000D                     clcd_putch@addr:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0xC
   490   00000D                     	ds	1
   491   00000E                     clcd_putch@data:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0xD
   495   00000E                     	ds	1
   496   00000F                     ??_dashboard:
   497   00000F                     password@pass:
   498                           	callstack 0
   499                           
   500                           ; 4 bytes @ 0xE
   501   00000F                     	ds	1
   502   000010                     dashboard@events:
   503                           	callstack 0
   504                           
   505                           ; 8 bytes @ 0xF
   506   000010                     	ds	3
   507   000013                     password@temp_password:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x12
   511   000013                     	ds	4
   512   000017                     password@key:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x16
   516   000017                     	ds	1
   517   000018                     main@main_f:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x17
   521   000018                     	ds	1
   522                           
   523 ;;
   524 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   525 ;;
   526 ;; *************** function _main *****************
   527 ;; Defined at:
   528 ;;		line 31 in file "main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;  main_f          1   23[COMRAM] unsigned char 
   533 ;;  menu_f          1    0        unsigned char 
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   543 ;;      Params:         0       0       0       0       0       0       0
   544 ;;      Locals:         1       0       0       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0       0       0
   546 ;;      Totals:         1       0       0       0       0       0       0
   547 ;;Total ram usage:        1 bytes
   548 ;; Hardware stack levels required when called: 6
   549 ;; This function calls:
   550 ;;		_dashboard
   551 ;;		_init_config
   552 ;;		_password
   553 ;;		_read_adc
   554 ;;		_read_switches
   555 ;; This function is called by:
   556 ;;		Startup code after reset
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text0
   561   000DB4                     __ptext0:
   562                           	callstack 0
   563   000DB4                     _main:
   564                           	callstack 25
   565   000DB4                     
   566                           ;main.c: 32:     init_config();
   567   000DB4  EC4B  F007         	call	_init_config	;wreg free
   568   000DB8                     
   569                           ;main.c: 34:     char main_f = 0, menu_f = 0;
   570   000DB8  0E00               	movlw	0
   571   000DBA  6E18               	movwf	main@main_f^0,c
   572   000DBC                     l1663:
   573                           
   574                           ;main.c: 37:         key = read_switches(1);
   575   000DBC  0E01               	movlw	1
   576   000DBE  ECFD  F005         	call	_read_switches
   577   000DC2  6E21               	movwf	_key^0,c
   578   000DC4                     
   579                           ;main.c: 38:         adc_reg_val = read_adc(0x04);
   580   000DC4  0E04               	movlw	4
   581   000DC6  EC28  F007         	call	_read_adc
   582   000DCA  C001  F01E         	movff	?_read_adc,_adc_reg_val
   583   000DCE  C002  F01F         	movff	?_read_adc+1,_adc_reg_val+1
   584   000DD2                     
   585                           ;main.c: 40:         if (main_f == 0) {
   586   000DD2  5018               	movf	main@main_f^0,w,c
   587   000DD4  A4D8               	btfss	status,2,c
   588   000DD6  EFEF  F006         	goto	u821
   589   000DDA  EFF1  F006         	goto	u820
   590   000DDE                     u821:
   591   000DDE  EFF5  F006         	goto	l1671
   592   000DE2                     u820:
   593   000DE2                     
   594                           ;main.c: 41:             dashboard();
   595   000DE2  EC47  F003         	call	_dashboard	;wreg free
   596                           
   597                           ;main.c: 42:         }
   598   000DE6  EFDE  F006         	goto	l1663
   599   000DEA                     l1671:
   600   000DEA  0418               	decf	main@main_f^0,w,c
   601   000DEC  A4D8               	btfss	status,2,c
   602   000DEE  EFFB  F006         	goto	u831
   603   000DF2  EFFD  F006         	goto	u830
   604   000DF6                     u831:
   605   000DF6  EFDE  F006         	goto	l1663
   606   000DFA                     u830:
   607   000DFA                     
   608                           ;main.c: 44:         {;main.c: 45:             password(key);
   609   000DFA  5021               	movf	_key^0,w,c
   610   000DFC  ECFA  F003         	call	_password
   611   000E00  EFDE  F006         	goto	l1663
   612   000E04  EF00  F000         	goto	start
   613   000E08                     __end_of_main:
   614                           	callstack 0
   615                           
   616 ;; *************** function _read_switches *****************
   617 ;; Defined at:
   618 ;;		line 89 in file "matrix_keypad.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;  detection_ty    1    wreg     unsigned char 
   621 ;; Auto vars:     Size  Location     Type
   622 ;;  detection_ty    1    0[COMRAM] unsigned char 
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      unsigned char 
   625 ;; Registers used:
   626 ;;		wreg, status,2, status,0, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   632 ;;      Params:         0       0       0       0       0       0       0
   633 ;;      Locals:         1       0       0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0
   635 ;;      Totals:         1       0       0       0       0       0       0
   636 ;;Total ram usage:        1 bytes
   637 ;; Hardware stack levels used: 1
   638 ;; Hardware stack levels required when called: 1
   639 ;; This function calls:
   640 ;;		_scan_key
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text1
   647   000BFA                     __ptext1:
   648                           	callstack 0
   649   000BFA                     _read_switches:
   650                           	callstack 29
   651                           
   652                           ;incstack = 0
   653                           ;read_switches@detection_type stored from wreg
   654   000BFA  6E01               	movwf	read_switches@detection_type^0,c
   655   000BFC                     
   656                           ;matrix_keypad.c: 89: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 90: {;matrix_keypad.c: 91:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 93:  if (detection_type == 1)
   657   000BFC  0401               	decf	read_switches@detection_type^0,w,c
   658   000BFE  A4D8               	btfss	status,2,c
   659   000C00  EF04  F006         	goto	u301
   660   000C04  EF06  F006         	goto	u300
   661   000C08                     u301:
   662   000C08  EF2A  F006         	goto	l1321
   663   000C0C                     u300:
   664   000C0C                     
   665                           ;matrix_keypad.c: 94:  {;matrix_keypad.c: 95:   key = scan_key();
   666   000C0C  ECA5  F004         	call	_scan_key	;wreg free
   667   000C10  6E20               	movwf	read_switches@key^0,c
   668   000C12                     
   669                           ;matrix_keypad.c: 96:   if(key != 0xFF && once )
   670   000C12  2820               	incf	read_switches@key^0,w,c
   671   000C14  B4D8               	btfsc	status,2,c
   672   000C16  EF0F  F006         	goto	u311
   673   000C1A  EF11  F006         	goto	u310
   674   000C1E                     u311:
   675   000C1E  EF1E  F006         	goto	l1317
   676   000C22                     u310:
   677   000C22  5038               	movf	read_switches@once^0,w,c
   678   000C24  B4D8               	btfsc	status,2,c
   679   000C26  EF17  F006         	goto	u321
   680   000C2A  EF19  F006         	goto	u320
   681   000C2E                     u321:
   682   000C2E  EF1E  F006         	goto	l1317
   683   000C32                     u320:
   684   000C32                     
   685                           ;matrix_keypad.c: 97:   {;matrix_keypad.c: 98:    once = 0;
   686   000C32  0E00               	movlw	0
   687   000C34  6E38               	movwf	read_switches@once^0,c
   688                           
   689                           ;matrix_keypad.c: 99:    return key;
   690   000C36  5020               	movf	read_switches@key^0,w,c
   691   000C38  EF37  F006         	goto	l158
   692   000C3C                     l1317:
   693   000C3C  2820               	incf	read_switches@key^0,w,c
   694   000C3E  A4D8               	btfss	status,2,c
   695   000C40  EF24  F006         	goto	u331
   696   000C44  EF26  F006         	goto	u330
   697   000C48                     u331:
   698   000C48  EF36  F006         	goto	l1327
   699   000C4C                     u330:
   700   000C4C                     
   701                           ;matrix_keypad.c: 102:   {;matrix_keypad.c: 103:    once = 1;
   702   000C4C  0E01               	movlw	1
   703   000C4E  6E38               	movwf	read_switches@once^0,c
   704   000C50  EF36  F006         	goto	l1327
   705   000C54                     l1321:
   706   000C54  5001               	movf	read_switches@detection_type^0,w,c
   707   000C56  A4D8               	btfss	status,2,c
   708   000C58  EF30  F006         	goto	u341
   709   000C5C  EF32  F006         	goto	u340
   710   000C60                     u341:
   711   000C60  EF36  F006         	goto	l1327
   712   000C64                     u340:
   713   000C64                     
   714                           ;matrix_keypad.c: 107:  {;matrix_keypad.c: 108:   return scan_key();
   715   000C64  ECA5  F004         	call	_scan_key	;wreg free
   716   000C68  EF37  F006         	goto	l158
   717   000C6C                     l1327:
   718                           
   719                           ;matrix_keypad.c: 111:  return 0xFF;
   720   000C6C  0EFF               	movlw	255
   721   000C6E                     l158:
   722   000C6E  0012               	return		;funcret
   723   000C70                     __end_of_read_switches:
   724                           	callstack 0
   725                           
   726 ;; *************** function _scan_key *****************
   727 ;; Defined at:
   728 ;;		line 19 in file "matrix_keypad.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;		None
   731 ;; Auto vars:     Size  Location     Type
   732 ;;		None
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      unsigned char 
   735 ;; Registers used:
   736 ;;		wreg
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   742 ;;      Params:         0       0       0       0       0       0       0
   743 ;;      Locals:         0       0       0       0       0       0       0
   744 ;;      Temps:          0       0       0       0       0       0       0
   745 ;;      Totals:         0       0       0       0       0       0       0
   746 ;;Total ram usage:        0 bytes
   747 ;; Hardware stack levels used: 1
   748 ;; This function calls:
   749 ;;		Nothing
   750 ;; This function is called by:
   751 ;;		_read_switches
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text2
   756   00094A                     __ptext2:
   757                           	callstack 0
   758   00094A                     _scan_key:
   759                           	callstack 29
   760   00094A                     
   761                           ;matrix_keypad.c: 21:  PORTBbits.RB5 = 0;
   762   00094A  9A81               	bcf	129,5,c	;volatile
   763                           
   764                           ;matrix_keypad.c: 22:  PORTBbits.RB6 = 1;
   765   00094C  8C81               	bsf	129,6,c	;volatile
   766                           
   767                           ;matrix_keypad.c: 23:  PORTBbits.RB7 = 1;
   768   00094E  8E81               	bsf	129,7,c	;volatile
   769                           
   770                           ;matrix_keypad.c: 25:  if (PORTBbits.RB1 == 0)
   771   000950  B281               	btfsc	129,1,c	;volatile
   772   000952  EFAD  F004         	goto	u81
   773   000956  EFAF  F004         	goto	u80
   774   00095A                     u81:
   775   00095A  EFB2  F004         	goto	l128
   776   00095E                     u80:
   777   00095E                     
   778                           ;matrix_keypad.c: 26:  {;matrix_keypad.c: 27:   return 1;
   779   00095E  0E01               	movlw	1
   780   000960  EF28  F005         	goto	l129
   781   000964                     l128:
   782   000964  B481               	btfsc	129,2,c	;volatile
   783   000966  EFB7  F004         	goto	u91
   784   00096A  EFB9  F004         	goto	u90
   785   00096E                     u91:
   786   00096E  EFBC  F004         	goto	l131
   787   000972                     u90:
   788   000972                     
   789                           ;matrix_keypad.c: 30:  {;matrix_keypad.c: 31:   return 4;
   790   000972  0E04               	movlw	4
   791   000974  EF28  F005         	goto	l129
   792   000978                     l131:
   793   000978  B681               	btfsc	129,3,c	;volatile
   794   00097A  EFC1  F004         	goto	u101
   795   00097E  EFC3  F004         	goto	u100
   796   000982                     u101:
   797   000982  EFC6  F004         	goto	l133
   798   000986                     u100:
   799   000986                     
   800                           ;matrix_keypad.c: 34:  {;matrix_keypad.c: 35:   return 7;
   801   000986  0E07               	movlw	7
   802   000988  EF28  F005         	goto	l129
   803   00098C                     l133:
   804   00098C  B881               	btfsc	129,4,c	;volatile
   805   00098E  EFCB  F004         	goto	u111
   806   000992  EFCD  F004         	goto	u110
   807   000996                     u111:
   808   000996  EFD0  F004         	goto	l130
   809   00099A                     u110:
   810   00099A                     
   811                           ;matrix_keypad.c: 38:  {;matrix_keypad.c: 39:   return 10;
   812   00099A  0E0A               	movlw	10
   813   00099C  EF28  F005         	goto	l129
   814   0009A0                     l130:
   815                           
   816                           ;matrix_keypad.c: 42:  PORTBbits.RB5 = 1;
   817   0009A0  8A81               	bsf	129,5,c	;volatile
   818                           
   819                           ;matrix_keypad.c: 43:  PORTBbits.RB6 = 0;
   820   0009A2  9C81               	bcf	129,6,c	;volatile
   821                           
   822                           ;matrix_keypad.c: 44:  PORTBbits.RB7 = 1;
   823   0009A4  8E81               	bsf	129,7,c	;volatile
   824                           
   825                           ;matrix_keypad.c: 46:  if (PORTBbits.RB1 == 0)
   826   0009A6  B281               	btfsc	129,1,c	;volatile
   827   0009A8  EFD8  F004         	goto	u121
   828   0009AC  EFDA  F004         	goto	u120
   829   0009B0                     u121:
   830   0009B0  EFDD  F004         	goto	l136
   831   0009B4                     u120:
   832   0009B4                     
   833                           ;matrix_keypad.c: 47:  {;matrix_keypad.c: 48:   return 2;
   834   0009B4  0E02               	movlw	2
   835   0009B6  EF28  F005         	goto	l129
   836   0009BA                     l136:
   837   0009BA  B481               	btfsc	129,2,c	;volatile
   838   0009BC  EFE2  F004         	goto	u131
   839   0009C0  EFE4  F004         	goto	u130
   840   0009C4                     u131:
   841   0009C4  EFE7  F004         	goto	l138
   842   0009C8                     u130:
   843   0009C8                     
   844                           ;matrix_keypad.c: 51:  {;matrix_keypad.c: 52:   return 5;
   845   0009C8  0E05               	movlw	5
   846   0009CA  EF28  F005         	goto	l129
   847   0009CE                     l138:
   848   0009CE  B681               	btfsc	129,3,c	;volatile
   849   0009D0  EFEC  F004         	goto	u141
   850   0009D4  EFEE  F004         	goto	u140
   851   0009D8                     u141:
   852   0009D8  EFF1  F004         	goto	l140
   853   0009DC                     u140:
   854   0009DC                     
   855                           ;matrix_keypad.c: 55:  {;matrix_keypad.c: 56:   return 8;
   856   0009DC  0E08               	movlw	8
   857   0009DE  EF28  F005         	goto	l129
   858   0009E2                     l140:
   859   0009E2  B881               	btfsc	129,4,c	;volatile
   860   0009E4  EFF6  F004         	goto	u151
   861   0009E8  EFF8  F004         	goto	u150
   862   0009EC                     u151:
   863   0009EC  EFFB  F004         	goto	l137
   864   0009F0                     u150:
   865   0009F0                     
   866                           ;matrix_keypad.c: 59:  {;matrix_keypad.c: 60:   return 11;
   867   0009F0  0E0B               	movlw	11
   868   0009F2  EF28  F005         	goto	l129
   869   0009F6                     l137:
   870                           
   871                           ;matrix_keypad.c: 63:  PORTBbits.RB5 = 1;
   872   0009F6  8A81               	bsf	129,5,c	;volatile
   873                           
   874                           ;matrix_keypad.c: 64:  PORTBbits.RB6 = 1;
   875   0009F8  8C81               	bsf	129,6,c	;volatile
   876                           
   877                           ;matrix_keypad.c: 65:  PORTBbits.RB7 = 0;
   878   0009FA  9E81               	bcf	129,7,c	;volatile
   879                           
   880                           ;matrix_keypad.c: 67:  PORTBbits.RB7 = 0;
   881   0009FC  9E81               	bcf	129,7,c	;volatile
   882                           
   883                           ;matrix_keypad.c: 69:  if (PORTBbits.RB1 == 0)
   884   0009FE  B281               	btfsc	129,1,c	;volatile
   885   000A00  EF04  F005         	goto	u161
   886   000A04  EF06  F005         	goto	u160
   887   000A08                     u161:
   888   000A08  EF09  F005         	goto	l143
   889   000A0C                     u160:
   890   000A0C                     
   891                           ;matrix_keypad.c: 70:  {;matrix_keypad.c: 71:   return 3;
   892   000A0C  0E03               	movlw	3
   893   000A0E  EF28  F005         	goto	l129
   894   000A12                     l143:
   895   000A12  B481               	btfsc	129,2,c	;volatile
   896   000A14  EF0E  F005         	goto	u171
   897   000A18  EF10  F005         	goto	u170
   898   000A1C                     u171:
   899   000A1C  EF13  F005         	goto	l145
   900   000A20                     u170:
   901   000A20                     
   902                           ;matrix_keypad.c: 74:  {;matrix_keypad.c: 75:   return 6;
   903   000A20  0E06               	movlw	6
   904   000A22  EF28  F005         	goto	l129
   905   000A26                     l145:
   906   000A26  B681               	btfsc	129,3,c	;volatile
   907   000A28  EF18  F005         	goto	u181
   908   000A2C  EF1A  F005         	goto	u180
   909   000A30                     u181:
   910   000A30  EF1D  F005         	goto	l147
   911   000A34                     u180:
   912   000A34                     
   913                           ;matrix_keypad.c: 78:  {;matrix_keypad.c: 79:   return 9;
   914   000A34  0E09               	movlw	9
   915   000A36  EF28  F005         	goto	l129
   916   000A3A                     l147:
   917   000A3A  B881               	btfsc	129,4,c	;volatile
   918   000A3C  EF22  F005         	goto	u191
   919   000A40  EF24  F005         	goto	u190
   920   000A44                     u191:
   921   000A44  EF27  F005         	goto	l146
   922   000A48                     u190:
   923   000A48                     
   924                           ;matrix_keypad.c: 82:  {;matrix_keypad.c: 83:   return 12;
   925   000A48  0E0C               	movlw	12
   926   000A4A  EF28  F005         	goto	l129
   927   000A4E                     l146:
   928   000A4E                     
   929                           ;matrix_keypad.c: 86:  return 0xFF;
   930   000A4E  0EFF               	movlw	255
   931   000A50                     l129:
   932   000A50  0012               	return		;funcret
   933   000A52                     __end_of_scan_key:
   934                           	callstack 0
   935                           
   936 ;; *************** function _read_adc *****************
   937 ;; Defined at:
   938 ;;		line 43 in file "adc.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  channel         1    wreg     unsigned char 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  channel         1    6[COMRAM] unsigned char 
   943 ;;  reg_val         2    4[COMRAM] unsigned short 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  2    0[COMRAM] unsigned short 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   953 ;;      Params:         2       0       0       0       0       0       0
   954 ;;      Locals:         3       0       0       0       0       0       0
   955 ;;      Temps:          2       0       0       0       0       0       0
   956 ;;      Totals:         7       0       0       0       0       0       0
   957 ;;Total ram usage:        7 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text3
   967   000E50                     __ptext3:
   968                           	callstack 0
   969   000E50                     _read_adc:
   970                           	callstack 30
   971                           
   972                           ;incstack = 0
   973                           ;read_adc@channel stored from wreg
   974   000E50  6E07               	movwf	read_adc@channel^0,c
   975   000E52                     
   976                           ;adc.c: 43: unsigned short read_adc(unsigned char channel);adc.c: 44: {;adc.c: 45:  unsi
      +                          gned short reg_val;;adc.c: 48:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
   977   000E52  C007  F003         	movff	read_adc@channel,??_read_adc
   978   000E56  90D8               	bcf	status,0,c
   979   000E58  3603               	rlcf	??_read_adc^0,f,c
   980   000E5A  90D8               	bcf	status,0,c
   981   000E5C  3603               	rlcf	??_read_adc^0,f,c
   982   000E5E  50C2               	movf	194,w,c	;volatile
   983   000E60  0BC3               	andlw	195
   984   000E62  1003               	iorwf	??_read_adc^0,w,c
   985   000E64  6EC2               	movwf	194,c	;volatile
   986   000E66                     
   987                           ;adc.c: 51:  GO = 1;
   988   000E66  82C2               	bsf	4034,1,c	;volatile
   989   000E68                     l36:
   990   000E68  B2C2               	btfsc	4034,1,c	;volatile
   991   000E6A  EF39  F007         	goto	u661
   992   000E6E  EF3B  F007         	goto	u660
   993   000E72                     u661:
   994   000E72  EF34  F007         	goto	l36
   995   000E76                     u660:
   996   000E76                     
   997                           ;adc.c: 53:  reg_val = (ADRESH << 8) | ADRESL;
   998   000E76  50C3               	movf	195,w,c	;volatile
   999   000E78  CFC4 F003          	movff	4036,??_read_adc	;volatile
  1000   000E7C  6A04               	clrf	(??_read_adc+1)^0,c
  1001   000E7E  C003  F004         	movff	??_read_adc,??_read_adc+1
  1002   000E82  6A03               	clrf	??_read_adc^0,c
  1003   000E84  1003               	iorwf	??_read_adc^0,w,c
  1004   000E86  6E05               	movwf	read_adc@reg_val^0,c
  1005   000E88  5004               	movf	(??_read_adc+1)^0,w,c
  1006   000E8A  6E06               	movwf	(read_adc@reg_val+1)^0,c
  1007   000E8C                     
  1008                           ;adc.c: 55:  return reg_val;
  1009   000E8C  C005  F001         	movff	read_adc@reg_val,?_read_adc
  1010   000E90  C006  F002         	movff	read_adc@reg_val+1,?_read_adc+1
  1011   000E94  0012               	return		;funcret
  1012   000E96                     __end_of_read_adc:
  1013                           	callstack 0
  1014                           
  1015 ;; *************** function _password *****************
  1016 ;; Defined at:
  1017 ;;		line 30 in file "password.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  key             1    wreg     unsigned char 
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  key             1   22[COMRAM] unsigned char 
  1022 ;;  temp_passwor    4   18[COMRAM] unsigned char [4]
  1023 ;;  pass            4   14[COMRAM] unsigned char [4]
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1033 ;;      Params:         0       0       0       0       0       0       0
  1034 ;;      Locals:         9       0       0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0       0
  1036 ;;      Totals:         9       0       0       0       0       0       0
  1037 ;;Total ram usage:        9 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 2
  1040 ;; This function calls:
  1041 ;;		_clcd_print
  1042 ;;		_clcd_putch
  1043 ;;		_my_strcmp
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text4
  1050   0007F4                     __ptext4:
  1051                           	callstack 0
  1052   0007F4                     _password:
  1053                           	callstack 28
  1054                           
  1055                           ;incstack = 0
  1056                           ;password@key stored from wreg
  1057   0007F4  6E17               	movwf	password@key^0,c
  1058   0007F6                     
  1059                           ;password.c: 30: void password(char key);password.c: 31: {;password.c: 32:     clcd_prin
      +                          t(" Enter Password ", (0x80 + (0)));
  1060   0007F6  0E26               	movlw	low STR_11
  1061   0007F8  6E03               	movwf	clcd_print@data^0,c
  1062   0007FA  5003               	movf	clcd_print@data^0,w,c
  1063   0007FC  A4D8               	btfss	status,2,c
  1064   0007FE  0E06               	movlw	high __smallconst
  1065   000800  6E04               	movwf	(clcd_print@data+1)^0,c
  1066   000802  0E80               	movlw	128
  1067   000804  6E05               	movwf	clcd_print@addr^0,c
  1068   000806  EC72  F006         	call	_clcd_print	;wreg free
  1069   00080A                     
  1070                           ;password.c: 33:     char pass[4]="0000";
  1071   00080A  C033  F00F         	movff	password@F10489,password@pass
  1072   00080E  C034  F010         	movff	password@F10489+1,password@pass+1
  1073   000812  C035  F011         	movff	password@F10489+2,password@pass+2
  1074   000816  C036  F012         	movff	password@F10489+3,password@pass+3
  1075   00081A                     
  1076                           ;password.c: 34:     char temp_password[4];;password.c: 36:     if (key == 5) {
  1077   00081A  0E05               	movlw	5
  1078   00081C  1817               	xorwf	password@key^0,w,c
  1079   00081E  A4D8               	btfss	status,2,c
  1080   000820  EF14  F004         	goto	u771
  1081   000824  EF16  F004         	goto	u770
  1082   000828                     u771:
  1083   000828  EF26  F004         	goto	l1627
  1084   00082C                     u770:
  1085   00082C                     
  1086                           ;password.c: 37:             temp_password[i] = '0';
  1087   00082C  501C               	movf	_i^0,w,c
  1088   00082E  0F13               	addlw	low password@temp_password
  1089   000830  6ED9               	movwf	fsr2l,c
  1090   000832  6ADA               	clrf	fsr2h,c
  1091   000834  0E30               	movlw	48
  1092   000836  6EDF               	movwf	indf2,c
  1093   000838                     
  1094                           ;password.c: 38:             clcd_putch('*', (0xC0 + (i)));
  1095   000838  501C               	movf	_i^0,w,c
  1096   00083A  0FC0               	addlw	192
  1097   00083C  6E0D               	movwf	clcd_putch@addr^0,c
  1098   00083E  0E2A               	movlw	42
  1099   000840  ECD6  F007         	call	_clcd_putch
  1100   000844                     l1625:
  1101                           
  1102                           ;password.c: 39:             i++;
  1103   000844  4A1C               	infsnz	_i^0,f,c
  1104   000846  2A1D               	incf	(_i+1)^0,f,c
  1105                           
  1106                           ;password.c: 41:         } else if (key == 6) {
  1107   000848  EF3D  F004         	goto	l1635
  1108   00084C                     l1627:
  1109   00084C  0E06               	movlw	6
  1110   00084E  1817               	xorwf	password@key^0,w,c
  1111   000850  A4D8               	btfss	status,2,c
  1112   000852  EF2D  F004         	goto	u781
  1113   000856  EF2F  F004         	goto	u780
  1114   00085A                     u781:
  1115   00085A  EF3D  F004         	goto	l1635
  1116   00085E                     u780:
  1117   00085E                     
  1118                           ;password.c: 42:             temp_password[i] = '1';
  1119   00085E  501C               	movf	_i^0,w,c
  1120   000860  0F13               	addlw	low password@temp_password
  1121   000862  6ED9               	movwf	fsr2l,c
  1122   000864  6ADA               	clrf	fsr2h,c
  1123   000866  0E31               	movlw	49
  1124   000868  6EDF               	movwf	indf2,c
  1125   00086A                     
  1126                           ;password.c: 43:             clcd_putch('*', (0xC0 + (i)));
  1127   00086A  501C               	movf	_i^0,w,c
  1128   00086C  0FC0               	addlw	192
  1129   00086E  6E0D               	movwf	clcd_putch@addr^0,c
  1130   000870  0E2A               	movlw	42
  1131   000872  ECD6  F007         	call	_clcd_putch
  1132   000876  EF22  F004         	goto	l1625
  1133   00087A                     l1635:
  1134                           
  1135                           ;password.c: 46:         if (i == 4) {
  1136   00087A  0E04               	movlw	4
  1137   00087C  181C               	xorwf	_i^0,w,c
  1138   00087E  101D               	iorwf	(_i+1)^0,w,c
  1139   000880  A4D8               	btfss	status,2,c
  1140   000882  EF45  F004         	goto	u791
  1141   000886  EF47  F004         	goto	u790
  1142   00088A                     u791:
  1143   00088A  EF4C  F004         	goto	l1639
  1144   00088E                     u790:
  1145   00088E                     
  1146                           ;password.c: 47:             temp_password[i] = '\0';
  1147   00088E  501C               	movf	_i^0,w,c
  1148   000890  0F13               	addlw	low password@temp_password
  1149   000892  6ED9               	movwf	fsr2l,c
  1150   000894  6ADA               	clrf	fsr2h,c
  1151   000896  6ADF               	clrf	indf2,c
  1152   000898                     l1639:
  1153                           
  1154                           ;password.c: 49:     if(my_strcmp(pass,temp_password)==0)
  1155   000898  0E0F               	movlw	low password@pass
  1156   00089A  6E01               	movwf	my_strcmp@one^0,c
  1157   00089C  0E13               	movlw	low password@temp_password
  1158   00089E  6E02               	movwf	my_strcmp@two^0,c
  1159   0008A0  EC7D  F005         	call	_my_strcmp	;wreg free
  1160   0008A4  5001               	movf	?_my_strcmp^0,w,c
  1161   0008A6  1002               	iorwf	(?_my_strcmp+1)^0,w,c
  1162   0008A8  A4D8               	btfss	status,2,c
  1163   0008AA  EF59  F004         	goto	u801
  1164   0008AE  EF5B  F004         	goto	u800
  1165   0008B2                     u801:
  1166   0008B2  EF67  F004         	goto	l1643
  1167   0008B6                     u800:
  1168   0008B6                     
  1169                           ;password.c: 50:     {;password.c: 51:         clcd_print("SUCCESS",(0xC0 + (2)));
  1170   0008B6  0E6D               	movlw	low STR_12
  1171   0008B8  6E03               	movwf	clcd_print@data^0,c
  1172   0008BA  5003               	movf	clcd_print@data^0,w,c
  1173   0008BC  A4D8               	btfss	status,2,c
  1174   0008BE  0E06               	movlw	high __smallconst
  1175   0008C0  6E04               	movwf	(clcd_print@data+1)^0,c
  1176   0008C2  0EC2               	movlw	194
  1177   0008C4  6E05               	movwf	clcd_print@addr^0,c
  1178   0008C6  EC72  F006         	call	_clcd_print	;wreg free
  1179                           
  1180                           ;password.c: 52:     }
  1181   0008CA  EFA4  F004         	goto	l226
  1182   0008CE                     l1643:
  1183                           
  1184                           ;password.c: 54:     {;password.c: 55:         chance--;
  1185   0008CE  0637               	decf	_chance^0,f,c
  1186   0008D0                     
  1187                           ;password.c: 56:         i=0;
  1188   0008D0  0E00               	movlw	0
  1189   0008D2  6E1D               	movwf	(_i+1)^0,c
  1190   0008D4  0E00               	movlw	0
  1191   0008D6  6E1C               	movwf	_i^0,c
  1192   0008D8                     
  1193                           ;password.c: 57:         if(chance==0)
  1194   0008D8  5037               	movf	_chance^0,w,c
  1195   0008DA  A4D8               	btfss	status,2,c
  1196   0008DC  EF72  F004         	goto	u811
  1197   0008E0  EF74  F004         	goto	u810
  1198   0008E4                     u811:
  1199   0008E4  EF8A  F004         	goto	l1651
  1200   0008E8                     u810:
  1201   0008E8                     
  1202                           ;password.c: 58:         {;password.c: 59:            clcd_print("Attempt Over",(0x80 + 
      +                          (0)));
  1203   0008E8  0E57               	movlw	low STR_13
  1204   0008EA  6E03               	movwf	clcd_print@data^0,c
  1205   0008EC  5003               	movf	clcd_print@data^0,w,c
  1206   0008EE  A4D8               	btfss	status,2,c
  1207   0008F0  0E06               	movlw	high __smallconst
  1208   0008F2  6E04               	movwf	(clcd_print@data+1)^0,c
  1209   0008F4  0E80               	movlw	128
  1210   0008F6  6E05               	movwf	clcd_print@addr^0,c
  1211   0008F8  EC72  F006         	call	_clcd_print	;wreg free
  1212                           
  1213                           ;password.c: 60:            clcd_print("Verification failed",(0xC0 + (0)));
  1214   0008FC  0E01               	movlw	low STR_14
  1215   0008FE  6E03               	movwf	clcd_print@data^0,c
  1216   000900  5003               	movf	clcd_print@data^0,w,c
  1217   000902  A4D8               	btfss	status,2,c
  1218   000904  0E06               	movlw	high __smallconst
  1219   000906  6E04               	movwf	(clcd_print@data+1)^0,c
  1220   000908  0EC0               	movlw	192
  1221   00090A  6E05               	movwf	clcd_print@addr^0,c
  1222   00090C  EC72  F006         	call	_clcd_print	;wreg free
  1223                           
  1224                           ;password.c: 61:         }
  1225   000910  EFA4  F004         	goto	l226
  1226   000914                     l1651:
  1227                           
  1228                           ;password.c: 63:         {;password.c: 64:             clcd_print("   Try Again    ", (0
      +                          x80 + (0)));
  1229   000914  0E15               	movlw	low STR_15
  1230   000916  6E03               	movwf	clcd_print@data^0,c
  1231   000918  5003               	movf	clcd_print@data^0,w,c
  1232   00091A  A4D8               	btfss	status,2,c
  1233   00091C  0E06               	movlw	high __smallconst
  1234   00091E  6E04               	movwf	(clcd_print@data+1)^0,c
  1235   000920  0E80               	movlw	128
  1236   000922  6E05               	movwf	clcd_print@addr^0,c
  1237   000924  EC72  F006         	call	_clcd_print	;wreg free
  1238   000928                     
  1239                           ;password.c: 65:             clcd_putch('0' + chance, (0xC0 + (0)));
  1240   000928  0EC0               	movlw	192
  1241   00092A  6E0D               	movwf	clcd_putch@addr^0,c
  1242   00092C  5037               	movf	_chance^0,w,c
  1243   00092E  0F30               	addlw	48
  1244   000930  ECD6  F007         	call	_clcd_putch
  1245   000934                     
  1246                           ;password.c: 66:             clcd_print(" Chances Left ", (0xC0 + (1)));
  1247   000934  0E48               	movlw	low STR_16
  1248   000936  6E03               	movwf	clcd_print@data^0,c
  1249   000938  5003               	movf	clcd_print@data^0,w,c
  1250   00093A  A4D8               	btfss	status,2,c
  1251   00093C  0E06               	movlw	high __smallconst
  1252   00093E  6E04               	movwf	(clcd_print@data+1)^0,c
  1253   000940  0EC1               	movlw	193
  1254   000942  6E05               	movwf	clcd_print@addr^0,c
  1255   000944  EC72  F006         	call	_clcd_print	;wreg free
  1256   000948                     l226:
  1257   000948  0012               	return		;funcret
  1258   00094A                     __end_of_password:
  1259                           	callstack 0
  1260                           
  1261 ;; *************** function _my_strcmp *****************
  1262 ;; Defined at:
  1263 ;;		line 17 in file "password.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  one             1    0[COMRAM] PTR unsigned char 
  1266 ;;		 -> password@pass(4), 
  1267 ;;  two             1    1[COMRAM] PTR unsigned char 
  1268 ;;		 -> password@temp_password(4), 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  i               2    6[COMRAM] int 
  1271 ;;  flag            2    4[COMRAM] int 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  2    0[COMRAM] int 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1281 ;;      Params:         2       0       0       0       0       0       0
  1282 ;;      Locals:         4       0       0       0       0       0       0
  1283 ;;      Temps:          2       0       0       0       0       0       0
  1284 ;;      Totals:         8       0       0       0       0       0       0
  1285 ;;Total ram usage:        8 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_password
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text5
  1295   000AFA                     __ptext5:
  1296                           	callstack 0
  1297   000AFA                     _my_strcmp:
  1298                           	callstack 29
  1299   000AFA                     
  1300                           ;password.c: 17: int my_strcmp(char *one, char *two);password.c: 18: {;password.c: 19:  
      +                             int i=0,flag=0;
  1301   000AFA  0E00               	movlw	0
  1302   000AFC  6E08               	movwf	(my_strcmp@i+1)^0,c
  1303   000AFE  0E00               	movlw	0
  1304   000B00  6E07               	movwf	my_strcmp@i^0,c
  1305   000B02  0E00               	movlw	0
  1306   000B04  6E06               	movwf	(my_strcmp@flag+1)^0,c
  1307   000B06  0E00               	movlw	0
  1308   000B08  6E05               	movwf	my_strcmp@flag^0,c
  1309                           
  1310                           ;password.c: 20:     while(one[i])
  1311   000B0A  EFAC  F005         	goto	l1521
  1312   000B0E                     l1517:
  1313                           
  1314                           ;password.c: 21:     {;password.c: 22:         if(one[i] != two[i])
  1315   000B0E  5002               	movf	my_strcmp@two^0,w,c
  1316   000B10  2407               	addwf	my_strcmp@i^0,w,c
  1317   000B12  6ED9               	movwf	fsr2l,c
  1318   000B14  6ADA               	clrf	fsr2h,c
  1319   000B16  5001               	movf	my_strcmp@one^0,w,c
  1320   000B18  2407               	addwf	my_strcmp@i^0,w,c
  1321   000B1A  6EE1               	movwf	fsr1l,c
  1322   000B1C  6AE2               	clrf	fsr1h,c
  1323   000B1E  50DE               	movf	postinc2,w,c
  1324   000B20  18E6               	xorwf	postinc1,w,c
  1325   000B22  B4D8               	btfsc	status,2,c
  1326   000B24  EF96  F005         	goto	u581
  1327   000B28  EF98  F005         	goto	u580
  1328   000B2C                     u581:
  1329   000B2C  EFAC  F005         	goto	l1521
  1330   000B30                     u580:
  1331   000B30                     
  1332                           ;password.c: 23:         {;password.c: 24:             flag= one[i]-two[i];
  1333   000B30  5001               	movf	my_strcmp@one^0,w,c
  1334   000B32  2407               	addwf	my_strcmp@i^0,w,c
  1335   000B34  6ED9               	movwf	fsr2l,c
  1336   000B36  6ADA               	clrf	fsr2h,c
  1337   000B38  50DF               	movf	indf2,w,c
  1338   000B3A  6E03               	movwf	??_my_strcmp^0,c
  1339   000B3C  5002               	movf	my_strcmp@two^0,w,c
  1340   000B3E  2407               	addwf	my_strcmp@i^0,w,c
  1341   000B40  6ED9               	movwf	fsr2l,c
  1342   000B42  6ADA               	clrf	fsr2h,c
  1343   000B44  50DF               	movf	indf2,w,c
  1344   000B46  6E04               	movwf	(??_my_strcmp+1)^0,c
  1345   000B48  5004               	movf	(??_my_strcmp+1)^0,w,c
  1346   000B4A  5C03               	subwf	??_my_strcmp^0,w,c
  1347   000B4C  6E05               	movwf	my_strcmp@flag^0,c
  1348   000B4E  6A06               	clrf	(my_strcmp@flag+1)^0,c
  1349   000B50  A0D8               	btfss	status,0,c
  1350   000B52  0606               	decf	(my_strcmp@flag+1)^0,f,c
  1351                           
  1352                           ;password.c: 25:             break;
  1353   000B54  EFB8  F005         	goto	l212
  1354   000B58                     l1521:
  1355                           
  1356                           ;password.c: 20:     while(one[i])
  1357   000B58  5001               	movf	my_strcmp@one^0,w,c
  1358   000B5A  2407               	addwf	my_strcmp@i^0,w,c
  1359   000B5C  6ED9               	movwf	fsr2l,c
  1360   000B5E  6ADA               	clrf	fsr2h,c
  1361   000B60  50DF               	movf	indf2,w,c
  1362   000B62  A4D8               	btfss	status,2,c
  1363   000B64  EFB6  F005         	goto	u591
  1364   000B68  EFB8  F005         	goto	u590
  1365   000B6C                     u591:
  1366   000B6C  EF87  F005         	goto	l1517
  1367   000B70                     u590:
  1368   000B70                     l212:
  1369                           
  1370                           ;password.c: 28:     return flag;
  1371   000B70  C005  F001         	movff	my_strcmp@flag,?_my_strcmp
  1372   000B74  C006  F002         	movff	my_strcmp@flag+1,?_my_strcmp+1
  1373   000B78  0012               	return		;funcret
  1374   000B7A                     __end_of_my_strcmp:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function _init_config *****************
  1378 ;; Defined at:
  1379 ;;		line 17 in file "main.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1393 ;;      Params:         0       0       0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0
  1396 ;;      Totals:         0       0       0       0       0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 5
  1400 ;; This function calls:
  1401 ;;		_clcd_print
  1402 ;;		_init_adc
  1403 ;;		_init_clcd
  1404 ;;		_init_ds1307
  1405 ;;		_init_i2c
  1406 ;;		_init_matrix_keypad
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text6
  1413   000E96                     __ptext6:
  1414                           	callstack 0
  1415   000E96                     _init_config:
  1416                           	callstack 25
  1417   000E96                     
  1418                           ;main.c: 18:     init_clcd();
  1419   000E96  EC29  F005         	call	_init_clcd	;wreg free
  1420                           
  1421                           ;main.c: 19:     init_matrix_keypad();
  1422   000E9A  ECED  F007         	call	_init_matrix_keypad	;wreg free
  1423   000E9E                     
  1424                           ;main.c: 20:     init_adc();
  1425   000E9E  ECB7  F007         	call	_init_adc	;wreg free
  1426   000EA2                     
  1427                           ;main.c: 21:     init_i2c();
  1428   000EA2  ECE2  F007         	call	_init_i2c	;wreg free
  1429                           
  1430                           ;main.c: 22:  init_ds1307();
  1431   000EA6  EC04  F007         	call	_init_ds1307	;wreg free
  1432   000EAA                     
  1433                           ;main.c: 25:     clcd_print("  TIME    EV  SP", (0x80 + (0)));
  1434   000EAA  0E37               	movlw	low STR_1
  1435   000EAC  6E03               	movwf	clcd_print@data^0,c
  1436   000EAE  5003               	movf	clcd_print@data^0,w,c
  1437   000EB0  A4D8               	btfss	status,2,c
  1438   000EB2  0E06               	movlw	high __smallconst
  1439   000EB4  6E04               	movwf	(clcd_print@data+1)^0,c
  1440   000EB6  0E80               	movlw	128
  1441   000EB8  6E05               	movwf	clcd_print@addr^0,c
  1442   000EBA  EC72  F006         	call	_clcd_print	;wreg free
  1443   000EBE                     
  1444                           ;main.c: 26:     clcd_print("00:00:00", (0xC0 + (0)));
  1445   000EBE  0E64               	movlw	low STR_2
  1446   000EC0  6E03               	movwf	clcd_print@data^0,c
  1447   000EC2  5003               	movf	clcd_print@data^0,w,c
  1448   000EC4  A4D8               	btfss	status,2,c
  1449   000EC6  0E06               	movlw	high __smallconst
  1450   000EC8  6E04               	movwf	(clcd_print@data+1)^0,c
  1451   000ECA  0EC0               	movlw	192
  1452   000ECC  6E05               	movwf	clcd_print@addr^0,c
  1453   000ECE  EC72  F006         	call	_clcd_print	;wreg free
  1454   000ED2  0012               	return		;funcret
  1455   000ED4                     __end_of_init_config:
  1456                           	callstack 0
  1457                           
  1458 ;; *************** function _init_matrix_keypad *****************
  1459 ;; Defined at:
  1460 ;;		line 5 in file "matrix_keypad.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, status,2, status,0
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1474 ;;      Params:         0       0       0       0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0       0       0
  1477 ;;      Totals:         0       0       0       0       0       0       0
  1478 ;;Total ram usage:        0 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_init_config
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text7
  1488   000FDA                     __ptext7:
  1489                           	callstack 0
  1490   000FDA                     _init_matrix_keypad:
  1491                           	callstack 29
  1492   000FDA                     
  1493                           ;matrix_keypad.c: 8:  ADCON1 = 0x0F;
  1494   000FDA  0E0F               	movlw	15
  1495   000FDC  6EC1               	movwf	193,c	;volatile
  1496                           
  1497                           ;matrix_keypad.c: 11:  TRISB = 0x1E;
  1498   000FDE  0E1E               	movlw	30
  1499   000FE0  6E93               	movwf	147,c	;volatile
  1500   000FE2                     
  1501                           ;matrix_keypad.c: 14:  RBPU = 0;
  1502   000FE2  9EF1               	bcf	4081,7,c	;volatile
  1503   000FE4                     
  1504                           ;matrix_keypad.c: 16:  PORTB = PORTB | 0xE0;
  1505   000FE4  5081               	movf	129,w,c	;volatile
  1506   000FE6  09E0               	iorlw	224
  1507   000FE8  6E81               	movwf	129,c	;volatile
  1508   000FEA  0012               	return		;funcret
  1509   000FEC                     __end_of_init_matrix_keypad:
  1510                           	callstack 0
  1511                           
  1512 ;; *************** function _init_i2c *****************
  1513 ;; Defined at:
  1514 ;;		line 4 in file "i2c.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, status,2
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1528 ;;      Params:         0       0       0       0       0       0       0
  1529 ;;      Locals:         0       0       0       0       0       0       0
  1530 ;;      Temps:          0       0       0       0       0       0       0
  1531 ;;      Totals:         0       0       0       0       0       0       0
  1532 ;;Total ram usage:        0 bytes
  1533 ;; Hardware stack levels used: 1
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		_init_config
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text8
  1542   000FC4                     __ptext8:
  1543                           	callstack 0
  1544   000FC4                     _init_i2c:
  1545                           	callstack 29
  1546   000FC4                     
  1547                           ;i2c.c: 7:  TRISC3 = 1;
  1548   000FC4  8694               	bsf	3988,3,c	;volatile
  1549                           
  1550                           ;i2c.c: 8:  TRISC4 = 1;
  1551   000FC6  8894               	bsf	3988,4,c	;volatile
  1552   000FC8                     
  1553                           ;i2c.c: 10:  SSPCON1 = 0x28;
  1554   000FC8  0E28               	movlw	40
  1555   000FCA  6EC6               	movwf	198,c	;volatile
  1556                           
  1557                           ;i2c.c: 12:  SSPADD = 0x31;
  1558   000FCC  0E31               	movlw	49
  1559   000FCE  6EC8               	movwf	200,c	;volatile
  1560   000FD0                     
  1561                           ;i2c.c: 14:  CKE = 0;
  1562   000FD0  9CC7               	bcf	4039,6,c	;volatile
  1563   000FD2                     
  1564                           ;i2c.c: 16:  SMP = 1;
  1565   000FD2  8EC7               	bsf	4039,7,c	;volatile
  1566   000FD4                     
  1567                           ;i2c.c: 18:  SSPIF = 0;
  1568   000FD4  969E               	bcf	3998,3,c	;volatile
  1569   000FD6                     
  1570                           ;i2c.c: 20:  BCLIF = 0;
  1571   000FD6  96A1               	bcf	4001,3,c	;volatile
  1572   000FD8  0012               	return		;funcret
  1573   000FDA                     __end_of_init_i2c:
  1574                           	callstack 0
  1575                           
  1576 ;; *************** function _init_ds1307 *****************
  1577 ;; Defined at:
  1578 ;;		line 13 in file "ds1307.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  dummy           1    3[COMRAM] unsigned char 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1592 ;;      Params:         0       0       0       0       0       0       0
  1593 ;;      Locals:         1       0       0       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0
  1595 ;;      Totals:         1       0       0       0       0       0       0
  1596 ;;Total ram usage:        1 bytes
  1597 ;; Hardware stack levels used: 1
  1598 ;; Hardware stack levels required when called: 4
  1599 ;; This function calls:
  1600 ;;		_read_ds1307
  1601 ;;		_write_ds1307
  1602 ;; This function is called by:
  1603 ;;		_init_config
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text9
  1608   000E08                     __ptext9:
  1609                           	callstack 0
  1610   000E08                     _init_ds1307:
  1611                           	callstack 25
  1612   000E08                     
  1613                           ;ds1307.c: 15:  unsigned char dummy;;ds1307.c: 18:  dummy = read_ds1307(0x00);
  1614   000E08  0E00               	movlw	0
  1615   000E0A  ECA2  F007         	call	_read_ds1307
  1616   000E0E  6E04               	movwf	init_ds1307@dummy^0,c
  1617   000E10                     
  1618                           ;ds1307.c: 19:  write_ds1307(0x00, dummy | 0x80);
  1619   000E10  5004               	movf	init_ds1307@dummy^0,w,c
  1620   000E12  0980               	iorlw	128
  1621   000E14  6E02               	movwf	write_ds1307@data^0,c
  1622   000E16  0E00               	movlw	0
  1623   000E18  ECC7  F007         	call	_write_ds1307
  1624   000E1C                     
  1625                           ;ds1307.c: 22:  dummy = read_ds1307(0x02);
  1626   000E1C  0E02               	movlw	2
  1627   000E1E  ECA2  F007         	call	_read_ds1307
  1628   000E22  6E04               	movwf	init_ds1307@dummy^0,c
  1629                           
  1630                           ;ds1307.c: 23:  write_ds1307(0x02, dummy | 0x40);
  1631   000E24  5004               	movf	init_ds1307@dummy^0,w,c
  1632   000E26  0940               	iorlw	64
  1633   000E28  6E02               	movwf	write_ds1307@data^0,c
  1634   000E2A  0E02               	movlw	2
  1635   000E2C  ECC7  F007         	call	_write_ds1307
  1636   000E30                     
  1637                           ;ds1307.c: 38:  write_ds1307(0x07, 0x93);
  1638   000E30  0E93               	movlw	147
  1639   000E32  6E02               	movwf	write_ds1307@data^0,c
  1640   000E34  0E07               	movlw	7
  1641   000E36  ECC7  F007         	call	_write_ds1307
  1642   000E3A                     
  1643                           ;ds1307.c: 41:  dummy = read_ds1307(0x00);
  1644   000E3A  0E00               	movlw	0
  1645   000E3C  ECA2  F007         	call	_read_ds1307
  1646   000E40  6E04               	movwf	init_ds1307@dummy^0,c
  1647                           
  1648                           ;ds1307.c: 42:  write_ds1307(0x00, dummy & 0x7F);
  1649   000E42  5004               	movf	init_ds1307@dummy^0,w,c
  1650   000E44  0B7F               	andlw	127
  1651   000E46  6E02               	movwf	write_ds1307@data^0,c
  1652   000E48  0E00               	movlw	0
  1653   000E4A  ECC7  F007         	call	_write_ds1307
  1654   000E4E  0012               	return		;funcret
  1655   000E50                     __end_of_init_ds1307:
  1656                           	callstack 0
  1657                           
  1658 ;; *************** function _write_ds1307 *****************
  1659 ;; Defined at:
  1660 ;;		line 46 in file "ds1307.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  address         1    wreg     unsigned char 
  1663 ;;  data            1    1[COMRAM] unsigned char 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;  address         1    2[COMRAM] unsigned char 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, status,2, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1675 ;;      Params:         1       0       0       0       0       0       0
  1676 ;;      Locals:         1       0       0       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0       0       0
  1678 ;;      Totals:         2       0       0       0       0       0       0
  1679 ;;Total ram usage:        2 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; Hardware stack levels required when called: 2
  1682 ;; This function calls:
  1683 ;;		_i2c_start
  1684 ;;		_i2c_stop
  1685 ;;		_i2c_write
  1686 ;; This function is called by:
  1687 ;;		_init_ds1307
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text10
  1692   000F8E                     __ptext10:
  1693                           	callstack 0
  1694   000F8E                     _write_ds1307:
  1695                           	callstack 26
  1696                           
  1697                           ;incstack = 0
  1698                           ;write_ds1307@address stored from wreg
  1699   000F8E  6E03               	movwf	write_ds1307@address^0,c
  1700   000F90                     
  1701                           ;ds1307.c: 46: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 47
      +                          : {;ds1307.c: 48:  i2c_start();
  1702   000F90  EC1E  F008         	call	_i2c_start	;wreg free
  1703   000F94                     
  1704                           ;ds1307.c: 49:  i2c_write(0xD0);
  1705   000F94  0ED0               	movlw	208
  1706   000F96  EC0E  F008         	call	_i2c_write
  1707   000F9A                     
  1708                           ;ds1307.c: 50:  i2c_write(address);
  1709   000F9A  5003               	movf	write_ds1307@address^0,w,c
  1710   000F9C  EC0E  F008         	call	_i2c_write
  1711   000FA0                     
  1712                           ;ds1307.c: 51:  i2c_write(data);
  1713   000FA0  5002               	movf	write_ds1307@data^0,w,c
  1714   000FA2  EC0E  F008         	call	_i2c_write
  1715   000FA6                     
  1716                           ;ds1307.c: 52:  i2c_stop();
  1717   000FA6  EC1A  F008         	call	_i2c_stop	;wreg free
  1718   000FAA  0012               	return		;funcret
  1719   000FAC                     __end_of_write_ds1307:
  1720                           	callstack 0
  1721                           
  1722 ;; *************** function _init_clcd *****************
  1723 ;; Defined at:
  1724 ;;		line 28 in file "clcd.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;		None
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;		None
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1738 ;;      Params:         0       0       0       0       0       0       0
  1739 ;;      Locals:         0       0       0       0       0       0       0
  1740 ;;      Temps:          1       0       0       0       0       0       0
  1741 ;;      Totals:         1       0       0       0       0       0       0
  1742 ;;Total ram usage:        1 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; Hardware stack levels required when called: 1
  1745 ;; This function calls:
  1746 ;;		_clcd_write
  1747 ;; This function is called by:
  1748 ;;		_init_config
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text11
  1753   000A52                     __ptext11:
  1754                           	callstack 0
  1755   000A52                     _init_clcd:
  1756                           	callstack 28
  1757   000A52                     
  1758                           ;clcd.c: 31:  TRISD = 0x00;
  1759   000A52  0E00               	movlw	0
  1760   000A54  6E95               	movwf	149,c	;volatile
  1761   000A56                     
  1762                           ;clcd.c: 33:  TRISC = TRISC & 0xF8;
  1763   000A56  5094               	movf	148,w,c	;volatile
  1764   000A58  0BF8               	andlw	248
  1765   000A5A  6E94               	movwf	148,c	;volatile
  1766   000A5C                     
  1767                           ;clcd.c: 35:  RC0 = 0;
  1768   000A5C  9082               	bcf	3970,0,c	;volatile
  1769   000A5E                     
  1770                           ;clcd.c: 39:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1771   000A5E  0EC3               	movlw	195
  1772   000A60  6E03               	movwf	??_init_clcd^0,c
  1773   000A62  0ECD               	movlw	205
  1774   000A64                     u847:
  1775   000A64  2EE8               	decfsz	wreg,f,c
  1776   000A66  D7FE               	bra	u847
  1777   000A68  2E03               	decfsz	??_init_clcd^0,f,c
  1778   000A6A  D7FC               	bra	u847
  1779   000A6C  0000               	nop	
  1780   000A6E                     
  1781                           ;clcd.c: 42:     clcd_write(0x33, 0 );
  1782   000A6E  0E00               	movlw	0
  1783   000A70  6E01               	movwf	clcd_write@control_bit^0,c
  1784   000A72  0E33               	movlw	51
  1785   000A74  EC6A  F007         	call	_clcd_write
  1786   000A78                     
  1787                           ;clcd.c: 43:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1788   000A78  0E1B               	movlw	27
  1789   000A7A  6E03               	movwf	??_init_clcd^0,c
  1790   000A7C  0E9E               	movlw	158
  1791   000A7E                     u857:
  1792   000A7E  2EE8               	decfsz	wreg,f,c
  1793   000A80  D7FE               	bra	u857
  1794   000A82  2E03               	decfsz	??_init_clcd^0,f,c
  1795   000A84  D7FC               	bra	u857
  1796   000A86  D000               	nop2	
  1797   000A88                     
  1798                           ;clcd.c: 44:     clcd_write(0x33, 0 );
  1799   000A88  0E00               	movlw	0
  1800   000A8A  6E01               	movwf	clcd_write@control_bit^0,c
  1801   000A8C  0E33               	movlw	51
  1802   000A8E  EC6A  F007         	call	_clcd_write
  1803   000A92                     
  1804                           ;clcd.c: 45:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1805   000A92  0EA6               	movlw	166
  1806   000A94                     u867:
  1807   000A94  2EE8               	decfsz	wreg,f,c
  1808   000A96  D7FE               	bra	u867
  1809   000A98  D000               	nop2	
  1810   000A9A                     
  1811                           ;clcd.c: 46:     clcd_write(0x33, 0 );
  1812   000A9A  0E00               	movlw	0
  1813   000A9C  6E01               	movwf	clcd_write@control_bit^0,c
  1814   000A9E  0E33               	movlw	51
  1815   000AA0  EC6A  F007         	call	_clcd_write
  1816   000AA4                     
  1817                           ;clcd.c: 47:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1818   000AA4  D000               	nop2		;2 cycle nop
  1819   000AA6  D000               	nop2		;2 cycle nop
  1820   000AA8  0000               	nop	
  1821   000AAA                     
  1822                           ;clcd.c: 49:     clcd_write(0x02, 0);
  1823   000AAA  0E00               	movlw	0
  1824   000AAC  6E01               	movwf	clcd_write@control_bit^0,c
  1825   000AAE  0E02               	movlw	2
  1826   000AB0  EC6A  F007         	call	_clcd_write
  1827   000AB4                     
  1828                           ;clcd.c: 50:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1829   000AB4  0EA6               	movlw	166
  1830   000AB6                     u877:
  1831   000AB6  2EE8               	decfsz	wreg,f,c
  1832   000AB8  D7FE               	bra	u877
  1833   000ABA  D000               	nop2	
  1834   000ABC                     
  1835                           ;clcd.c: 51:     clcd_write(0x38, 0);
  1836   000ABC  0E00               	movlw	0
  1837   000ABE  6E01               	movwf	clcd_write@control_bit^0,c
  1838   000AC0  0E38               	movlw	56
  1839   000AC2  EC6A  F007         	call	_clcd_write
  1840   000AC6                     
  1841                           ;clcd.c: 52:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1842   000AC6  0EA6               	movlw	166
  1843   000AC8                     u887:
  1844   000AC8  2EE8               	decfsz	wreg,f,c
  1845   000ACA  D7FE               	bra	u887
  1846   000ACC  D000               	nop2	
  1847   000ACE                     
  1848                           ;clcd.c: 53:     clcd_write(0x01, 0);
  1849   000ACE  0E00               	movlw	0
  1850   000AD0  6E01               	movwf	clcd_write@control_bit^0,c
  1851   000AD2  0E01               	movlw	1
  1852   000AD4  EC6A  F007         	call	_clcd_write
  1853   000AD8                     
  1854                           ;clcd.c: 54:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1855   000AD8  0E04               	movlw	4
  1856   000ADA  6E03               	movwf	??_init_clcd^0,c
  1857   000ADC  0E3E               	movlw	62
  1858   000ADE                     u897:
  1859   000ADE  2EE8               	decfsz	wreg,f,c
  1860   000AE0  D7FE               	bra	u897
  1861   000AE2  2E03               	decfsz	??_init_clcd^0,f,c
  1862   000AE4  D7FC               	bra	u897
  1863   000AE6                     
  1864                           ;clcd.c: 55:     clcd_write(0x0C, 0);
  1865   000AE6  0E00               	movlw	0
  1866   000AE8  6E01               	movwf	clcd_write@control_bit^0,c
  1867   000AEA  0E0C               	movlw	12
  1868   000AEC  EC6A  F007         	call	_clcd_write
  1869   000AF0                     
  1870                           ;clcd.c: 56:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1871   000AF0  0EA6               	movlw	166
  1872   000AF2                     u907:
  1873   000AF2  2EE8               	decfsz	wreg,f,c
  1874   000AF4  D7FE               	bra	u907
  1875   000AF6  D000               	nop2	
  1876   000AF8  0012               	return		;funcret
  1877   000AFA                     __end_of_init_clcd:
  1878                           	callstack 0
  1879                           
  1880 ;; *************** function _init_adc *****************
  1881 ;; Defined at:
  1882 ;;		line 4 in file "adc.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1896 ;;      Params:         0       0       0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0
  1899 ;;      Totals:         0       0       0       0       0       0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_init_config
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text12
  1910   000F6E                     __ptext12:
  1911                           	callstack 0
  1912   000F6E                     _init_adc:
  1913                           	callstack 29
  1914   000F6E                     
  1915                           ;adc.c: 7:  ADFM = 1;
  1916   000F6E  8EC0               	bsf	4032,7,c	;volatile
  1917                           
  1918                           ;adc.c: 13:  ACQT2 = 0;
  1919   000F70  9AC0               	bcf	4032,5,c	;volatile
  1920                           
  1921                           ;adc.c: 14:  ACQT1 = 1;
  1922   000F72  88C0               	bsf	4032,4,c	;volatile
  1923                           
  1924                           ;adc.c: 15:  ACQT0 = 0;
  1925   000F74  96C0               	bcf	4032,3,c	;volatile
  1926                           
  1927                           ;adc.c: 21:  ADCS0 = 0;
  1928   000F76  90C0               	bcf	4032,0,c	;volatile
  1929                           
  1930                           ;adc.c: 22:  ADCS1 = 1;
  1931   000F78  82C0               	bsf	4032,1,c	;volatile
  1932                           
  1933                           ;adc.c: 23:  ADCS2 = 0;
  1934   000F7A  94C0               	bcf	4032,2,c	;volatile
  1935                           
  1936                           ;adc.c: 26:  GODONE = 0;
  1937   000F7C  92C2               	bcf	4034,1,c	;volatile
  1938                           
  1939                           ;adc.c: 31:  VCFG1 = 0;
  1940   000F7E  9AC1               	bcf	4033,5,c	;volatile
  1941                           
  1942                           ;adc.c: 33:  VCFG0 = 0;
  1943   000F80  98C1               	bcf	4033,4,c	;volatile
  1944   000F82                     
  1945                           ;adc.c: 36:  ADRESH = 0;
  1946   000F82  0E00               	movlw	0
  1947   000F84  6EC4               	movwf	196,c	;volatile
  1948                           
  1949                           ;adc.c: 37:  ADRESL = 0;
  1950   000F86  0E00               	movlw	0
  1951   000F88  6EC3               	movwf	195,c	;volatile
  1952   000F8A                     
  1953                           ;adc.c: 40:  ADON = 1;
  1954   000F8A  80C2               	bsf	4034,0,c	;volatile
  1955   000F8C  0012               	return		;funcret
  1956   000F8E                     __end_of_init_adc:
  1957                           	callstack 0
  1958                           
  1959 ;; *************** function _dashboard *****************
  1960 ;; Defined at:
  1961 ;;		line 50 in file "dashboard.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  events          8   15[COMRAM] PTR unsigned char [8]
  1966 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(3), 
  1967 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(3), 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1977 ;;      Params:         0       0       0       0       0       0       0
  1978 ;;      Locals:         8       0       0       0       0       0       0
  1979 ;;      Temps:          1       0       0       0       0       0       0
  1980 ;;      Totals:         9       0       0       0       0       0       0
  1981 ;;Total ram usage:        9 bytes
  1982 ;; Hardware stack levels used: 1
  1983 ;; Hardware stack levels required when called: 5
  1984 ;; This function calls:
  1985 ;;		___lwdiv
  1986 ;;		___lwmod
  1987 ;;		_clcd_print
  1988 ;;		_clcd_putch
  1989 ;;		_display_time
  1990 ;;		_get_time
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text13
  1997   00068E                     __ptext13:
  1998                           	callstack 0
  1999   00068E                     _dashboard:
  2000                           	callstack 25
  2001   00068E                     
  2002                           ;dashboard.c: 52:     char *events[8] = {"ON", "GR", "GN", "G1", "G2", "G3", "G4", "C "}
      +                          ;
  2003   00068E  EE20  F02B         	lfsr	2,dashboard@F10501
  2004   000692  EE10  F010         	lfsr	1,dashboard@events
  2005   000696  0E07               	movlw	7
  2006   000698                     u671:
  2007   000698  CFDB FFE3          	movff	plusw2,plusw1
  2008   00069C  06E8               	decf	wreg,f,c
  2009   00069E  E2FC               	bc	u671
  2010   0006A0                     
  2011                           ;dashboard.c: 56:     clcd_print(events[i], (0xC0 + (10)));
  2012   0006A0  501C               	movf	_i^0,w,c
  2013   0006A2  0F10               	addlw	low dashboard@events
  2014   0006A4  6ED9               	movwf	fsr2l,c
  2015   0006A6  6ADA               	clrf	fsr2h,c
  2016   0006A8  50DF               	movf	indf2,w,c
  2017   0006AA  6E0F               	movwf	??_dashboard^0,c
  2018   0006AC  C00F  F003         	movff	??_dashboard,clcd_print@data
  2019   0006B0  5003               	movf	clcd_print@data^0,w,c
  2020   0006B2  A4D8               	btfss	status,2,c
  2021   0006B4  0E06               	movlw	high __smallconst
  2022   0006B6  6E04               	movwf	(clcd_print@data+1)^0,c
  2023   0006B8  0ECA               	movlw	202
  2024   0006BA  6E05               	movwf	clcd_print@addr^0,c
  2025   0006BC  EC72  F006         	call	_clcd_print	;wreg free
  2026   0006C0                     
  2027                           ;dashboard.c: 59:     if (key == 2) {
  2028   0006C0  0E02               	movlw	2
  2029   0006C2  1821               	xorwf	_key^0,w,c
  2030   0006C4  A4D8               	btfss	status,2,c
  2031   0006C6  EF67  F003         	goto	u681
  2032   0006CA  EF69  F003         	goto	u680
  2033   0006CE                     u681:
  2034   0006CE  EF79  F003         	goto	l1591
  2035   0006D2                     u680:
  2036   0006D2                     
  2037                           ;dashboard.c: 60:         if (i < 6) {
  2038   0006D2  BE1D               	btfsc	(_i+1)^0,7,c
  2039   0006D4  EF77  F003         	goto	u690
  2040   0006D8  501D               	movf	(_i+1)^0,w,c
  2041   0006DA  E107               	bnz	u691
  2042   0006DC  0E06               	movlw	6
  2043   0006DE  5C1C               	subwf	_i^0,w,c
  2044   0006E0  B0D8               	btfsc	status,0,c
  2045   0006E2  EF75  F003         	goto	u691
  2046   0006E6  EF77  F003         	goto	u690
  2047   0006EA                     u691:
  2048   0006EA  EF79  F003         	goto	l1591
  2049   0006EE                     u690:
  2050   0006EE                     
  2051                           ;dashboard.c: 61:             i++;
  2052   0006EE  4A1C               	infsnz	_i^0,f,c
  2053   0006F0  2A1D               	incf	(_i+1)^0,f,c
  2054   0006F2                     l1591:
  2055                           
  2056                           ;dashboard.c: 65:     if (key == 3 && i != 7) {
  2057   0006F2  0E03               	movlw	3
  2058   0006F4  1821               	xorwf	_key^0,w,c
  2059   0006F6  A4D8               	btfss	status,2,c
  2060   0006F8  EF80  F003         	goto	u701
  2061   0006FC  EF82  F003         	goto	u700
  2062   000700                     u701:
  2063   000700  EF9D  F003         	goto	l1599
  2064   000704                     u700:
  2065   000704  0E07               	movlw	7
  2066   000706  181C               	xorwf	_i^0,w,c
  2067   000708  101D               	iorwf	(_i+1)^0,w,c
  2068   00070A  B4D8               	btfsc	status,2,c
  2069   00070C  EF8A  F003         	goto	u711
  2070   000710  EF8C  F003         	goto	u710
  2071   000714                     u711:
  2072   000714  EF9D  F003         	goto	l1599
  2073   000718                     u710:
  2074   000718                     
  2075                           ;dashboard.c: 66:         if (i > 1) {
  2076   000718  BE1D               	btfsc	(_i+1)^0,7,c
  2077   00071A  EF98  F003         	goto	u721
  2078   00071E  501D               	movf	(_i+1)^0,w,c
  2079   000720  E109               	bnz	u720
  2080   000722  0E02               	movlw	2
  2081   000724  5C1C               	subwf	_i^0,w,c
  2082   000726  A0D8               	btfss	status,0,c
  2083   000728  EF98  F003         	goto	u721
  2084   00072C  EF9A  F003         	goto	u720
  2085   000730                     u721:
  2086   000730  EF9D  F003         	goto	l1599
  2087   000734                     u720:
  2088   000734                     
  2089                           ;dashboard.c: 67:             i--;
  2090   000734  061C               	decf	_i^0,f,c
  2091   000736  A0D8               	btfss	status,0,c
  2092   000738  061D               	decf	(_i+1)^0,f,c
  2093   00073A                     l1599:
  2094                           
  2095                           ;dashboard.c: 71:     if (key == 1) {
  2096   00073A  0421               	decf	_key^0,w,c
  2097   00073C  A4D8               	btfss	status,2,c
  2098   00073E  EFA3  F003         	goto	u731
  2099   000742  EFA5  F003         	goto	u730
  2100   000746                     u731:
  2101   000746  EFA9  F003         	goto	l1603
  2102   00074A                     u730:
  2103   00074A                     
  2104                           ;dashboard.c: 72:         i = 7;
  2105   00074A  0E00               	movlw	0
  2106   00074C  6E1D               	movwf	(_i+1)^0,c
  2107   00074E  0E07               	movlw	7
  2108   000750  6E1C               	movwf	_i^0,c
  2109   000752                     l1603:
  2110                           
  2111                           ;dashboard.c: 75:     if (i == 7 && key == 2) {
  2112   000752  0E07               	movlw	7
  2113   000754  181C               	xorwf	_i^0,w,c
  2114   000756  101D               	iorwf	(_i+1)^0,w,c
  2115   000758  A4D8               	btfss	status,2,c
  2116   00075A  EFB1  F003         	goto	u741
  2117   00075E  EFB3  F003         	goto	u740
  2118   000762                     u741:
  2119   000762  EFC0  F003         	goto	l1609
  2120   000766                     u740:
  2121   000766  0E02               	movlw	2
  2122   000768  1821               	xorwf	_key^0,w,c
  2123   00076A  A4D8               	btfss	status,2,c
  2124   00076C  EFBA  F003         	goto	u751
  2125   000770  EFBC  F003         	goto	u750
  2126   000774                     u751:
  2127   000774  EFC0  F003         	goto	l1609
  2128   000778                     u750:
  2129   000778                     
  2130                           ;dashboard.c: 76:         i = 2;
  2131   000778  0E00               	movlw	0
  2132   00077A  6E1D               	movwf	(_i+1)^0,c
  2133   00077C  0E02               	movlw	2
  2134   00077E  6E1C               	movwf	_i^0,c
  2135   000780                     l1609:
  2136                           
  2137                           ;dashboard.c: 81:     if (adc_reg_val < 1000)
  2138   000780  0EE8               	movlw	232
  2139   000782  5C1E               	subwf	_adc_reg_val^0,w,c
  2140   000784  0E03               	movlw	3
  2141   000786  581F               	subwfb	(_adc_reg_val+1)^0,w,c
  2142   000788  B0D8               	btfsc	status,0,c
  2143   00078A  EFC9  F003         	goto	u761
  2144   00078E  EFCB  F003         	goto	u760
  2145   000792                     u761:
  2146   000792  EFF5  F003         	goto	l197
  2147   000796                     u760:
  2148   000796                     
  2149                           ;dashboard.c: 82:     {;dashboard.c: 83:         clcd_putch(((adc_reg_val / 100) + 48), 
      +                          (0xC0 + (14)));
  2150   000796  0ECE               	movlw	206
  2151   000798  6E0D               	movwf	clcd_putch@addr^0,c
  2152   00079A  C01E  F001         	movff	_adc_reg_val,___lwdiv@dividend
  2153   00079E  C01F  F002         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  2154   0007A2  0E00               	movlw	0
  2155   0007A4  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2156   0007A6  0E64               	movlw	100
  2157   0007A8  6E03               	movwf	___lwdiv@divisor^0,c
  2158   0007AA  EC38  F006         	call	___lwdiv	;wreg free
  2159   0007AE  5001               	movf	?___lwdiv^0,w,c
  2160   0007B0  0F30               	addlw	48
  2161   0007B2  ECD6  F007         	call	_clcd_putch
  2162                           
  2163                           ;dashboard.c: 84:         clcd_putch(((adc_reg_val / 10 % 10) + 48), (0xC0 + (15)));
  2164   0007B6  0ECF               	movlw	207
  2165   0007B8  6E0D               	movwf	clcd_putch@addr^0,c
  2166   0007BA  0E00               	movlw	0
  2167   0007BC  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2168   0007BE  0E0A               	movlw	10
  2169   0007C0  6E03               	movwf	___lwdiv@divisor^0,c
  2170   0007C2  C01E  F001         	movff	_adc_reg_val,___lwdiv@dividend
  2171   0007C6  C01F  F002         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  2172   0007CA  EC38  F006         	call	___lwdiv	;wreg free
  2173   0007CE  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  2174   0007D2  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  2175   0007D6  0E00               	movlw	0
  2176   0007D8  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  2177   0007DA  0E0A               	movlw	10
  2178   0007DC  6E0A               	movwf	___lwmod@divisor^0,c
  2179   0007DE  ECA8  F006         	call	___lwmod	;wreg free
  2180   0007E2  5008               	movf	?___lwmod^0,w,c
  2181   0007E4  0F30               	addlw	48
  2182   0007E6  ECD6  F007         	call	_clcd_putch
  2183   0007EA                     l197:
  2184                           
  2185                           ;dashboard.c: 88:     get_time();
  2186   0007EA  ECBD  F005         	call	_get_time	;wreg free
  2187   0007EE                     
  2188                           ;dashboard.c: 89:     display_time();
  2189   0007EE  ECFF  F007         	call	_display_time	;wreg free
  2190   0007F2  0012               	return		;funcret
  2191   0007F4                     __end_of_dashboard:
  2192                           	callstack 0
  2193                           
  2194 ;; *************** function _get_time *****************
  2195 ;; Defined at:
  2196 ;;		line 29 in file "dashboard.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, status,2, status,0, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2210 ;;      Params:         0       0       0       0       0       0       0
  2211 ;;      Locals:         0       0       0       0       0       0       0
  2212 ;;      Temps:          0       0       0       0       0       0       0
  2213 ;;      Totals:         0       0       0       0       0       0       0
  2214 ;;Total ram usage:        0 bytes
  2215 ;; Hardware stack levels used: 1
  2216 ;; Hardware stack levels required when called: 4
  2217 ;; This function calls:
  2218 ;;		_read_ds1307
  2219 ;; This function is called by:
  2220 ;;		_dashboard
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text14
  2225   000B7A                     __ptext14:
  2226                           	callstack 0
  2227   000B7A                     _get_time:
  2228                           	callstack 25
  2229   000B7A                     
  2230                           ;dashboard.c: 30:     clock_reg[0] = read_ds1307(0x02);
  2231   000B7A  0E02               	movlw	2
  2232   000B7C  ECA2  F007         	call	_read_ds1307
  2233   000B80  6E19               	movwf	_clock_reg^0,c
  2234                           
  2235                           ;dashboard.c: 31:     clock_reg[1] = read_ds1307(0x01);
  2236   000B82  0E01               	movlw	1
  2237   000B84  ECA2  F007         	call	_read_ds1307
  2238   000B88  6E1A               	movwf	(_clock_reg+1)^0,c
  2239                           
  2240                           ;dashboard.c: 32:     clock_reg[2] = read_ds1307(0x00);
  2241   000B8A  0E00               	movlw	0
  2242   000B8C  ECA2  F007         	call	_read_ds1307
  2243   000B90  6E1B               	movwf	(_clock_reg+2)^0,c
  2244   000B92                     
  2245                           ;dashboard.c: 34:     if (clock_reg[0] & 0x40) {
  2246   000B92  AC19               	btfss	_clock_reg^0,6,c
  2247   000B94  EFCE  F005         	goto	u201
  2248   000B98  EFD0  F005         	goto	u200
  2249   000B9C                     u201:
  2250   000B9C  EFDB  F005         	goto	l1225
  2251   000BA0                     u200:
  2252   000BA0                     
  2253                           ;dashboard.c: 35:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  2254   000BA0  3819               	swapf	_clock_reg^0,w,c
  2255   000BA2  0B0F               	andlw	15
  2256   000BA4  0B01               	andlw	1
  2257   000BA6  0F30               	addlw	48
  2258   000BA8  6E22               	movwf	_time^0,c
  2259                           
  2260                           ;dashboard.c: 36:         time[1] = '0' + (clock_reg[0] & 0x0F);
  2261   000BAA  5019               	movf	_clock_reg^0,w,c
  2262   000BAC  0B0F               	andlw	15
  2263   000BAE  0F30               	addlw	48
  2264   000BB0  6E23               	movwf	(_time+1)^0,c
  2265                           
  2266                           ;dashboard.c: 37:     } else {
  2267   000BB2  EFE4  F005         	goto	l1227
  2268   000BB6                     l1225:
  2269                           
  2270                           ;dashboard.c: 38:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  2271   000BB6  3819               	swapf	_clock_reg^0,w,c
  2272   000BB8  0B0F               	andlw	15
  2273   000BBA  0B03               	andlw	3
  2274   000BBC  0F30               	addlw	48
  2275   000BBE  6E22               	movwf	_time^0,c
  2276                           
  2277                           ;dashboard.c: 39:         time[1] = '0' + (clock_reg[0] & 0x0F);
  2278   000BC0  5019               	movf	_clock_reg^0,w,c
  2279   000BC2  0B0F               	andlw	15
  2280   000BC4  0F30               	addlw	48
  2281   000BC6  6E23               	movwf	(_time+1)^0,c
  2282   000BC8                     l1227:
  2283                           
  2284                           ;dashboard.c: 41:     time[2] = ':';
  2285   000BC8  0E3A               	movlw	58
  2286   000BCA  6E24               	movwf	(_time+2)^0,c
  2287   000BCC                     
  2288                           ;dashboard.c: 42:     time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  2289   000BCC  381A               	swapf	(_clock_reg+1)^0,w,c
  2290   000BCE  0B0F               	andlw	15
  2291   000BD0  0B0F               	andlw	15
  2292   000BD2  0F30               	addlw	48
  2293   000BD4  6E25               	movwf	(_time+3)^0,c
  2294   000BD6                     
  2295                           ;dashboard.c: 43:     time[4] = '0' + (clock_reg[1] & 0x0F);
  2296   000BD6  501A               	movf	(_clock_reg+1)^0,w,c
  2297   000BD8  0B0F               	andlw	15
  2298   000BDA  0F30               	addlw	48
  2299   000BDC  6E26               	movwf	(_time+4)^0,c
  2300   000BDE                     
  2301                           ;dashboard.c: 44:     time[5] = ':';
  2302   000BDE  0E3A               	movlw	58
  2303   000BE0  6E27               	movwf	(_time+5)^0,c
  2304                           
  2305                           ;dashboard.c: 45:     time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  2306   000BE2  381B               	swapf	(_clock_reg+2)^0,w,c
  2307   000BE4  0B0F               	andlw	15
  2308   000BE6  0B0F               	andlw	15
  2309   000BE8  0F30               	addlw	48
  2310   000BEA  6E28               	movwf	(_time+6)^0,c
  2311                           
  2312                           ;dashboard.c: 46:     time[7] = '0' + (clock_reg[2] & 0x0F);
  2313   000BEC  501B               	movf	(_clock_reg+2)^0,w,c
  2314   000BEE  0B0F               	andlw	15
  2315   000BF0  0F30               	addlw	48
  2316   000BF2  6E29               	movwf	(_time+7)^0,c
  2317   000BF4                     
  2318                           ;dashboard.c: 47:     time[8] = '\0';
  2319   000BF4  0E00               	movlw	0
  2320   000BF6  6E2A               	movwf	(_time+8)^0,c
  2321   000BF8  0012               	return		;funcret
  2322   000BFA                     __end_of_get_time:
  2323                           	callstack 0
  2324                           
  2325 ;; *************** function _read_ds1307 *****************
  2326 ;; Defined at:
  2327 ;;		line 55 in file "ds1307.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  address         1    wreg     unsigned char 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  address         1    1[COMRAM] unsigned char 
  2332 ;;  data            1    2[COMRAM] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      unsigned char 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2342 ;;      Params:         0       0       0       0       0       0       0
  2343 ;;      Locals:         2       0       0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0       0       0
  2345 ;;      Totals:         2       0       0       0       0       0       0
  2346 ;;Total ram usage:        2 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; Hardware stack levels required when called: 3
  2349 ;; This function calls:
  2350 ;;		_i2c_read
  2351 ;;		_i2c_rep_start
  2352 ;;		_i2c_start
  2353 ;;		_i2c_stop
  2354 ;;		_i2c_write
  2355 ;; This function is called by:
  2356 ;;		_get_time
  2357 ;;		_init_ds1307
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text15
  2362   000F44                     __ptext15:
  2363                           	callstack 0
  2364   000F44                     _read_ds1307:
  2365                           	callstack 25
  2366                           
  2367                           ;incstack = 0
  2368                           ;read_ds1307@address stored from wreg
  2369   000F44  6E02               	movwf	read_ds1307@address^0,c
  2370   000F46                     
  2371                           ;ds1307.c: 55: unsigned char read_ds1307(unsigned char address);ds1307.c: 56: {;ds1307.c
      +                          : 57:  unsigned char data;;ds1307.c: 59:  i2c_start();
  2372   000F46  EC1E  F008         	call	_i2c_start	;wreg free
  2373   000F4A                     
  2374                           ;ds1307.c: 60:  i2c_write(0xD0);
  2375   000F4A  0ED0               	movlw	208
  2376   000F4C  EC0E  F008         	call	_i2c_write
  2377   000F50                     
  2378                           ;ds1307.c: 61:  i2c_write(address);
  2379   000F50  5002               	movf	read_ds1307@address^0,w,c
  2380   000F52  EC0E  F008         	call	_i2c_write
  2381   000F56                     
  2382                           ;ds1307.c: 62:  i2c_rep_start();
  2383   000F56  EC22  F008         	call	_i2c_rep_start	;wreg free
  2384   000F5A                     
  2385                           ;ds1307.c: 63:  i2c_write(0xD1);
  2386   000F5A  0ED1               	movlw	209
  2387   000F5C  EC0E  F008         	call	_i2c_write
  2388                           
  2389                           ;ds1307.c: 64:  data = i2c_read();
  2390   000F60  EC14  F008         	call	_i2c_read	;wreg free
  2391   000F64  6E03               	movwf	read_ds1307@data^0,c
  2392   000F66                     
  2393                           ;ds1307.c: 65:  i2c_stop();
  2394   000F66  EC1A  F008         	call	_i2c_stop	;wreg free
  2395                           
  2396                           ;ds1307.c: 67:  return data;
  2397   000F6A  5003               	movf	read_ds1307@data^0,w,c
  2398   000F6C  0012               	return		;funcret
  2399   000F6E                     __end_of_read_ds1307:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _i2c_write *****************
  2403 ;; Defined at:
  2404 ;;		line 55 in file "i2c.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  data            1    wreg     unsigned char 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  data            1    0[COMRAM] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2418 ;;      Params:         0       0       0       0       0       0       0
  2419 ;;      Locals:         1       0       0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0
  2421 ;;      Totals:         1       0       0       0       0       0       0
  2422 ;;Total ram usage:        1 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 1
  2425 ;; This function calls:
  2426 ;;		_i2c_idle
  2427 ;; This function is called by:
  2428 ;;		_write_ds1307
  2429 ;;		_read_ds1307
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text16
  2434   00101C                     __ptext16:
  2435                           	callstack 0
  2436   00101C                     _i2c_write:
  2437                           	callstack 26
  2438                           
  2439                           ;incstack = 0
  2440                           ;i2c_write@data stored from wreg
  2441   00101C  6E01               	movwf	i2c_write@data^0,c
  2442   00101E                     
  2443                           ;i2c.c: 55: void i2c_write(unsigned char data);i2c.c: 56: {;i2c.c: 57:  SSPBUF = data;
  2444   00101E  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  2445   001022                     
  2446                           ;i2c.c: 58:  i2c_idle();
  2447   001022  ECF6  F007         	call	_i2c_idle	;wreg free
  2448   001026  0012               	return		;funcret
  2449   001028                     __end_of_i2c_write:
  2450                           	callstack 0
  2451                           
  2452 ;; *************** function _i2c_stop *****************
  2453 ;; Defined at:
  2454 ;;		line 43 in file "i2c.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2468 ;;      Params:         0       0       0       0       0       0       0
  2469 ;;      Locals:         0       0       0       0       0       0       0
  2470 ;;      Temps:          0       0       0       0       0       0       0
  2471 ;;      Totals:         0       0       0       0       0       0       0
  2472 ;;Total ram usage:        0 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; Hardware stack levels required when called: 1
  2475 ;; This function calls:
  2476 ;;		_i2c_idle
  2477 ;; This function is called by:
  2478 ;;		_write_ds1307
  2479 ;;		_read_ds1307
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text17
  2484   001034                     __ptext17:
  2485                           	callstack 0
  2486   001034                     _i2c_stop:
  2487                           	callstack 26
  2488   001034                     
  2489                           ;i2c.c: 45:  PEN = 1;
  2490   001034  84C5               	bsf	4037,2,c	;volatile
  2491   001036                     
  2492                           ;i2c.c: 46:  i2c_idle();
  2493   001036  ECF6  F007         	call	_i2c_idle	;wreg free
  2494   00103A  0012               	return		;funcret
  2495   00103C                     __end_of_i2c_stop:
  2496                           	callstack 0
  2497                           
  2498 ;; *************** function _i2c_start *****************
  2499 ;; Defined at:
  2500 ;;		line 37 in file "i2c.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2514 ;;      Params:         0       0       0       0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0
  2517 ;;      Totals:         0       0       0       0       0       0       0
  2518 ;;Total ram usage:        0 bytes
  2519 ;; Hardware stack levels used: 1
  2520 ;; Hardware stack levels required when called: 1
  2521 ;; This function calls:
  2522 ;;		_i2c_idle
  2523 ;; This function is called by:
  2524 ;;		_write_ds1307
  2525 ;;		_read_ds1307
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	text18
  2530   00103C                     __ptext18:
  2531                           	callstack 0
  2532   00103C                     _i2c_start:
  2533                           	callstack 26
  2534   00103C                     
  2535                           ;i2c.c: 39:  SEN = 1;
  2536   00103C  80C5               	bsf	4037,0,c	;volatile
  2537   00103E                     
  2538                           ;i2c.c: 40:  i2c_idle();
  2539   00103E  ECF6  F007         	call	_i2c_idle	;wreg free
  2540   001042  0012               	return		;funcret
  2541   001044                     __end_of_i2c_start:
  2542                           	callstack 0
  2543                           
  2544 ;; *************** function _i2c_rep_start *****************
  2545 ;; Defined at:
  2546 ;;		line 49 in file "i2c.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;		None
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2560 ;;      Params:         0       0       0       0       0       0       0
  2561 ;;      Locals:         0       0       0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0
  2563 ;;      Totals:         0       0       0       0       0       0       0
  2564 ;;Total ram usage:        0 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 1
  2567 ;; This function calls:
  2568 ;;		_i2c_idle
  2569 ;; This function is called by:
  2570 ;;		_read_ds1307
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text19
  2575   001044                     __ptext19:
  2576                           	callstack 0
  2577   001044                     _i2c_rep_start:
  2578                           	callstack 26
  2579   001044                     
  2580                           ;i2c.c: 51:  RSEN = 1;
  2581   001044  82C5               	bsf	4037,1,c	;volatile
  2582   001046                     
  2583                           ;i2c.c: 52:  i2c_idle();
  2584   001046  ECF6  F007         	call	_i2c_idle	;wreg free
  2585   00104A  0012               	return		;funcret
  2586   00104C                     __end_of_i2c_rep_start:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function _i2c_read *****************
  2590 ;; Defined at:
  2591 ;;		line 73 in file "i2c.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      unsigned char 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2605 ;;      Params:         0       0       0       0       0       0       0
  2606 ;;      Locals:         0       0       0       0       0       0       0
  2607 ;;      Temps:          0       0       0       0       0       0       0
  2608 ;;      Totals:         0       0       0       0       0       0       0
  2609 ;;Total ram usage:        0 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 2
  2612 ;; This function calls:
  2613 ;;		_i2c_no_ack
  2614 ;;		_i2c_rx_mode
  2615 ;; This function is called by:
  2616 ;;		_read_ds1307
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text20
  2621   001028                     __ptext20:
  2622                           	callstack 0
  2623   001028                     _i2c_read:
  2624                           	callstack 25
  2625   001028                     
  2626                           ;i2c.c: 75:  i2c_rx_mode();
  2627   001028  EC26  F008         	call	_i2c_rx_mode	;wreg free
  2628                           
  2629                           ;i2c.c: 76:  i2c_no_ack();
  2630   00102C  EC2A  F008         	call	_i2c_no_ack	;wreg free
  2631   001030                     
  2632                           ;i2c.c: 78:  return SSPBUF;
  2633   001030  50C9               	movf	201,w,c	;volatile
  2634   001032  0012               	return		;funcret
  2635   001034                     __end_of_i2c_read:
  2636                           	callstack 0
  2637                           
  2638 ;; *************** function _i2c_rx_mode *****************
  2639 ;; Defined at:
  2640 ;;		line 61 in file "i2c.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2654 ;;      Params:         0       0       0       0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0
  2657 ;;      Totals:         0       0       0       0       0       0       0
  2658 ;;Total ram usage:        0 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 1
  2661 ;; This function calls:
  2662 ;;		_i2c_idle
  2663 ;; This function is called by:
  2664 ;;		_i2c_read
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text21
  2669   00104C                     __ptext21:
  2670                           	callstack 0
  2671   00104C                     _i2c_rx_mode:
  2672                           	callstack 25
  2673   00104C                     
  2674                           ;i2c.c: 63:  RCEN = 1;
  2675   00104C  86C5               	bsf	4037,3,c	;volatile
  2676   00104E                     
  2677                           ;i2c.c: 64:  i2c_idle();
  2678   00104E  ECF6  F007         	call	_i2c_idle	;wreg free
  2679   001052  0012               	return		;funcret
  2680   001054                     __end_of_i2c_rx_mode:
  2681                           	callstack 0
  2682                           
  2683 ;; *************** function _i2c_idle *****************
  2684 ;; Defined at:
  2685 ;;		line 23 in file "i2c.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		None
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2699 ;;      Params:         0       0       0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0
  2702 ;;      Totals:         0       0       0       0       0       0       0
  2703 ;;Total ram usage:        0 bytes
  2704 ;; Hardware stack levels used: 1
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_i2c_start
  2709 ;;		_i2c_stop
  2710 ;;		_i2c_rep_start
  2711 ;;		_i2c_write
  2712 ;;		_i2c_rx_mode
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text22
  2717   000FEC                     __ptext22:
  2718                           	callstack 0
  2719   000FEC                     _i2c_idle:
  2720                           	callstack 26
  2721   000FEC                     l287:
  2722   000FEC  A69E               	btfss	3998,3,c	;volatile
  2723   000FEE  EFFB  F007         	goto	u11
  2724   000FF2  EFFD  F007         	goto	u10
  2725   000FF6                     u11:
  2726   000FF6  EFF6  F007         	goto	l287
  2727   000FFA                     u10:
  2728   000FFA                     
  2729                           ;i2c.c: 26:  SSPIF = 0;
  2730   000FFA  969E               	bcf	3998,3,c	;volatile
  2731   000FFC  0012               	return		;funcret
  2732   000FFE                     __end_of_i2c_idle:
  2733                           	callstack 0
  2734                           
  2735 ;; *************** function _i2c_no_ack *****************
  2736 ;; Defined at:
  2737 ;;		line 67 in file "i2c.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;		None
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;		None
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		None
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2751 ;;      Params:         0       0       0       0       0       0       0
  2752 ;;      Locals:         0       0       0       0       0       0       0
  2753 ;;      Temps:          0       0       0       0       0       0       0
  2754 ;;      Totals:         0       0       0       0       0       0       0
  2755 ;;Total ram usage:        0 bytes
  2756 ;; Hardware stack levels used: 1
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_i2c_read
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text23
  2765   001054                     __ptext23:
  2766                           	callstack 0
  2767   001054                     _i2c_no_ack:
  2768                           	callstack 26
  2769   001054                     
  2770                           ;i2c.c: 69:  ACKDT = 1;
  2771   001054  8AC5               	bsf	4037,5,c	;volatile
  2772                           
  2773                           ;i2c.c: 70:  ACKEN = 1;
  2774   001056  88C5               	bsf	4037,4,c	;volatile
  2775   001058  0012               	return		;funcret
  2776   00105A                     __end_of_i2c_no_ack:
  2777                           	callstack 0
  2778                           
  2779 ;; *************** function _display_time *****************
  2780 ;; Defined at:
  2781 ;;		line 25 in file "dashboard.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2795 ;;      Params:         0       0       0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0       0       0
  2798 ;;      Totals:         0       0       0       0       0       0       0
  2799 ;;Total ram usage:        0 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; Hardware stack levels required when called: 2
  2802 ;; This function calls:
  2803 ;;		_clcd_print
  2804 ;; This function is called by:
  2805 ;;		_dashboard
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text24
  2810   000FFE                     __ptext24:
  2811                           	callstack 0
  2812   000FFE                     _display_time:
  2813                           	callstack 27
  2814   000FFE                     
  2815                           ;dashboard.c: 26:     clcd_print(time, (0xC0 + (0)));
  2816   000FFE  0E22               	movlw	low _time
  2817   001000  6E03               	movwf	clcd_print@data^0,c
  2818   001002  6A04               	clrf	(clcd_print@data+1)^0,c
  2819   001004  0EC0               	movlw	192
  2820   001006  6E05               	movwf	clcd_print@addr^0,c
  2821   001008  EC72  F006         	call	_clcd_print	;wreg free
  2822   00100C  0012               	return		;funcret
  2823   00100E                     __end_of_display_time:
  2824                           	callstack 0
  2825                           
  2826 ;; *************** function _clcd_print *****************
  2827 ;; Defined at:
  2828 ;;		line 59 in file "clcd.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  data            2    2[COMRAM] PTR const unsigned char 
  2831 ;;		 -> STR_16(15), STR_15(17), STR_14(20), STR_13(13), 
  2832 ;;		 -> STR_12(8), STR_11(17), STR_10(3), STR_9(3), 
  2833 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
  2834 ;;		 -> STR_4(3), STR_3(3), time(9), STR_2(9), 
  2835 ;;		 -> STR_1(17), 
  2836 ;;  addr            1    4[COMRAM] unsigned char 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2848 ;;      Params:         3       0       0       0       0       0       0
  2849 ;;      Locals:         0       0       0       0       0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0
  2851 ;;      Totals:         3       0       0       0       0       0       0
  2852 ;;Total ram usage:        3 bytes
  2853 ;; Hardware stack levels used: 1
  2854 ;; Hardware stack levels required when called: 1
  2855 ;; This function calls:
  2856 ;;		_clcd_write
  2857 ;; This function is called by:
  2858 ;;		_init_config
  2859 ;;		_display_time
  2860 ;;		_dashboard
  2861 ;;		_password
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text25
  2866   000CE4                     __ptext25:
  2867                           	callstack 0
  2868   000CE4                     _clcd_print:
  2869                           	callstack 28
  2870   000CE4                     
  2871                           ;clcd.c: 59: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 60: 
      +                          {;clcd.c: 61:  clcd_write(addr, 0);
  2872   000CE4  0E00               	movlw	0
  2873   000CE6  6E01               	movwf	clcd_write@control_bit^0,c
  2874   000CE8  5005               	movf	clcd_print@addr^0,w,c
  2875   000CEA  EC6A  F007         	call	_clcd_write
  2876                           
  2877                           ;clcd.c: 62:  while (*data != '\0')
  2878   000CEE  EF8F  F006         	goto	l1453
  2879   000CF2                     l1449:
  2880                           
  2881                           ;clcd.c: 63:  {;clcd.c: 64:   clcd_write(*data++, 1);
  2882   000CF2  0E01               	movlw	1
  2883   000CF4  6E01               	movwf	clcd_write@control_bit^0,c
  2884   000CF6  C003  FFF6         	movff	clcd_print@data,tblptrl
  2885   000CFA  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  2886   000CFE  6AF8               	clrf	tblptru,c
  2887   000D00  0E05               	movlw	(high __ramtop+-1)
  2888   000D02  64F7               	cpfsgt	tblptrh,c
  2889   000D04  D003               	bra	u557
  2890   000D06  0008               	tblrd		*
  2891   000D08  50F5               	movf	tablat,w,c
  2892   000D0A  D005               	bra	u550
  2893   000D0C                     u557:
  2894   000D0C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2895   000D10  CFF7 FFEA          	movff	tblptrh,fsr0h
  2896   000D14  50EF               	movf	indf0,w,c
  2897   000D16                     u550:
  2898   000D16  EC6A  F007         	call	_clcd_write
  2899   000D1A  4A03               	infsnz	clcd_print@data^0,f,c
  2900   000D1C  2A04               	incf	(clcd_print@data+1)^0,f,c
  2901   000D1E                     l1453:
  2902                           
  2903                           ;clcd.c: 62:  while (*data != '\0')
  2904   000D1E  C003  FFF6         	movff	clcd_print@data,tblptrl
  2905   000D22  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  2906   000D26  6AF8               	clrf	tblptru,c
  2907   000D28  0E05               	movlw	(high __ramtop+-1)
  2908   000D2A  64F7               	cpfsgt	tblptrh,c
  2909   000D2C  D003               	bra	u567
  2910   000D2E  0008               	tblrd		*
  2911   000D30  50F5               	movf	tablat,w,c
  2912   000D32  D005               	bra	u560
  2913   000D34                     u567:
  2914   000D34  CFF6 FFE9          	movff	tblptrl,fsr0l
  2915   000D38  CFF7 FFEA          	movff	tblptrh,fsr0h
  2916   000D3C  50EF               	movf	indf0,w,c
  2917   000D3E                     u560:
  2918   000D3E  0900               	iorlw	0
  2919   000D40  A4D8               	btfss	status,2,c
  2920   000D42  EFA5  F006         	goto	u571
  2921   000D46  EFA7  F006         	goto	u570
  2922   000D4A                     u571:
  2923   000D4A  EF79  F006         	goto	l1449
  2924   000D4E                     u570:
  2925   000D4E  0012               	return		;funcret
  2926   000D50                     __end_of_clcd_print:
  2927                           	callstack 0
  2928                           
  2929 ;; *************** function _clcd_putch *****************
  2930 ;; Defined at:
  2931 ;;		line 68 in file "clcd.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  data            1    wreg     const unsigned char 
  2934 ;;  addr            1   12[COMRAM] unsigned char 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  data            1   13[COMRAM] const unsigned char 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2946 ;;      Params:         1       0       0       0       0       0       0
  2947 ;;      Locals:         1       0       0       0       0       0       0
  2948 ;;      Temps:          0       0       0       0       0       0       0
  2949 ;;      Totals:         2       0       0       0       0       0       0
  2950 ;;Total ram usage:        2 bytes
  2951 ;; Hardware stack levels used: 1
  2952 ;; Hardware stack levels required when called: 1
  2953 ;; This function calls:
  2954 ;;		_clcd_write
  2955 ;; This function is called by:
  2956 ;;		_dashboard
  2957 ;;		_password
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text26
  2962   000FAC                     __ptext26:
  2963                           	callstack 0
  2964   000FAC                     _clcd_putch:
  2965                           	callstack 28
  2966                           
  2967                           ;incstack = 0
  2968                           ;clcd_putch@data stored from wreg
  2969   000FAC  6E0E               	movwf	clcd_putch@data^0,c
  2970   000FAE                     
  2971                           ;clcd.c: 68: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 69: {
      +                          ;clcd.c: 70:  clcd_write(addr, 0);
  2972   000FAE  0E00               	movlw	0
  2973   000FB0  6E01               	movwf	clcd_write@control_bit^0,c
  2974   000FB2  500D               	movf	clcd_putch@addr^0,w,c
  2975   000FB4  EC6A  F007         	call	_clcd_write
  2976                           
  2977                           ;clcd.c: 71:  clcd_write(data, 1);
  2978   000FB8  0E01               	movlw	1
  2979   000FBA  6E01               	movwf	clcd_write@control_bit^0,c
  2980   000FBC  500E               	movf	clcd_putch@data^0,w,c
  2981   000FBE  EC6A  F007         	call	_clcd_write
  2982   000FC2  0012               	return		;funcret
  2983   000FC4                     __end_of_clcd_putch:
  2984                           	callstack 0
  2985                           
  2986 ;; *************** function _clcd_write *****************
  2987 ;; Defined at:
  2988 ;;		line 5 in file "clcd.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  byte            1    wreg     unsigned char 
  2991 ;;  control_bit     1    0[COMRAM] unsigned char 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  byte            1    1[COMRAM] unsigned char 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3003 ;;      Params:         1       0       0       0       0       0       0
  3004 ;;      Locals:         1       0       0       0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0       0       0
  3006 ;;      Totals:         2       0       0       0       0       0       0
  3007 ;;Total ram usage:        2 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_init_clcd
  3013 ;;		_clcd_print
  3014 ;;		_clcd_putch
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text27
  3019   000ED4                     __ptext27:
  3020                           	callstack 0
  3021   000ED4                     _clcd_write:
  3022                           	callstack 28
  3023                           
  3024                           ;incstack = 0
  3025                           ;clcd_write@byte stored from wreg
  3026   000ED4  6E02               	movwf	clcd_write@byte^0,c
  3027   000ED6                     
  3028                           ;clcd.c: 5: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 6: {;
      +                          clcd.c: 7:  RC1 = control_bit;
  3029   000ED6  B001               	btfsc	clcd_write@control_bit^0,0,c
  3030   000ED8  EF70  F007         	goto	u521
  3031   000EDC  EF73  F007         	goto	u520
  3032   000EE0                     u521:
  3033   000EE0  8282               	bsf	3970,1,c	;volatile
  3034   000EE2  EF74  F007         	goto	u535
  3035   000EE6                     u520:
  3036   000EE6  9282               	bcf	3970,1,c	;volatile
  3037   000EE8                     u535:
  3038   000EE8                     
  3039                           ;clcd.c: 8:  PORTD = byte;
  3040   000EE8  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  3041   000EEC                     
  3042                           ;clcd.c: 11:  RC2 = 1;
  3043   000EEC  8482               	bsf	3970,2,c	;volatile
  3044   000EEE                     
  3045                           ;clcd.c: 12:  RC2 = 0;
  3046   000EEE  9482               	bcf	3970,2,c	;volatile
  3047   000EF0                     
  3048                           ;clcd.c: 14:  TRISD7 = 0xFF;
  3049   000EF0  8E95               	bsf	3989,7,c	;volatile
  3050   000EF2                     
  3051                           ;clcd.c: 15:  RC0 = 1;
  3052   000EF2  8082               	bsf	3970,0,c	;volatile
  3053   000EF4                     
  3054                           ;clcd.c: 16:  RC1 = 0;
  3055   000EF4  9282               	bcf	3970,1,c	;volatile
  3056   000EF6                     l1441:
  3057                           
  3058                           ;clcd.c: 19:  {;clcd.c: 20:   RC2 = 1;
  3059   000EF6  8482               	bsf	3970,2,c	;volatile
  3060   000EF8                     
  3061                           ;clcd.c: 21:   RC2 = 0;
  3062   000EF8  9482               	bcf	3970,2,c	;volatile
  3063   000EFA                     
  3064                           ;clcd.c: 22:  } while (RD7);
  3065   000EFA  BE83               	btfsc	3971,7,c	;volatile
  3066   000EFC  EF82  F007         	goto	u541
  3067   000F00  EF84  F007         	goto	u540
  3068   000F04                     u541:
  3069   000F04  EF7B  F007         	goto	l1441
  3070   000F08                     u540:
  3071   000F08                     
  3072                           ;clcd.c: 24:  RC0 = 0;
  3073   000F08  9082               	bcf	3970,0,c	;volatile
  3074                           
  3075                           ;clcd.c: 25:  TRISD7 = 0x00;
  3076   000F0A  9E95               	bcf	3989,7,c	;volatile
  3077   000F0C  0012               	return		;funcret
  3078   000F0E                     __end_of_clcd_write:
  3079                           	callstack 0
  3080                           
  3081 ;; *************** function ___lwmod *****************
  3082 ;; Defined at:
  3083 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  dividend        2    7[COMRAM] unsigned int 
  3086 ;;  divisor         2    9[COMRAM] unsigned int 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  counter         1   11[COMRAM] unsigned char 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  2    7[COMRAM] unsigned int 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3098 ;;      Params:         4       0       0       0       0       0       0
  3099 ;;      Locals:         1       0       0       0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0       0       0
  3101 ;;      Totals:         5       0       0       0       0       0       0
  3102 ;;Total ram usage:        5 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_dashboard
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text28
  3112   000D50                     __ptext28:
  3113                           	callstack 0
  3114   000D50                     ___lwmod:
  3115                           	callstack 29
  3116   000D50  500A               	movf	___lwmod@divisor^0,w,c
  3117   000D52  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  3118   000D54  B4D8               	btfsc	status,2,c
  3119   000D56  EFAF  F006         	goto	u631
  3120   000D5A  EFB1  F006         	goto	u630
  3121   000D5E                     u631:
  3122   000D5E  EFD5  F006         	goto	l819
  3123   000D62                     u630:
  3124   000D62  0E01               	movlw	1
  3125   000D64  6E0C               	movwf	___lwmod@counter^0,c
  3126   000D66  EFB9  F006         	goto	l1551
  3127   000D6A                     l1549:
  3128   000D6A  90D8               	bcf	status,0,c
  3129   000D6C  360A               	rlcf	___lwmod@divisor^0,f,c
  3130   000D6E  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  3131   000D70  2A0C               	incf	___lwmod@counter^0,f,c
  3132   000D72                     l1551:
  3133   000D72  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  3134   000D74  EFBE  F006         	goto	u641
  3135   000D78  EFC0  F006         	goto	u640
  3136   000D7C                     u641:
  3137   000D7C  EFB5  F006         	goto	l1549
  3138   000D80                     u640:
  3139   000D80                     l1553:
  3140   000D80  500A               	movf	___lwmod@divisor^0,w,c
  3141   000D82  5C08               	subwf	___lwmod@dividend^0,w,c
  3142   000D84  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3143   000D86  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  3144   000D88  A0D8               	btfss	status,0,c
  3145   000D8A  EFC9  F006         	goto	u651
  3146   000D8E  EFCB  F006         	goto	u650
  3147   000D92                     u651:
  3148   000D92  EFCF  F006         	goto	l1557
  3149   000D96                     u650:
  3150   000D96  500A               	movf	___lwmod@divisor^0,w,c
  3151   000D98  5E08               	subwf	___lwmod@dividend^0,f,c
  3152   000D9A  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3153   000D9C  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  3154   000D9E                     l1557:
  3155   000D9E  90D8               	bcf	status,0,c
  3156   000DA0  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  3157   000DA2  320A               	rrcf	___lwmod@divisor^0,f,c
  3158   000DA4  2E0C               	decfsz	___lwmod@counter^0,f,c
  3159   000DA6  EFC0  F006         	goto	l1553
  3160   000DAA                     l819:
  3161   000DAA  C008  F008         	movff	___lwmod@dividend,?___lwmod
  3162   000DAE  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  3163   000DB2  0012               	return		;funcret
  3164   000DB4                     __end_of___lwmod:
  3165                           	callstack 0
  3166                           
  3167 ;; *************** function ___lwdiv *****************
  3168 ;; Defined at:
  3169 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  dividend        2    0[COMRAM] unsigned int 
  3172 ;;  divisor         2    2[COMRAM] unsigned int 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  quotient        2    4[COMRAM] unsigned int 
  3175 ;;  counter         1    6[COMRAM] unsigned char 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  2    0[COMRAM] unsigned int 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3185 ;;      Params:         4       0       0       0       0       0       0
  3186 ;;      Locals:         3       0       0       0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0
  3188 ;;      Totals:         7       0       0       0       0       0       0
  3189 ;;Total ram usage:        7 bytes
  3190 ;; Hardware stack levels used: 1
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_dashboard
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text29
  3199   000C70                     __ptext29:
  3200                           	callstack 0
  3201   000C70                     ___lwdiv:
  3202                           	callstack 29
  3203   000C70  0E00               	movlw	0
  3204   000C72  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3205   000C74  0E00               	movlw	0
  3206   000C76  6E05               	movwf	___lwdiv@quotient^0,c
  3207   000C78  5003               	movf	___lwdiv@divisor^0,w,c
  3208   000C7A  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3209   000C7C  B4D8               	btfsc	status,2,c
  3210   000C7E  EF43  F006         	goto	u601
  3211   000C82  EF45  F006         	goto	u600
  3212   000C86                     u601:
  3213   000C86  EF6D  F006         	goto	l809
  3214   000C8A                     u600:
  3215   000C8A  0E01               	movlw	1
  3216   000C8C  6E07               	movwf	___lwdiv@counter^0,c
  3217   000C8E  EF4D  F006         	goto	l1531
  3218   000C92                     l1529:
  3219   000C92  90D8               	bcf	status,0,c
  3220   000C94  3603               	rlcf	___lwdiv@divisor^0,f,c
  3221   000C96  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3222   000C98  2A07               	incf	___lwdiv@counter^0,f,c
  3223   000C9A                     l1531:
  3224   000C9A  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3225   000C9C  EF52  F006         	goto	u611
  3226   000CA0  EF54  F006         	goto	u610
  3227   000CA4                     u611:
  3228   000CA4  EF49  F006         	goto	l1529
  3229   000CA8                     u610:
  3230   000CA8                     l1533:
  3231   000CA8  90D8               	bcf	status,0,c
  3232   000CAA  3605               	rlcf	___lwdiv@quotient^0,f,c
  3233   000CAC  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3234   000CAE  5003               	movf	___lwdiv@divisor^0,w,c
  3235   000CB0  5C01               	subwf	___lwdiv@dividend^0,w,c
  3236   000CB2  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3237   000CB4  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3238   000CB6  A0D8               	btfss	status,0,c
  3239   000CB8  EF60  F006         	goto	u621
  3240   000CBC  EF62  F006         	goto	u620
  3241   000CC0                     u621:
  3242   000CC0  EF67  F006         	goto	l1541
  3243   000CC4                     u620:
  3244   000CC4  5003               	movf	___lwdiv@divisor^0,w,c
  3245   000CC6  5E01               	subwf	___lwdiv@dividend^0,f,c
  3246   000CC8  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3247   000CCA  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3248   000CCC  8005               	bsf	___lwdiv@quotient^0,0,c
  3249   000CCE                     l1541:
  3250   000CCE  90D8               	bcf	status,0,c
  3251   000CD0  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3252   000CD2  3203               	rrcf	___lwdiv@divisor^0,f,c
  3253   000CD4  2E07               	decfsz	___lwdiv@counter^0,f,c
  3254   000CD6  EF54  F006         	goto	l1533
  3255   000CDA                     l809:
  3256   000CDA  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3257   000CDE  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3258   000CE2  0012               	return		;funcret
  3259   000CE4                     __end_of___lwdiv:
  3260                           	callstack 0
  3261                           
  3262                           	psect	rparam
  3263   000000                     
  3264                           	psect	idloc
  3265                           
  3266                           ;Config register IDLOC0 @ 0x200000
  3267                           ;	unspecified, using default values
  3268   200000                     	org	2097152
  3269   200000  FF                 	db	255
  3270                           
  3271                           ;Config register IDLOC1 @ 0x200001
  3272                           ;	unspecified, using default values
  3273   200001                     	org	2097153
  3274   200001  FF                 	db	255
  3275                           
  3276                           ;Config register IDLOC2 @ 0x200002
  3277                           ;	unspecified, using default values
  3278   200002                     	org	2097154
  3279   200002  FF                 	db	255
  3280                           
  3281                           ;Config register IDLOC3 @ 0x200003
  3282                           ;	unspecified, using default values
  3283   200003                     	org	2097155
  3284   200003  FF                 	db	255
  3285                           
  3286                           ;Config register IDLOC4 @ 0x200004
  3287                           ;	unspecified, using default values
  3288   200004                     	org	2097156
  3289   200004  FF                 	db	255
  3290                           
  3291                           ;Config register IDLOC5 @ 0x200005
  3292                           ;	unspecified, using default values
  3293   200005                     	org	2097157
  3294   200005  FF                 	db	255
  3295                           
  3296                           ;Config register IDLOC6 @ 0x200006
  3297                           ;	unspecified, using default values
  3298   200006                     	org	2097158
  3299   200006  FF                 	db	255
  3300                           
  3301                           ;Config register IDLOC7 @ 0x200007
  3302                           ;	unspecified, using default values
  3303   200007                     	org	2097159
  3304   200007  FF                 	db	255
  3305                           
  3306                           	psect	config
  3307                           
  3308                           ; Padding undefined space
  3309   300000                     	org	3145728
  3310   300000  FF                 	db	255
  3311                           
  3312                           ;Config register CONFIG1H @ 0x300001
  3313                           ;	unspecified, using default values
  3314                           ;	Oscillator Selection bits
  3315                           ;	OSC = 0x7, unprogrammed default
  3316                           ;	Fail-Safe Clock Monitor Enable bit
  3317                           ;	FCMEN = 0x0, unprogrammed default
  3318                           ;	Internal/External Oscillator Switchover bit
  3319                           ;	IESO = 0x0, unprogrammed default
  3320   300001                     	org	3145729
  3321   300001  07                 	db	7
  3322                           
  3323                           ;Config register CONFIG2L @ 0x300002
  3324                           ;	unspecified, using default values
  3325                           ;	Power-up Timer Enable bit
  3326                           ;	PWRT = 0x1, unprogrammed default
  3327                           ;	Brown-out Reset Enable bits
  3328                           ;	BOREN = 0x3, unprogrammed default
  3329                           ;	Brown-out Reset Voltage bits
  3330                           ;	BORV = 0x3, unprogrammed default
  3331   300002                     	org	3145730
  3332   300002  1F                 	db	31
  3333                           
  3334                           ;Config register CONFIG2H @ 0x300003
  3335                           ;	unspecified, using default values
  3336                           ;	Watchdog Timer Enable bit
  3337                           ;	WDT = 0x1, unprogrammed default
  3338                           ;	Watchdog Timer Postscale Select bits
  3339                           ;	WDTPS = 0xF, unprogrammed default
  3340   300003                     	org	3145731
  3341   300003  1F                 	db	31
  3342                           
  3343                           ; Padding undefined space
  3344   300004                     	org	3145732
  3345   300004  FF                 	db	255
  3346                           
  3347                           ;Config register CONFIG3H @ 0x300005
  3348                           ;	unspecified, using default values
  3349                           ;	PORTB A/D Enable bit
  3350                           ;	PBADEN = 0x1, unprogrammed default
  3351                           ;	Low-Power Timer 1 Oscillator Enable bit
  3352                           ;	LPT1OSC = 0x0, unprogrammed default
  3353                           ;	MCLR Pin Enable bit
  3354                           ;	MCLRE = 0x1, unprogrammed default
  3355   300005                     	org	3145733
  3356   300005  82                 	db	130
  3357                           
  3358                           ;Config register CONFIG4L @ 0x300006
  3359                           ;	unspecified, using default values
  3360                           ;	Stack Full/Underflow Reset Enable bit
  3361                           ;	STVREN = 0x1, unprogrammed default
  3362                           ;	Single-Supply ICSP Enable bit
  3363                           ;	LVP = 0x1, unprogrammed default
  3364                           ;	Boot Block Size Select bit
  3365                           ;	BBSIZ = 0x0, unprogrammed default
  3366                           ;	Extended Instruction Set Enable bit
  3367                           ;	XINST = 0x0, unprogrammed default
  3368                           ;	Background Debugger Enable bit
  3369                           ;	DEBUG = 0x1, unprogrammed default
  3370   300006                     	org	3145734
  3371   300006  85                 	db	133
  3372                           
  3373                           ; Padding undefined space
  3374   300007                     	org	3145735
  3375   300007  FF                 	db	255
  3376                           
  3377                           ;Config register CONFIG5L @ 0x300008
  3378                           ;	unspecified, using default values
  3379                           ;	Code Protection bit
  3380                           ;	CP0 = 0x1, unprogrammed default
  3381                           ;	Code Protection bit
  3382                           ;	CP1 = 0x1, unprogrammed default
  3383                           ;	Code Protection bit
  3384                           ;	CP2 = 0x1, unprogrammed default
  3385                           ;	Code Protection bit
  3386                           ;	CP3 = 0x1, unprogrammed default
  3387   300008                     	org	3145736
  3388   300008  0F                 	db	15
  3389                           
  3390                           ;Config register CONFIG5H @ 0x300009
  3391                           ;	unspecified, using default values
  3392                           ;	Boot Block Code Protection bit
  3393                           ;	CPB = 0x1, unprogrammed default
  3394                           ;	Data EEPROM Code Protection bit
  3395                           ;	CPD = 0x1, unprogrammed default
  3396   300009                     	org	3145737
  3397   300009  C0                 	db	192
  3398                           
  3399                           ;Config register CONFIG6L @ 0x30000A
  3400                           ;	unspecified, using default values
  3401                           ;	Write Protection bit
  3402                           ;	WRT0 = 0x1, unprogrammed default
  3403                           ;	Write Protection bit
  3404                           ;	WRT1 = 0x1, unprogrammed default
  3405                           ;	Write Protection bit
  3406                           ;	WRT2 = 0x1, unprogrammed default
  3407                           ;	Write Protection bit
  3408                           ;	WRT3 = 0x1, unprogrammed default
  3409   30000A                     	org	3145738
  3410   30000A  0F                 	db	15
  3411                           
  3412                           ;Config register CONFIG6H @ 0x30000B
  3413                           ;	unspecified, using default values
  3414                           ;	Configuration Register Write Protection bit
  3415                           ;	WRTC = 0x1, unprogrammed default
  3416                           ;	Boot Block Write Protection bit
  3417                           ;	WRTB = 0x1, unprogrammed default
  3418                           ;	Data EEPROM Write Protection bit
  3419                           ;	WRTD = 0x1, unprogrammed default
  3420   30000B                     	org	3145739
  3421   30000B  E0                 	db	224
  3422                           
  3423                           ;Config register CONFIG7L @ 0x30000C
  3424                           ;	unspecified, using default values
  3425                           ;	Table Read Protection bit
  3426                           ;	EBTR0 = 0x1, unprogrammed default
  3427                           ;	Table Read Protection bit
  3428                           ;	EBTR1 = 0x1, unprogrammed default
  3429                           ;	Table Read Protection bit
  3430                           ;	EBTR2 = 0x1, unprogrammed default
  3431                           ;	Table Read Protection bit
  3432                           ;	EBTR3 = 0x1, unprogrammed default
  3433   30000C                     	org	3145740
  3434   30000C  0F                 	db	15
  3435                           
  3436                           ;Config register CONFIG7H @ 0x30000D
  3437                           ;	unspecified, using default values
  3438                           ;	Boot Block Table Read Protection bit
  3439                           ;	EBTRB = 0x1, unprogrammed default
  3440   30000D                     	org	3145741
  3441   30000D  40                 	db	64
  3442                           tosu	equ	0xFFF
  3443                           tosh	equ	0xFFE
  3444                           tosl	equ	0xFFD
  3445                           stkptr	equ	0xFFC
  3446                           pclatu	equ	0xFFB
  3447                           pclath	equ	0xFFA
  3448                           pcl	equ	0xFF9
  3449                           tblptru	equ	0xFF8
  3450                           tblptrh	equ	0xFF7
  3451                           tblptrl	equ	0xFF6
  3452                           tablat	equ	0xFF5
  3453                           prodh	equ	0xFF4
  3454                           prodl	equ	0xFF3
  3455                           indf0	equ	0xFEF
  3456                           postinc0	equ	0xFEE
  3457                           postdec0	equ	0xFED
  3458                           preinc0	equ	0xFEC
  3459                           plusw0	equ	0xFEB
  3460                           fsr0h	equ	0xFEA
  3461                           fsr0l	equ	0xFE9
  3462                           wreg	equ	0xFE8
  3463                           indf1	equ	0xFE7
  3464                           postinc1	equ	0xFE6
  3465                           postdec1	equ	0xFE5
  3466                           preinc1	equ	0xFE4
  3467                           plusw1	equ	0xFE3
  3468                           fsr1h	equ	0xFE2
  3469                           fsr1l	equ	0xFE1
  3470                           bsr	equ	0xFE0
  3471                           indf2	equ	0xFDF
  3472                           postinc2	equ	0xFDE
  3473                           postdec2	equ	0xFDD
  3474                           preinc2	equ	0xFDC
  3475                           plusw2	equ	0xFDB
  3476                           fsr2h	equ	0xFDA
  3477                           fsr2l	equ	0xFD9
  3478                           status	equ	0xFD8

Data Sizes:
    Strings     140
    Constant    0
    Data        14
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      56
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[17]), STR_10(CODE[3]), STR_11(CODE[17]), STR_12(CODE[8]), 
		 -> STR_13(CODE[13]), STR_14(CODE[20]), STR_15(CODE[17]), STR_16(CODE[15]), 
		 -> STR_2(CODE[9]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 
		 -> STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), STR_9(CODE[3]), 
		 -> time(COMRAM[9]), 

    dashboard@events	PTR unsigned char [8] size(1) Largest target is 3
		 -> STR_10(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 
		 -> STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), STR_9(CODE[3]), 

    dashboard@F10501	PTR unsigned char [8] size(1) Largest target is 3
		 -> STR_10(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 
		 -> STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), STR_9(CODE[3]), 

    my_strcmp@one	PTR unsigned char  size(1) Largest target is 4
		 -> password@pass(COMRAM[4]), 

    my_strcmp@two	PTR unsigned char  size(1) Largest target is 4
		 -> password@temp_password(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_dashboard
    _main->_password
    _password->_clcd_putch
    _init_config->_clcd_print
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _dashboard->_clcd_putch
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_time->_clcd_print
    _clcd_print->_clcd_write
    _clcd_putch->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   15363
                                             23 COMRAM     1     1      0
                          _dashboard
                        _init_config
                           _password
                           _read_adc
                      _read_switches
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      30
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _password                                             9     9      0    4334
                                             14 COMRAM     9     9      0
                         _clcd_print
                         _clcd_putch
                          _my_strcmp
 ---------------------------------------------------------------------------------
 (2) _my_strcmp                                            8     6      2     397
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    3824
                         _clcd_print
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     477
                                              3 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     363
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0     880
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dashboard                                            9     9      0    7084
                                             14 COMRAM     9     9      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                       _display_time
                           _get_time
 ---------------------------------------------------------------------------------
 (2) _get_time                                             0     0      0      45
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      45
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      15
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (5) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0    2467
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    2467
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    1304
                                             12 COMRAM     2     1      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           2     1      1     880
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dashboard
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _clcd_print
       _clcd_write
     _clcd_putch
       ___lwdiv (ARG)
       ___lwmod (ARG)
       _clcd_write (ARG)
     _display_time
       _clcd_print
     _get_time
       _read_ds1307
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
           _i2c_idle
         _i2c_stop
           _i2c_idle
         _i2c_write
           _i2c_idle
   _init_config
     _clcd_print
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
     _init_matrix_keypad
   _password
     _clcd_print
     _clcd_putch
     _my_strcmp
   _read_adc
   _read_switches
     _scan_key

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      24        0.0%
BITBIGSFRll        281      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      38       1       58.9%
BITBIGSFRhhhlhh     27      0       0      17        0.0%
BITBIGSFRlhhhh      1E      0       0      18        0.0%
BITBIGSFRlhl         F      0       0      21        0.0%
BITBIGSFRhhhh        E      0       0      16        0.0%
BITBIGSFRlhhl        8      0       0      20        0.0%
BITBIGSFRlhhhl       2      0       0      19        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      38      23        0.0%
DATA                 0      0      38       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed May 22 16:44:18 2024

               my_strcmp@one 0001                 my_strcmp@two 0002                            _i 001C  
              my_strcmp@flag 0005               clcd_print@addr 0005               clcd_print@data 0003  
                         l33 0F8C                           l36 0E68                           l61 0F08  
                         l62 0F0C                           l71 0D4E                           l39 0E94  
                         l65 0AF8                           l74 0FC2                           l97 0ED2  
                         _GO 7E11                           u10 0FFA                           u11 0FF6  
                         u80 095E                           u81 095A                           u90 0972  
                         u91 096E           _init_matrix_keypad 0FDA                          l130 09A0  
                        l131 0978                          l300 103A                          l212 0B70  
                        l140 09E2                          l125 0FEA                          l213 0B78  
                        l133 098C                          l303 104A                          l143 0A12  
                        l312 1058                          l136 09BA                          l128 0964  
                        l145 0A26                          l137 09F6                          l129 0A50  
                        l306 1026                          l226 0948                          l146 0A4E  
                        l138 09CE                          l315 1032                          l243 0E4E  
                        l147 0A3A                          l181 100C                          l309 1052  
                        l246 0FAA                          l158 0C6E                          l249 0F6C  
                        l290 0FFC                          l186 0BF8                          l284 0FD8  
                        l197 07EA                          l198 07F2                          l287 0FEC  
                        l289 0FFA                          l297 1042                          l816 0CE2  
                        l809 0CDA                          l826 0DB2                          l819 0DAA  
                        _CKE 7E3E                          l991 0FEC                          l993 104C  
                        l995 104E                          l997 1054                          _RC0 7C10  
                        _RC1 7C11                          _RC2 7C12                          u100 0986  
                        u101 0982                          u110 099A                          u111 0996  
                        _RD7 7C1F                          u200 0BA0                          u120 09B4  
                        u201 0B9C                          u121 09B0                          u130 09C8  
                        u131 09C4                          u140 09DC                          u300 0C0C  
                        u141 09D8                          u301 0C08                          u150 09F0  
                        u310 0C22                          u151 09EC                          u311 0C1E  
                        u160 0A0C                          u320 0C32                          u161 0A08  
                        u321 0C2E                          u170 0A20                          u330 0C4C  
                        u171 0A1C                          u331 0C48                          u180 0A34  
                        u340 0C64                          u181 0A30                          u341 0C60  
                        u190 0A48                          u191 0A44                          u600 0C8A  
                        u520 0EE6                          _PEN 7E2A                          u601 0C86  
                        u521 0EE0                          u610 0CA8                          u611 0CA4  
                        u620 0CC4                          u540 0F08                          u700 0704  
                        u621 0CC0                          u541 0F04                          u701 0700  
                        u630 0D62                          u550 0D16                          u710 0718  
                        u631 0D5E                          u535 0EE8                          u711 0714  
                        u640 0D80                          u560 0D3E                          u720 0734  
                        u800 08B6                          u641 0D7C                          u721 0730  
                        u801 08B2                          u650 0D96                          u570 0D4E  
                        u730 074A                          u810 08E8                          u651 0D92  
                        u571 0D4A                          u731 0746                          u811 08E4  
                        u740 0766                          u580 0B30                          u660 0E76  
                        u820 0DE2                          _SEN 7E28                          u557 0D0C  
                        u741 0762                          u581 0B2C                          u661 0E72  
                        u821 0DDE                          u750 0778                          u590 0B70  
                        u830 0DFA                          u567 0D34                          u751 0774  
                        u671 0698                          u591 0B6C                          u831 0DF6  
                        u760 0796                          u680 06D2                          u761 0792  
                        u681 06CE                          u690 06EE                          u770 082C  
                        u691 06EA                          u907 0AF2                          u771 0828  
                        u780 085E                          u781 085A                          u790 088E  
                        u847 0A64                          u791 088A                          u857 0A7E  
                        u867 0A94                          u877 0AB6                          _SMP 7E3F  
                        u887 0AC8                          u897 0ADE                ?_display_time 0001  
                        _key 0021               clcd_putch@addr 000D               clcd_putch@data 000E  
                        wreg 0FE8          ?_init_matrix_keypad 0001                         l1021 103E  
                       l1031 1044                         l1023 101E                         l1033 1046  
                       l1025 1022                         l1121 0FE4                         l1035 1028  
                       l1019 103C                         l1027 1034                         l1051 0F4A  
                       l1131 0FD4                         l1123 0FC4                         l1203 0A34  
                       l1037 1030                         l1029 1036                         l1053 0F50  
                       l1221 0B92                         l1133 0FD6                         l1125 0FC8  
                       l1117 0FDA                         l1213 0A4E                         l1055 0F56  
                       l1231 0BD6                         l1223 0BA0                         l1127 0FD0  
                       l1119 0FE2                         l1311 0C32                         l1303 0BFC  
                       l1057 0F5A                         l1049 0F46                         l1233 0BDE  
                       l1225 0BB6                         l1073 0F6E                         l1129 0FD2  
                       l1209 0A48                         l1153 0972                         l1145 094A  
                       l1305 0C0C                         l1321 0C54                         l1059 0F66  
                       l1235 0BF4                         l1227 0BC8                         l1219 0B7A  
                       l1075 0F82                         l1147 095E                         l1323 0C64  
                       l1307 0C12                         l1501 0FAE                         l1229 0BCC  
                       l1077 0F8A                         l1181 09DC                         l1165 099A  
                       l1309 0C22                         l1317 0C3C                         l1431 0EEC  
                       l1511 0E3A                         l1503 0E08                         l1191 0A0C  
                       l1175 09C8                         l1159 0986                         l1319 0C4C  
                       l1327 0C6C                         l1441 0EF6                         l1433 0EEE  
                       l1513 0FFE                         l1601 074A                         l1505 0E10  
                       l1521 0B58                         l1169 09B4                         l1531 0C9A  
                       l1523 0C70                         l1443 0EF8                         l1435 0EF0  
                       l1427 0ED6                         l1451 0D1A                         l1611 0796  
                       l1603 0752                         l1507 0E1C                         l1515 0AFA  
                       l1187 09F0                         l1541 0CCE                         l1533 0CA8  
                       l1525 0C78                         l1445 0EFA                         l1437 0EF2  
                       l1429 0EE8                         l1453 0D1E                         l1613 07EE  
                       l1605 0766                         l1461 0FA0                         l1509 0E30  
                       l1517 0B0E                         l1621 082C                         l1197 0A20  
                       l1543 0CD4                         l1535 0CAE                         l1527 0C8A  
                       l1551 0D72                         l1439 0EF4                         l1447 0CE4  
                       l1607 0778                         l1471 0A5E                         l1463 0FA6  
                       l1455 0F90                         l1519 0B30                         l1631 086A  
                       l1623 0838                         l1615 07F6                         l1537 0CC4  
                       l1529 0C92                         l1553 0D80                         l1545 0D50  
                       l1449 0CF2                         l1609 0780                         l1481 0A9A  
                       l1473 0A6E                         l1465 0A52                         l1457 0F94  
                       l1641 08B6                         l1625 0844                         l1617 080A  
                       l1561 0E52                         l1539 0CCC                         l1555 0D96  
                       l1547 0D62                         l1491 0AC6                         l1483 0AA4  
                       l1475 0A78                         l1467 0A56                         l1459 0F9A  
                       l1571 0E96                         l1651 0914                         l1643 08CE  
                       l1635 087A                         l1627 084C                         l1619 081A  
                       l1563 0E66                         l1557 0D9E                         l1549 0D6A  
                       l1581 068E                         l1493 0ACE                         l1485 0AAA  
                       l1477 0A88                         l1469 0A5C                         l1573 0E9E  
                       l1653 0928                         l1645 08D0                         l1637 088E  
                       l1629 085E                         l1565 0E76                         l1661 0DBC  
                       l1559 0DA4                         l1591 06F2                         l1583 06A0  
                       l1495 0AD8                         l1487 0AB4                         l1479 0A92  
                       l1575 0EA2                         l1655 0934                         l1647 08D8  
                       l1639 0898                         l1567 0E8C                         l1671 0DEA  
                       l1663 0DBC                         l1593 0704                         l1585 06C0  
                       l1497 0AE6                         l1489 0ABC                         l1577 0EAA  
                       l1649 08E8                         l1673 0DFA                         l1665 0DC4  
                       l1657 0DB4                         l1595 0718                         l1587 06D2  
                       l1499 0AF0                         l1579 0EBE                         l1667 0DD2  
                       l1659 0DB8                         l1597 0734                         l1589 06EE  
                       l1669 0DE2                         l1599 073A                         _ADFM 7E07  
                       _ADON 7E10                         STR_1 0637                         STR_2 0664  
                       STR_3 0687                         STR_4 068A                         STR_5 0684  
                       STR_6 0678                         STR_7 067B                         STR_8 067E  
                       STR_9 0681                         _RCEN 7E2B                         _RBPU 7F8F  
                       _RSEN 7E29                         _main 0DB4                         _time 0022  
                       fsr0h 0FEA                         fsr1h 0FE2                         indf0 0FEF  
                       fsr2h 0FDA                         fsr0l 0FE9                         indf2 0FDF  
                       fsr1l 0FE1                         fsr2l 0FD9                         start 0000  
       ??_init_matrix_keypad 0001                 ___param_bank 0000               clcd_write@byte 0002  
              _i2c_rep_start 1044                ??_i2c_rx_mode 0001                 ?_init_ds1307 0001  
                      _ADCS0 7E00                        _ADCS1 7E01                        _ADCS2 7E02  
                      ?_main 0001                 ?_read_ds1307 0001                        _ACKEN 7E2C  
                      _ACKDT 7E2D               ??_display_time 0006                        _BCLIF 7D0B  
                      _ACQT0 7E03                        _ACQT1 7E04                        _ACQT2 7E05  
                      STR_10 0675                        STR_11 0626                        STR_12 066D  
                      STR_13 0657                        STR_14 0601                        STR_15 0615  
                      STR_16 0648              __end_of___lwdiv 0CE4              __end_of___lwmod 0DB4  
               ?_init_config 0001                        _VCFG0 7E0C                        _VCFG1 7E0D  
                      _PORTB 0F81                        _PORTD 0F83                        _TRISB 0F93  
                      _TRISC 0F94                        _TRISD 0F95                        _SSPIF 7CF3  
                      tablat 0FF5                        plusw1 0FE3                        plusw2 0FDB  
                      status 0FD8             init_ds1307@dummy 0004                   _i2c_no_ack 1054  
            __initialization 0F0E               ?_i2c_rep_start 0001                 __end_of_main 0E08  
           __end_of_i2c_idle 0FFE             __end_of_i2c_read 1034             __end_of_i2c_stop 103C  
                     ??_main 0018                __activetblptr 0002          __end_of_i2c_rx_mode 1054  
                     _ADCON0 0FC2                       _ADCON1 0FC1             read_switches@key 0020  
                     _ADRESH 0FC4                       _ADRESL 0FC3                       _GODONE 7E11  
               _write_ds1307 0F8E                       _SSPADD 0FC8                       _TRISC3 7CA3  
                     _TRISC4 7CA4                       _TRISD7 7CAF                       _SSPBUF 0FC9  
           __end_of_get_time 0BFA                       _chance 0037                    ??___lwdiv 0005  
                  ??___lwmod 000C             __end_of_init_i2c 0FDA             __end_of_init_adc 0F8E  
           __end_of_read_adc 0E96                       clear_0 0F34                       isa$std 0001  
           __end_of_scan_key 0A52             __end_of_password 094A                 __pdataCOMRAM 002B  
               __mediumconst 0000                       tblptrh 0FF7                       tblptrl 0FF6  
                     tblptru 0FF8                   __accesstop 0060      __end_of__initialization 0F3A  
       __end_of_display_time 100E                ___rparam_used 0001              ??_i2c_rep_start 0001  
                ?_i2c_no_ack 0001               __pcstackCOMRAM 0001                  _i2c_rx_mode 104C  
          __end_of_i2c_start 1044            __end_of_i2c_write 1028                    ?_i2c_idle 0001  
                  ?_i2c_read 0001                    ?_i2c_stop 0001                   _clcd_print 0CE4  
                 _clcd_putch 0FAC                   _clcd_write 0ED4              read_ds1307@data 0003  
          read_switches@once 0038                      _ACKSTAT 7E2E                  password@key 0017  
                    _SSPCON1 0FC6                    ?_get_time 0001                _read_switches 0BFA  
                 ??_i2c_idle 0001                   ??_i2c_read 0001            __end_of_dashboard 07F4  
                 ??_i2c_stop 0001                    ?_init_i2c 0001                    ?_init_adc 0001  
                  ?_read_adc 0001                    ?_scan_key 0001                      __Hparam 0000  
                  ?_password 0001                      __Lparam 0000                      ___lwdiv 0C70  
                    ___lwmod 0D50                 __psmallconst 0600                      __pcinit 0F0E  
                    __ramtop 0600                      __ptext0 0DB4                      __ptext1 0BFA  
                    __ptext2 094A                      __ptext3 0E50                      __ptext4 07F4  
                    __ptext5 0AFA                      __ptext6 0E96                      __ptext7 0FDA  
                    __ptext8 0FC4                      __ptext9 0E08            __end_of_init_clcd 0AFA  
             ?_read_switches 0001                   ??_get_time 0004         end_of_initialization 0F3A  
                 ??_init_i2c 0001                   ??_init_adc 0001                __Lmediumconst 0000  
                 ??_read_adc 0003                   ??_scan_key 0001                  ?_clcd_print 0003  
                ?_clcd_putch 000D                  ?_clcd_write 0001            __end_of_my_strcmp 0B7A  
                 ??_password 000F                      postdec1 0FE5                      postinc0 0FEE  
                    postinc1 0FE6                      postinc2 0FDE                    _PORTBbits 0F81  
            read_adc@channel 0007                 _display_time 0FFE                i2c_write@data 0001  
            read_adc@reg_val 0005                   main@main_f 0018                 ??_i2c_no_ack 0001  
               ?_i2c_rx_mode 0001                __pidataCOMRAM 100E                  _adc_reg_val 001E  
        start_initialization 0F0E              ??_read_switches 0001                    _i2c_start 103C  
                  _i2c_write 101C           __end_of_i2c_no_ack 105A        __end_of_i2c_rep_start 104C  
              ??_init_ds1307 0004                ??_read_ds1307 0002  read_switches@detection_type 0001  
              ??_init_config 0006                  __pbssCOMRAM 0019                   ?_i2c_start 0001  
                 ?_i2c_write 0001                    _dashboard 068E             ___lwdiv@dividend 0001  
         read_ds1307@address 0002                     ?___lwdiv 0001                    _clock_reg 0019  
                   ?___lwmod 0008                  __smallconst 0600          __end_of_init_ds1307 0E50  
        __end_of_read_ds1307 0F6E             ___lwdiv@quotient 0005                    _init_clcd 0A52  
        __end_of_init_config 0ED4                ?_write_ds1307 0002                 ??_clcd_print 0006  
               ??_clcd_putch 000E   __end_of_init_matrix_keypad 0FEC                 ??_clcd_write 0002  
                 ?_dashboard 0001        password@temp_password 0013                    _my_strcmp 0AFA  
               password@pass 000F        clcd_write@control_bit 0001                   my_strcmp@i 0007  
                ??_i2c_start 0001           __end_of_clcd_print 0D50                  ??_i2c_write 0001  
         __end_of_clcd_putch 0FC4           __end_of_clcd_write 0F0E                   ?_init_clcd 0001  
                  copy_data0 0F22               ??_write_ds1307 0003                     _i2c_idle 0FEC  
                   _i2c_read 1028                     _i2c_stop 1034                     __Hrparam 0000  
                   __Lrparam 0000                   ?_my_strcmp 0001                  _init_ds1307 0E08  
                _read_ds1307 0F44                  _init_config 0E96          write_ds1307@address 0003  
            ___lwdiv@divisor 0003              ___lwdiv@counter 0007                     __ptext10 0F8E  
                   __ptext11 0A52                     __ptext20 1028                     __ptext12 0F6E  
                   __ptext21 104C                     __ptext13 068E                     __ptext22 0FEC  
                   __ptext14 0B7A                     __ptext23 1054                     __ptext15 0F44  
                   __ptext24 0FFE                     __ptext16 101C                     __ptext25 0CE4  
                   __ptext17 1034                     __ptext26 0FAC                     __ptext18 103C  
                   __ptext27 0ED4                     __ptext19 1044                     __ptext28 0D50  
                   __ptext29 0C70                     _get_time 0B7A                     _init_i2c 0FC4  
                   _init_adc 0F6E                     _read_adc 0E50                     _scan_key 094A  
                ??_dashboard 000F                     _password 07F4                     isa$xinst 0000  
            dashboard@F10501 002B                  ??_init_clcd 0003        __end_of_read_switches 0C70  
           ___lwmod@dividend 0008               password@F10489 0033                  ??_my_strcmp 0003  
       __end_of_write_ds1307 0FAC              dashboard@events 0010              ___lwmod@divisor 000A  
            ___lwmod@counter 000C             write_ds1307@data 0002  
