

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jun 04 14:58:32 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70   000000                     
    71                           ; Version 2.20
    72                           ; Generated 12/02/2020 GMT
    73                           ; 
    74                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F4580 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105   000000                     
   106                           	psect	idataCOMRAM
   107   002498                     __pidataCOMRAM:
   108                           	callstack 0
   109                           
   110                           ;initializer for _chance
   111   002498  02                 	db	2
   112                           
   113                           ;initializer for _tick_count
   114   002499  B4                 	db	180
   115                           
   116                           ;initializer for read_switches@once
   117   00249A  01                 	db	1
   118                           
   119                           	psect	idataBANK0
   120   00235C                     __pidataBANK0:
   121                           	callstack 0
   122                           
   123                           ;initializer for _events
   124   00235C  F3                 	db	low STR_1
   125   00235D  2F                 	db	high STR_1
   126   00235E  F9                 	db	low STR_2
   127   00235F  2F                 	db	high STR_2
   128   002360  F0                 	db	low STR_3
   129   002361  2F                 	db	high STR_3
   130   002362  DE                 	db	low STR_4
   131   002363  2F                 	db	high STR_4
   132   002364  E1                 	db	low STR_5
   133   002365  2F                 	db	high STR_5
   134   002366  E4                 	db	low STR_6
   135   002367  2F                 	db	high STR_6
   136   002368  E7                 	db	low STR_7
   137   002369  2F                 	db	high STR_7
   138   00236A  DB                 	db	low STR_8
   139   00236B  2F                 	db	high STR_8
   140   00236C  EA                 	db	low STR_9
   141   00236D  2F                 	db	high STR_9
   142   00236E  ED                 	db	low STR_10
   143   00236F  2F                 	db	high STR_10
   144   002370  FC                 	db	low STR_11
   145   002371  2F                 	db	high STR_11
   146   002372  F6                 	db	low STR_12
   147   002373  2F                 	db	high STR_12
   148                           
   149                           ;initializer for _logs
   150   002374  8E                 	db	low STR_19
   151   002375  2F                 	db	high STR_19
   152   002376  4A                 	db	low STR_20
   153   002377  2F                 	db	high STR_20
   154   002378  05                 	db	low STR_21
   155   002379  2F                 	db	high STR_21
   156   00237A  39                 	db	low STR_22
   157   00237B  2F                 	db	high STR_22
   158   00237C  9E                 	db	low STR_23
   159   00237D  2F                 	db	high STR_23
   160   000000                     _RCREG	set	4014
   161   000000                     _TXREG	set	4013
   162   000000                     _SPBRG	set	4015
   163   000000                     _SSPADD	set	4040
   164   000000                     _SSPCON1	set	4038
   165   000000                     _ADRESL	set	4035
   166   000000                     _ADRESH	set	4036
   167   000000                     _ACKSTAT	set	32302
   168   000000                     _CKE	set	32318
   169   000000                     _RBPU	set	32655
   170   000000                     _VCFG1	set	32269
   171   000000                     _GODONE	set	32273
   172   000000                     _PORTBbits	set	3969
   173   000000                     _ADCON1	set	4033
   174   000000                     _TRISD	set	3989
   175   000000                     _ADCON0	set	4034
   176   000000                     _RCIF	set	31989
   177   000000                     _TXIF	set	31988
   178   000000                     _CREN	set	32092
   179   000000                     _TRISC6	set	31910
   180   000000                     _TRISC7	set	31911
   181   000000                     _PSA	set	32427
   182   000000                     _TMR0ON	set	32431
   183   000000                     _T0CS	set	32429
   184   000000                     _TMR0IF	set	32658
   185   000000                     _ACKEN	set	32300
   186   000000                     _ACKDT	set	32301
   187   000000                     _RCEN	set	32299
   188   000000                     _RSEN	set	32297
   189   000000                     _PEN	set	32298
   190   000000                     _SEN	set	32296
   191   000000                     _SMP	set	32319
   192   000000                     _TRISC4	set	31908
   193   000000                     _TRISC3	set	31907
   194   000000                     _PEIE	set	32662
   195   000000                     _GIE	set	32663
   196   000000                     _RD7	set	31775
   197   000000                     _RC0	set	31760
   198   000000                     _RC2	set	31762
   199   000000                     _GO	set	32273
   200   000000                     _ADON	set	32272
   201   000000                     _VCFG0	set	32268
   202   000000                     _ADCS2	set	32258
   203   000000                     _ADCS1	set	32257
   204   000000                     _ADCS0	set	32256
   205   000000                     _ACQT0	set	32259
   206   000000                     _ACQT1	set	32260
   207   000000                     _ACQT2	set	32261
   208   000000                     _PORTB	set	3969
   209   000000                     _RC1	set	31761
   210   000000                     _ADFM	set	32263
   211   000000                     _TRISB	set	3987
   212   000000                     _TRISC	set	3988
   213   000000                     _PORTD	set	3971
   214   000000                     _TRISD7	set	31919
   215   000000                     _RCIE	set	31981
   216   000000                     _SSPIF	set	31987
   217   000000                     _TMR0IE	set	32661
   218   000000                     _TMR0	set	4054
   219   000000                     _SSPBUF	set	4041
   220   000000                     _T08BIT	set	32430
   221   000000                     _BCLIF	set	32011
   222   000000                     _SPEN	set	32095
   223   000000                     _BRGH	set	32098
   224                           
   225                           	psect	mediumconst
   226   002E6E                     __pmediumconst:
   227                           	callstack 0
   228   002E6E  00                 	db	0
   229   002E6F                     STR_32:
   230   002E6F  20                 	db	32
   231   002E70  20                 	db	32
   232   002E71  52                 	db	82	;'R'
   233   002E72  65                 	db	101	;'e'
   234   002E73  74                 	db	116	;'t'
   235   002E74  79                 	db	121	;'y'
   236   002E75  70                 	db	112	;'p'
   237   002E76  65                 	db	101	;'e'
   238   002E77  20                 	db	32
   239   002E78  50                 	db	80	;'P'
   240   002E79  61                 	db	97	;'a'
   241   002E7A  73                 	db	115	;'s'
   242   002E7B  73                 	db	115	;'s'
   243   002E7C  77                 	db	119	;'w'
   244   002E7D  6F                 	db	111	;'o'
   245   002E7E  72                 	db	114	;'r'
   246   002E7F  64                 	db	100	;'d'
   247   002E80  20                 	db	32
   248   002E81  3A                 	db	58	;':'
   249   002E82  20                 	db	32
   250   002E83  00                 	db	0
   251   002E84                     STR_29:
   252   002E84  23                 	db	35
   253   002E85  20                 	db	32
   254   002E86  54                 	db	84	;'T'
   255   002E87  49                 	db	73	;'I'
   256   002E88  4D                 	db	77	;'M'
   257   002E89  45                 	db	69	;'E'
   258   002E8A  20                 	db	32
   259   002E8B  20                 	db	32
   260   002E8C  20                 	db	32
   261   002E8D  45                 	db	69	;'E'
   262   002E8E  56                 	db	86	;'V'
   263   002E8F  20                 	db	32
   264   002E90  20                 	db	32
   265   002E91  20                 	db	32
   266   002E92  53                 	db	83	;'S'
   267   002E93  50                 	db	80	;'P'
   268   002E94  20                 	db	32
   269   002E95  0A                 	db	10
   270   002E96  0D                 	db	13
   271   002E97  00                 	db	0
   272   002E98                     STR_33:
   273   002E98  20                 	db	32
   274   002E99  50                 	db	80	;'P'
   275   002E9A  61                 	db	97	;'a'
   276   002E9B  73                 	db	115	;'s'
   277   002E9C  73                 	db	115	;'s'
   278   002E9D  77                 	db	119	;'w'
   279   002E9E  6F                 	db	111	;'o'
   280   002E9F  72                 	db	114	;'r'
   281   002EA0  64                 	db	100	;'d'
   282   002EA1  20                 	db	32
   283   002EA2  43                 	db	67	;'C'
   284   002EA3  68                 	db	104	;'h'
   285   002EA4  61                 	db	97	;'a'
   286   002EA5  6E                 	db	110	;'n'
   287   002EA6  67                 	db	103	;'g'
   288   002EA7  65                 	db	101	;'e'
   289   002EA8  20                 	db	32
   290   002EA9  20                 	db	32
   291   002EAA  00                 	db	0
   292   002EAB                     STR_35:
   293   002EAB  20                 	db	32
   294   002EAC  20                 	db	32
   295   002EAD  20                 	db	32
   296   002EAE  20                 	db	32
   297   002EAF  20                 	db	32
   298   002EB0  48                 	db	72	;'H'
   299   002EB1  48                 	db	72	;'H'
   300   002EB2  3A                 	db	58	;':'
   301   002EB3  4D                 	db	77	;'M'
   302   002EB4  4D                 	db	77	;'M'
   303   002EB5  3A                 	db	58	;':'
   304   002EB6  53                 	db	83	;'S'
   305   002EB7  53                 	db	83	;'S'
   306   002EB8  20                 	db	32
   307   002EB9  20                 	db	32
   308   002EBA  20                 	db	32
   309   002EBB  20                 	db	32
   310   002EBC  00                 	db	0
   311   002EBD                     STR_31:
   312   002EBD  20                 	db	32
   313   002EBE  20                 	db	32
   314   002EBF  4E                 	db	78	;'N'
   315   002EC0  65                 	db	101	;'e'
   316   002EC1  77                 	db	119	;'w'
   317   002EC2  20                 	db	32
   318   002EC3  50                 	db	80	;'P'
   319   002EC4  61                 	db	97	;'a'
   320   002EC5  73                 	db	115	;'s'
   321   002EC6  73                 	db	115	;'s'
   322   002EC7  77                 	db	119	;'w'
   323   002EC8  6F                 	db	111	;'o'
   324   002EC9  72                 	db	114	;'r'
   325   002ECA  64                 	db	100	;'d'
   326   002ECB  20                 	db	32
   327   002ECC  3A                 	db	58	;':'
   328   002ECD  20                 	db	32
   329   002ECE  00                 	db	0
   330   002ECF                     STR_27:
   331   002ECF  20                 	db	32
   332   002ED0  20                 	db	32
   333   002ED1  44                 	db	68	;'D'
   334   002ED2  6F                 	db	111	;'o'
   335   002ED3  77                 	db	119	;'w'
   336   002ED4  6E                 	db	110	;'n'
   337   002ED5  6C                 	db	108	;'l'
   338   002ED6  6F                 	db	111	;'o'
   339   002ED7  61                 	db	97	;'a'
   340   002ED8  64                 	db	100	;'d'
   341   002ED9  20                 	db	32
   342   002EDA  4C                 	db	76	;'L'
   343   002EDB  6F                 	db	111	;'o'
   344   002EDC  67                 	db	103	;'g'
   345   002EDD  20                 	db	32
   346   002EDE  20                 	db	32
   347   002EDF  20                 	db	32
   348   002EE0  00                 	db	0
   349   002EE1                     STR_26:
   350   002EE1  20                 	db	32
   351   002EE2  20                 	db	32
   352   002EE3  20                 	db	32
   353   002EE4  20                 	db	32
   354   002EE5  20                 	db	32
   355   002EE6  20                 	db	32
   356   002EE7  20                 	db	32
   357   002EE8  20                 	db	32
   358   002EE9  20                 	db	32
   359   002EEA  20                 	db	32
   360   002EEB  20                 	db	32
   361   002EEC  20                 	db	32
   362   002EED  20                 	db	32
   363   002EEE  20                 	db	32
   364   002EEF  20                 	db	32
   365   002EF0  20                 	db	32
   366   002EF1  20                 	db	32
   367   002EF2  00                 	db	0
   368   002EF3                     STR_25:
   369   002EF3  20                 	db	32
   370   002EF4  20                 	db	32
   371   002EF5  20                 	db	32
   372   002EF6  4C                 	db	76	;'L'
   373   002EF7  4F                 	db	79	;'O'
   374   002EF8  47                 	db	71	;'G'
   375   002EF9  20                 	db	32
   376   002EFA  43                 	db	67	;'C'
   377   002EFB  4C                 	db	76	;'L'
   378   002EFC  45                 	db	69	;'E'
   379   002EFD  41                 	db	65	;'A'
   380   002EFE  52                 	db	82	;'R'
   381   002EFF  45                 	db	69	;'E'
   382   002F00  44                 	db	68	;'D'
   383   002F01  20                 	db	32
   384   002F02  20                 	db	32
   385   002F03  20                 	db	32
   386   002F04  00                 	db	0
   387   002F05                     STR_21:
   388   002F05  20                 	db	32
   389   002F06  43                 	db	67	;'C'
   390   002F07  6C                 	db	108	;'l'
   391   002F08  65                 	db	101	;'e'
   392   002F09  61                 	db	97	;'a'
   393   002F0A  72                 	db	114	;'r'
   394   002F0B  20                 	db	32
   395   002F0C  4C                 	db	76	;'L'
   396   002F0D  6F                 	db	111	;'o'
   397   002F0E  67                 	db	103	;'g'
   398   002F0F  20                 	db	32
   399   002F10  20                 	db	32
   400   002F11  20                 	db	32
   401   002F12  20                 	db	32
   402   002F13  20                 	db	32
   403   002F14  20                 	db	32
   404   002F15  20                 	db	32
   405   002F16  00                 	db	0
   406   002F17                     STR_34:
   407   002F17  20                 	db	32
   408   002F18  20                 	db	32
   409   002F19  20                 	db	32
   410   002F1A  53                 	db	83	;'S'
   411   002F1B  55                 	db	85	;'U'
   412   002F1C  43                 	db	67	;'C'
   413   002F1D  43                 	db	67	;'C'
   414   002F1E  45                 	db	69	;'E'
   415   002F1F  53                 	db	83	;'S'
   416   002F20  53                 	db	83	;'S'
   417   002F21  46                 	db	70	;'F'
   418   002F22  55                 	db	85	;'U'
   419   002F23  4C                 	db	76	;'L'
   420   002F24  4C                 	db	76	;'L'
   421   002F25  20                 	db	32
   422   002F26  20                 	db	32
   423   002F27  00                 	db	0
   424   002F28                     STR_24:
   425   002F28  45                 	db	69	;'E'
   426   002F29  6E                 	db	110	;'n'
   427   002F2A  74                 	db	116	;'t'
   428   002F2B  65                 	db	101	;'e'
   429   002F2C  72                 	db	114	;'r'
   430   002F2D  65                 	db	101	;'e'
   431   002F2E  64                 	db	100	;'d'
   432   002F2F  20                 	db	32
   433   002F30  56                 	db	86	;'V'
   434   002F31  69                 	db	105	;'i'
   435   002F32  65                 	db	101	;'e'
   436   002F33  77                 	db	119	;'w'
   437   002F34  20                 	db	32
   438   002F35  4C                 	db	76	;'L'
   439   002F36  6F                 	db	111	;'o'
   440   002F37  67                 	db	103	;'g'
   441   002F38  00                 	db	0
   442   002F39                     STR_22:
   443   002F39  20                 	db	32
   444   002F3A  53                 	db	83	;'S'
   445   002F3B  65                 	db	101	;'e'
   446   002F3C  74                 	db	116	;'t'
   447   002F3D  20                 	db	32
   448   002F3E  74                 	db	116	;'t'
   449   002F3F  69                 	db	105	;'i'
   450   002F40  6D                 	db	109	;'m'
   451   002F41  65                 	db	101	;'e'
   452   002F42  20                 	db	32
   453   002F43  20                 	db	32
   454   002F44  20                 	db	32
   455   002F45  20                 	db	32
   456   002F46  20                 	db	32
   457   002F47  20                 	db	32
   458   002F48  20                 	db	32
   459   002F49  00                 	db	0
   460   002F4A                     STR_20:
   461   002F4A  20                 	db	32
   462   002F4B  44                 	db	68	;'D'
   463   002F4C  6F                 	db	111	;'o'
   464   002F4D  77                 	db	119	;'w'
   465   002F4E  6E                 	db	110	;'n'
   466   002F4F  6C                 	db	108	;'l'
   467   002F50  6F                 	db	111	;'o'
   468   002F51  61                 	db	97	;'a'
   469   002F52  64                 	db	100	;'d'
   470   002F53  20                 	db	32
   471   002F54  6C                 	db	108	;'l'
   472   002F55  6F                 	db	111	;'o'
   473   002F56  67                 	db	103	;'g'
   474   002F57  20                 	db	32
   475   002F58  20                 	db	32
   476   002F59  20                 	db	32
   477   002F5A  00                 	db	0
   478   002F5B                     STR_17:
   479   002F5B  20                 	db	32
   480   002F5C  20                 	db	32
   481   002F5D  20                 	db	32
   482   002F5E  54                 	db	84	;'T'
   483   002F5F  72                 	db	114	;'r'
   484   002F60  79                 	db	121	;'y'
   485   002F61  20                 	db	32
   486   002F62  41                 	db	65	;'A'
   487   002F63  67                 	db	103	;'g'
   488   002F64  61                 	db	97	;'a'
   489   002F65  69                 	db	105	;'i'
   490   002F66  6E                 	db	110	;'n'
   491   002F67  20                 	db	32
   492   002F68  20                 	db	32
   493   002F69  20                 	db	32
   494   002F6A  20                 	db	32
   495   002F6B  00                 	db	0
   496   002F6C                     STR_14:
   497   002F6C  20                 	db	32
   498   002F6D  45                 	db	69	;'E'
   499   002F6E  6E                 	db	110	;'n'
   500   002F6F  74                 	db	116	;'t'
   501   002F70  65                 	db	101	;'e'
   502   002F71  72                 	db	114	;'r'
   503   002F72  20                 	db	32
   504   002F73  50                 	db	80	;'P'
   505   002F74  61                 	db	97	;'a'
   506   002F75  73                 	db	115	;'s'
   507   002F76  73                 	db	115	;'s'
   508   002F77  77                 	db	119	;'w'
   509   002F78  6F                 	db	111	;'o'
   510   002F79  72                 	db	114	;'r'
   511   002F7A  64                 	db	100	;'d'
   512   002F7B  20                 	db	32
   513   002F7C  00                 	db	0
   514   002F7D                     STR_13:
   515   002F7D  20                 	db	32
   516   002F7E  20                 	db	32
   517   002F7F  54                 	db	84	;'T'
   518   002F80  49                 	db	73	;'I'
   519   002F81  4D                 	db	77	;'M'
   520   002F82  45                 	db	69	;'E'
   521   002F83  20                 	db	32
   522   002F84  20                 	db	32
   523   002F85  20                 	db	32
   524   002F86  20                 	db	32
   525   002F87  45                 	db	69	;'E'
   526   002F88  56                 	db	86	;'V'
   527   002F89  20                 	db	32
   528   002F8A  20                 	db	32
   529   002F8B  53                 	db	83	;'S'
   530   002F8C  50                 	db	80	;'P'
   531   002F8D  00                 	db	0
   532   002F8E                     STR_19:
   533   002F8E  20                 	db	32
   534   002F8F  56                 	db	86	;'V'
   535   002F90  69                 	db	105	;'i'
   536   002F91  65                 	db	101	;'e'
   537   002F92  77                 	db	119	;'w'
   538   002F93  20                 	db	32
   539   002F94  4C                 	db	76	;'L'
   540   002F95  6F                 	db	111	;'o'
   541   002F96  67                 	db	103	;'g'
   542   002F97  20                 	db	32
   543   002F98  20                 	db	32
   544   002F99  20                 	db	32
   545   002F9A  20                 	db	32
   546   002F9B  20                 	db	32
   547   002F9C  20                 	db	32
   548   002F9D  00                 	db	0
   549   002F9E                     STR_23:
   550   002F9E  20                 	db	32
   551   002F9F  43                 	db	67	;'C'
   552   002FA0  68                 	db	104	;'h'
   553   002FA1  61                 	db	97	;'a'
   554   002FA2  6E                 	db	110	;'n'
   555   002FA3  67                 	db	103	;'g'
   556   002FA4  65                 	db	101	;'e'
   557   002FA5  20                 	db	32
   558   002FA6  50                 	db	80	;'P'
   559   002FA7  61                 	db	97	;'a'
   560   002FA8  73                 	db	115	;'s'
   561   002FA9  73                 	db	115	;'s'
   562   002FAA  77                 	db	119	;'w'
   563   002FAB  72                 	db	114	;'r'
   564   002FAC  64                 	db	100	;'d'
   565   002FAD  00                 	db	0
   566   002FAE                     STR_15:
   567   002FAE  20                 	db	32
   568   002FAF  53                 	db	83	;'S'
   569   002FB0  79                 	db	121	;'y'
   570   002FB1  73                 	db	115	;'s'
   571   002FB2  74                 	db	116	;'t'
   572   002FB3  65                 	db	101	;'e'
   573   002FB4  6D                 	db	109	;'m'
   574   002FB5  20                 	db	32
   575   002FB6  42                 	db	66	;'B'
   576   002FB7  6C                 	db	108	;'l'
   577   002FB8  6F                 	db	111	;'o'
   578   002FB9  63                 	db	99	;'c'
   579   002FBA  6B                 	db	107	;'k'
   580   002FBB  65                 	db	101	;'e'
   581   002FBC  64                 	db	100	;'d'
   582   002FBD  00                 	db	0
   583   002FBE                     STR_18:
   584   002FBE  20                 	db	32
   585   002FBF  43                 	db	67	;'C'
   586   002FC0  68                 	db	104	;'h'
   587   002FC1  61                 	db	97	;'a'
   588   002FC2  6E                 	db	110	;'n'
   589   002FC3  63                 	db	99	;'c'
   590   002FC4  65                 	db	101	;'e'
   591   002FC5  73                 	db	115	;'s'
   592   002FC6  20                 	db	32
   593   002FC7  4C                 	db	76	;'L'
   594   002FC8  65                 	db	101	;'e'
   595   002FC9  66                 	db	102	;'f'
   596   002FCA  74                 	db	116	;'t'
   597   002FCB  20                 	db	32
   598   002FCC  00                 	db	0
   599   002FCD                     STR_28:
   600   002FCD  20                 	db	32
   601   002FCE  53                 	db	83	;'S'
   602   002FCF  55                 	db	85	;'U'
   603   002FD0  43                 	db	67	;'C'
   604   002FD1  43                 	db	67	;'C'
   605   002FD2  45                 	db	69	;'E'
   606   002FD3  53                 	db	83	;'S'
   607   002FD4  53                 	db	83	;'S'
   608   002FD5  46                 	db	70	;'F'
   609   002FD6  55                 	db	85	;'U'
   610   002FD7  4C                 	db	76	;'L'
   611   002FD8  4C                 	db	76	;'L'
   612   002FD9  20                 	db	32
   613   002FDA  00                 	db	0
   614   002FDB                     STR_8:
   615   002FDB  43                 	db	67	;'C'
   616   002FDC  20                 	db	32
   617   002FDD  00                 	db	0
   618   002FDE                     STR_4:
   619   002FDE  47                 	db	71	;'G'
   620   002FDF  31                 	db	49	;'1'
   621   002FE0  00                 	db	0
   622   002FE1                     STR_5:
   623   002FE1  47                 	db	71	;'G'
   624   002FE2  32                 	db	50	;'2'
   625   002FE3  00                 	db	0
   626   002FE4                     STR_6:
   627   002FE4  47                 	db	71	;'G'
   628   002FE5  33                 	db	51	;'3'
   629   002FE6  00                 	db	0
   630   002FE7                     STR_7:
   631   002FE7  47                 	db	71	;'G'
   632   002FE8  34                 	db	52	;'4'
   633   002FE9  00                 	db	0
   634   002FEA                     STR_9:
   635   002FEA  43                 	db	67	;'C'
   636   002FEB  4C                 	db	76	;'L'
   637   002FEC  00                 	db	0
   638   002FED                     STR_10:
   639   002FED  44                 	db	68	;'D'
   640   002FEE  4C                 	db	76	;'L'
   641   002FEF  00                 	db	0
   642   002FF0                     STR_3:
   643   002FF0  47                 	db	71	;'G'
   644   002FF1  4E                 	db	78	;'N'
   645   002FF2  00                 	db	0
   646   002FF3                     STR_1:
   647   002FF3  4F                 	db	79	;'O'
   648   002FF4  4E                 	db	78	;'N'
   649   002FF5  00                 	db	0
   650   002FF6                     STR_12:
   651   002FF6  43                 	db	67	;'C'
   652   002FF7  50                 	db	80	;'P'
   653   002FF8  00                 	db	0
   654   002FF9                     STR_2:
   655   002FF9  47                 	db	71	;'G'
   656   002FFA  52                 	db	82	;'R'
   657   002FFB  00                 	db	0
   658   002FFC                     STR_11:
   659   002FFC  53                 	db	83	;'S'
   660   002FFD  54                 	db	84	;'T'
   661   002FFE  00                 	db	0
   662   002FFF  00                 	db	0	; dummy byte at the end
   663   000000                     
   664                           ; #config settings
   665                           
   666                           	psect	cinit
   667   0020A4                     __pcinit:
   668                           	callstack 0
   669   0020A4                     start_initialization:
   670                           	callstack 0
   671   0020A4                     __initialization:
   672                           	callstack 0
   673                           
   674                           ; Initialize objects allocated to BANK0 (34 bytes)
   675                           ; load TBLPTR registers with __pidataBANK0
   676   0020A4  0E5C               	movlw	low __pidataBANK0
   677   0020A6  6EF6               	movwf	tblptrl,c
   678   0020A8  0E23               	movlw	high __pidataBANK0
   679   0020AA  6EF7               	movwf	tblptrh,c
   680   0020AC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   681   0020AE  6EF8               	movwf	tblptru,c
   682   0020B0  EE00  F0A0         	lfsr	0,__pdataBANK0
   683   0020B4  EE10 F022          	lfsr	1,34
   684   0020B8                     copy_data0:
   685   0020B8  0009               	tblrd		*+
   686   0020BA  CFF5 FFEE          	movff	tablat,postinc0
   687   0020BE  50E5               	movf	postdec1,w,c
   688   0020C0  50E1               	movf	fsr1l,w,c
   689   0020C2  E1FA               	bnz	copy_data0
   690                           
   691                           ; Initialize objects allocated to COMRAM (3 bytes)
   692                           ; load TBLPTR registers with __pidataCOMRAM
   693   0020C4  0E98               	movlw	low __pidataCOMRAM
   694   0020C6  6EF6               	movwf	tblptrl,c
   695   0020C8  0E24               	movlw	high __pidataCOMRAM
   696   0020CA  6EF7               	movwf	tblptrh,c
   697   0020CC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   698   0020CE  6EF8               	movwf	tblptru,c
   699   0020D0  0009               	tblrd		*+	;fetch initializer
   700   0020D2  CFF5 F05C          	movff	tablat,__pdataCOMRAM
   701   0020D6  0009               	tblrd		*+	;fetch initializer
   702   0020D8  CFF5 F05D          	movff	tablat,__pdataCOMRAM+1
   703   0020DC  0009               	tblrd		*+	;fetch initializer
   704   0020DE  CFF5 F05E          	movff	tablat,__pdataCOMRAM+2
   705                           
   706                           ; Clear objects allocated to BANK0 (64 bytes)
   707   0020E2  EE00  F060         	lfsr	0,__pbssBANK0
   708   0020E6  0E40               	movlw	64
   709   0020E8                     clear_0:
   710   0020E8  6AEE               	clrf	postinc0,c
   711   0020EA  06E8               	decf	wreg,f,c
   712   0020EC  E1FD               	bnz	clear_0
   713                           
   714                           ; Clear objects allocated to COMRAM (35 bytes)
   715   0020EE  EE00  F039         	lfsr	0,__pbssCOMRAM
   716   0020F2  0E23               	movlw	35
   717   0020F4                     clear_1:
   718   0020F4  6AEE               	clrf	postinc0,c
   719   0020F6  06E8               	decf	wreg,f,c
   720   0020F8  E1FD               	bnz	clear_1
   721   0020FA                     end_of_initialization:
   722                           	callstack 0
   723   0020FA                     __end_of__initialization:
   724                           	callstack 0
   725   0020FA  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   726   0020FC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   727   0020FE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   728   002100  6EF8               	movwf	tblptru,c
   729   002102  0100               	movlb	0
   730   002104  EFF8  F008         	goto	_main	;jump to C main() function
   731                           
   732                           	psect	bssCOMRAM
   733   000039                     __pbssCOMRAM:
   734                           	callstack 0
   735   000039                     _store:
   736                           	callstack 0
   737   000039                     	ds	5
   738   00003E                     _del:
   739                           	callstack 0
   740   00003E                     	ds	2
   741   000040                     _key_time:
   742                           	callstack 0
   743   000040                     	ds	2
   744   000042                     _adc_reg_val:
   745                           	callstack 0
   746   000042                     	ds	2
   747   000044                     _t_flag:
   748                           	callstack 0
   749   000044                     	ds	1
   750   000045                     _pos_flag:
   751                           	callstack 0
   752   000045                     	ds	1
   753   000046                     _sec:
   754                           	callstack 0
   755   000046                     	ds	1
   756   000047                     _min:
   757                           	callstack 0
   758   000047                     	ds	1
   759   000048                     _hr:
   760                           	callstack 0
   761   000048                     	ds	1
   762   000049                     _reset_flag:
   763                           	callstack 0
   764   000049                     	ds	1
   765   00004A                     _ind:
   766                           	callstack 0
   767   00004A                     	ds	1
   768   00004B                     _last:
   769                           	callstack 0
   770   00004B                     	ds	1
   771   00004C                     _var:
   772                           	callstack 0
   773   00004C                     	ds	1
   774   00004D                     _start:
   775                           	callstack 0
   776   00004D                     	ds	1
   777   00004E                     _apend_index:
   778                           	callstack 0
   779   00004E                     	ds	1
   780   00004F                     _start_index:
   781                           	callstack 0
   782   00004F                     	ds	1
   783   000050                     _overflow:
   784                           	callstack 0
   785   000050                     	ds	1
   786   000051                     _lap:
   787                           	callstack 0
   788   000051                     	ds	1
   789   000052                     _log_index:
   790                           	callstack 0
   791   000052                     	ds	1
   792   000053                     _star_index:
   793                           	callstack 0
   794   000053                     	ds	1
   795   000054                     _star_flag:
   796                           	callstack 0
   797   000054                     	ds	1
   798   000055                     _index:
   799                           	callstack 0
   800   000055                     	ds	1
   801   000056                     _i:
   802                           	callstack 0
   803   000056                     	ds	1
   804   000057                     read_switches@key:
   805                           	callstack 0
   806   000057                     	ds	1
   807   000058                     _menu_f:
   808                           	callstack 0
   809   000058                     	ds	1
   810   000059                     _main_f:
   811                           	callstack 0
   812   000059                     	ds	1
   813   00005A                     _pre_key:
   814                           	callstack 0
   815   00005A                     	ds	1
   816   00005B                     _key:
   817                           	callstack 0
   818   00005B                     	ds	1
   819                           
   820                           	psect	dataCOMRAM
   821   00005C                     __pdataCOMRAM:
   822                           	callstack 0
   823   00005C                     _chance:
   824                           	callstack 0
   825   00005C                     	ds	1
   826   00005D                     _tick_count:
   827                           	callstack 0
   828   00005D                     	ds	1
   829   00005E                     read_switches@once:
   830                           	callstack 0
   831   00005E                     	ds	1
   832                           
   833                           	psect	bssBANK0
   834   000060                     __pbssBANK0:
   835                           	callstack 0
   836   000060                     _download_array:
   837                           	callstack 0
   838   000060                     	ds	11
   839   00006B                     _view_array:
   840                           	callstack 0
   841   00006B                     	ds	11
   842   000076                     isr@count:
   843                           	callstack 0
   844   000076                     	ds	4
   845   00007A                     _clock_reg:
   846                           	callstack 0
   847   00007A                     	ds	3
   848   00007D                     _press_delay:
   849                           	callstack 0
   850   00007D                     	ds	2
   851   00007F                     _count:
   852                           	callstack 0
   853   00007F                     	ds	2
   854   000081                     _delay:
   855                           	callstack 0
   856   000081                     	ds	2
   857   000083                     _time:
   858                           	callstack 0
   859   000083                     	ds	9
   860   00008C                     _temp2:
   861                           	callstack 0
   862   00008C                     	ds	5
   863   000091                     _temp1:
   864                           	callstack 0
   865   000091                     	ds	5
   866   000096                     _temp_password:
   867                           	callstack 0
   868   000096                     	ds	5
   869   00009B                     _pass:
   870                           	callstack 0
   871   00009B                     	ds	5
   872                           
   873                           	psect	dataBANK0
   874   0000A0                     __pdataBANK0:
   875                           	callstack 0
   876   0000A0                     _events:
   877                           	callstack 0
   878   0000A0                     	ds	24
   879   0000B8                     _logs:
   880                           	callstack 0
   881   0000B8                     	ds	10
   882                           
   883                           	psect	cstackCOMRAM
   884   000001                     __pcstackCOMRAM:
   885                           	callstack 0
   886   000001                     ?_read_adc:
   887                           	callstack 0
   888   000001                     ?_my_strcmp:
   889                           	callstack 0
   890   000001                     ?_my_strcp:
   891                           	callstack 0
   892   000001                     ?___awdiv:
   893                           	callstack 0
   894   000001                     ?___lwdiv:
   895                           	callstack 0
   896   000001                     ?___lwmod:
   897                           	callstack 0
   898   000001                     clcd_write@control_bit:
   899                           	callstack 0
   900   000001                     read_switches@detection_type:
   901                           	callstack 0
   902   000001                     my_strcmp@one:
   903                           	callstack 0
   904   000001                     i2c_write@data:
   905                           	callstack 0
   906   000001                     putch@byte:
   907                           	callstack 0
   908   000001                     my_strcp@one:
   909                           	callstack 0
   910   000001                     ___awdiv@dividend:
   911                           	callstack 0
   912   000001                     ___lwdiv@dividend:
   913                           	callstack 0
   914   000001                     ___lwmod@dividend:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x0
   918   000001                     	ds	1
   919   000002                     clcd_write@byte:
   920                           	callstack 0
   921   000002                     my_strcmp@two:
   922                           	callstack 0
   923   000002                     read_ds1307@address:
   924                           	callstack 0
   925   000002                     write_external_eeprom@data:
   926                           	callstack 0
   927   000002                     read_external_eeprom@address:
   928                           	callstack 0
   929   000002                     my_strcp@two:
   930                           	callstack 0
   931   000002                     puts@s:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x1
   935   000002                     	ds	1
   936   000003                     ??_read_adc:
   937   000003                     ??_init_clcd:
   938   000003                     ??_my_strcmp:
   939   000003                     ??_my_strcp:
   940   000003                     read_ds1307@data:
   941                           	callstack 0
   942   000003                     read_external_eeprom@data:
   943                           	callstack 0
   944   000003                     clcd_print@data:
   945                           	callstack 0
   946   000003                     write_external_eeprom@i:
   947                           	callstack 0
   948   000003                     ___awdiv@divisor:
   949                           	callstack 0
   950   000003                     ___lwdiv@divisor:
   951                           	callstack 0
   952   000003                     ___lwmod@divisor:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x2
   956   000003                     	ds	1
   957   000004                     
   958                           ; 1 bytes @ 0x3
   959   000004                     	ds	1
   960   000005                     clcd_print@addr:
   961                           	callstack 0
   962   000005                     write_external_eeprom@address:
   963                           	callstack 0
   964   000005                     ___awdiv@counter:
   965                           	callstack 0
   966   000005                     ___lwmod@counter:
   967                           	callstack 0
   968   000005                     read_adc@reg_val:
   969                           	callstack 0
   970   000005                     my_strcmp@last:
   971                           	callstack 0
   972   000005                     my_strcp@last:
   973                           	callstack 0
   974   000005                     ___lwdiv@quotient:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x4
   978   000005                     	ds	1
   979   000006                     store_event@k:
   980                           	callstack 0
   981   000006                     clear_log@key:
   982                           	callstack 0
   983   000006                     ___awdiv@sign:
   984                           	callstack 0
   985                           
   986                           ; 1 bytes @ 0x5
   987   000006                     	ds	1
   988   000007                     read_adc@channel:
   989                           	callstack 0
   990   000007                     clear_log@k:
   991                           	callstack 0
   992   000007                     ___lwdiv@counter:
   993                           	callstack 0
   994   000007                     my_strcmp@k:
   995                           	callstack 0
   996   000007                     my_strcp@k:
   997                           	callstack 0
   998   000007                     ___awdiv@quotient:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x6
  1002   000007                     	ds	1
  1003   000008                     ?___xxtofl:
  1004                           	callstack 0
  1005   000008                     ___xxtofl@val:
  1006                           	callstack 0
  1007                           
  1008                           ; 4 bytes @ 0x7
  1009   000008                     	ds	1
  1010   000009                     ?___awmod:
  1011                           	callstack 0
  1012   000009                     ___awmod@dividend:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x8
  1016   000009                     	ds	2
  1017   00000B                     ___awmod@divisor:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0xA
  1021   00000B                     	ds	1
  1022   00000C                     ??___xxtofl:
  1023                           
  1024                           ; 1 bytes @ 0xB
  1025   00000C                     	ds	1
  1026   00000D                     ___awmod@counter:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0xC
  1030   00000D                     	ds	1
  1031   00000E                     ___awmod@sign:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0xD
  1035   00000E                     	ds	1
  1036   00000F                     clcd_putch@addr:
  1037                           	callstack 0
  1038   00000F                     write_ds1307@data:
  1039                           	callstack 0
  1040   00000F                     download_log@j:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0xE
  1044   00000F                     	ds	1
  1045   000010                     clcd_putch@data:
  1046                           	callstack 0
  1047   000010                     write_ds1307@address:
  1048                           	callstack 0
  1049   000010                     ___xxtofl@sign:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0xF
  1053   000010                     	ds	1
  1054   000011                     ??_password:
  1055   000011                     ??_view_log:
  1056   000011                     ??_change_pass:
  1057   000011                     ??_settime:
  1058   000011                     init_ds1307@dummy:
  1059                           	callstack 0
  1060   000011                     menu@key:
  1061                           	callstack 0
  1062   000011                     download_log@k:
  1063                           	callstack 0
  1064   000011                     ___xxtofl@exp:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x10
  1068   000011                     	ds	1
  1069   000012                     init_config@j:
  1070                           	callstack 0
  1071   000012                     ___xxtofl@arg:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x11
  1075   000012                     	ds	1
  1076   000013                     settime@key:
  1077                           	callstack 0
  1078   000013                     change_pass@delay:
  1079                           	callstack 0
  1080   000013                     password@wait:
  1081                           	callstack 0
  1082                           
  1083                           ; 8 bytes @ 0x12
  1084   000013                     	ds	1
  1085   000014                     settime@k:
  1086                           	callstack 0
  1087                           
  1088                           ; 1 bytes @ 0x13
  1089   000014                     	ds	2
  1090   000016                     ?___fldiv:
  1091                           	callstack 0
  1092   000016                     view_log@j:
  1093                           	callstack 0
  1094   000016                     ___fldiv@b:
  1095                           	callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x15
  1098   000016                     	ds	1
  1099   000017                     change_pass@key:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x16
  1103   000017                     	ds	1
  1104   000018                     view_log@key:
  1105                           	callstack 0
  1106   000018                     change_pass@k:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x17
  1110   000018                     	ds	2
  1111   00001A                     ___fldiv@a:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x19
  1115   00001A                     	ds	1
  1116   00001B                     password@delay:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0x1A
  1120   00001B                     	ds	3
  1121   00001E                     ??___fldiv:
  1122                           
  1123                           ; 1 bytes @ 0x1D
  1124   00001E                     	ds	1
  1125   00001F                     password@key:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x1E
  1129   00001F                     	ds	3
  1130   000022                     ___fldiv@rem:
  1131                           	callstack 0
  1132                           
  1133                           ; 4 bytes @ 0x21
  1134   000022                     	ds	4
  1135   000026                     ___fldiv@sign:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x25
  1139   000026                     	ds	1
  1140   000027                     ___fldiv@new_exp:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x26
  1144   000027                     	ds	2
  1145   000029                     ___fldiv@grs:
  1146                           	callstack 0
  1147                           
  1148                           ; 4 bytes @ 0x28
  1149   000029                     	ds	4
  1150   00002D                     ___fldiv@bexp:
  1151                           	callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x2C
  1154   00002D                     	ds	1
  1155   00002E                     ___fldiv@aexp:
  1156                           	callstack 0
  1157                           
  1158                           ; 1 bytes @ 0x2D
  1159   00002E                     	ds	1
  1160   00002F                     ?___fltol:
  1161                           	callstack 0
  1162   00002F                     ___fltol@f1:
  1163                           	callstack 0
  1164                           
  1165                           ; 4 bytes @ 0x2E
  1166   00002F                     	ds	4
  1167   000033                     ??___fltol:
  1168                           
  1169                           ; 1 bytes @ 0x32
  1170   000033                     	ds	4
  1171   000037                     ___fltol@sign1:
  1172                           	callstack 0
  1173                           
  1174                           ; 1 bytes @ 0x36
  1175   000037                     	ds	1
  1176   000038                     ___fltol@exp1:
  1177                           	callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x37
  1180   000038                     	ds	1
  1181   000039                     
  1182                           ; 1 bytes @ 0x38
  1183 ;;
  1184 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1185 ;;
  1186 ;; *************** function _main *****************
  1187 ;; Defined at:
  1188 ;;		line 58 in file "main.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1202 ;;      Params:         0       0       0       0       0       0       0
  1203 ;;      Locals:         0       0       0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0
  1205 ;;      Totals:         0       0       0       0       0       0       0
  1206 ;;Total ram usage:        0 bytes
  1207 ;; Hardware stack levels required when called: 7
  1208 ;; This function calls:
  1209 ;;		___fldiv
  1210 ;;		___fltol
  1211 ;;		___xxtofl
  1212 ;;		_change_pass
  1213 ;;		_clcd_write
  1214 ;;		_clear_log
  1215 ;;		_dashboard
  1216 ;;		_download_log
  1217 ;;		_init_config
  1218 ;;		_menu
  1219 ;;		_password
  1220 ;;		_read_adc
  1221 ;;		_read_switches
  1222 ;;		_settime
  1223 ;;		_view_log
  1224 ;; This function is called by:
  1225 ;;		Startup code after reset
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text0
  1230   0011F0                     __ptext0:
  1231                           	callstack 0
  1232   0011F0                     _main:
  1233                           	callstack 24
  1234   0011F0                     
  1235                           ;main.c: 59:     init_config();
  1236   0011F0  EC61  F00E         	call	_init_config	;wreg free
  1237   0011F4                     l4055:
  1238                           
  1239                           ;main.c: 65:         key = read_switches(0);
  1240   0011F4  0E00               	movlw	0
  1241   0011F6  ECA7  F00F         	call	_read_switches
  1242   0011FA  6E5B               	movwf	_key^0,c
  1243   0011FC                     
  1244                           ;main.c: 67:         if (key != 0xFF) {
  1245   0011FC  285B               	incf	_key^0,w,c
  1246   0011FE  B4D8               	btfsc	status,2,c
  1247   001200  EF04  F009         	goto	u3451
  1248   001204  EF06  F009         	goto	u3450
  1249   001208                     u3451:
  1250   001208  EF1E  F009         	goto	l4069
  1251   00120C                     u3450:
  1252   00120C                     
  1253                           ;main.c: 68:             pre_key = key;
  1254   00120C  C05B  F05A         	movff	_key,_pre_key
  1255   001210                     
  1256                           ;main.c: 69:             key_time++;
  1257   001210  4A40               	infsnz	_key_time^0,f,c
  1258   001212  2A41               	incf	(_key_time+1)^0,f,c
  1259   001214                     
  1260                           ;main.c: 70:             if (key_time == 500) {
  1261   001214  0EF4               	movlw	244
  1262   001216  1840               	xorwf	_key_time^0,w,c
  1263   001218  E106               	bnz	u3461
  1264   00121A  0441               	decf	(_key_time+1)^0,w,c
  1265   00121C  A4D8               	btfss	status,2,c
  1266   00121E  EF13  F009         	goto	u3461
  1267   001222  EF15  F009         	goto	u3460
  1268   001226                     u3461:
  1269   001226  EF1A  F009         	goto	l4067
  1270   00122A                     u3460:
  1271   00122A                     
  1272                           ;main.c: 71:                 key = key + 10;
  1273   00122A  505B               	movf	_key^0,w,c
  1274   00122C  0F0A               	addlw	10
  1275   00122E  6E5B               	movwf	_key^0,c
  1276                           
  1277                           ;main.c: 72:             } else {
  1278   001230  EF47  F009         	goto	l4079
  1279   001234                     l4067:
  1280                           
  1281                           ;main.c: 73:                 key = 0;
  1282   001234  0E00               	movlw	0
  1283   001236  6E5B               	movwf	_key^0,c
  1284   001238  EF47  F009         	goto	l4079
  1285   00123C                     l4069:
  1286   00123C  BE41               	btfsc	(_key_time+1)^0,7,c
  1287   00123E  EF29  F009         	goto	u3471
  1288   001242  5041               	movf	(_key_time+1)^0,w,c
  1289   001244  E108               	bnz	u3470
  1290   001246  0440               	decf	_key_time^0,w,c
  1291   001248  A0D8               	btfss	status,0,c
  1292   00124A  EF29  F009         	goto	u3471
  1293   00124E  EF2B  F009         	goto	u3470
  1294   001252                     u3471:
  1295   001252  EF41  F009         	goto	l4077
  1296   001256                     u3470:
  1297   001256  BE41               	btfsc	(_key_time+1)^0,7,c
  1298   001258  EF39  F009         	goto	u3480
  1299   00125C  0EF4               	movlw	244
  1300   00125E  5C40               	subwf	_key_time^0,w,c
  1301   001260  0E01               	movlw	1
  1302   001262  5841               	subwfb	(_key_time+1)^0,w,c
  1303   001264  B0D8               	btfsc	status,0,c
  1304   001266  EF37  F009         	goto	u3481
  1305   00126A  EF39  F009         	goto	u3480
  1306   00126E                     u3481:
  1307   00126E  EF41  F009         	goto	l4077
  1308   001272                     u3480:
  1309   001272                     
  1310                           ;main.c: 76:             key_time = 0;
  1311   001272  0E00               	movlw	0
  1312   001274  6E41               	movwf	(_key_time+1)^0,c
  1313   001276  0E00               	movlw	0
  1314   001278  6E40               	movwf	_key_time^0,c
  1315   00127A                     
  1316                           ;main.c: 77:             key = pre_key;
  1317   00127A  C05A  F05B         	movff	_pre_key,_key
  1318                           
  1319                           ;main.c: 78:         } else {
  1320   00127E  EF47  F009         	goto	l4079
  1321   001282                     l4077:
  1322                           
  1323                           ;main.c: 79:             key_time = 0;
  1324   001282  0E00               	movlw	0
  1325   001284  6E41               	movwf	(_key_time+1)^0,c
  1326   001286  0E00               	movlw	0
  1327   001288  6E40               	movwf	_key_time^0,c
  1328                           
  1329                           ;main.c: 80:             key = 0;
  1330   00128A  0E00               	movlw	0
  1331   00128C  6E5B               	movwf	_key^0,c
  1332   00128E                     l4079:
  1333                           
  1334                           ;main.c: 84:         adc_reg_val = read_adc(0x04) / 10.33;
  1335   00128E  0EAE               	movlw	174
  1336   001290  6E1A               	movwf	___fldiv@a^0,c
  1337   001292  0E47               	movlw	71
  1338   001294  6E1B               	movwf	(___fldiv@a+1)^0,c
  1339   001296  0E25               	movlw	37
  1340   001298  6E1C               	movwf	(___fldiv@a+2)^0,c
  1341   00129A  0E41               	movlw	65
  1342   00129C  6E1D               	movwf	(___fldiv@a+3)^0,c
  1343   00129E  0E04               	movlw	4
  1344   0012A0  EC09  F011         	call	_read_adc
  1345   0012A4  C001  F008         	movff	?_read_adc,___xxtofl@val
  1346   0012A8  C002  F009         	movff	?_read_adc+1,___xxtofl@val+1
  1347   0012AC  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1348   0012AE  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1349   0012B0  0E00               	movlw	0
  1350   0012B2  ECFA  F009         	call	___xxtofl
  1351   0012B6  C008  F016         	movff	?___xxtofl,___fldiv@b
  1352   0012BA  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  1353   0012BE  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  1354   0012C2  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  1355   0012C6  EC09  F000         	call	___fldiv	;wreg free
  1356   0012CA  C016  F02F         	movff	?___fldiv,___fltol@f1
  1357   0012CE  C017  F030         	movff	?___fldiv+1,___fltol@f1+1
  1358   0012D2  C018  F031         	movff	?___fldiv+2,___fltol@f1+2
  1359   0012D6  C019  F032         	movff	?___fldiv+3,___fltol@f1+3
  1360   0012DA  EC84  F00C         	call	___fltol	;wreg free
  1361   0012DE  C02F  F042         	movff	?___fltol,_adc_reg_val
  1362   0012E2  C030  F043         	movff	?___fltol+1,_adc_reg_val+1
  1363   0012E6                     
  1364                           ;main.c: 88:         if (main_f == 0) {
  1365   0012E6  5059               	movf	_main_f^0,w,c
  1366   0012E8  A4D8               	btfss	status,2,c
  1367   0012EA  EF79  F009         	goto	u3491
  1368   0012EE  EF7B  F009         	goto	u3490
  1369   0012F2                     u3491:
  1370   0012F2  EF91  F009         	goto	l4091
  1371   0012F6                     u3490:
  1372   0012F6                     
  1373                           ;main.c: 89:             dashboard();
  1374   0012F6  EC72  F00B         	call	_dashboard	;wreg free
  1375   0012FA                     
  1376                           ;main.c: 90:             if (key == 5) {
  1377   0012FA  0E05               	movlw	5
  1378   0012FC  185B               	xorwf	_key^0,w,c
  1379   0012FE  A4D8               	btfss	status,2,c
  1380   001300  EF84  F009         	goto	u3501
  1381   001304  EF86  F009         	goto	u3500
  1382   001308                     u3501:
  1383   001308  EFFA  F008         	goto	l4055
  1384   00130C                     u3500:
  1385   00130C                     
  1386                           ;main.c: 91:                 clcd_write(0x01, 0);
  1387   00130C  0E00               	movlw	0
  1388   00130E  6E01               	movwf	clcd_write@control_bit^0,c
  1389   001310  0E01               	movlw	1
  1390   001312  EC4C  F011         	call	_clcd_write
  1391   001316                     
  1392                           ;main.c: 92:                 main_f = 1;
  1393   001316  0E01               	movlw	1
  1394   001318  6E59               	movwf	_main_f^0,c
  1395   00131A  EFFA  F008         	goto	l4055
  1396   00131E                     l146:
  1397                           
  1398                           ;main.c: 94:         } else if (main_f == 1) {
  1399   00131E  EFFA  F008         	goto	l4055
  1400   001322                     l4091:
  1401   001322  0459               	decf	_main_f^0,w,c
  1402   001324  A4D8               	btfss	status,2,c
  1403   001326  EF97  F009         	goto	u3511
  1404   00132A  EF99  F009         	goto	u3510
  1405   00132E                     u3511:
  1406   00132E  EF9E  F009         	goto	l4095
  1407   001332                     u3510:
  1408   001332                     
  1409                           ;main.c: 95:             password(key);
  1410   001332  505B               	movf	_key^0,w,c
  1411   001334  EC8C  F003         	call	_password
  1412                           
  1413                           ;main.c: 96:         } else if (main_f == 2) {
  1414   001338  EFFA  F008         	goto	l4055
  1415   00133C                     l4095:
  1416   00133C  0E02               	movlw	2
  1417   00133E  1859               	xorwf	_main_f^0,w,c
  1418   001340  A4D8               	btfss	status,2,c
  1419   001342  EFA5  F009         	goto	u3521
  1420   001346  EFA7  F009         	goto	u3520
  1421   00134A                     u3521:
  1422   00134A  EFAC  F009         	goto	l4099
  1423   00134E                     u3520:
  1424   00134E                     
  1425                           ;main.c: 97:             menu(key);
  1426   00134E  505B               	movf	_key^0,w,c
  1427   001350  ECD4  F00A         	call	_menu
  1428                           
  1429                           ;main.c: 98:         } else if (main_f == 3) {
  1430   001354  EFFA  F008         	goto	l4055
  1431   001358                     l4099:
  1432   001358  0E03               	movlw	3
  1433   00135A  1859               	xorwf	_main_f^0,w,c
  1434   00135C  A4D8               	btfss	status,2,c
  1435   00135E  EFB3  F009         	goto	u3531
  1436   001362  EFB5  F009         	goto	u3530
  1437   001366                     u3531:
  1438   001366  EFFA  F008         	goto	l4055
  1439   00136A                     u3530:
  1440   00136A                     
  1441                           ;main.c: 100:             if (menu_f == 0) {
  1442   00136A  5058               	movf	_menu_f^0,w,c
  1443   00136C  A4D8               	btfss	status,2,c
  1444   00136E  EFBB  F009         	goto	u3541
  1445   001372  EFBD  F009         	goto	u3540
  1446   001376                     u3541:
  1447   001376  EFC2  F009         	goto	l4105
  1448   00137A                     u3540:
  1449   00137A                     
  1450                           ;main.c: 101:                 view_log(key);
  1451   00137A  505B               	movf	_key^0,w,c
  1452   00137C  EC9E  F006         	call	_view_log
  1453                           
  1454                           ;main.c: 102:             }
  1455   001380  EFFA  F008         	goto	l4055
  1456   001384                     l4105:
  1457   001384  0E02               	movlw	2
  1458   001386  1858               	xorwf	_menu_f^0,w,c
  1459   001388  A4D8               	btfss	status,2,c
  1460   00138A  EFC9  F009         	goto	u3551
  1461   00138E  EFCB  F009         	goto	u3550
  1462   001392                     u3551:
  1463   001392  EFD0  F009         	goto	l4109
  1464   001396                     u3550:
  1465   001396                     
  1466                           ;main.c: 104:                 clear_log(key);
  1467   001396  505B               	movf	_key^0,w,c
  1468   001398  EC15  F00E         	call	_clear_log
  1469                           
  1470                           ;main.c: 105:             } else if (menu_f == 1) {
  1471   00139C  EFFA  F008         	goto	l4055
  1472   0013A0                     l4109:
  1473   0013A0  0458               	decf	_menu_f^0,w,c
  1474   0013A2  A4D8               	btfss	status,2,c
  1475   0013A4  EFD6  F009         	goto	u3561
  1476   0013A8  EFD8  F009         	goto	u3560
  1477   0013AC                     u3561:
  1478   0013AC  EFDC  F009         	goto	l4113
  1479   0013B0                     u3560:
  1480   0013B0                     
  1481                           ;main.c: 106:                 download_log();
  1482   0013B0  ECE3  F007         	call	_download_log	;wreg free
  1483                           
  1484                           ;main.c: 107:             } else if (menu_f == 4) {
  1485   0013B4  EFFA  F008         	goto	l4055
  1486   0013B8                     l4113:
  1487   0013B8  0E04               	movlw	4
  1488   0013BA  1858               	xorwf	_menu_f^0,w,c
  1489   0013BC  A4D8               	btfss	status,2,c
  1490   0013BE  EFE3  F009         	goto	u3571
  1491   0013C2  EFE5  F009         	goto	u3570
  1492   0013C6                     u3571:
  1493   0013C6  EFEA  F009         	goto	l4117
  1494   0013CA                     u3570:
  1495   0013CA                     
  1496                           ;main.c: 108:                 change_pass(key);
  1497   0013CA  505B               	movf	_key^0,w,c
  1498   0013CC  ECD6  F001         	call	_change_pass
  1499                           
  1500                           ;main.c: 109:             } else if (menu_f == 3) {
  1501   0013D0  EFFA  F008         	goto	l4055
  1502   0013D4                     l4117:
  1503   0013D4  0E03               	movlw	3
  1504   0013D6  1858               	xorwf	_menu_f^0,w,c
  1505   0013D8  A4D8               	btfss	status,2,c
  1506   0013DA  EFF1  F009         	goto	u3581
  1507   0013DE  EFF3  F009         	goto	u3580
  1508   0013E2                     u3581:
  1509   0013E2  EF8F  F009         	goto	l146
  1510   0013E6                     u3580:
  1511   0013E6                     
  1512                           ;main.c: 111:                 settime(key);
  1513   0013E6  505B               	movf	_key^0,w,c
  1514   0013E8  EC16  F005         	call	_settime
  1515   0013EC  EFFA  F008         	goto	l4055
  1516   0013F0  EF07  F000         	goto	start
  1517   0013F4                     __end_of_main:
  1518                           	callstack 0
  1519                           
  1520 ;; *************** function _view_log *****************
  1521 ;; Defined at:
  1522 ;;		line 25 in file "view_log.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  key             1    wreg     unsigned char 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  key             1   23[COMRAM] unsigned char 
  1527 ;;  j               2   21[COMRAM] int 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1537 ;;      Params:         0       0       0       0       0       0       0
  1538 ;;      Locals:         3       0       0       0       0       0       0
  1539 ;;      Temps:          5       0       0       0       0       0       0
  1540 ;;      Totals:         8       0       0       0       0       0       0
  1541 ;;Total ram usage:        8 bytes
  1542 ;; Hardware stack levels used: 1
  1543 ;; Hardware stack levels required when called: 5
  1544 ;; This function calls:
  1545 ;;		___awdiv
  1546 ;;		___awmod
  1547 ;;		_clcd_print
  1548 ;;		_clcd_putch
  1549 ;;		_read_external_eeprom
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text1
  1556   000D3C                     __ptext1:
  1557                           	callstack 0
  1558   000D3C                     _view_log:
  1559                           	callstack 25
  1560                           
  1561                           ;incstack = 0
  1562                           ;view_log@key stored from wreg
  1563   000D3C  6E18               	movwf	view_log@key^0,c
  1564   000D3E                     
  1565                           ;view_log.c: 28:     if (key == 16) {
  1566   000D3E  0E10               	movlw	16
  1567   000D40  1818               	xorwf	view_log@key^0,w,c
  1568   000D42  A4D8               	btfss	status,2,c
  1569   000D44  EFA6  F006         	goto	u2561
  1570   000D48  EFA8  F006         	goto	u2560
  1571   000D4C                     u2561:
  1572   000D4C  EFAA  F006         	goto	l524
  1573   000D50                     u2560:
  1574   000D50                     
  1575                           ;view_log.c: 29:         main_f = 2;
  1576   000D50  0E02               	movlw	2
  1577   000D52  6E59               	movwf	_main_f^0,c
  1578   000D54                     l524:
  1579                           
  1580                           ;view_log.c: 33:     if (overflow == 0) {
  1581   000D54  5050               	movf	_overflow^0,w,c
  1582   000D56  A4D8               	btfss	status,2,c
  1583   000D58  EFB0  F006         	goto	u2571
  1584   000D5C  EFB2  F006         	goto	u2570
  1585   000D60                     u2571:
  1586   000D60  EFEA  F006         	goto	l3455
  1587   000D64                     u2570:
  1588   000D64                     
  1589                           ;view_log.c: 34:         start_index = 0;
  1590   000D64  0E00               	movlw	0
  1591   000D66  6E4F               	movwf	_start_index^0,c
  1592   000D68                     
  1593                           ;view_log.c: 36:         if (key == 5 && apend_index < lap - 1) {
  1594   000D68  0E05               	movlw	5
  1595   000D6A  1818               	xorwf	view_log@key^0,w,c
  1596   000D6C  A4D8               	btfss	status,2,c
  1597   000D6E  EFBB  F006         	goto	u2581
  1598   000D72  EFBD  F006         	goto	u2580
  1599   000D76                     u2581:
  1600   000D76  EFD6  F006         	goto	l3449
  1601   000D7A                     u2580:
  1602   000D7A  0EFF               	movlw	255
  1603   000D7C  2451               	addwf	_lap^0,w,c
  1604   000D7E  6E11               	movwf	??_view_log^0,c
  1605   000D80  6A12               	clrf	(??_view_log+1)^0,c
  1606   000D82  0EFF               	movlw	255
  1607   000D84  2212               	addwfc	(??_view_log+1)^0,f,c
  1608   000D86  504E               	movf	_apend_index^0,w,c
  1609   000D88  6E13               	movwf	(??_view_log+2)^0,c
  1610   000D8A  6A14               	clrf	(??_view_log+3)^0,c
  1611   000D8C  5011               	movf	??_view_log^0,w,c
  1612   000D8E  5C13               	subwf	(??_view_log+2)^0,w,c
  1613   000D90  5014               	movf	(??_view_log+3)^0,w,c
  1614   000D92  0A80               	xorlw	128
  1615   000D94  6E15               	movwf	(??_view_log+4)^0,c
  1616   000D96  5012               	movf	(??_view_log+1)^0,w,c
  1617   000D98  0A80               	xorlw	128
  1618   000D9A  5815               	subwfb	(??_view_log+4)^0,w,c
  1619   000D9C  B0D8               	btfsc	status,0,c
  1620   000D9E  EFD3  F006         	goto	u2591
  1621   000DA2  EFD5  F006         	goto	u2590
  1622   000DA6                     u2591:
  1623   000DA6  EFD6  F006         	goto	l3449
  1624   000DAA                     u2590:
  1625   000DAA                     
  1626                           ;view_log.c: 37:             apend_index++;
  1627   000DAA  2A4E               	incf	_apend_index^0,f,c
  1628   000DAC                     l3449:
  1629                           
  1630                           ;view_log.c: 40:         if (key == 6 && apend_index > 0) {
  1631   000DAC  0E06               	movlw	6
  1632   000DAE  1818               	xorwf	view_log@key^0,w,c
  1633   000DB0  A4D8               	btfss	status,2,c
  1634   000DB2  EFDD  F006         	goto	u2601
  1635   000DB6  EFDF  F006         	goto	u2600
  1636   000DBA                     u2601:
  1637   000DBA  EF19  F007         	goto	l3471
  1638   000DBE                     u2600:
  1639   000DBE  504E               	movf	_apend_index^0,w,c
  1640   000DC0  B4D8               	btfsc	status,2,c
  1641   000DC2  EFE5  F006         	goto	u2611
  1642   000DC6  EFE7  F006         	goto	u2610
  1643   000DCA                     u2611:
  1644   000DCA  EF19  F007         	goto	l3471
  1645   000DCE                     u2610:
  1646   000DCE                     l3453:
  1647                           
  1648                           ;view_log.c: 41:             apend_index--;
  1649   000DCE  064E               	decf	_apend_index^0,f,c
  1650   000DD0  EF19  F007         	goto	l3471
  1651   000DD4                     l3455:
  1652   000DD4  0450               	decf	_overflow^0,w,c
  1653   000DD6  A4D8               	btfss	status,2,c
  1654   000DD8  EFF0  F006         	goto	u2621
  1655   000DDC  EFF2  F006         	goto	u2620
  1656   000DE0                     u2621:
  1657   000DE0  EF19  F007         	goto	l3471
  1658   000DE4                     u2620:
  1659   000DE4                     
  1660                           ;view_log.c: 48:         start_index = lap;
  1661   000DE4  C051  F04F         	movff	_lap,_start_index
  1662   000DE8                     
  1663                           ;view_log.c: 50:         if (key == 5 && apend_index < 9) {
  1664   000DE8  0E05               	movlw	5
  1665   000DEA  1818               	xorwf	view_log@key^0,w,c
  1666   000DEC  A4D8               	btfss	status,2,c
  1667   000DEE  EFFB  F006         	goto	u2631
  1668   000DF2  EFFD  F006         	goto	u2630
  1669   000DF6                     u2631:
  1670   000DF6  EF06  F007         	goto	l3465
  1671   000DFA                     u2630:
  1672   000DFA  0E09               	movlw	9
  1673   000DFC  604E               	cpfslt	_apend_index^0,c
  1674   000DFE  EF03  F007         	goto	u2641
  1675   000E02  EF05  F007         	goto	u2640
  1676   000E06                     u2641:
  1677   000E06  EF06  F007         	goto	l3465
  1678   000E0A                     u2640:
  1679   000E0A                     
  1680                           ;view_log.c: 51:             apend_index++;
  1681   000E0A  2A4E               	incf	_apend_index^0,f,c
  1682   000E0C                     l3465:
  1683                           
  1684                           ;view_log.c: 53:         if (key == 6 && apend_index > 0) {
  1685   000E0C  0E06               	movlw	6
  1686   000E0E  1818               	xorwf	view_log@key^0,w,c
  1687   000E10  A4D8               	btfss	status,2,c
  1688   000E12  EF0D  F007         	goto	u2651
  1689   000E16  EF0F  F007         	goto	u2650
  1690   000E1A                     u2651:
  1691   000E1A  EF19  F007         	goto	l3471
  1692   000E1E                     u2650:
  1693   000E1E  504E               	movf	_apend_index^0,w,c
  1694   000E20  B4D8               	btfsc	status,2,c
  1695   000E22  EF15  F007         	goto	u2661
  1696   000E26  EF17  F007         	goto	u2660
  1697   000E2A                     u2661:
  1698   000E2A  EF19  F007         	goto	l3471
  1699   000E2E                     u2660:
  1700   000E2E  EFE7  F006         	goto	l3453
  1701   000E32                     l3471:
  1702                           
  1703                           ;view_log.c: 61:     for (int j = 0; j < 5; j++) {
  1704   000E32  0E00               	movlw	0
  1705   000E34  6E17               	movwf	(view_log@j+1)^0,c
  1706   000E36  0E00               	movlw	0
  1707   000E38  6E16               	movwf	view_log@j^0,c
  1708   000E3A                     l3477:
  1709                           
  1710                           ;view_log.c: 62:         view_array[j] = read_external_eeprom((start_index + apend_index
      +                          ) % 10 * 10 + j);
  1711   000E3A  5016               	movf	view_log@j^0,w,c
  1712   000E3C  0F6B               	addlw	low _view_array
  1713   000E3E  6ED9               	movwf	fsr2l,c
  1714   000E40  6ADA               	clrf	fsr2h,c
  1715   000E42  504F               	movf	_start_index^0,w,c
  1716   000E44  244E               	addwf	_apend_index^0,w,c
  1717   000E46  6E09               	movwf	___awmod@dividend^0,c
  1718   000E48  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1719   000E4A  360A               	rlcf	(___awmod@dividend+1)^0,f,c
  1720   000E4C  0E00               	movlw	0
  1721   000E4E  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1722   000E50  0E0A               	movlw	10
  1723   000E52  6E0B               	movwf	___awmod@divisor^0,c
  1724   000E54  EC69  F00D         	call	___awmod	;wreg free
  1725   000E58  5009               	movf	?___awmod^0,w,c
  1726   000E5A  0D0A               	mullw	10
  1727   000E5C  50F3               	movf	243,w,c
  1728   000E5E  2416               	addwf	view_log@j^0,w,c
  1729   000E60  EC84  F011         	call	_read_external_eeprom
  1730   000E64  6EDF               	movwf	indf2,c
  1731   000E66                     
  1732                           ;view_log.c: 63:     }
  1733   000E66  4A16               	infsnz	view_log@j^0,f,c
  1734   000E68  2A17               	incf	(view_log@j+1)^0,f,c
  1735   000E6A  BE17               	btfsc	(view_log@j+1)^0,7,c
  1736   000E6C  EF41  F007         	goto	u2671
  1737   000E70  5017               	movf	(view_log@j+1)^0,w,c
  1738   000E72  E109               	bnz	u2670
  1739   000E74  0E05               	movlw	5
  1740   000E76  5C16               	subwf	view_log@j^0,w,c
  1741   000E78  A0D8               	btfss	status,0,c
  1742   000E7A  EF41  F007         	goto	u2671
  1743   000E7E  EF43  F007         	goto	u2670
  1744   000E82                     u2671:
  1745   000E82  EF1D  F007         	goto	l3477
  1746   000E86                     u2670:
  1747   000E86                     
  1748                           ;view_log.c: 66:     clcd_print("Entered View Log", (0x80 + (0)));
  1749   000E86  0E28               	movlw	low STR_24
  1750   000E88  6E03               	movwf	clcd_print@data^0,c
  1751   000E8A  0E2F               	movlw	high STR_24
  1752   000E8C  6E04               	movwf	(clcd_print@data+1)^0,c
  1753   000E8E  0E80               	movlw	128
  1754   000E90  6E05               	movwf	clcd_print@addr^0,c
  1755   000E92  EC1C  F010         	call	_clcd_print	;wreg free
  1756   000E96                     
  1757                           ;view_log.c: 67:     clcd_putch('0' + apend_index, (0xC0 + (0)));
  1758   000E96  0EC0               	movlw	192
  1759   000E98  6E0F               	movwf	clcd_putch@addr^0,c
  1760   000E9A  504E               	movf	_apend_index^0,w,c
  1761   000E9C  0F30               	addlw	48
  1762   000E9E  ECDE  F011         	call	_clcd_putch
  1763   000EA2                     
  1764                           ;view_log.c: 70:     clcd_putch((view_array[0]/10)+48, (0xC0 + (2)));
  1765   000EA2  0EC2               	movlw	194
  1766   000EA4  6E0F               	movwf	clcd_putch@addr^0,c
  1767   000EA6  C06B  F001         	movff	_view_array,___awdiv@dividend
  1768   000EAA  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1769   000EAC  0E00               	movlw	0
  1770   000EAE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1771   000EB0  0E0A               	movlw	10
  1772   000EB2  6E03               	movwf	___awdiv@divisor^0,c
  1773   000EB4  EC07  F00D         	call	___awdiv	;wreg free
  1774   000EB8  5001               	movf	?___awdiv^0,w,c
  1775   000EBA  0F30               	addlw	48
  1776   000EBC  ECDE  F011         	call	_clcd_putch
  1777   000EC0                     
  1778                           ;view_log.c: 71:     clcd_putch((view_array[0]%10)+48, (0xC0 + (3)));
  1779   000EC0  0EC3               	movlw	195
  1780   000EC2  6E0F               	movwf	clcd_putch@addr^0,c
  1781   000EC4  C06B  F009         	movff	_view_array,___awmod@dividend
  1782   000EC8  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1783   000ECA  0E00               	movlw	0
  1784   000ECC  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1785   000ECE  0E0A               	movlw	10
  1786   000ED0  6E0B               	movwf	___awmod@divisor^0,c
  1787   000ED2  EC69  F00D         	call	___awmod	;wreg free
  1788   000ED6  5009               	movf	?___awmod^0,w,c
  1789   000ED8  0F30               	addlw	48
  1790   000EDA  ECDE  F011         	call	_clcd_putch
  1791   000EDE                     
  1792                           ;view_log.c: 72:     clcd_putch(':', (0xC0 + (4)));
  1793   000EDE  0EC4               	movlw	196
  1794   000EE0  6E0F               	movwf	clcd_putch@addr^0,c
  1795   000EE2  0E3A               	movlw	58
  1796   000EE4  ECDE  F011         	call	_clcd_putch
  1797   000EE8                     
  1798                           ;view_log.c: 74:     clcd_putch((view_array[1]/10)+48, (0xC0 + (5)));
  1799   000EE8  0EC5               	movlw	197
  1800   000EEA  6E0F               	movwf	clcd_putch@addr^0,c
  1801   000EEC  C06C  F001         	movff	_view_array+1,___awdiv@dividend
  1802   000EF0  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1803   000EF2  0E00               	movlw	0
  1804   000EF4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1805   000EF6  0E0A               	movlw	10
  1806   000EF8  6E03               	movwf	___awdiv@divisor^0,c
  1807   000EFA  EC07  F00D         	call	___awdiv	;wreg free
  1808   000EFE  5001               	movf	?___awdiv^0,w,c
  1809   000F00  0F30               	addlw	48
  1810   000F02  ECDE  F011         	call	_clcd_putch
  1811   000F06                     
  1812                           ;view_log.c: 75:     clcd_putch((view_array[1]%10)+48, (0xC0 + (6)));
  1813   000F06  0EC6               	movlw	198
  1814   000F08  6E0F               	movwf	clcd_putch@addr^0,c
  1815   000F0A  C06C  F009         	movff	_view_array+1,___awmod@dividend
  1816   000F0E  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1817   000F10  0E00               	movlw	0
  1818   000F12  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1819   000F14  0E0A               	movlw	10
  1820   000F16  6E0B               	movwf	___awmod@divisor^0,c
  1821   000F18  EC69  F00D         	call	___awmod	;wreg free
  1822   000F1C  5009               	movf	?___awmod^0,w,c
  1823   000F1E  0F30               	addlw	48
  1824   000F20  ECDE  F011         	call	_clcd_putch
  1825   000F24                     
  1826                           ;view_log.c: 76:     clcd_putch(':', (0xC0 + (7)));
  1827   000F24  0EC7               	movlw	199
  1828   000F26  6E0F               	movwf	clcd_putch@addr^0,c
  1829   000F28  0E3A               	movlw	58
  1830   000F2A  ECDE  F011         	call	_clcd_putch
  1831   000F2E                     
  1832                           ;view_log.c: 78:     clcd_putch((view_array[2]/10)+48, (0xC0 + (8)));
  1833   000F2E  0EC8               	movlw	200
  1834   000F30  6E0F               	movwf	clcd_putch@addr^0,c
  1835   000F32  C06D  F001         	movff	_view_array+2,___awdiv@dividend
  1836   000F36  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1837   000F38  0E00               	movlw	0
  1838   000F3A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1839   000F3C  0E0A               	movlw	10
  1840   000F3E  6E03               	movwf	___awdiv@divisor^0,c
  1841   000F40  EC07  F00D         	call	___awdiv	;wreg free
  1842   000F44  5001               	movf	?___awdiv^0,w,c
  1843   000F46  0F30               	addlw	48
  1844   000F48  ECDE  F011         	call	_clcd_putch
  1845   000F4C                     
  1846                           ;view_log.c: 79:     clcd_putch((view_array[2]%10)+48, (0xC0 + (9)));
  1847   000F4C  0EC9               	movlw	201
  1848   000F4E  6E0F               	movwf	clcd_putch@addr^0,c
  1849   000F50  C06D  F009         	movff	_view_array+2,___awmod@dividend
  1850   000F54  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1851   000F56  0E00               	movlw	0
  1852   000F58  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1853   000F5A  0E0A               	movlw	10
  1854   000F5C  6E0B               	movwf	___awmod@divisor^0,c
  1855   000F5E  EC69  F00D         	call	___awmod	;wreg free
  1856   000F62  5009               	movf	?___awmod^0,w,c
  1857   000F64  0F30               	addlw	48
  1858   000F66  ECDE  F011         	call	_clcd_putch
  1859   000F6A                     
  1860                           ;view_log.c: 82:     clcd_print(events[view_array[3]], (0xC0 + (11)));
  1861   000F6A  0100               	movlb	0	; () banked
  1862   000F6C  516E               	movf	(_view_array+3)& (0+255),w,b
  1863   000F6E  0D02               	mullw	2
  1864   000F70  50F3               	movf	243,w,c
  1865   000F72  0FA0               	addlw	low _events
  1866   000F74  6ED9               	movwf	fsr2l,c
  1867   000F76  6ADA               	clrf	fsr2h,c
  1868   000F78  CFDE F003          	movff	postinc2,clcd_print@data
  1869   000F7C  CFDD F004          	movff	postdec2,clcd_print@data+1
  1870   000F80  0ECB               	movlw	203
  1871   000F82  6E05               	movwf	clcd_print@addr^0,c
  1872   000F84  EC1C  F010         	call	_clcd_print	;wreg free
  1873   000F88                     
  1874                           ;view_log.c: 86:     clcd_putch((view_array[4]/10)+48, (0xC0 + (14)));
  1875   000F88  0ECE               	movlw	206
  1876   000F8A  6E0F               	movwf	clcd_putch@addr^0,c
  1877   000F8C  C06F  F001         	movff	_view_array+4,___awdiv@dividend
  1878   000F90  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1879   000F92  0E00               	movlw	0
  1880   000F94  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1881   000F96  0E0A               	movlw	10
  1882   000F98  6E03               	movwf	___awdiv@divisor^0,c
  1883   000F9A  EC07  F00D         	call	___awdiv	;wreg free
  1884   000F9E  5001               	movf	?___awdiv^0,w,c
  1885   000FA0  0F30               	addlw	48
  1886   000FA2  ECDE  F011         	call	_clcd_putch
  1887   000FA6                     
  1888                           ;view_log.c: 87:     clcd_putch((view_array[4]%10)+48, (0xC0 + (15)));
  1889   000FA6  0ECF               	movlw	207
  1890   000FA8  6E0F               	movwf	clcd_putch@addr^0,c
  1891   000FAA  C06F  F009         	movff	_view_array+4,___awmod@dividend
  1892   000FAE  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1893   000FB0  0E00               	movlw	0
  1894   000FB2  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1895   000FB4  0E0A               	movlw	10
  1896   000FB6  6E0B               	movwf	___awmod@divisor^0,c
  1897   000FB8  EC69  F00D         	call	___awmod	;wreg free
  1898   000FBC  5009               	movf	?___awmod^0,w,c
  1899   000FBE  0F30               	addlw	48
  1900   000FC0  ECDE  F011         	call	_clcd_putch
  1901   000FC4  0012               	return		;funcret
  1902   000FC6                     __end_of_view_log:
  1903                           	callstack 0
  1904                           
  1905 ;; *************** function _settime *****************
  1906 ;; Defined at:
  1907 ;;		line 28 in file "set_time.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  key             1    wreg     unsigned char 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  key             1   18[COMRAM] unsigned char 
  1912 ;;  k               1   19[COMRAM] unsigned char 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1922 ;;      Params:         0       0       0       0       0       0       0
  1923 ;;      Locals:         2       0       0       0       0       0       0
  1924 ;;      Temps:          2       0       0       0       0       0       0
  1925 ;;      Totals:         4       0       0       0       0       0       0
  1926 ;;Total ram usage:        4 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 4
  1929 ;; This function calls:
  1930 ;;		___awdiv
  1931 ;;		___awmod
  1932 ;;		_clcd_print
  1933 ;;		_clcd_putch
  1934 ;;		_write_ds1307
  1935 ;;		_write_external_eeprom
  1936 ;; This function is called by:
  1937 ;;		_main
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text2
  1942   000A2C                     __ptext2:
  1943                           	callstack 0
  1944   000A2C                     _settime:
  1945                           	callstack 26
  1946                           
  1947                           ;incstack = 0
  1948                           ;settime@key stored from wreg
  1949   000A2C  6E13               	movwf	settime@key^0,c
  1950   000A2E                     
  1951                           ;set_time.c: 30:     clcd_print("     HH:MM:SS    ", (0x80 + (0)));
  1952   000A2E  0EAB               	movlw	low STR_35
  1953   000A30  6E03               	movwf	clcd_print@data^0,c
  1954   000A32  0E2E               	movlw	high STR_35
  1955   000A34  6E04               	movwf	(clcd_print@data+1)^0,c
  1956   000A36  0E80               	movlw	128
  1957   000A38  6E05               	movwf	clcd_print@addr^0,c
  1958   000A3A  EC1C  F010         	call	_clcd_print	;wreg free
  1959   000A3E                     
  1960                           ;set_time.c: 31:     if (t_flag == 0) {
  1961   000A3E  5044               	movf	_t_flag^0,w,c
  1962   000A40  A4D8               	btfss	status,2,c
  1963   000A42  EF25  F005         	goto	u2921
  1964   000A46  EF27  F005         	goto	u2920
  1965   000A4A                     u2921:
  1966   000A4A  EF3B  F005         	goto	l3741
  1967   000A4E                     u2920:
  1968   000A4E                     
  1969                           ;set_time.c: 32:         hr = ((time[0] - 48)*10 + (time[0] - 48));
  1970   000A4E  0100               	movlb	0	; () banked
  1971   000A50  5183               	movf	_time& (0+255),w,b
  1972   000A52  0D0B               	mullw	11
  1973   000A54  50F3               	movf	243,w,c
  1974   000A56  0FF0               	addlw	240
  1975   000A58  6E48               	movwf	_hr^0,c
  1976                           
  1977                           ;set_time.c: 33:         min = ((time[3] - 48)*10 + (time[4] - 48));
  1978   000A5A  5186               	movf	(_time+3)& (0+255),w,b
  1979   000A5C  0D0A               	mullw	10
  1980   000A5E  50F3               	movf	243,w,c
  1981   000A60  2587               	addwf	(_time+4)& (0+255),w,b
  1982   000A62  0FF0               	addlw	240
  1983   000A64  6E47               	movwf	_min^0,c
  1984                           
  1985                           ;set_time.c: 34:         sec = ((time[6] - 48)*10 + (time[7] - 48));
  1986   000A66  5189               	movf	(_time+6)& (0+255),w,b
  1987   000A68  0D0A               	mullw	10
  1988   000A6A  50F3               	movf	243,w,c
  1989   000A6C  258A               	addwf	(_time+7)& (0+255),w,b
  1990   000A6E  0FF0               	addlw	240
  1991   000A70  6E46               	movwf	_sec^0,c
  1992   000A72                     
  1993                           ; BSR set to: 0
  1994                           ;set_time.c: 35:         t_flag = 1;
  1995   000A72  0E01               	movlw	1
  1996   000A74  6E44               	movwf	_t_flag^0,c
  1997   000A76                     l3741:
  1998                           
  1999                           ;set_time.c: 38:     clcd_putch('0' + (hr / 10), (0xC0 + (5)));
  2000   000A76  0EC5               	movlw	197
  2001   000A78  6E0F               	movwf	clcd_putch@addr^0,c
  2002   000A7A  C048  F001         	movff	_hr,___awdiv@dividend
  2003   000A7E  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2004   000A80  0E00               	movlw	0
  2005   000A82  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2006   000A84  0E0A               	movlw	10
  2007   000A86  6E03               	movwf	___awdiv@divisor^0,c
  2008   000A88  EC07  F00D         	call	___awdiv	;wreg free
  2009   000A8C  5001               	movf	?___awdiv^0,w,c
  2010   000A8E  0F30               	addlw	48
  2011   000A90  ECDE  F011         	call	_clcd_putch
  2012   000A94                     
  2013                           ;set_time.c: 39:     clcd_putch('0' + (hr % 10), (0xC0 + (6)));
  2014   000A94  0EC6               	movlw	198
  2015   000A96  6E0F               	movwf	clcd_putch@addr^0,c
  2016   000A98  C048  F009         	movff	_hr,___awmod@dividend
  2017   000A9C  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2018   000A9E  0E00               	movlw	0
  2019   000AA0  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2020   000AA2  0E0A               	movlw	10
  2021   000AA4  6E0B               	movwf	___awmod@divisor^0,c
  2022   000AA6  EC69  F00D         	call	___awmod	;wreg free
  2023   000AAA  5009               	movf	?___awmod^0,w,c
  2024   000AAC  0F30               	addlw	48
  2025   000AAE  ECDE  F011         	call	_clcd_putch
  2026   000AB2                     
  2027                           ;set_time.c: 41:     clcd_putch(':', (0xC0 + (7)));
  2028   000AB2  0EC7               	movlw	199
  2029   000AB4  6E0F               	movwf	clcd_putch@addr^0,c
  2030   000AB6  0E3A               	movlw	58
  2031   000AB8  ECDE  F011         	call	_clcd_putch
  2032   000ABC                     
  2033                           ;set_time.c: 42:     clcd_putch('0' + (min / 10), (0xC0 + (8)));
  2034   000ABC  0EC8               	movlw	200
  2035   000ABE  6E0F               	movwf	clcd_putch@addr^0,c
  2036   000AC0  C047  F001         	movff	_min,___awdiv@dividend
  2037   000AC4  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2038   000AC6  0E00               	movlw	0
  2039   000AC8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2040   000ACA  0E0A               	movlw	10
  2041   000ACC  6E03               	movwf	___awdiv@divisor^0,c
  2042   000ACE  EC07  F00D         	call	___awdiv	;wreg free
  2043   000AD2  5001               	movf	?___awdiv^0,w,c
  2044   000AD4  0F30               	addlw	48
  2045   000AD6  ECDE  F011         	call	_clcd_putch
  2046   000ADA                     
  2047                           ;set_time.c: 43:     clcd_putch('0' + (min % 10), (0xC0 + (9)));
  2048   000ADA  0EC9               	movlw	201
  2049   000ADC  6E0F               	movwf	clcd_putch@addr^0,c
  2050   000ADE  C047  F009         	movff	_min,___awmod@dividend
  2051   000AE2  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2052   000AE4  0E00               	movlw	0
  2053   000AE6  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2054   000AE8  0E0A               	movlw	10
  2055   000AEA  6E0B               	movwf	___awmod@divisor^0,c
  2056   000AEC  EC69  F00D         	call	___awmod	;wreg free
  2057   000AF0  5009               	movf	?___awmod^0,w,c
  2058   000AF2  0F30               	addlw	48
  2059   000AF4  ECDE  F011         	call	_clcd_putch
  2060   000AF8                     
  2061                           ;set_time.c: 45:     clcd_putch(':', (0xC0 + (10)));
  2062   000AF8  0ECA               	movlw	202
  2063   000AFA  6E0F               	movwf	clcd_putch@addr^0,c
  2064   000AFC  0E3A               	movlw	58
  2065   000AFE  ECDE  F011         	call	_clcd_putch
  2066   000B02                     
  2067                           ;set_time.c: 46:     clcd_putch('0' + (sec / 10), (0xC0 + (11)));
  2068   000B02  0ECB               	movlw	203
  2069   000B04  6E0F               	movwf	clcd_putch@addr^0,c
  2070   000B06  C046  F001         	movff	_sec,___awdiv@dividend
  2071   000B0A  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2072   000B0C  0E00               	movlw	0
  2073   000B0E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2074   000B10  0E0A               	movlw	10
  2075   000B12  6E03               	movwf	___awdiv@divisor^0,c
  2076   000B14  EC07  F00D         	call	___awdiv	;wreg free
  2077   000B18  5001               	movf	?___awdiv^0,w,c
  2078   000B1A  0F30               	addlw	48
  2079   000B1C  ECDE  F011         	call	_clcd_putch
  2080   000B20                     
  2081                           ;set_time.c: 47:     clcd_putch('0' + (sec % 10), (0xC0 + (12)));
  2082   000B20  0ECC               	movlw	204
  2083   000B22  6E0F               	movwf	clcd_putch@addr^0,c
  2084   000B24  C046  F009         	movff	_sec,___awmod@dividend
  2085   000B28  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2086   000B2A  0E00               	movlw	0
  2087   000B2C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2088   000B2E  0E0A               	movlw	10
  2089   000B30  6E0B               	movwf	___awmod@divisor^0,c
  2090   000B32  EC69  F00D         	call	___awmod	;wreg free
  2091   000B36  5009               	movf	?___awmod^0,w,c
  2092   000B38  0F30               	addlw	48
  2093   000B3A  ECDE  F011         	call	_clcd_putch
  2094   000B3E                     
  2095                           ;set_time.c: 49:     if (key == 5) {
  2096   000B3E  0E05               	movlw	5
  2097   000B40  1813               	xorwf	settime@key^0,w,c
  2098   000B42  A4D8               	btfss	status,2,c
  2099   000B44  EFA6  F005         	goto	u2931
  2100   000B48  EFA8  F005         	goto	u2930
  2101   000B4C                     u2931:
  2102   000B4C  EFEF  F005         	goto	l3783
  2103   000B50                     u2930:
  2104   000B50                     
  2105                           ;set_time.c: 50:         if (pos_flag == 0) {
  2106   000B50  5045               	movf	_pos_flag^0,w,c
  2107   000B52  A4D8               	btfss	status,2,c
  2108   000B54  EFAE  F005         	goto	u2941
  2109   000B58  EFB0  F005         	goto	u2940
  2110   000B5C                     u2941:
  2111   000B5C  EFC0  F005         	goto	l3767
  2112   000B60                     u2940:
  2113   000B60                     
  2114                           ;set_time.c: 51:             if (sec == 59) {
  2115   000B60  0E3B               	movlw	59
  2116   000B62  1846               	xorwf	_sec^0,w,c
  2117   000B64  A4D8               	btfss	status,2,c
  2118   000B66  EFB7  F005         	goto	u2951
  2119   000B6A  EFB9  F005         	goto	u2950
  2120   000B6E                     u2951:
  2121   000B6E  EFBD  F005         	goto	l3765
  2122   000B72                     u2950:
  2123   000B72                     
  2124                           ;set_time.c: 52:                 sec = 0;
  2125   000B72  0E00               	movlw	0
  2126   000B74  6E46               	movwf	_sec^0,c
  2127                           
  2128                           ;set_time.c: 53:             } else
  2129   000B76  EF04  F006         	goto	l3791
  2130   000B7A                     l3765:
  2131                           
  2132                           ;set_time.c: 54:                 sec++;
  2133   000B7A  2A46               	incf	_sec^0,f,c
  2134   000B7C  EF04  F006         	goto	l3791
  2135   000B80                     l3767:
  2136   000B80  0445               	decf	_pos_flag^0,w,c
  2137   000B82  A4D8               	btfss	status,2,c
  2138   000B84  EFC6  F005         	goto	u2961
  2139   000B88  EFC8  F005         	goto	u2960
  2140   000B8C                     u2961:
  2141   000B8C  EFD6  F005         	goto	l3775
  2142   000B90                     u2960:
  2143   000B90                     
  2144                           ;set_time.c: 57:             if (min == 59) {
  2145   000B90  0E3B               	movlw	59
  2146   000B92  1847               	xorwf	_min^0,w,c
  2147   000B94  A4D8               	btfss	status,2,c
  2148   000B96  EFCF  F005         	goto	u2971
  2149   000B9A  EFD1  F005         	goto	u2970
  2150   000B9E                     u2971:
  2151   000B9E  EFD3  F005         	goto	l3773
  2152   000BA2                     u2970:
  2153   000BA2                     
  2154                           ;set_time.c: 58:                 min = 0;
  2155   000BA2  0E00               	movlw	0
  2156   000BA4  6E47               	movwf	_min^0,c
  2157   000BA6                     l3773:
  2158                           
  2159                           ;set_time.c: 60:             min++;
  2160   000BA6  2A47               	incf	_min^0,f,c
  2161                           
  2162                           ;set_time.c: 61:         } else if (pos_flag == 2) {
  2163   000BA8  EF04  F006         	goto	l3791
  2164   000BAC                     l3775:
  2165   000BAC  0E02               	movlw	2
  2166   000BAE  1845               	xorwf	_pos_flag^0,w,c
  2167   000BB0  A4D8               	btfss	status,2,c
  2168   000BB2  EFDD  F005         	goto	u2981
  2169   000BB6  EFDF  F005         	goto	u2980
  2170   000BBA                     u2981:
  2171   000BBA  EFED  F005         	goto	l754
  2172   000BBE                     u2980:
  2173   000BBE                     
  2174                           ;set_time.c: 62:             if (hr == 23) {
  2175   000BBE  0E17               	movlw	23
  2176   000BC0  1848               	xorwf	_hr^0,w,c
  2177   000BC2  A4D8               	btfss	status,2,c
  2178   000BC4  EFE6  F005         	goto	u2991
  2179   000BC8  EFE8  F005         	goto	u2990
  2180   000BCC                     u2991:
  2181   000BCC  EFEA  F005         	goto	l3781
  2182   000BD0                     u2990:
  2183   000BD0                     
  2184                           ;set_time.c: 63:                 hr = 0;
  2185   000BD0  0E00               	movlw	0
  2186   000BD2  6E48               	movwf	_hr^0,c
  2187   000BD4                     l3781:
  2188                           
  2189                           ;set_time.c: 65:             hr++;
  2190   000BD4  2A48               	incf	_hr^0,f,c
  2191   000BD6  EF04  F006         	goto	l3791
  2192   000BDA                     l754:
  2193                           
  2194                           ;set_time.c: 67:     } else if (key == 6) {
  2195   000BDA  EF04  F006         	goto	l3791
  2196   000BDE                     l3783:
  2197   000BDE  0E06               	movlw	6
  2198   000BE0  1813               	xorwf	settime@key^0,w,c
  2199   000BE2  A4D8               	btfss	status,2,c
  2200   000BE4  EFF6  F005         	goto	u3001
  2201   000BE8  EFF8  F005         	goto	u3000
  2202   000BEC                     u3001:
  2203   000BEC  EF04  F006         	goto	l3791
  2204   000BF0                     u3000:
  2205   000BF0                     
  2206                           ;set_time.c: 68:         pos_flag++;
  2207   000BF0  2A45               	incf	_pos_flag^0,f,c
  2208   000BF2                     
  2209                           ;set_time.c: 70:         if (pos_flag == 3) {
  2210   000BF2  0E03               	movlw	3
  2211   000BF4  1845               	xorwf	_pos_flag^0,w,c
  2212   000BF6  A4D8               	btfss	status,2,c
  2213   000BF8  EF00  F006         	goto	u3011
  2214   000BFC  EF02  F006         	goto	u3010
  2215   000C00                     u3011:
  2216   000C00  EF04  F006         	goto	l3791
  2217   000C04                     u3010:
  2218   000C04                     
  2219                           ;set_time.c: 71:             pos_flag = 0;
  2220   000C04  0E00               	movlw	0
  2221   000C06  6E45               	movwf	_pos_flag^0,c
  2222   000C08                     l3791:
  2223                           
  2224                           ;set_time.c: 74:     if (key == 15) {
  2225   000C08  0E0F               	movlw	15
  2226   000C0A  1813               	xorwf	settime@key^0,w,c
  2227   000C0C  A4D8               	btfss	status,2,c
  2228   000C0E  EF0B  F006         	goto	u3021
  2229   000C12  EF0D  F006         	goto	u3020
  2230   000C16                     u3021:
  2231   000C16  EF92  F006         	goto	l3821
  2232   000C1A                     u3020:
  2233   000C1A                     
  2234                           ;set_time.c: 77:         write_ds1307(0x02, (hr / 10) << 4 | (hr % 10));
  2235   000C1A  C048  F009         	movff	_hr,___awmod@dividend
  2236   000C1E  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2237   000C20  0E00               	movlw	0
  2238   000C22  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2239   000C24  0E0A               	movlw	10
  2240   000C26  6E0B               	movwf	___awmod@divisor^0,c
  2241   000C28  EC69  F00D         	call	___awmod	;wreg free
  2242   000C2C  C009  F011         	movff	?___awmod,??_settime
  2243   000C30  C00A  F012         	movff	?___awmod+1,??_settime+1
  2244   000C34  C048  F001         	movff	_hr,___awdiv@dividend
  2245   000C38  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2246   000C3A  0E00               	movlw	0
  2247   000C3C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2248   000C3E  0E0A               	movlw	10
  2249   000C40  6E03               	movwf	___awdiv@divisor^0,c
  2250   000C42  EC07  F00D         	call	___awdiv	;wreg free
  2251   000C46  3801               	swapf	?___awdiv^0,w,c
  2252   000C48  0BF0               	andlw	240
  2253   000C4A  1011               	iorwf	??_settime^0,w,c
  2254   000C4C  6E0F               	movwf	write_ds1307@data^0,c
  2255   000C4E  0E02               	movlw	2
  2256   000C50  ECCF  F011         	call	_write_ds1307
  2257                           
  2258                           ;set_time.c: 78:         write_ds1307(0x01, (min / 10) << 4 | (min % 10));
  2259   000C54  C047  F009         	movff	_min,___awmod@dividend
  2260   000C58  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2261   000C5A  0E00               	movlw	0
  2262   000C5C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2263   000C5E  0E0A               	movlw	10
  2264   000C60  6E0B               	movwf	___awmod@divisor^0,c
  2265   000C62  EC69  F00D         	call	___awmod	;wreg free
  2266   000C66  C009  F011         	movff	?___awmod,??_settime
  2267   000C6A  C00A  F012         	movff	?___awmod+1,??_settime+1
  2268   000C6E  C047  F001         	movff	_min,___awdiv@dividend
  2269   000C72  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2270   000C74  0E00               	movlw	0
  2271   000C76  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2272   000C78  0E0A               	movlw	10
  2273   000C7A  6E03               	movwf	___awdiv@divisor^0,c
  2274   000C7C  EC07  F00D         	call	___awdiv	;wreg free
  2275   000C80  3801               	swapf	?___awdiv^0,w,c
  2276   000C82  0BF0               	andlw	240
  2277   000C84  1011               	iorwf	??_settime^0,w,c
  2278   000C86  6E0F               	movwf	write_ds1307@data^0,c
  2279   000C88  0E01               	movlw	1
  2280   000C8A  ECCF  F011         	call	_write_ds1307
  2281                           
  2282                           ;set_time.c: 79:         write_ds1307(0x00, (sec / 10) << 4 | (sec % 10));
  2283   000C8E  C046  F009         	movff	_sec,___awmod@dividend
  2284   000C92  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2285   000C94  0E00               	movlw	0
  2286   000C96  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2287   000C98  0E0A               	movlw	10
  2288   000C9A  6E0B               	movwf	___awmod@divisor^0,c
  2289   000C9C  EC69  F00D         	call	___awmod	;wreg free
  2290   000CA0  C009  F011         	movff	?___awmod,??_settime
  2291   000CA4  C00A  F012         	movff	?___awmod+1,??_settime+1
  2292   000CA8  C046  F001         	movff	_sec,___awdiv@dividend
  2293   000CAC  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2294   000CAE  0E00               	movlw	0
  2295   000CB0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2296   000CB2  0E0A               	movlw	10
  2297   000CB4  6E03               	movwf	___awdiv@divisor^0,c
  2298   000CB6  EC07  F00D         	call	___awdiv	;wreg free
  2299   000CBA  3801               	swapf	?___awdiv^0,w,c
  2300   000CBC  0BF0               	andlw	240
  2301   000CBE  1011               	iorwf	??_settime^0,w,c
  2302   000CC0  6E0F               	movwf	write_ds1307@data^0,c
  2303   000CC2  0E00               	movlw	0
  2304   000CC4  ECCF  F011         	call	_write_ds1307
  2305   000CC8                     
  2306                           ;set_time.c: 84:         store[0] = (((time[0] - 48)*10)+(time[1] - 48));
  2307   000CC8  0100               	movlb	0	; () banked
  2308   000CCA  5183               	movf	_time& (0+255),w,b
  2309   000CCC  0D0A               	mullw	10
  2310   000CCE  50F3               	movf	243,w,c
  2311   000CD0  2584               	addwf	(_time+1)& (0+255),w,b
  2312   000CD2  0FF0               	addlw	240
  2313   000CD4  6E39               	movwf	_store^0,c
  2314   000CD6                     
  2315                           ; BSR set to: 0
  2316                           ;set_time.c: 85:         store[1] = (((time[3] - 48)*10)+(time[4] - 48));
  2317   000CD6  5186               	movf	(_time+3)& (0+255),w,b
  2318   000CD8  0D0A               	mullw	10
  2319   000CDA  50F3               	movf	243,w,c
  2320   000CDC  2587               	addwf	(_time+4)& (0+255),w,b
  2321   000CDE  0FF0               	addlw	240
  2322   000CE0  6E3A               	movwf	(_store+1)^0,c
  2323   000CE2                     
  2324                           ; BSR set to: 0
  2325                           ;set_time.c: 86:         store[2] = (((time[6] - 48)*10)+(time[7] - 48));
  2326   000CE2  5189               	movf	(_time+6)& (0+255),w,b
  2327   000CE4  0D0A               	mullw	10
  2328   000CE6  50F3               	movf	243,w,c
  2329   000CE8  258A               	addwf	(_time+7)& (0+255),w,b
  2330   000CEA  0FF0               	addlw	240
  2331   000CEC  6E3B               	movwf	(_store+2)^0,c
  2332   000CEE                     
  2333                           ; BSR set to: 0
  2334                           ;set_time.c: 89:         store[3] = i;
  2335   000CEE  C056  F03C         	movff	_i,_store+3
  2336   000CF2                     
  2337                           ; BSR set to: 0
  2338                           ;set_time.c: 92:         store[4] = adc_reg_val;
  2339   000CF2  C042  F03D         	movff	_adc_reg_val,_store+4
  2340   000CF6                     
  2341                           ; BSR set to: 0
  2342                           ;set_time.c: 95:         for (char k = 0; k < 5; k++) {
  2343   000CF6  0E00               	movlw	0
  2344   000CF8  6E14               	movwf	settime@k^0,c
  2345   000CFA                     l3811:
  2346                           
  2347                           ;set_time.c: 96:             write_external_eeprom((k), store[k]);
  2348   000CFA  5014               	movf	settime@k^0,w,c
  2349   000CFC  0F39               	addlw	low _store
  2350   000CFE  6ED9               	movwf	fsr2l,c
  2351   000D00  6ADA               	clrf	fsr2h,c
  2352   000D02  50DF               	movf	indf2,w,c
  2353   000D04  6E02               	movwf	write_external_eeprom@data^0,c
  2354   000D06  5014               	movf	settime@k^0,w,c
  2355   000D08  EC2C  F011         	call	_write_external_eeprom
  2356   000D0C                     
  2357                           ;set_time.c: 97:         }
  2358   000D0C  2A14               	incf	settime@k^0,f,c
  2359   000D0E  0E04               	movlw	4
  2360   000D10  6414               	cpfsgt	settime@k^0,c
  2361   000D12  EF8D  F006         	goto	u3031
  2362   000D16  EF8F  F006         	goto	u3030
  2363   000D1A                     u3031:
  2364   000D1A  EF7D  F006         	goto	l3811
  2365   000D1E                     u3030:
  2366   000D1E                     
  2367                           ;set_time.c: 98:         lap++;
  2368   000D1E  2A51               	incf	_lap^0,f,c
  2369   000D20                     
  2370                           ;set_time.c: 100:         main_f = 2;
  2371   000D20  0E02               	movlw	2
  2372   000D22  6E59               	movwf	_main_f^0,c
  2373   000D24                     l3821:
  2374                           
  2375                           ;set_time.c: 103:     if (key == 16) {
  2376   000D24  0E10               	movlw	16
  2377   000D26  1813               	xorwf	settime@key^0,w,c
  2378   000D28  A4D8               	btfss	status,2,c
  2379   000D2A  EF99  F006         	goto	u3041
  2380   000D2E  EF9B  F006         	goto	u3040
  2381   000D32                     u3041:
  2382   000D32  EF9D  F006         	goto	l767
  2383   000D36                     u3040:
  2384   000D36                     
  2385                           ;set_time.c: 104:         main_f = 2;
  2386   000D36  0E02               	movlw	2
  2387   000D38  6E59               	movwf	_main_f^0,c
  2388   000D3A                     l767:
  2389   000D3A  0012               	return		;funcret
  2390   000D3C                     __end_of_settime:
  2391                           	callstack 0
  2392                           
  2393 ;; *************** function _read_switches *****************
  2394 ;; Defined at:
  2395 ;;		line 89 in file "matrix_keypad.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  detection_ty    1    wreg     unsigned char 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  detection_ty    1    0[COMRAM] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      unsigned char 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2409 ;;      Params:         0       0       0       0       0       0       0
  2410 ;;      Locals:         1       0       0       0       0       0       0
  2411 ;;      Temps:          0       0       0       0       0       0       0
  2412 ;;      Totals:         1       0       0       0       0       0       0
  2413 ;;Total ram usage:        1 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 2
  2416 ;; This function calls:
  2417 ;;		_scan_key
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text3
  2424   001F4E                     __ptext3:
  2425                           	callstack 0
  2426   001F4E                     _read_switches:
  2427                           	callstack 28
  2428                           
  2429                           ;incstack = 0
  2430                           ;read_switches@detection_type stored from wreg
  2431   001F4E  6E01               	movwf	read_switches@detection_type^0,c
  2432   001F50                     
  2433                           ;matrix_keypad.c: 89: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 90: {;matrix_keypad.c: 91:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 93:  if (detection_type == 1)
  2434   001F50  0401               	decf	read_switches@detection_type^0,w,c
  2435   001F52  A4D8               	btfss	status,2,c
  2436   001F54  EFAE  F00F         	goto	u501
  2437   001F58  EFB0  F00F         	goto	u500
  2438   001F5C                     u501:
  2439   001F5C  EFD4  F00F         	goto	l1953
  2440   001F60                     u500:
  2441   001F60                     
  2442                           ;matrix_keypad.c: 94:  {;matrix_keypad.c: 95:   key = scan_key();
  2443   001F60  EC00  F00C         	call	_scan_key	;wreg free
  2444   001F64  6E57               	movwf	read_switches@key^0,c
  2445   001F66                     
  2446                           ;matrix_keypad.c: 96:   if(key != 0xFF && once )
  2447   001F66  2857               	incf	read_switches@key^0,w,c
  2448   001F68  B4D8               	btfsc	status,2,c
  2449   001F6A  EFB9  F00F         	goto	u511
  2450   001F6E  EFBB  F00F         	goto	u510
  2451   001F72                     u511:
  2452   001F72  EFC8  F00F         	goto	l1949
  2453   001F76                     u510:
  2454   001F76  505E               	movf	read_switches@once^0,w,c
  2455   001F78  B4D8               	btfsc	status,2,c
  2456   001F7A  EFC1  F00F         	goto	u521
  2457   001F7E  EFC3  F00F         	goto	u520
  2458   001F82                     u521:
  2459   001F82  EFC8  F00F         	goto	l1949
  2460   001F86                     u520:
  2461   001F86                     
  2462                           ;matrix_keypad.c: 97:   {;matrix_keypad.c: 98:    once = 0;
  2463   001F86  0E00               	movlw	0
  2464   001F88  6E5E               	movwf	read_switches@once^0,c
  2465                           
  2466                           ;matrix_keypad.c: 99:    return key;
  2467   001F8A  5057               	movf	read_switches@key^0,w,c
  2468   001F8C  EFE1  F00F         	goto	l210
  2469   001F90                     l1949:
  2470   001F90  2857               	incf	read_switches@key^0,w,c
  2471   001F92  A4D8               	btfss	status,2,c
  2472   001F94  EFCE  F00F         	goto	u531
  2473   001F98  EFD0  F00F         	goto	u530
  2474   001F9C                     u531:
  2475   001F9C  EFE0  F00F         	goto	l1959
  2476   001FA0                     u530:
  2477   001FA0                     
  2478                           ;matrix_keypad.c: 102:   {;matrix_keypad.c: 103:    once = 1;
  2479   001FA0  0E01               	movlw	1
  2480   001FA2  6E5E               	movwf	read_switches@once^0,c
  2481   001FA4  EFE0  F00F         	goto	l1959
  2482   001FA8                     l1953:
  2483   001FA8  5001               	movf	read_switches@detection_type^0,w,c
  2484   001FAA  A4D8               	btfss	status,2,c
  2485   001FAC  EFDA  F00F         	goto	u541
  2486   001FB0  EFDC  F00F         	goto	u540
  2487   001FB4                     u541:
  2488   001FB4  EFE0  F00F         	goto	l1959
  2489   001FB8                     u540:
  2490   001FB8                     
  2491                           ;matrix_keypad.c: 107:  {;matrix_keypad.c: 108:   return scan_key();
  2492   001FB8  EC00  F00C         	call	_scan_key	;wreg free
  2493   001FBC  EFE1  F00F         	goto	l210
  2494   001FC0                     l1959:
  2495                           
  2496                           ;matrix_keypad.c: 111:  return 0xFF;
  2497   001FC0  0EFF               	movlw	255
  2498   001FC2                     l210:
  2499   001FC2  0012               	return		;funcret
  2500   001FC4                     __end_of_read_switches:
  2501                           	callstack 0
  2502                           
  2503 ;; *************** function _scan_key *****************
  2504 ;; Defined at:
  2505 ;;		line 19 in file "matrix_keypad.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      unsigned char 
  2512 ;; Registers used:
  2513 ;;		wreg
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2519 ;;      Params:         0       0       0       0       0       0       0
  2520 ;;      Locals:         0       0       0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0
  2522 ;;      Totals:         0       0       0       0       0       0       0
  2523 ;;Total ram usage:        0 bytes
  2524 ;; Hardware stack levels used: 1
  2525 ;; Hardware stack levels required when called: 1
  2526 ;; This function calls:
  2527 ;;		Nothing
  2528 ;; This function is called by:
  2529 ;;		_read_switches
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text4
  2534   001800                     __ptext4:
  2535                           	callstack 0
  2536   001800                     _scan_key:
  2537                           	callstack 28
  2538   001800                     
  2539                           ;matrix_keypad.c: 21:  PORTBbits.RB5 = 0;
  2540   001800  9A81               	bcf	129,5,c	;volatile
  2541                           
  2542                           ;matrix_keypad.c: 22:  PORTBbits.RB6 = 1;
  2543   001802  8C81               	bsf	129,6,c	;volatile
  2544                           
  2545                           ;matrix_keypad.c: 23:  PORTBbits.RB7 = 1;
  2546   001804  8E81               	bsf	129,7,c	;volatile
  2547                           
  2548                           ;matrix_keypad.c: 25:  if (PORTBbits.RB1 == 0)
  2549   001806  B281               	btfsc	129,1,c	;volatile
  2550   001808  EF08  F00C         	goto	u101
  2551   00180C  EF0A  F00C         	goto	u100
  2552   001810                     u101:
  2553   001810  EF0D  F00C         	goto	l180
  2554   001814                     u100:
  2555   001814                     
  2556                           ;matrix_keypad.c: 26:  {;matrix_keypad.c: 27:   return 1;
  2557   001814  0E01               	movlw	1
  2558   001816  EF83  F00C         	goto	l181
  2559   00181A                     l180:
  2560   00181A  B481               	btfsc	129,2,c	;volatile
  2561   00181C  EF12  F00C         	goto	u111
  2562   001820  EF14  F00C         	goto	u110
  2563   001824                     u111:
  2564   001824  EF17  F00C         	goto	l183
  2565   001828                     u110:
  2566   001828                     
  2567                           ;matrix_keypad.c: 30:  {;matrix_keypad.c: 31:   return 4;
  2568   001828  0E04               	movlw	4
  2569   00182A  EF83  F00C         	goto	l181
  2570   00182E                     l183:
  2571   00182E  B681               	btfsc	129,3,c	;volatile
  2572   001830  EF1C  F00C         	goto	u121
  2573   001834  EF1E  F00C         	goto	u120
  2574   001838                     u121:
  2575   001838  EF21  F00C         	goto	l185
  2576   00183C                     u120:
  2577   00183C                     
  2578                           ;matrix_keypad.c: 34:  {;matrix_keypad.c: 35:   return 7;
  2579   00183C  0E07               	movlw	7
  2580   00183E  EF83  F00C         	goto	l181
  2581   001842                     l185:
  2582   001842  B881               	btfsc	129,4,c	;volatile
  2583   001844  EF26  F00C         	goto	u131
  2584   001848  EF28  F00C         	goto	u130
  2585   00184C                     u131:
  2586   00184C  EF2B  F00C         	goto	l182
  2587   001850                     u130:
  2588   001850                     
  2589                           ;matrix_keypad.c: 38:  {;matrix_keypad.c: 39:   return 10;
  2590   001850  0E0A               	movlw	10
  2591   001852  EF83  F00C         	goto	l181
  2592   001856                     l182:
  2593                           
  2594                           ;matrix_keypad.c: 42:  PORTBbits.RB5 = 1;
  2595   001856  8A81               	bsf	129,5,c	;volatile
  2596                           
  2597                           ;matrix_keypad.c: 43:  PORTBbits.RB6 = 0;
  2598   001858  9C81               	bcf	129,6,c	;volatile
  2599                           
  2600                           ;matrix_keypad.c: 44:  PORTBbits.RB7 = 1;
  2601   00185A  8E81               	bsf	129,7,c	;volatile
  2602                           
  2603                           ;matrix_keypad.c: 46:  if (PORTBbits.RB1 == 0)
  2604   00185C  B281               	btfsc	129,1,c	;volatile
  2605   00185E  EF33  F00C         	goto	u141
  2606   001862  EF35  F00C         	goto	u140
  2607   001866                     u141:
  2608   001866  EF38  F00C         	goto	l188
  2609   00186A                     u140:
  2610   00186A                     
  2611                           ;matrix_keypad.c: 47:  {;matrix_keypad.c: 48:   return 2;
  2612   00186A  0E02               	movlw	2
  2613   00186C  EF83  F00C         	goto	l181
  2614   001870                     l188:
  2615   001870  B481               	btfsc	129,2,c	;volatile
  2616   001872  EF3D  F00C         	goto	u151
  2617   001876  EF3F  F00C         	goto	u150
  2618   00187A                     u151:
  2619   00187A  EF42  F00C         	goto	l190
  2620   00187E                     u150:
  2621   00187E                     
  2622                           ;matrix_keypad.c: 51:  {;matrix_keypad.c: 52:   return 5;
  2623   00187E  0E05               	movlw	5
  2624   001880  EF83  F00C         	goto	l181
  2625   001884                     l190:
  2626   001884  B681               	btfsc	129,3,c	;volatile
  2627   001886  EF47  F00C         	goto	u161
  2628   00188A  EF49  F00C         	goto	u160
  2629   00188E                     u161:
  2630   00188E  EF4C  F00C         	goto	l192
  2631   001892                     u160:
  2632   001892                     
  2633                           ;matrix_keypad.c: 55:  {;matrix_keypad.c: 56:   return 8;
  2634   001892  0E08               	movlw	8
  2635   001894  EF83  F00C         	goto	l181
  2636   001898                     l192:
  2637   001898  B881               	btfsc	129,4,c	;volatile
  2638   00189A  EF51  F00C         	goto	u171
  2639   00189E  EF53  F00C         	goto	u170
  2640   0018A2                     u171:
  2641   0018A2  EF56  F00C         	goto	l189
  2642   0018A6                     u170:
  2643   0018A6                     
  2644                           ;matrix_keypad.c: 59:  {;matrix_keypad.c: 60:   return 11;
  2645   0018A6  0E0B               	movlw	11
  2646   0018A8  EF83  F00C         	goto	l181
  2647   0018AC                     l189:
  2648                           
  2649                           ;matrix_keypad.c: 63:  PORTBbits.RB5 = 1;
  2650   0018AC  8A81               	bsf	129,5,c	;volatile
  2651                           
  2652                           ;matrix_keypad.c: 64:  PORTBbits.RB6 = 1;
  2653   0018AE  8C81               	bsf	129,6,c	;volatile
  2654                           
  2655                           ;matrix_keypad.c: 65:  PORTBbits.RB7 = 0;
  2656   0018B0  9E81               	bcf	129,7,c	;volatile
  2657                           
  2658                           ;matrix_keypad.c: 67:  PORTBbits.RB7 = 0;
  2659   0018B2  9E81               	bcf	129,7,c	;volatile
  2660                           
  2661                           ;matrix_keypad.c: 69:  if (PORTBbits.RB1 == 0)
  2662   0018B4  B281               	btfsc	129,1,c	;volatile
  2663   0018B6  EF5F  F00C         	goto	u181
  2664   0018BA  EF61  F00C         	goto	u180
  2665   0018BE                     u181:
  2666   0018BE  EF64  F00C         	goto	l195
  2667   0018C2                     u180:
  2668   0018C2                     
  2669                           ;matrix_keypad.c: 70:  {;matrix_keypad.c: 71:   return 3;
  2670   0018C2  0E03               	movlw	3
  2671   0018C4  EF83  F00C         	goto	l181
  2672   0018C8                     l195:
  2673   0018C8  B481               	btfsc	129,2,c	;volatile
  2674   0018CA  EF69  F00C         	goto	u191
  2675   0018CE  EF6B  F00C         	goto	u190
  2676   0018D2                     u191:
  2677   0018D2  EF6E  F00C         	goto	l197
  2678   0018D6                     u190:
  2679   0018D6                     
  2680                           ;matrix_keypad.c: 74:  {;matrix_keypad.c: 75:   return 6;
  2681   0018D6  0E06               	movlw	6
  2682   0018D8  EF83  F00C         	goto	l181
  2683   0018DC                     l197:
  2684   0018DC  B681               	btfsc	129,3,c	;volatile
  2685   0018DE  EF73  F00C         	goto	u201
  2686   0018E2  EF75  F00C         	goto	u200
  2687   0018E6                     u201:
  2688   0018E6  EF78  F00C         	goto	l199
  2689   0018EA                     u200:
  2690   0018EA                     
  2691                           ;matrix_keypad.c: 78:  {;matrix_keypad.c: 79:   return 9;
  2692   0018EA  0E09               	movlw	9
  2693   0018EC  EF83  F00C         	goto	l181
  2694   0018F0                     l199:
  2695   0018F0  B881               	btfsc	129,4,c	;volatile
  2696   0018F2  EF7D  F00C         	goto	u211
  2697   0018F6  EF7F  F00C         	goto	u210
  2698   0018FA                     u211:
  2699   0018FA  EF82  F00C         	goto	l198
  2700   0018FE                     u210:
  2701   0018FE                     
  2702                           ;matrix_keypad.c: 82:  {;matrix_keypad.c: 83:   return 12;
  2703   0018FE  0E0C               	movlw	12
  2704   001900  EF83  F00C         	goto	l181
  2705   001904                     l198:
  2706   001904                     
  2707                           ;matrix_keypad.c: 86:  return 0xFF;
  2708   001904  0EFF               	movlw	255
  2709   001906                     l181:
  2710   001906  0012               	return		;funcret
  2711   001908                     __end_of_scan_key:
  2712                           	callstack 0
  2713                           
  2714 ;; *************** function _read_adc *****************
  2715 ;; Defined at:
  2716 ;;		line 43 in file "adc.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  channel         1    wreg     unsigned char 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  channel         1    6[COMRAM] unsigned char 
  2721 ;;  reg_val         2    4[COMRAM] unsigned short 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  2    0[COMRAM] unsigned short 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2731 ;;      Params:         2       0       0       0       0       0       0
  2732 ;;      Locals:         3       0       0       0       0       0       0
  2733 ;;      Temps:          2       0       0       0       0       0       0
  2734 ;;      Totals:         7       0       0       0       0       0       0
  2735 ;;Total ram usage:        7 bytes
  2736 ;; Hardware stack levels used: 1
  2737 ;; Hardware stack levels required when called: 1
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_main
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text5
  2746   002212                     __ptext5:
  2747                           	callstack 0
  2748   002212                     _read_adc:
  2749                           	callstack 29
  2750                           
  2751                           ;incstack = 0
  2752                           ;read_adc@channel stored from wreg
  2753   002212  6E07               	movwf	read_adc@channel^0,c
  2754   002214                     
  2755                           ;adc.c: 43: unsigned short read_adc(unsigned char channel);adc.c: 44: {;adc.c: 45:  unsi
      +                          gned short reg_val;;adc.c: 48:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  2756   002214  C007  F003         	movff	read_adc@channel,??_read_adc
  2757   002218  90D8               	bcf	status,0,c
  2758   00221A  3603               	rlcf	??_read_adc^0,f,c
  2759   00221C  90D8               	bcf	status,0,c
  2760   00221E  3603               	rlcf	??_read_adc^0,f,c
  2761   002220  50C2               	movf	194,w,c	;volatile
  2762   002222  0BC3               	andlw	195
  2763   002224  1003               	iorwf	??_read_adc^0,w,c
  2764   002226  6EC2               	movwf	194,c	;volatile
  2765   002228                     
  2766                           ;adc.c: 51:  GO = 1;
  2767   002228  82C2               	bsf	4034,1,c	;volatile
  2768   00222A                     l36:
  2769   00222A  B2C2               	btfsc	4034,1,c	;volatile
  2770   00222C  EF1A  F011         	goto	u2251
  2771   002230  EF1C  F011         	goto	u2250
  2772   002234                     u2251:
  2773   002234  EF15  F011         	goto	l36
  2774   002238                     u2250:
  2775   002238                     
  2776                           ;adc.c: 53:  reg_val = (ADRESH << 8) | ADRESL;
  2777   002238  50C3               	movf	195,w,c	;volatile
  2778   00223A  CFC4 F003          	movff	4036,??_read_adc	;volatile
  2779   00223E  6A04               	clrf	(??_read_adc+1)^0,c
  2780   002240  C003  F004         	movff	??_read_adc,??_read_adc+1
  2781   002244  6A03               	clrf	??_read_adc^0,c
  2782   002246  1003               	iorwf	??_read_adc^0,w,c
  2783   002248  6E05               	movwf	read_adc@reg_val^0,c
  2784   00224A  5004               	movf	(??_read_adc+1)^0,w,c
  2785   00224C  6E06               	movwf	(read_adc@reg_val+1)^0,c
  2786   00224E                     
  2787                           ;adc.c: 55:  return reg_val;
  2788   00224E  C005  F001         	movff	read_adc@reg_val,?_read_adc
  2789   002252  C006  F002         	movff	read_adc@reg_val+1,?_read_adc+1
  2790   002256  0012               	return		;funcret
  2791   002258                     __end_of_read_adc:
  2792                           	callstack 0
  2793                           
  2794 ;; *************** function _password *****************
  2795 ;; Defined at:
  2796 ;;		line 37 in file "password.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  key             1    wreg     unsigned char 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  key             1   30[COMRAM] unsigned char 
  2801 ;;  wait            8   18[COMRAM] unsigned long long 
  2802 ;;  delay           4   26[COMRAM] unsigned long 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2812 ;;      Params:         0       0       0       0       0       0       0
  2813 ;;      Locals:        13       0       0       0       0       0       0
  2814 ;;      Temps:          2       0       0       0       0       0       0
  2815 ;;      Totals:        15       0       0       0       0       0       0
  2816 ;;Total ram usage:       15 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 3
  2819 ;; This function calls:
  2820 ;;		___awdiv
  2821 ;;		___awmod
  2822 ;;		_clcd_print
  2823 ;;		_clcd_putch
  2824 ;;		_clcd_write
  2825 ;;		_my_strcmp
  2826 ;; This function is called by:
  2827 ;;		_main
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text6
  2832   000718                     __ptext6:
  2833                           	callstack 0
  2834   000718                     _password:
  2835                           	callstack 27
  2836                           
  2837                           ;incstack = 0
  2838                           ;password@key stored from wreg
  2839   000718  6E1F               	movwf	password@key^0,c
  2840   00071A                     
  2841                           ;password.c: 39:     if(count++==5000)
  2842   00071A  0100               	movlb	0	; () banked
  2843   00071C  4B7F               	infsnz	_count& (0+255),f,b
  2844   00071E  2B80               	incf	(_count+1)& (0+255),f,b
  2845   000720  0E89               	movlw	137
  2846   000722  197F               	xorwf	_count& (0+255),w,b
  2847   000724  E107               	bnz	u2351
  2848   000726  0E13               	movlw	19
  2849   000728  1980               	xorwf	(_count+1)& (0+255),w,b
  2850   00072A  A4D8               	btfss	status,2,c
  2851   00072C  EF9A  F003         	goto	u2351
  2852   000730  EF9C  F003         	goto	u2350
  2853   000734                     u2351:
  2854   000734  EFA2  F003         	goto	l3311
  2855   000738                     u2350:
  2856   000738                     
  2857                           ; BSR set to: 0
  2858                           ;password.c: 40:     {;password.c: 41:         count=0;
  2859   000738  0E00               	movlw	0
  2860   00073A  6F80               	movwf	(_count+1)& (0+255),b
  2861   00073C  0E00               	movlw	0
  2862   00073E  6F7F               	movwf	_count& (0+255),b
  2863                           
  2864                           ;password.c: 42:         main_f=0;
  2865   000740  0E00               	movlw	0
  2866   000742  6E59               	movwf	_main_f^0,c
  2867   000744                     l3311:
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;password.c: 46:     clcd_print(" Enter Password ", (0x80 + (0)));
  2871   000744  0E6C               	movlw	low STR_14
  2872   000746  6E03               	movwf	clcd_print@data^0,c
  2873   000748  0E2F               	movlw	high STR_14
  2874   00074A  6E04               	movwf	(clcd_print@data+1)^0,c
  2875   00074C  0E80               	movlw	128
  2876   00074E  6E05               	movwf	clcd_print@addr^0,c
  2877   000750  EC1C  F010         	call	_clcd_print	;wreg free
  2878   000754                     
  2879                           ;password.c: 49:     if (delay++ < 500) {
  2880   000754  0100               	movlb	0	; () banked
  2881   000756  5181               	movf	_delay& (0+255),w,b
  2882   000758  6E11               	movwf	??_password^0,c
  2883   00075A  5182               	movf	(_delay+1)& (0+255),w,b
  2884   00075C  6E12               	movwf	(??_password+1)^0,c
  2885   00075E  4B81               	infsnz	_delay& (0+255),f,b
  2886   000760  2B82               	incf	(_delay+1)& (0+255),f,b
  2887   000762  BE12               	btfsc	(??_password+1)^0,7,c
  2888   000764  EFBF  F003         	goto	u2360
  2889   000768  0EF4               	movlw	244
  2890   00076A  5C11               	subwf	??_password^0,w,c
  2891   00076C  0E01               	movlw	1
  2892   00076E  5812               	subwfb	(??_password+1)^0,w,c
  2893   000770  B0D8               	btfsc	status,0,c
  2894   000772  EFBD  F003         	goto	u2361
  2895   000776  EFBF  F003         	goto	u2360
  2896   00077A                     u2361:
  2897   00077A  EFC7  F003         	goto	l3317
  2898   00077E                     u2360:
  2899   00077E                     
  2900                           ; BSR set to: 0
  2901                           ;password.c: 50:         clcd_putch('_', (0xC0 + (index)));
  2902   00077E  5055               	movf	_index^0,w,c
  2903   000780  0FC0               	addlw	192
  2904   000782  6E0F               	movwf	clcd_putch@addr^0,c
  2905   000784  0E5F               	movlw	95
  2906   000786  ECDE  F011         	call	_clcd_putch
  2907                           
  2908                           ;password.c: 51:     } else if (delay > 500 && delay < 1000) {
  2909   00078A  EFEF  F003         	goto	l3325
  2910   00078E                     l3317:
  2911                           
  2912                           ; BSR set to: 0
  2913   00078E  BF82               	btfsc	(_delay+1)& (0+255),7,b
  2914   000790  EFD3  F003         	goto	u2371
  2915   000794  0EF5               	movlw	245
  2916   000796  5D81               	subwf	_delay& (0+255),w,b
  2917   000798  0E01               	movlw	1
  2918   00079A  5982               	subwfb	(_delay+1)& (0+255),w,b
  2919   00079C  A0D8               	btfss	status,0,c
  2920   00079E  EFD3  F003         	goto	u2371
  2921   0007A2  EFD5  F003         	goto	u2370
  2922   0007A6                     u2371:
  2923   0007A6  EFEB  F003         	goto	l3323
  2924   0007AA                     u2370:
  2925   0007AA                     
  2926                           ; BSR set to: 0
  2927   0007AA  BF82               	btfsc	(_delay+1)& (0+255),7,b
  2928   0007AC  EFE3  F003         	goto	u2380
  2929   0007B0  0EE8               	movlw	232
  2930   0007B2  5D81               	subwf	_delay& (0+255),w,b
  2931   0007B4  0E03               	movlw	3
  2932   0007B6  5982               	subwfb	(_delay+1)& (0+255),w,b
  2933   0007B8  B0D8               	btfsc	status,0,c
  2934   0007BA  EFE1  F003         	goto	u2381
  2935   0007BE  EFE3  F003         	goto	u2380
  2936   0007C2                     u2381:
  2937   0007C2  EFEB  F003         	goto	l3323
  2938   0007C6                     u2380:
  2939   0007C6                     
  2940                           ; BSR set to: 0
  2941                           ;password.c: 52:         clcd_putch(' ', (0xC0 + (index)));
  2942   0007C6  5055               	movf	_index^0,w,c
  2943   0007C8  0FC0               	addlw	192
  2944   0007CA  6E0F               	movwf	clcd_putch@addr^0,c
  2945   0007CC  0E20               	movlw	32
  2946   0007CE  ECDE  F011         	call	_clcd_putch
  2947                           
  2948                           ;password.c: 53:     } else
  2949   0007D2  EFEF  F003         	goto	l3325
  2950   0007D6                     l3323:
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;password.c: 54:         delay = 0;
  2954   0007D6  0E00               	movlw	0
  2955   0007D8  6F82               	movwf	(_delay+1)& (0+255),b
  2956   0007DA  0E00               	movlw	0
  2957   0007DC  6F81               	movwf	_delay& (0+255),b
  2958   0007DE                     l3325:
  2959                           
  2960                           ;password.c: 56:     if (key == 5) {
  2961   0007DE  0E05               	movlw	5
  2962   0007E0  181F               	xorwf	password@key^0,w,c
  2963   0007E2  A4D8               	btfss	status,2,c
  2964   0007E4  EFF6  F003         	goto	u2391
  2965   0007E8  EFF8  F003         	goto	u2390
  2966   0007EC                     u2391:
  2967   0007EC  EF07  F004         	goto	l3333
  2968   0007F0                     u2390:
  2969   0007F0                     
  2970                           ;password.c: 57:         temp_password[index] = '0';
  2971   0007F0  5055               	movf	_index^0,w,c
  2972   0007F2  0F96               	addlw	low _temp_password
  2973   0007F4  6ED9               	movwf	fsr2l,c
  2974   0007F6  6ADA               	clrf	fsr2h,c
  2975   0007F8  0E30               	movlw	48
  2976   0007FA  6EDF               	movwf	indf2,c
  2977   0007FC                     
  2978                           ;password.c: 58:         clcd_putch('*', (0xC0 + (index)));
  2979   0007FC  5055               	movf	_index^0,w,c
  2980   0007FE  0FC0               	addlw	192
  2981   000800  6E0F               	movwf	clcd_putch@addr^0,c
  2982   000802  0E2A               	movlw	42
  2983   000804  ECDE  F011         	call	_clcd_putch
  2984   000808                     l3331:
  2985                           
  2986                           ;password.c: 59:         index++;
  2987   000808  2A55               	incf	_index^0,f,c
  2988                           
  2989                           ;password.c: 61:     } else if (key == 6) {
  2990   00080A  EF1E  F004         	goto	l3341
  2991   00080E                     l3333:
  2992   00080E  0E06               	movlw	6
  2993   000810  181F               	xorwf	password@key^0,w,c
  2994   000812  A4D8               	btfss	status,2,c
  2995   000814  EF0E  F004         	goto	u2401
  2996   000818  EF10  F004         	goto	u2400
  2997   00081C                     u2401:
  2998   00081C  EF1E  F004         	goto	l3341
  2999   000820                     u2400:
  3000   000820                     
  3001                           ;password.c: 62:         temp_password[index] = '1';
  3002   000820  5055               	movf	_index^0,w,c
  3003   000822  0F96               	addlw	low _temp_password
  3004   000824  6ED9               	movwf	fsr2l,c
  3005   000826  6ADA               	clrf	fsr2h,c
  3006   000828  0E31               	movlw	49
  3007   00082A  6EDF               	movwf	indf2,c
  3008   00082C                     
  3009                           ;password.c: 63:         clcd_putch('*', (0xC0 + (index)));
  3010   00082C  5055               	movf	_index^0,w,c
  3011   00082E  0FC0               	addlw	192
  3012   000830  6E0F               	movwf	clcd_putch@addr^0,c
  3013   000832  0E2A               	movlw	42
  3014   000834  ECDE  F011         	call	_clcd_putch
  3015   000838  EF04  F004         	goto	l3331
  3016   00083C                     l3341:
  3017                           
  3018                           ;password.c: 68:     if (index == 4) {
  3019   00083C  0E04               	movlw	4
  3020   00083E  1855               	xorwf	_index^0,w,c
  3021   000840  A4D8               	btfss	status,2,c
  3022   000842  EF25  F004         	goto	u2411
  3023   000846  EF27  F004         	goto	u2410
  3024   00084A                     u2411:
  3025   00084A  EF15  F005         	goto	l308
  3026   00084E                     u2410:
  3027   00084E                     
  3028                           ;password.c: 69:         temp_password[index] = '\0';
  3029   00084E  5055               	movf	_index^0,w,c
  3030   000850  0F96               	addlw	low _temp_password
  3031   000852  6ED9               	movwf	fsr2l,c
  3032   000854  6ADA               	clrf	fsr2h,c
  3033   000856  6ADF               	clrf	indf2,c
  3034   000858                     
  3035                           ;password.c: 70:         if (my_strcmp(pass,temp_password) == 0) {
  3036   000858  0E9B               	movlw	low _pass
  3037   00085A  6E01               	movwf	my_strcmp@one^0,c
  3038   00085C  0E96               	movlw	low _temp_password
  3039   00085E  6E02               	movwf	my_strcmp@two^0,c
  3040   000860  ECE7  F00E         	call	_my_strcmp	;wreg free
  3041   000864  5001               	movf	?_my_strcmp^0,w,c
  3042   000866  1002               	iorwf	(?_my_strcmp+1)^0,w,c
  3043   000868  A4D8               	btfss	status,2,c
  3044   00086A  EF39  F004         	goto	u2421
  3045   00086E  EF3B  F004         	goto	u2420
  3046   000872                     u2421:
  3047   000872  EF46  F004         	goto	l3353
  3048   000876                     u2420:
  3049   000876                     
  3050                           ;password.c: 71:             clcd_write(0x01, 0);
  3051   000876  0E00               	movlw	0
  3052   000878  6E01               	movwf	clcd_write@control_bit^0,c
  3053   00087A  0E01               	movlw	1
  3054   00087C  EC4C  F011         	call	_clcd_write
  3055   000880                     
  3056                           ;password.c: 72:             chance=3;
  3057   000880  0E03               	movlw	3
  3058   000882  6E5C               	movwf	_chance^0,c
  3059   000884                     
  3060                           ;password.c: 73:             main_f=2;
  3061   000884  0E02               	movlw	2
  3062   000886  6E59               	movwf	_main_f^0,c
  3063                           
  3064                           ;password.c: 76:         } else {
  3065   000888  EF15  F005         	goto	l308
  3066   00088C                     l3353:
  3067                           
  3068                           ;password.c: 78:             if (chance == 0) {
  3069   00088C  505C               	movf	_chance^0,w,c
  3070   00088E  A4D8               	btfss	status,2,c
  3071   000890  EF4C  F004         	goto	u2431
  3072   000894  EF4E  F004         	goto	u2430
  3073   000898                     u2431:
  3074   000898  EFC6  F004         	goto	l3375
  3075   00089C                     u2430:
  3076   00089C                     
  3077                           ;password.c: 81:                 TMR0IE = 1;
  3078   00089C  8AF2               	bsf	4082,5,c	;volatile
  3079                           
  3080                           ;password.c: 82:                 GIE = 1;
  3081   00089E  8EF2               	bsf	4082,7,c	;volatile
  3082                           
  3083                           ;password.c: 83:                 PEIE = 1;
  3084   0008A0  8CF2               	bsf	4082,6,c	;volatile
  3085   0008A2                     
  3086                           ;password.c: 85:                 clcd_print(" System Blocked", (0x80 + (0)));
  3087   0008A2  0EAE               	movlw	low STR_15
  3088   0008A4  6E03               	movwf	clcd_print@data^0,c
  3089   0008A6  0E2F               	movlw	high STR_15
  3090   0008A8  6E04               	movwf	(clcd_print@data+1)^0,c
  3091   0008AA  0E80               	movlw	128
  3092   0008AC  6E05               	movwf	clcd_print@addr^0,c
  3093   0008AE  EC1C  F010         	call	_clcd_print	;wreg free
  3094                           
  3095                           ;password.c: 86:                 clcd_print("     ", (0xC0 + (0)));
  3096   0008B2  0EED               	movlw	low (STR_26+12)
  3097   0008B4  6E03               	movwf	clcd_print@data^0,c
  3098   0008B6  0E2E               	movlw	high (STR_26+12)
  3099   0008B8  6E04               	movwf	(clcd_print@data+1)^0,c
  3100   0008BA  0EC0               	movlw	192
  3101   0008BC  6E05               	movwf	clcd_print@addr^0,c
  3102   0008BE  EC1C  F010         	call	_clcd_print	;wreg free
  3103   0008C2                     
  3104                           ;password.c: 87:                 clcd_putch('0' + (tick_count / 100), (0xC0 + (5)));
  3105   0008C2  0EC5               	movlw	197
  3106   0008C4  6E0F               	movwf	clcd_putch@addr^0,c
  3107   0008C6  C05D  F001         	movff	_tick_count,___awdiv@dividend
  3108   0008CA  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3109   0008CC  0E00               	movlw	0
  3110   0008CE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3111   0008D0  0E64               	movlw	100
  3112   0008D2  6E03               	movwf	___awdiv@divisor^0,c
  3113   0008D4  EC07  F00D         	call	___awdiv	;wreg free
  3114   0008D8  5001               	movf	?___awdiv^0,w,c
  3115   0008DA  0F30               	addlw	48
  3116   0008DC  ECDE  F011         	call	_clcd_putch
  3117   0008E0                     
  3118                           ;password.c: 88:                 clcd_putch('0' + (tick_count / 10) % 10, (0xC0 + (6)));
  3119   0008E0  0EC6               	movlw	198
  3120   0008E2  6E0F               	movwf	clcd_putch@addr^0,c
  3121   0008E4  0E00               	movlw	0
  3122   0008E6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3123   0008E8  0E0A               	movlw	10
  3124   0008EA  6E03               	movwf	___awdiv@divisor^0,c
  3125   0008EC  C05D  F001         	movff	_tick_count,___awdiv@dividend
  3126   0008F0  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3127   0008F2  EC07  F00D         	call	___awdiv	;wreg free
  3128   0008F6  C001  F009         	movff	?___awdiv,___awmod@dividend
  3129   0008FA  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  3130   0008FE  0E00               	movlw	0
  3131   000900  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3132   000902  0E0A               	movlw	10
  3133   000904  6E0B               	movwf	___awmod@divisor^0,c
  3134   000906  EC69  F00D         	call	___awmod	;wreg free
  3135   00090A  5009               	movf	?___awmod^0,w,c
  3136   00090C  0F30               	addlw	48
  3137   00090E  ECDE  F011         	call	_clcd_putch
  3138   000912                     
  3139                           ;password.c: 89:                 clcd_putch('0' + (tick_count % 10), (0xC0 + (7)));
  3140   000912  0EC7               	movlw	199
  3141   000914  6E0F               	movwf	clcd_putch@addr^0,c
  3142   000916  C05D  F009         	movff	_tick_count,___awmod@dividend
  3143   00091A  6A0A               	clrf	(___awmod@dividend+1)^0,c
  3144   00091C  0E00               	movlw	0
  3145   00091E  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3146   000920  0E0A               	movlw	10
  3147   000922  6E0B               	movwf	___awmod@divisor^0,c
  3148   000924  EC69  F00D         	call	___awmod	;wreg free
  3149   000928  5009               	movf	?___awmod^0,w,c
  3150   00092A  0F30               	addlw	48
  3151   00092C  ECDE  F011         	call	_clcd_putch
  3152   000930                     
  3153                           ;password.c: 90:                 for (unsigned long int delay = 200000; delay--;);
  3154   000930  0E40               	movlw	64
  3155   000932  6E1B               	movwf	password@delay^0,c
  3156   000934  0E0D               	movlw	13
  3157   000936  6E1C               	movwf	(password@delay+1)^0,c
  3158   000938  0E03               	movlw	3
  3159   00093A  6E1D               	movwf	(password@delay+2)^0,c
  3160   00093C  0E00               	movlw	0
  3161   00093E  6E1E               	movwf	(password@delay+3)^0,c
  3162   000940                     l3367:
  3163   000940  061B               	decf	password@delay^0,f,c
  3164   000942  0E00               	movlw	0
  3165   000944  5A1C               	subwfb	(password@delay+1)^0,f,c
  3166   000946  5A1D               	subwfb	(password@delay+2)^0,f,c
  3167   000948  5A1E               	subwfb	(password@delay+3)^0,f,c
  3168   00094A  281B               	incf	password@delay^0,w,c
  3169   00094C  E10A               	bnz	u2441
  3170   00094E  281C               	incf	(password@delay+1)^0,w,c
  3171   000950  E108               	bnz	u2441
  3172   000952  281D               	incf	(password@delay+2)^0,w,c
  3173   000954  E106               	bnz	u2441
  3174   000956  281E               	incf	(password@delay+3)^0,w,c
  3175   000958  A4D8               	btfss	status,2,c
  3176   00095A  EFB1  F004         	goto	u2441
  3177   00095E  EFB3  F004         	goto	u2440
  3178   000962                     u2441:
  3179   000962  EFA0  F004         	goto	l3367
  3180   000966                     u2440:
  3181   000966                     
  3182                           ;password.c: 92:                 if (tick_count == 0) {
  3183   000966  505D               	movf	_tick_count^0,w,c
  3184   000968  A4D8               	btfss	status,2,c
  3185   00096A  EFB9  F004         	goto	u2451
  3186   00096E  EFBB  F004         	goto	u2450
  3187   000972                     u2451:
  3188   000972  EF15  F005         	goto	l298
  3189   000976                     u2450:
  3190   000976                     
  3191                           ;password.c: 93:                     chance = 2;
  3192   000976  0E02               	movlw	2
  3193   000978  6E5C               	movwf	_chance^0,c
  3194                           
  3195                           ;password.c: 94:                     index = 0;
  3196   00097A  0E00               	movlw	0
  3197   00097C  6E55               	movwf	_index^0,c
  3198   00097E                     
  3199                           ;password.c: 95:                     clcd_write(0x01, 0);
  3200   00097E  0E00               	movlw	0
  3201   000980  6E01               	movwf	clcd_write@control_bit^0,c
  3202   000982  0E01               	movlw	1
  3203   000984  EC4C  F011         	call	_clcd_write
  3204   000988  EF15  F005         	goto	l308
  3205   00098C                     l3375:
  3206                           
  3207                           ;password.c: 100:                 clcd_print("   Try Again    ", (0x80 + (0)));
  3208   00098C  0E5B               	movlw	low STR_17
  3209   00098E  6E03               	movwf	clcd_print@data^0,c
  3210   000990  0E2F               	movlw	high STR_17
  3211   000992  6E04               	movwf	(clcd_print@data+1)^0,c
  3212   000994  0E80               	movlw	128
  3213   000996  6E05               	movwf	clcd_print@addr^0,c
  3214   000998  EC1C  F010         	call	_clcd_print	;wreg free
  3215   00099C                     
  3216                           ;password.c: 101:                 clcd_putch('0' + chance, (0xC0 + (0)));
  3217   00099C  0EC0               	movlw	192
  3218   00099E  6E0F               	movwf	clcd_putch@addr^0,c
  3219   0009A0  505C               	movf	_chance^0,w,c
  3220   0009A2  0F30               	addlw	48
  3221   0009A4  ECDE  F011         	call	_clcd_putch
  3222   0009A8                     
  3223                           ;password.c: 102:                 clcd_print(" Chances Left ", (0xC0 + (1)));
  3224   0009A8  0EBE               	movlw	low STR_18
  3225   0009AA  6E03               	movwf	clcd_print@data^0,c
  3226   0009AC  0E2F               	movlw	high STR_18
  3227   0009AE  6E04               	movwf	(clcd_print@data+1)^0,c
  3228   0009B0  0EC1               	movlw	193
  3229   0009B2  6E05               	movwf	clcd_print@addr^0,c
  3230   0009B4  EC1C  F010         	call	_clcd_print	;wreg free
  3231   0009B8                     
  3232                           ;password.c: 103:                 for (unsigned long long int wait = 400000; wait--;);
  3233   0009B8  0E80               	movlw	128
  3234   0009BA  6E13               	movwf	password@wait^0,c
  3235   0009BC  0E1A               	movlw	26
  3236   0009BE  6E14               	movwf	(password@wait+1)^0,c
  3237   0009C0  0E06               	movlw	6
  3238   0009C2  6E15               	movwf	(password@wait+2)^0,c
  3239   0009C4  0E00               	movlw	0
  3240   0009C6  6E16               	movwf	(password@wait+3)^0,c
  3241   0009C8  0E00               	movlw	0
  3242   0009CA  6E17               	movwf	(password@wait+4)^0,c
  3243   0009CC  0E00               	movlw	0
  3244   0009CE  6E18               	movwf	(password@wait+5)^0,c
  3245   0009D0  0E00               	movlw	0
  3246   0009D2  6E19               	movwf	(password@wait+6)^0,c
  3247   0009D4  0E00               	movlw	0
  3248   0009D6  6E1A               	movwf	(password@wait+7)^0,c
  3249   0009D8                     l3383:
  3250   0009D8  0613               	decf	password@wait^0,f,c
  3251   0009DA  0E00               	movlw	0
  3252   0009DC  5A14               	subwfb	(password@wait+1)^0,f,c
  3253   0009DE  5A15               	subwfb	(password@wait+2)^0,f,c
  3254   0009E0  5A16               	subwfb	(password@wait+3)^0,f,c
  3255   0009E2  5A17               	subwfb	(password@wait+4)^0,f,c
  3256   0009E4  5A18               	subwfb	(password@wait+5)^0,f,c
  3257   0009E6  5A19               	subwfb	(password@wait+6)^0,f,c
  3258   0009E8  5A1A               	subwfb	(password@wait+7)^0,f,c
  3259   0009EA  2813               	incf	password@wait^0,w,c
  3260   0009EC  E112               	bnz	u2461
  3261   0009EE  2814               	incf	(password@wait+1)^0,w,c
  3262   0009F0  E110               	bnz	u2461
  3263   0009F2  2815               	incf	(password@wait+2)^0,w,c
  3264   0009F4  E10E               	bnz	u2461
  3265   0009F6  2816               	incf	(password@wait+3)^0,w,c
  3266   0009F8  E10C               	bnz	u2461
  3267   0009FA  2817               	incf	(password@wait+4)^0,w,c
  3268   0009FC  E10A               	bnz	u2461
  3269   0009FE  2818               	incf	(password@wait+5)^0,w,c
  3270   000A00  E108               	bnz	u2461
  3271   000A02  2819               	incf	(password@wait+6)^0,w,c
  3272   000A04  E106               	bnz	u2461
  3273   000A06  281A               	incf	(password@wait+7)^0,w,c
  3274   000A08  A4D8               	btfss	status,2,c
  3275   000A0A  EF09  F005         	goto	u2461
  3276   000A0E  EF0B  F005         	goto	u2460
  3277   000A12                     u2461:
  3278   000A12  EFEC  F004         	goto	l3383
  3279   000A16                     u2460:
  3280   000A16                     
  3281                           ;password.c: 104:                 chance--;
  3282   000A16  065C               	decf	_chance^0,f,c
  3283   000A18                     
  3284                           ;password.c: 105:                 index = 0;
  3285   000A18  0E00               	movlw	0
  3286   000A1A  6E55               	movwf	_index^0,c
  3287   000A1C                     
  3288                           ;password.c: 106:                 clcd_write(0x01, 0);
  3289   000A1C  0E00               	movlw	0
  3290   000A1E  6E01               	movwf	clcd_write@control_bit^0,c
  3291   000A20  0E01               	movlw	1
  3292   000A22  EC4C  F011         	call	_clcd_write
  3293   000A26  EF15  F005         	goto	l308
  3294   000A2A                     l298:
  3295   000A2A                     l308:
  3296   000A2A  0012               	return		;funcret
  3297   000A2C                     __end_of_password:
  3298                           	callstack 0
  3299                           
  3300 ;; *************** function _my_strcmp *****************
  3301 ;; Defined at:
  3302 ;;		line 25 in file "password.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  one             1    0[COMRAM] PTR unsigned char 
  3305 ;;		 -> pass(5), 
  3306 ;;  two             1    1[COMRAM] PTR unsigned char 
  3307 ;;		 -> temp_password(5), 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  k               2    6[COMRAM] int 
  3310 ;;  last            2    4[COMRAM] int 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  2    0[COMRAM] int 
  3313 ;; Registers used:
  3314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3320 ;;      Params:         2       0       0       0       0       0       0
  3321 ;;      Locals:         4       0       0       0       0       0       0
  3322 ;;      Temps:          2       0       0       0       0       0       0
  3323 ;;      Totals:         8       0       0       0       0       0       0
  3324 ;;Total ram usage:        8 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 1
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_password
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           	psect	text7
  3335   001DCE                     __ptext7:
  3336                           	callstack 0
  3337   001DCE                     _my_strcmp:
  3338                           	callstack 28
  3339   001DCE                     
  3340                           ;password.c: 26:     int k = 0, last = 0;
  3341   001DCE  0E00               	movlw	0
  3342   001DD0  6E08               	movwf	(my_strcmp@k+1)^0,c
  3343   001DD2  0E00               	movlw	0
  3344   001DD4  6E07               	movwf	my_strcmp@k^0,c
  3345   001DD6  0E00               	movlw	0
  3346   001DD8  6E06               	movwf	(my_strcmp@last+1)^0,c
  3347   001DDA  0E00               	movlw	0
  3348   001DDC  6E05               	movwf	my_strcmp@last^0,c
  3349                           
  3350                           ;password.c: 27:     while (one[k] != '\0') {
  3351   001DDE  EF18  F00F         	goto	l3091
  3352   001DE2                     l3085:
  3353                           
  3354                           ;password.c: 28:         if (one[k] != two[k]) {
  3355   001DE2  5002               	movf	my_strcmp@two^0,w,c
  3356   001DE4  2407               	addwf	my_strcmp@k^0,w,c
  3357   001DE6  6ED9               	movwf	fsr2l,c
  3358   001DE8  6ADA               	clrf	fsr2h,c
  3359   001DEA  5001               	movf	my_strcmp@one^0,w,c
  3360   001DEC  2407               	addwf	my_strcmp@k^0,w,c
  3361   001DEE  6EE1               	movwf	fsr1l,c
  3362   001DF0  6AE2               	clrf	fsr1h,c
  3363   001DF2  50DE               	movf	postinc2,w,c
  3364   001DF4  18E6               	xorwf	postinc1,w,c
  3365   001DF6  B4D8               	btfsc	status,2,c
  3366   001DF8  EF00  F00F         	goto	u2021
  3367   001DFC  EF02  F00F         	goto	u2020
  3368   001E00                     u2021:
  3369   001E00  EF16  F00F         	goto	l3089
  3370   001E04                     u2020:
  3371   001E04                     
  3372                           ;password.c: 29:             last = one[k] - two[k];
  3373   001E04  5001               	movf	my_strcmp@one^0,w,c
  3374   001E06  2407               	addwf	my_strcmp@k^0,w,c
  3375   001E08  6ED9               	movwf	fsr2l,c
  3376   001E0A  6ADA               	clrf	fsr2h,c
  3377   001E0C  50DF               	movf	indf2,w,c
  3378   001E0E  6E03               	movwf	??_my_strcmp^0,c
  3379   001E10  5002               	movf	my_strcmp@two^0,w,c
  3380   001E12  2407               	addwf	my_strcmp@k^0,w,c
  3381   001E14  6ED9               	movwf	fsr2l,c
  3382   001E16  6ADA               	clrf	fsr2h,c
  3383   001E18  50DF               	movf	indf2,w,c
  3384   001E1A  6E04               	movwf	(??_my_strcmp+1)^0,c
  3385   001E1C  5004               	movf	(??_my_strcmp+1)^0,w,c
  3386   001E1E  5C03               	subwf	??_my_strcmp^0,w,c
  3387   001E20  6E05               	movwf	my_strcmp@last^0,c
  3388   001E22  6A06               	clrf	(my_strcmp@last+1)^0,c
  3389   001E24  A0D8               	btfss	status,0,c
  3390   001E26  0606               	decf	(my_strcmp@last+1)^0,f,c
  3391                           
  3392                           ;password.c: 30:             break;
  3393   001E28  EF24  F00F         	goto	l284
  3394   001E2C                     l3089:
  3395                           
  3396                           ;password.c: 32:         k++;
  3397   001E2C  4A07               	infsnz	my_strcmp@k^0,f,c
  3398   001E2E  2A08               	incf	(my_strcmp@k+1)^0,f,c
  3399   001E30                     l3091:
  3400                           
  3401                           ;password.c: 27:     while (one[k] != '\0') {
  3402   001E30  5001               	movf	my_strcmp@one^0,w,c
  3403   001E32  2407               	addwf	my_strcmp@k^0,w,c
  3404   001E34  6ED9               	movwf	fsr2l,c
  3405   001E36  6ADA               	clrf	fsr2h,c
  3406   001E38  50DF               	movf	indf2,w,c
  3407   001E3A  A4D8               	btfss	status,2,c
  3408   001E3C  EF22  F00F         	goto	u2031
  3409   001E40  EF24  F00F         	goto	u2030
  3410   001E44                     u2031:
  3411   001E44  EFF1  F00E         	goto	l3085
  3412   001E48                     u2030:
  3413   001E48                     l284:
  3414                           
  3415                           ;password.c: 34:     return last;
  3416   001E48  C005  F001         	movff	my_strcmp@last,?_my_strcmp
  3417   001E4C  C006  F002         	movff	my_strcmp@last+1,?_my_strcmp+1
  3418   001E50  0012               	return		;funcret
  3419   001E52                     __end_of_my_strcmp:
  3420                           	callstack 0
  3421                           
  3422 ;; *************** function _menu *****************
  3423 ;; Defined at:
  3424 ;;		line 21 in file "menu.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  key             1    wreg     unsigned char 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  key             1   16[COMRAM] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3438 ;;      Params:         0       0       0       0       0       0       0
  3439 ;;      Locals:         1       0       0       0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0       0       0
  3441 ;;      Totals:         1       0       0       0       0       0       0
  3442 ;;Total ram usage:        1 bytes
  3443 ;; Hardware stack levels used: 1
  3444 ;; Hardware stack levels required when called: 3
  3445 ;; This function calls:
  3446 ;;		_clcd_print
  3447 ;;		_clcd_putch
  3448 ;;		_clcd_write
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text8
  3455   0015A8                     __ptext8:
  3456                           	callstack 0
  3457   0015A8                     _menu:
  3458                           	callstack 27
  3459                           
  3460                           ;incstack = 0
  3461                           ;menu@key stored from wreg
  3462   0015A8  6E11               	movwf	menu@key^0,c
  3463   0015AA                     
  3464                           ;menu.c: 21: void menu(char key);menu.c: 22: {;menu.c: 23:     clcd_print(logs[log_index
      +                          ], (0x80 + (1)));
  3465   0015AA  5052               	movf	_log_index^0,w,c
  3466   0015AC  0D02               	mullw	2
  3467   0015AE  50F3               	movf	243,w,c
  3468   0015B0  0FB8               	addlw	low _logs
  3469   0015B2  6ED9               	movwf	fsr2l,c
  3470   0015B4  6ADA               	clrf	fsr2h,c
  3471   0015B6  CFDE F003          	movff	postinc2,clcd_print@data
  3472   0015BA  CFDD F004          	movff	postdec2,clcd_print@data+1
  3473   0015BE  0E81               	movlw	129
  3474   0015C0  6E05               	movwf	clcd_print@addr^0,c
  3475   0015C2  EC1C  F010         	call	_clcd_print	;wreg free
  3476                           
  3477                           ;menu.c: 24:     clcd_print(logs[(log_index+1)], (0xC0 + (1)));
  3478   0015C6  5052               	movf	_log_index^0,w,c
  3479   0015C8  0D02               	mullw	2
  3480   0015CA  50F3               	movf	243,w,c
  3481   0015CC  0FBA               	addlw	low (_logs+2)
  3482   0015CE  6ED9               	movwf	fsr2l,c
  3483   0015D0  6ADA               	clrf	fsr2h,c
  3484   0015D2  CFDE F003          	movff	postinc2,clcd_print@data
  3485   0015D6  CFDD F004          	movff	postdec2,clcd_print@data+1
  3486   0015DA  0EC1               	movlw	193
  3487   0015DC  6E05               	movwf	clcd_print@addr^0,c
  3488   0015DE  EC1C  F010         	call	_clcd_print	;wreg free
  3489   0015E2                     
  3490                           ;menu.c: 26:     if(star_flag==0)
  3491   0015E2  5054               	movf	_star_flag^0,w,c
  3492   0015E4  A4D8               	btfss	status,2,c
  3493   0015E6  EFF7  F00A         	goto	u2471
  3494   0015EA  EFF9  F00A         	goto	u2470
  3495   0015EE                     u2471:
  3496   0015EE  EF05  F00B         	goto	l3397
  3497   0015F2                     u2470:
  3498   0015F2                     
  3499                           ;menu.c: 27:     {;menu.c: 28:         clcd_putch('*',(0x80 + (0)));
  3500   0015F2  0E80               	movlw	128
  3501   0015F4  6E0F               	movwf	clcd_putch@addr^0,c
  3502   0015F6  0E2A               	movlw	42
  3503   0015F8  ECDE  F011         	call	_clcd_putch
  3504                           
  3505                           ;menu.c: 29:         clcd_putch(' ',(0xC0 + (0)));
  3506   0015FC  0EC0               	movlw	192
  3507   0015FE  6E0F               	movwf	clcd_putch@addr^0,c
  3508   001600  0E20               	movlw	32
  3509   001602  ECDE  F011         	call	_clcd_putch
  3510                           
  3511                           ;menu.c: 30:     }
  3512   001606  EF0F  F00B         	goto	l3399
  3513   00160A                     l3397:
  3514                           
  3515                           ;menu.c: 32:     {;menu.c: 33:         clcd_putch(' ',(0x80 + (0)));
  3516   00160A  0E80               	movlw	128
  3517   00160C  6E0F               	movwf	clcd_putch@addr^0,c
  3518   00160E  0E20               	movlw	32
  3519   001610  ECDE  F011         	call	_clcd_putch
  3520                           
  3521                           ;menu.c: 34:         clcd_putch('*',(0xC0 + (0)));
  3522   001614  0EC0               	movlw	192
  3523   001616  6E0F               	movwf	clcd_putch@addr^0,c
  3524   001618  0E2A               	movlw	42
  3525   00161A  ECDE  F011         	call	_clcd_putch
  3526   00161E                     l3399:
  3527                           
  3528                           ;menu.c: 38:     if(key==5 )
  3529   00161E  0E05               	movlw	5
  3530   001620  1811               	xorwf	menu@key^0,w,c
  3531   001622  A4D8               	btfss	status,2,c
  3532   001624  EF16  F00B         	goto	u2481
  3533   001628  EF18  F00B         	goto	u2480
  3534   00162C                     u2481:
  3535   00162C  EF2F  F00B         	goto	l3411
  3536   001630                     u2480:
  3537   001630                     
  3538                           ;menu.c: 39:     {;menu.c: 40:         if(star_flag==0)
  3539   001630  5054               	movf	_star_flag^0,w,c
  3540   001632  A4D8               	btfss	status,2,c
  3541   001634  EF1E  F00B         	goto	u2491
  3542   001638  EF20  F00B         	goto	u2490
  3543   00163C                     u2491:
  3544   00163C  EF25  F00B         	goto	l3407
  3545   001640                     u2490:
  3546   001640                     
  3547                           ;menu.c: 41:         {;menu.c: 42:             star_flag=1;
  3548   001640  0E01               	movlw	1
  3549   001642  6E54               	movwf	_star_flag^0,c
  3550   001644                     
  3551                           ;menu.c: 43:             star_index++;
  3552   001644  2A53               	incf	_star_index^0,f,c
  3553                           
  3554                           ;menu.c: 44:         }
  3555   001646  EF2F  F00B         	goto	l3411
  3556   00164A                     l3407:
  3557   00164A  0E03               	movlw	3
  3558   00164C  6052               	cpfslt	_log_index^0,c
  3559   00164E  EF2B  F00B         	goto	u2501
  3560   001652  EF2D  F00B         	goto	u2500
  3561   001656                     u2501:
  3562   001656  EF2F  F00B         	goto	l3411
  3563   00165A                     u2500:
  3564   00165A                     
  3565                           ;menu.c: 46:         {;menu.c: 47:             log_index++;
  3566   00165A  2A52               	incf	_log_index^0,f,c
  3567                           
  3568                           ;menu.c: 48:             star_index++;
  3569   00165C  2A53               	incf	_star_index^0,f,c
  3570   00165E                     l3411:
  3571                           
  3572                           ;menu.c: 52:     if(key==6 )
  3573   00165E  0E06               	movlw	6
  3574   001660  1811               	xorwf	menu@key^0,w,c
  3575   001662  A4D8               	btfss	status,2,c
  3576   001664  EF36  F00B         	goto	u2511
  3577   001668  EF38  F00B         	goto	u2510
  3578   00166C                     u2511:
  3579   00166C  EF4F  F00B         	goto	l3423
  3580   001670                     u2510:
  3581   001670                     
  3582                           ;menu.c: 53:     {;menu.c: 54:          if(star_flag==1)
  3583   001670  0454               	decf	_star_flag^0,w,c
  3584   001672  A4D8               	btfss	status,2,c
  3585   001674  EF3E  F00B         	goto	u2521
  3586   001678  EF40  F00B         	goto	u2520
  3587   00167C                     u2521:
  3588   00167C  EF45  F00B         	goto	l3419
  3589   001680                     u2520:
  3590   001680                     
  3591                           ;menu.c: 55:          {;menu.c: 56:            star_flag=0;
  3592   001680  0E00               	movlw	0
  3593   001682  6E54               	movwf	_star_flag^0,c
  3594   001684                     
  3595                           ;menu.c: 57:            star_index--;
  3596   001684  0653               	decf	_star_index^0,f,c
  3597                           
  3598                           ;menu.c: 58:          }
  3599   001686  EF4F  F00B         	goto	l3423
  3600   00168A                     l3419:
  3601   00168A  5052               	movf	_log_index^0,w,c
  3602   00168C  B4D8               	btfsc	status,2,c
  3603   00168E  EF4B  F00B         	goto	u2531
  3604   001692  EF4D  F00B         	goto	u2530
  3605   001696                     u2531:
  3606   001696  EF4F  F00B         	goto	l3423
  3607   00169A                     u2530:
  3608   00169A                     
  3609                           ;menu.c: 61:         {;menu.c: 62:             log_index--;
  3610   00169A  0652               	decf	_log_index^0,f,c
  3611                           
  3612                           ;menu.c: 63:             star_index--;
  3613   00169C  0653               	decf	_star_index^0,f,c
  3614   00169E                     l3423:
  3615                           
  3616                           ;menu.c: 68:     if(key==15)
  3617   00169E  0E0F               	movlw	15
  3618   0016A0  1811               	xorwf	menu@key^0,w,c
  3619   0016A2  A4D8               	btfss	status,2,c
  3620   0016A4  EF56  F00B         	goto	u2541
  3621   0016A8  EF58  F00B         	goto	u2540
  3622   0016AC                     u2541:
  3623   0016AC  EF61  F00B         	goto	l3431
  3624   0016B0                     u2540:
  3625   0016B0                     
  3626                           ;menu.c: 69:     {;menu.c: 70:         clcd_write(0x01, 0);
  3627   0016B0  0E00               	movlw	0
  3628   0016B2  6E01               	movwf	clcd_write@control_bit^0,c
  3629   0016B4  0E01               	movlw	1
  3630   0016B6  EC4C  F011         	call	_clcd_write
  3631   0016BA                     
  3632                           ;menu.c: 71:         main_f=3;
  3633   0016BA  0E03               	movlw	3
  3634   0016BC  6E59               	movwf	_main_f^0,c
  3635   0016BE                     
  3636                           ;menu.c: 72:         menu_f=star_index;
  3637   0016BE  C053  F058         	movff	_star_index,_menu_f
  3638   0016C2                     l3431:
  3639                           
  3640                           ;menu.c: 74:     if(key==16)
  3641   0016C2  0E10               	movlw	16
  3642   0016C4  1811               	xorwf	menu@key^0,w,c
  3643   0016C6  A4D8               	btfss	status,2,c
  3644   0016C8  EF68  F00B         	goto	u2551
  3645   0016CC  EF6A  F00B         	goto	u2550
  3646   0016D0                     u2551:
  3647   0016D0  EF71  F00B         	goto	l481
  3648   0016D4                     u2550:
  3649   0016D4                     
  3650                           ;menu.c: 75:     {;menu.c: 76:         clcd_write(0x01, 0);
  3651   0016D4  0E00               	movlw	0
  3652   0016D6  6E01               	movwf	clcd_write@control_bit^0,c
  3653   0016D8  0E01               	movlw	1
  3654   0016DA  EC4C  F011         	call	_clcd_write
  3655   0016DE                     
  3656                           ;menu.c: 77:         main_f=0;
  3657   0016DE  0E00               	movlw	0
  3658   0016E0  6E59               	movwf	_main_f^0,c
  3659   0016E2                     l481:
  3660   0016E2  0012               	return		;funcret
  3661   0016E4                     __end_of_menu:
  3662                           	callstack 0
  3663                           
  3664 ;; *************** function _init_config *****************
  3665 ;; Defined at:
  3666 ;;		line 22 in file "main.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  j               2   17[COMRAM] int 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3680 ;;      Params:         0       0       0       0       0       0       0
  3681 ;;      Locals:         2       0       0       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0
  3683 ;;      Totals:         2       0       0       0       0       0       0
  3684 ;;Total ram usage:        2 bytes
  3685 ;; Hardware stack levels used: 1
  3686 ;; Hardware stack levels required when called: 6
  3687 ;; This function calls:
  3688 ;;		_init_adc
  3689 ;;		_init_clcd
  3690 ;;		_init_ds1307
  3691 ;;		_init_i2c
  3692 ;;		_init_matrix_keypad
  3693 ;;		_init_timer0
  3694 ;;		_init_uart
  3695 ;;		_read_external_eeprom
  3696 ;;		_write_external_eeprom
  3697 ;; This function is called by:
  3698 ;;		_main
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text9
  3703   001CC2                     __ptext9:
  3704                           	callstack 0
  3705   001CC2                     _init_config:
  3706                           	callstack 24
  3707   001CC2                     
  3708                           ;main.c: 23:     init_clcd();
  3709   001CC2  ECC1  F00D         	call	_init_clcd	;wreg free
  3710                           
  3711                           ;main.c: 24:     init_matrix_keypad();
  3712   001CC6  EC13  F012         	call	_init_matrix_keypad	;wreg free
  3713   001CCA                     
  3714                           ;main.c: 25:     init_adc();
  3715   001CCA  ECBF  F011         	call	_init_adc	;wreg free
  3716   001CCE                     
  3717                           ;main.c: 26:     init_i2c();
  3718   001CCE  ECEA  F011         	call	_init_i2c	;wreg free
  3719                           
  3720                           ;main.c: 27:     init_ds1307();
  3721   001CD2  ECE5  F010         	call	_init_ds1307	;wreg free
  3722   001CD6                     
  3723                           ;main.c: 28:     init_timer0();
  3724   001CD6  EC00  F012         	call	_init_timer0	;wreg free
  3725   001CDA                     
  3726                           ;main.c: 29:     init_uart();
  3727   001CDA  EC0A  F012         	call	_init_uart	;wreg free
  3728                           
  3729                           ;main.c: 33:     write_external_eeprom(200, '0');
  3730   001CDE  0E30               	movlw	48
  3731   001CE0  6E02               	movwf	write_external_eeprom@data^0,c
  3732   001CE2  0EC8               	movlw	200
  3733   001CE4  EC2C  F011         	call	_write_external_eeprom
  3734                           
  3735                           ;main.c: 34:     write_external_eeprom(201, '0');
  3736   001CE8  0E30               	movlw	48
  3737   001CEA  6E02               	movwf	write_external_eeprom@data^0,c
  3738   001CEC  0EC9               	movlw	201
  3739   001CEE  EC2C  F011         	call	_write_external_eeprom
  3740                           
  3741                           ;main.c: 35:     write_external_eeprom(202, '0');
  3742   001CF2  0E30               	movlw	48
  3743   001CF4  6E02               	movwf	write_external_eeprom@data^0,c
  3744   001CF6  0ECA               	movlw	202
  3745   001CF8  EC2C  F011         	call	_write_external_eeprom
  3746                           
  3747                           ;main.c: 36:     write_external_eeprom(203, '0');
  3748   001CFC  0E30               	movlw	48
  3749   001CFE  6E02               	movwf	write_external_eeprom@data^0,c
  3750   001D00  0ECB               	movlw	203
  3751   001D02  EC2C  F011         	call	_write_external_eeprom
  3752   001D06                     
  3753                           ;main.c: 39:     for (int j = 0; j < 4; j++) {
  3754   001D06  0E00               	movlw	0
  3755   001D08  6E13               	movwf	(init_config@j+1)^0,c
  3756   001D0A  0E00               	movlw	0
  3757   001D0C  6E12               	movwf	init_config@j^0,c
  3758   001D0E                     l3255:
  3759                           
  3760                           ;main.c: 40:         pass[j] = read_external_eeprom(j + 200);
  3761   001D0E  5012               	movf	init_config@j^0,w,c
  3762   001D10  0F9B               	addlw	low _pass
  3763   001D12  6ED9               	movwf	fsr2l,c
  3764   001D14  6ADA               	clrf	fsr2h,c
  3765   001D16  5012               	movf	init_config@j^0,w,c
  3766   001D18  0FC8               	addlw	200
  3767   001D1A  EC84  F011         	call	_read_external_eeprom
  3768   001D1E  6EDF               	movwf	indf2,c
  3769   001D20                     
  3770                           ;main.c: 41:     }
  3771   001D20  4A12               	infsnz	init_config@j^0,f,c
  3772   001D22  2A13               	incf	(init_config@j+1)^0,f,c
  3773   001D24  BE13               	btfsc	(init_config@j+1)^0,7,c
  3774   001D26  EF9E  F00E         	goto	u2261
  3775   001D2A  5013               	movf	(init_config@j+1)^0,w,c
  3776   001D2C  E109               	bnz	u2260
  3777   001D2E  0E04               	movlw	4
  3778   001D30  5C12               	subwf	init_config@j^0,w,c
  3779   001D32  A0D8               	btfss	status,0,c
  3780   001D34  EF9E  F00E         	goto	u2261
  3781   001D38  EFA0  F00E         	goto	u2260
  3782   001D3C                     u2261:
  3783   001D3C  EF87  F00E         	goto	l3255
  3784   001D40                     u2260:
  3785   001D40                     
  3786                           ;main.c: 42:     pass[4] = '\0';
  3787   001D40  0E00               	movlw	0
  3788   001D42  0100               	movlb	0	; () banked
  3789   001D44  6F9F               	movwf	(_pass+4)& (0+255),b
  3790   001D46                     
  3791                           ; BSR set to: 0
  3792   001D46  0012               	return		;funcret
  3793   001D48                     __end_of_init_config:
  3794                           	callstack 0
  3795                           
  3796 ;; *************** function _init_uart *****************
  3797 ;; Defined at:
  3798 ;;		line 4 in file "uart.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, status,2
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3812 ;;      Params:         0       0       0       0       0       0       0
  3813 ;;      Locals:         0       0       0       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0       0       0
  3815 ;;      Totals:         0       0       0       0       0       0       0
  3816 ;;Total ram usage:        0 bytes
  3817 ;; Hardware stack levels used: 1
  3818 ;; Hardware stack levels required when called: 1
  3819 ;; This function calls:
  3820 ;;		Nothing
  3821 ;; This function is called by:
  3822 ;;		_init_config
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           	psect	text10
  3827   002414                     __ptext10:
  3828                           	callstack 0
  3829   002414                     _init_uart:
  3830                           	callstack 28
  3831   002414                     
  3832                           ;uart.c: 7:  TRISC7 = 1;
  3833   002414  8E94               	bsf	3988,7,c	;volatile
  3834                           
  3835                           ;uart.c: 8:  TRISC6 = 0;
  3836   002416  9C94               	bcf	3988,6,c	;volatile
  3837                           
  3838                           ;uart.c: 11:  BRGH = 1;
  3839   002418  84AC               	bsf	4012,2,c	;volatile
  3840                           
  3841                           ;uart.c: 12:  SPEN = 1;
  3842   00241A  8EAB               	bsf	4011,7,c	;volatile
  3843                           
  3844                           ;uart.c: 16:  CREN = 1;
  3845   00241C  88AB               	bsf	4011,4,c	;volatile
  3846   00241E                     
  3847                           ;uart.c: 22:  SPBRG = 129;
  3848   00241E  0E81               	movlw	129
  3849   002420  6EAF               	movwf	175,c	;volatile
  3850   002422                     
  3851                           ;uart.c: 24:     RCIE = 1;
  3852   002422  8A9D               	bsf	3997,5,c	;volatile
  3853   002424  0012               	return		;funcret
  3854   002426                     __end_of_init_uart:
  3855                           	callstack 0
  3856                           
  3857 ;; *************** function _init_timer0 *****************
  3858 ;; Defined at:
  3859 ;;		line 4 in file "timer0.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3873 ;;      Params:         0       0       0       0       0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0
  3876 ;;      Totals:         0       0       0       0       0       0       0
  3877 ;;Total ram usage:        0 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; Hardware stack levels required when called: 1
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_init_config
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text11
  3888   002400                     __ptext11:
  3889                           	callstack 0
  3890   002400                     _init_timer0:
  3891                           	callstack 28
  3892   002400                     
  3893                           ;timer0.c: 12:  T08BIT = 1;
  3894   002400  8CD5               	bsf	4053,6,c	;volatile
  3895                           
  3896                           ;timer0.c: 15:  T0CS = 0;
  3897   002402  9AD5               	bcf	4053,5,c	;volatile
  3898                           
  3899                           ;timer0.c: 18:  TMR0ON = 1;
  3900   002404  8ED5               	bsf	4053,7,c	;volatile
  3901                           
  3902                           ;timer0.c: 21:  PSA = 1;
  3903   002406  86D5               	bsf	4053,3,c	;volatile
  3904   002408                     
  3905                           ;timer0.c: 24:  TMR0 = 6;
  3906   002408  0E00               	movlw	0
  3907   00240A  6ED7               	movwf	215,c	;volatile
  3908   00240C  0E06               	movlw	6
  3909   00240E  6ED6               	movwf	214,c	;volatile
  3910   002410                     
  3911                           ;timer0.c: 27:  TMR0IF = 0;
  3912   002410  94F2               	bcf	4082,2,c	;volatile
  3913   002412  0012               	return		;funcret
  3914   002414                     __end_of_init_timer0:
  3915                           	callstack 0
  3916                           
  3917 ;; *************** function _init_matrix_keypad *****************
  3918 ;; Defined at:
  3919 ;;		line 5 in file "matrix_keypad.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;		None
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;		None
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3933 ;;      Params:         0       0       0       0       0       0       0
  3934 ;;      Locals:         0       0       0       0       0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0
  3936 ;;      Totals:         0       0       0       0       0       0       0
  3937 ;;Total ram usage:        0 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; Hardware stack levels required when called: 1
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_init_config
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text12
  3948   002426                     __ptext12:
  3949                           	callstack 0
  3950   002426                     _init_matrix_keypad:
  3951                           	callstack 28
  3952   002426                     
  3953                           ;matrix_keypad.c: 8:  ADCON1 = 0x0F;
  3954   002426  0E0F               	movlw	15
  3955   002428  6EC1               	movwf	193,c	;volatile
  3956                           
  3957                           ;matrix_keypad.c: 11:  TRISB = 0x1E;
  3958   00242A  0E1E               	movlw	30
  3959   00242C  6E93               	movwf	147,c	;volatile
  3960   00242E                     
  3961                           ;matrix_keypad.c: 14:  RBPU = 0;
  3962   00242E  9EF1               	bcf	4081,7,c	;volatile
  3963   002430                     
  3964                           ;matrix_keypad.c: 16:  PORTB = PORTB | 0xE0;
  3965   002430  5081               	movf	129,w,c	;volatile
  3966   002432  09E0               	iorlw	224
  3967   002434  6E81               	movwf	129,c	;volatile
  3968   002436  0012               	return		;funcret
  3969   002438                     __end_of_init_matrix_keypad:
  3970                           	callstack 0
  3971                           
  3972 ;; *************** function _init_i2c *****************
  3973 ;; Defined at:
  3974 ;;		line 4 in file "i2c.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1    wreg      void 
  3981 ;; Registers used:
  3982 ;;		wreg, status,2
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3988 ;;      Params:         0       0       0       0       0       0       0
  3989 ;;      Locals:         0       0       0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0       0       0
  3991 ;;      Totals:         0       0       0       0       0       0       0
  3992 ;;Total ram usage:        0 bytes
  3993 ;; Hardware stack levels used: 1
  3994 ;; Hardware stack levels required when called: 1
  3995 ;; This function calls:
  3996 ;;		Nothing
  3997 ;; This function is called by:
  3998 ;;		_init_config
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text13
  4003   0023D4                     __ptext13:
  4004                           	callstack 0
  4005   0023D4                     _init_i2c:
  4006                           	callstack 28
  4007   0023D4                     
  4008                           ;i2c.c: 7:  TRISC3 = 1;
  4009   0023D4  8694               	bsf	3988,3,c	;volatile
  4010                           
  4011                           ;i2c.c: 8:  TRISC4 = 1;
  4012   0023D6  8894               	bsf	3988,4,c	;volatile
  4013   0023D8                     
  4014                           ;i2c.c: 10:  SSPCON1 = 0x28;
  4015   0023D8  0E28               	movlw	40
  4016   0023DA  6EC6               	movwf	198,c	;volatile
  4017                           
  4018                           ;i2c.c: 12:  SSPADD = 0x31;
  4019   0023DC  0E31               	movlw	49
  4020   0023DE  6EC8               	movwf	200,c	;volatile
  4021   0023E0                     
  4022                           ;i2c.c: 14:  CKE = 0;
  4023   0023E0  9CC7               	bcf	4039,6,c	;volatile
  4024   0023E2                     
  4025                           ;i2c.c: 16:  SMP = 1;
  4026   0023E2  8EC7               	bsf	4039,7,c	;volatile
  4027   0023E4                     
  4028                           ;i2c.c: 18:  SSPIF = 0;
  4029   0023E4  969E               	bcf	3998,3,c	;volatile
  4030   0023E6                     
  4031                           ;i2c.c: 20:  BCLIF = 0;
  4032   0023E6  96A1               	bcf	4001,3,c	;volatile
  4033   0023E8  0012               	return		;funcret
  4034   0023EA                     __end_of_init_i2c:
  4035                           	callstack 0
  4036                           
  4037 ;; *************** function _init_ds1307 *****************
  4038 ;; Defined at:
  4039 ;;		line 13 in file "ds1307.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;		None
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  dummy           1   16[COMRAM] unsigned char 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      void 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2, status,0, cstack
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4053 ;;      Params:         0       0       0       0       0       0       0
  4054 ;;      Locals:         1       0       0       0       0       0       0
  4055 ;;      Temps:          0       0       0       0       0       0       0
  4056 ;;      Totals:         1       0       0       0       0       0       0
  4057 ;;Total ram usage:        1 bytes
  4058 ;; Hardware stack levels used: 1
  4059 ;; Hardware stack levels required when called: 5
  4060 ;; This function calls:
  4061 ;;		_read_ds1307
  4062 ;;		_write_ds1307
  4063 ;; This function is called by:
  4064 ;;		_init_config
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text14
  4069   0021CA                     __ptext14:
  4070                           	callstack 0
  4071   0021CA                     _init_ds1307:
  4072                           	callstack 24
  4073   0021CA                     
  4074                           ;ds1307.c: 15:  unsigned char dummy;;ds1307.c: 18:  dummy = read_ds1307(0x00);
  4075   0021CA  0E00               	movlw	0
  4076   0021CC  EC99  F011         	call	_read_ds1307
  4077   0021D0  6E11               	movwf	init_ds1307@dummy^0,c
  4078   0021D2                     
  4079                           ;ds1307.c: 19:  write_ds1307(0x00, dummy | 0x80);
  4080   0021D2  5011               	movf	init_ds1307@dummy^0,w,c
  4081   0021D4  0980               	iorlw	128
  4082   0021D6  6E0F               	movwf	write_ds1307@data^0,c
  4083   0021D8  0E00               	movlw	0
  4084   0021DA  ECCF  F011         	call	_write_ds1307
  4085   0021DE                     
  4086                           ;ds1307.c: 22:  dummy = read_ds1307(0x02);
  4087   0021DE  0E02               	movlw	2
  4088   0021E0  EC99  F011         	call	_read_ds1307
  4089   0021E4  6E11               	movwf	init_ds1307@dummy^0,c
  4090                           
  4091                           ;ds1307.c: 23:  write_ds1307(0x02, dummy | 0x40);
  4092   0021E6  5011               	movf	init_ds1307@dummy^0,w,c
  4093   0021E8  0940               	iorlw	64
  4094   0021EA  6E0F               	movwf	write_ds1307@data^0,c
  4095   0021EC  0E02               	movlw	2
  4096   0021EE  ECCF  F011         	call	_write_ds1307
  4097   0021F2                     
  4098                           ;ds1307.c: 38:  write_ds1307(0x07, 0x93);
  4099   0021F2  0E93               	movlw	147
  4100   0021F4  6E0F               	movwf	write_ds1307@data^0,c
  4101   0021F6  0E07               	movlw	7
  4102   0021F8  ECCF  F011         	call	_write_ds1307
  4103   0021FC                     
  4104                           ;ds1307.c: 41:  dummy = read_ds1307(0x00);
  4105   0021FC  0E00               	movlw	0
  4106   0021FE  EC99  F011         	call	_read_ds1307
  4107   002202  6E11               	movwf	init_ds1307@dummy^0,c
  4108                           
  4109                           ;ds1307.c: 42:  write_ds1307(0x00, dummy & 0x7F);
  4110   002204  5011               	movf	init_ds1307@dummy^0,w,c
  4111   002206  0B7F               	andlw	127
  4112   002208  6E0F               	movwf	write_ds1307@data^0,c
  4113   00220A  0E00               	movlw	0
  4114   00220C  ECCF  F011         	call	_write_ds1307
  4115   002210  0012               	return		;funcret
  4116   002212                     __end_of_init_ds1307:
  4117                           	callstack 0
  4118                           
  4119 ;; *************** function _write_ds1307 *****************
  4120 ;; Defined at:
  4121 ;;		line 46 in file "ds1307.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  address         1    wreg     unsigned char 
  4124 ;;  data            1   14[COMRAM] unsigned char 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  address         1   15[COMRAM] unsigned char 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		wreg, status,2, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4136 ;;      Params:         1       0       0       0       0       0       0
  4137 ;;      Locals:         1       0       0       0       0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0
  4139 ;;      Totals:         2       0       0       0       0       0       0
  4140 ;;Total ram usage:        2 bytes
  4141 ;; Hardware stack levels used: 1
  4142 ;; Hardware stack levels required when called: 3
  4143 ;; This function calls:
  4144 ;;		_i2c_start
  4145 ;;		_i2c_stop
  4146 ;;		_i2c_write
  4147 ;; This function is called by:
  4148 ;;		_init_ds1307
  4149 ;;		_settime
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text15
  4154   00239E                     __ptext15:
  4155                           	callstack 0
  4156   00239E                     _write_ds1307:
  4157                           	callstack 26
  4158                           
  4159                           ;incstack = 0
  4160                           ;write_ds1307@address stored from wreg
  4161   00239E  6E10               	movwf	write_ds1307@address^0,c
  4162   0023A0                     
  4163                           ;ds1307.c: 46: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 47
      +                          : {;ds1307.c: 48:  i2c_start();
  4164   0023A0  EC45  F012         	call	_i2c_start	;wreg free
  4165   0023A4                     
  4166                           ;ds1307.c: 49:  i2c_write(0xD0);
  4167   0023A4  0ED0               	movlw	208
  4168   0023A6  EC33  F012         	call	_i2c_write
  4169   0023AA                     
  4170                           ;ds1307.c: 50:  i2c_write(address);
  4171   0023AA  5010               	movf	write_ds1307@address^0,w,c
  4172   0023AC  EC33  F012         	call	_i2c_write
  4173   0023B0                     
  4174                           ;ds1307.c: 51:  i2c_write(data);
  4175   0023B0  500F               	movf	write_ds1307@data^0,w,c
  4176   0023B2  EC33  F012         	call	_i2c_write
  4177   0023B6                     
  4178                           ;ds1307.c: 52:  i2c_stop();
  4179   0023B6  EC41  F012         	call	_i2c_stop	;wreg free
  4180   0023BA  0012               	return		;funcret
  4181   0023BC                     __end_of_write_ds1307:
  4182                           	callstack 0
  4183                           
  4184 ;; *************** function _init_clcd *****************
  4185 ;; Defined at:
  4186 ;;		line 28 in file "clcd.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, status,2, status,0, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4200 ;;      Params:         0       0       0       0       0       0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0
  4202 ;;      Temps:          1       0       0       0       0       0       0
  4203 ;;      Totals:         1       0       0       0       0       0       0
  4204 ;;Total ram usage:        1 bytes
  4205 ;; Hardware stack levels used: 1
  4206 ;; Hardware stack levels required when called: 2
  4207 ;; This function calls:
  4208 ;;		_clcd_write
  4209 ;; This function is called by:
  4210 ;;		_init_config
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text16
  4215   001B82                     __ptext16:
  4216                           	callstack 0
  4217   001B82                     _init_clcd:
  4218                           	callstack 27
  4219   001B82                     
  4220                           ;clcd.c: 31:  TRISD = 0x00;
  4221   001B82  0E00               	movlw	0
  4222   001B84  6E95               	movwf	149,c	;volatile
  4223   001B86                     
  4224                           ;clcd.c: 33:  TRISC = TRISC & 0xF8;
  4225   001B86  5094               	movf	148,w,c	;volatile
  4226   001B88  0BF8               	andlw	248
  4227   001B8A  6E94               	movwf	148,c	;volatile
  4228   001B8C                     
  4229                           ;clcd.c: 35:  RC0 = 0;
  4230   001B8C  9082               	bcf	3970,0,c	;volatile
  4231   001B8E                     
  4232                           ;clcd.c: 39:     _delay((unsigned long)((30)*(20000000/4000.0)));
  4233   001B8E  0EC3               	movlw	195
  4234   001B90  6E03               	movwf	??_init_clcd^0,c
  4235   001B92  0ECD               	movlw	205
  4236   001B94                     u3617:
  4237   001B94  2EE8               	decfsz	wreg,f,c
  4238   001B96  D7FE               	bra	u3617
  4239   001B98  2E03               	decfsz	??_init_clcd^0,f,c
  4240   001B9A  D7FC               	bra	u3617
  4241   001B9C  0000               	nop	
  4242   001B9E                     
  4243                           ;clcd.c: 42:     clcd_write(0x33, 0 );
  4244   001B9E  0E00               	movlw	0
  4245   001BA0  6E01               	movwf	clcd_write@control_bit^0,c
  4246   001BA2  0E33               	movlw	51
  4247   001BA4  EC4C  F011         	call	_clcd_write
  4248   001BA8                     
  4249                           ;clcd.c: 43:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4250   001BA8  0E1B               	movlw	27
  4251   001BAA  6E03               	movwf	??_init_clcd^0,c
  4252   001BAC  0E9E               	movlw	158
  4253   001BAE                     u3627:
  4254   001BAE  2EE8               	decfsz	wreg,f,c
  4255   001BB0  D7FE               	bra	u3627
  4256   001BB2  2E03               	decfsz	??_init_clcd^0,f,c
  4257   001BB4  D7FC               	bra	u3627
  4258   001BB6  D000               	nop2	
  4259   001BB8                     
  4260                           ;clcd.c: 44:     clcd_write(0x33, 0 );
  4261   001BB8  0E00               	movlw	0
  4262   001BBA  6E01               	movwf	clcd_write@control_bit^0,c
  4263   001BBC  0E33               	movlw	51
  4264   001BBE  EC4C  F011         	call	_clcd_write
  4265   001BC2                     
  4266                           ;clcd.c: 45:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4267   001BC2  0EA6               	movlw	166
  4268   001BC4                     u3637:
  4269   001BC4  2EE8               	decfsz	wreg,f,c
  4270   001BC6  D7FE               	bra	u3637
  4271   001BC8  D000               	nop2	
  4272   001BCA                     
  4273                           ;clcd.c: 46:     clcd_write(0x33, 0 );
  4274   001BCA  0E00               	movlw	0
  4275   001BCC  6E01               	movwf	clcd_write@control_bit^0,c
  4276   001BCE  0E33               	movlw	51
  4277   001BD0  EC4C  F011         	call	_clcd_write
  4278   001BD4                     
  4279                           ;clcd.c: 47:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4280   001BD4  D000               	nop2		;2 cycle nop
  4281   001BD6  D000               	nop2		;2 cycle nop
  4282   001BD8  0000               	nop	
  4283   001BDA                     
  4284                           ;clcd.c: 49:     clcd_write(0x02, 0);
  4285   001BDA  0E00               	movlw	0
  4286   001BDC  6E01               	movwf	clcd_write@control_bit^0,c
  4287   001BDE  0E02               	movlw	2
  4288   001BE0  EC4C  F011         	call	_clcd_write
  4289   001BE4                     
  4290                           ;clcd.c: 50:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4291   001BE4  0EA6               	movlw	166
  4292   001BE6                     u3647:
  4293   001BE6  2EE8               	decfsz	wreg,f,c
  4294   001BE8  D7FE               	bra	u3647
  4295   001BEA  D000               	nop2	
  4296   001BEC                     
  4297                           ;clcd.c: 51:     clcd_write(0x38, 0);
  4298   001BEC  0E00               	movlw	0
  4299   001BEE  6E01               	movwf	clcd_write@control_bit^0,c
  4300   001BF0  0E38               	movlw	56
  4301   001BF2  EC4C  F011         	call	_clcd_write
  4302   001BF6                     
  4303                           ;clcd.c: 52:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4304   001BF6  0EA6               	movlw	166
  4305   001BF8                     u3657:
  4306   001BF8  2EE8               	decfsz	wreg,f,c
  4307   001BFA  D7FE               	bra	u3657
  4308   001BFC  D000               	nop2	
  4309   001BFE                     
  4310                           ;clcd.c: 53:     clcd_write(0x01, 0);
  4311   001BFE  0E00               	movlw	0
  4312   001C00  6E01               	movwf	clcd_write@control_bit^0,c
  4313   001C02  0E01               	movlw	1
  4314   001C04  EC4C  F011         	call	_clcd_write
  4315   001C08                     
  4316                           ;clcd.c: 54:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  4317   001C08  0E04               	movlw	4
  4318   001C0A  6E03               	movwf	??_init_clcd^0,c
  4319   001C0C  0E3E               	movlw	62
  4320   001C0E                     u3667:
  4321   001C0E  2EE8               	decfsz	wreg,f,c
  4322   001C10  D7FE               	bra	u3667
  4323   001C12  2E03               	decfsz	??_init_clcd^0,f,c
  4324   001C14  D7FC               	bra	u3667
  4325   001C16                     
  4326                           ;clcd.c: 55:     clcd_write(0x0C, 0);
  4327   001C16  0E00               	movlw	0
  4328   001C18  6E01               	movwf	clcd_write@control_bit^0,c
  4329   001C1A  0E0C               	movlw	12
  4330   001C1C  EC4C  F011         	call	_clcd_write
  4331   001C20                     
  4332                           ;clcd.c: 56:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4333   001C20  0EA6               	movlw	166
  4334   001C22                     u3677:
  4335   001C22  2EE8               	decfsz	wreg,f,c
  4336   001C24  D7FE               	bra	u3677
  4337   001C26  D000               	nop2	
  4338   001C28  0012               	return		;funcret
  4339   001C2A                     __end_of_init_clcd:
  4340                           	callstack 0
  4341                           
  4342 ;; *************** function _init_adc *****************
  4343 ;; Defined at:
  4344 ;;		line 4 in file "adc.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;		None
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;		None
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4358 ;;      Params:         0       0       0       0       0       0       0
  4359 ;;      Locals:         0       0       0       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0
  4361 ;;      Totals:         0       0       0       0       0       0       0
  4362 ;;Total ram usage:        0 bytes
  4363 ;; Hardware stack levels used: 1
  4364 ;; Hardware stack levels required when called: 1
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_init_config
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text17
  4373   00237E                     __ptext17:
  4374                           	callstack 0
  4375   00237E                     _init_adc:
  4376                           	callstack 28
  4377   00237E                     
  4378                           ;adc.c: 7:  ADFM = 1;
  4379   00237E  8EC0               	bsf	4032,7,c	;volatile
  4380                           
  4381                           ;adc.c: 13:  ACQT2 = 0;
  4382   002380  9AC0               	bcf	4032,5,c	;volatile
  4383                           
  4384                           ;adc.c: 14:  ACQT1 = 1;
  4385   002382  88C0               	bsf	4032,4,c	;volatile
  4386                           
  4387                           ;adc.c: 15:  ACQT0 = 0;
  4388   002384  96C0               	bcf	4032,3,c	;volatile
  4389                           
  4390                           ;adc.c: 21:  ADCS0 = 0;
  4391   002386  90C0               	bcf	4032,0,c	;volatile
  4392                           
  4393                           ;adc.c: 22:  ADCS1 = 1;
  4394   002388  82C0               	bsf	4032,1,c	;volatile
  4395                           
  4396                           ;adc.c: 23:  ADCS2 = 0;
  4397   00238A  94C0               	bcf	4032,2,c	;volatile
  4398                           
  4399                           ;adc.c: 26:  GODONE = 0;
  4400   00238C  92C2               	bcf	4034,1,c	;volatile
  4401                           
  4402                           ;adc.c: 31:  VCFG1 = 0;
  4403   00238E  9AC1               	bcf	4033,5,c	;volatile
  4404                           
  4405                           ;adc.c: 33:  VCFG0 = 0;
  4406   002390  98C1               	bcf	4033,4,c	;volatile
  4407   002392                     
  4408                           ;adc.c: 36:  ADRESH = 0;
  4409   002392  0E00               	movlw	0
  4410   002394  6EC4               	movwf	196,c	;volatile
  4411                           
  4412                           ;adc.c: 37:  ADRESL = 0;
  4413   002396  0E00               	movlw	0
  4414   002398  6EC3               	movwf	195,c	;volatile
  4415   00239A                     
  4416                           ;adc.c: 40:  ADON = 1;
  4417   00239A  80C2               	bsf	4034,0,c	;volatile
  4418   00239C  0012               	return		;funcret
  4419   00239E                     __end_of_init_adc:
  4420                           	callstack 0
  4421                           
  4422 ;; *************** function _download_log *****************
  4423 ;; Defined at:
  4424 ;;		line 30 in file "download_log.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;		None
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  j               2   14[COMRAM] int 
  4429 ;;  k               1   16[COMRAM] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      void 
  4432 ;; Registers used:
  4433 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4439 ;;      Params:         0       0       0       0       0       0       0
  4440 ;;      Locals:         3       0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0
  4442 ;;      Totals:         3       0       0       0       0       0       0
  4443 ;;Total ram usage:        3 bytes
  4444 ;; Hardware stack levels used: 1
  4445 ;; Hardware stack levels required when called: 5
  4446 ;; This function calls:
  4447 ;;		___awdiv
  4448 ;;		___awmod
  4449 ;;		_clcd_print
  4450 ;;		_putch
  4451 ;;		_puts
  4452 ;;		_read_external_eeprom
  4453 ;;		_write_external_eeprom
  4454 ;; This function is called by:
  4455 ;;		_main
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text18
  4460   000FC6                     __ptext18:
  4461                           	callstack 0
  4462   000FC6                     _download_log:
  4463                           	callstack 25
  4464   000FC6                     
  4465                           ;download_log.c: 31:     clcd_print("  Download Log   ", (0x80 + (0)));
  4466   000FC6  0ECF               	movlw	low STR_27
  4467   000FC8  6E03               	movwf	clcd_print@data^0,c
  4468   000FCA  0E2E               	movlw	high STR_27
  4469   000FCC  6E04               	movwf	(clcd_print@data+1)^0,c
  4470   000FCE  0E80               	movlw	128
  4471   000FD0  6E05               	movwf	clcd_print@addr^0,c
  4472   000FD2  EC1C  F010         	call	_clcd_print	;wreg free
  4473                           
  4474                           ;download_log.c: 32:     clcd_print(" SUCCESSFULL ", (0xC0 + (3)));
  4475   000FD6  0ECD               	movlw	low STR_28
  4476   000FD8  6E03               	movwf	clcd_print@data^0,c
  4477   000FDA  0E2F               	movlw	high STR_28
  4478   000FDC  6E04               	movwf	(clcd_print@data+1)^0,c
  4479   000FDE  0EC3               	movlw	195
  4480   000FE0  6E05               	movwf	clcd_print@addr^0,c
  4481   000FE2  EC1C  F010         	call	_clcd_print	;wreg free
  4482   000FE6                     
  4483                           ;download_log.c: 36:     if (overflow == 1) {
  4484   000FE6  0450               	decf	_overflow^0,w,c
  4485   000FE8  A4D8               	btfss	status,2,c
  4486   000FEA  EFF9  F007         	goto	u2701
  4487   000FEE  EFFB  F007         	goto	u2700
  4488   000FF2                     u2701:
  4489   000FF2  EFFD  F007         	goto	l595
  4490   000FF6                     u2700:
  4491   000FF6                     
  4492                           ;download_log.c: 37:         var = 10;
  4493   000FF6  0E0A               	movlw	10
  4494   000FF8  6E4C               	movwf	_var^0,c
  4495   000FFA                     l595:
  4496                           
  4497                           ;download_log.c: 39:     if (overflow == 0) {
  4498   000FFA  5050               	movf	_overflow^0,w,c
  4499   000FFC  A4D8               	btfss	status,2,c
  4500   000FFE  EF03  F008         	goto	u2711
  4501   001002  EF05  F008         	goto	u2710
  4502   001006                     u2711:
  4503   001006  EF07  F008         	goto	l3545
  4504   00100A                     u2710:
  4505   00100A                     
  4506                           ;download_log.c: 40:         var = lap;
  4507   00100A  C051  F04C         	movff	_lap,_var
  4508   00100E                     l3545:
  4509                           
  4510                           ;download_log.c: 43:     puts("# TIME   EV   SP \n\r");
  4511   00100E  0E84               	movlw	low STR_29
  4512   001010  6E02               	movwf	puts@s^0,c
  4513   001012  0E2E               	movlw	high STR_29
  4514   001014  6E03               	movwf	(puts@s+1)^0,c
  4515   001016  EC69  F011         	call	_puts	;wreg free
  4516   00101A                     
  4517                           ;download_log.c: 45:     for (last = 0; last < var; last++) {
  4518   00101A  0E00               	movlw	0
  4519   00101C  6E4B               	movwf	_last^0,c
  4520   00101E  EFC1  F008         	goto	l3585
  4521   001022                     l3549:
  4522                           
  4523                           ;download_log.c: 48:         for (int j = 0; j < 5; j++) {
  4524   001022  0E00               	movlw	0
  4525   001024  6E10               	movwf	(download_log@j+1)^0,c
  4526   001026  0E00               	movlw	0
  4527   001028  6E0F               	movwf	download_log@j^0,c
  4528   00102A                     l3555:
  4529                           
  4530                           ;download_log.c: 49:             download_array[j] = read_external_eeprom((start + last)
      +                           % 10 * 10 + j);
  4531   00102A  500F               	movf	download_log@j^0,w,c
  4532   00102C  0F60               	addlw	low _download_array
  4533   00102E  6ED9               	movwf	fsr2l,c
  4534   001030  6ADA               	clrf	fsr2h,c
  4535   001032  C04B  F009         	movff	_last,___awmod@dividend
  4536   001036  6A0A               	clrf	(___awmod@dividend+1)^0,c
  4537   001038  0E00               	movlw	0
  4538   00103A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4539   00103C  0E0A               	movlw	10
  4540   00103E  6E0B               	movwf	___awmod@divisor^0,c
  4541   001040  EC69  F00D         	call	___awmod	;wreg free
  4542   001044  5009               	movf	?___awmod^0,w,c
  4543   001046  0D0A               	mullw	10
  4544   001048  50F3               	movf	243,w,c
  4545   00104A  240F               	addwf	download_log@j^0,w,c
  4546   00104C  EC84  F011         	call	_read_external_eeprom
  4547   001050  6EDF               	movwf	indf2,c
  4548   001052                     
  4549                           ;download_log.c: 50:         }
  4550   001052  4A0F               	infsnz	download_log@j^0,f,c
  4551   001054  2A10               	incf	(download_log@j+1)^0,f,c
  4552   001056  BE10               	btfsc	(download_log@j+1)^0,7,c
  4553   001058  EF37  F008         	goto	u2721
  4554   00105C  5010               	movf	(download_log@j+1)^0,w,c
  4555   00105E  E109               	bnz	u2720
  4556   001060  0E05               	movlw	5
  4557   001062  5C0F               	subwf	download_log@j^0,w,c
  4558   001064  A0D8               	btfss	status,0,c
  4559   001066  EF37  F008         	goto	u2721
  4560   00106A  EF39  F008         	goto	u2720
  4561   00106E                     u2721:
  4562   00106E  EF15  F008         	goto	l3555
  4563   001072                     u2720:
  4564   001072                     
  4565                           ;download_log.c: 52:         putch(download_array[0]/10+48);
  4566   001072  C060  F001         	movff	_download_array,___awdiv@dividend
  4567   001076  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4568   001078  0E00               	movlw	0
  4569   00107A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4570   00107C  0E0A               	movlw	10
  4571   00107E  6E03               	movwf	___awdiv@divisor^0,c
  4572   001080  EC07  F00D         	call	___awdiv	;wreg free
  4573   001084  5001               	movf	?___awdiv^0,w,c
  4574   001086  0F30               	addlw	48
  4575   001088  ECF5  F011         	call	_putch
  4576                           
  4577                           ;download_log.c: 53:         putch(download_array[0]%10+48);
  4578   00108C  C060  F009         	movff	_download_array,___awmod@dividend
  4579   001090  6A0A               	clrf	(___awmod@dividend+1)^0,c
  4580   001092  0E00               	movlw	0
  4581   001094  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4582   001096  0E0A               	movlw	10
  4583   001098  6E0B               	movwf	___awmod@divisor^0,c
  4584   00109A  EC69  F00D         	call	___awmod	;wreg free
  4585   00109E  5009               	movf	?___awmod^0,w,c
  4586   0010A0  0F30               	addlw	48
  4587   0010A2  ECF5  F011         	call	_putch
  4588   0010A6                     
  4589                           ;download_log.c: 54:         putch(':');
  4590   0010A6  0E3A               	movlw	58
  4591   0010A8  ECF5  F011         	call	_putch
  4592   0010AC                     
  4593                           ;download_log.c: 55:         putch(download_array[1]/10+48);
  4594   0010AC  C061  F001         	movff	_download_array+1,___awdiv@dividend
  4595   0010B0  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4596   0010B2  0E00               	movlw	0
  4597   0010B4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4598   0010B6  0E0A               	movlw	10
  4599   0010B8  6E03               	movwf	___awdiv@divisor^0,c
  4600   0010BA  EC07  F00D         	call	___awdiv	;wreg free
  4601   0010BE  5001               	movf	?___awdiv^0,w,c
  4602   0010C0  0F30               	addlw	48
  4603   0010C2  ECF5  F011         	call	_putch
  4604   0010C6                     
  4605                           ;download_log.c: 56:         putch(download_array[1]%10+48);
  4606   0010C6  C061  F009         	movff	_download_array+1,___awmod@dividend
  4607   0010CA  6A0A               	clrf	(___awmod@dividend+1)^0,c
  4608   0010CC  0E00               	movlw	0
  4609   0010CE  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4610   0010D0  0E0A               	movlw	10
  4611   0010D2  6E0B               	movwf	___awmod@divisor^0,c
  4612   0010D4  EC69  F00D         	call	___awmod	;wreg free
  4613   0010D8  5009               	movf	?___awmod^0,w,c
  4614   0010DA  0F30               	addlw	48
  4615   0010DC  ECF5  F011         	call	_putch
  4616   0010E0                     
  4617                           ;download_log.c: 57:         putch(':');
  4618   0010E0  0E3A               	movlw	58
  4619   0010E2  ECF5  F011         	call	_putch
  4620                           
  4621                           ;download_log.c: 58:         putch(download_array[2]/10+48);
  4622   0010E6  C062  F001         	movff	_download_array+2,___awdiv@dividend
  4623   0010EA  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4624   0010EC  0E00               	movlw	0
  4625   0010EE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4626   0010F0  0E0A               	movlw	10
  4627   0010F2  6E03               	movwf	___awdiv@divisor^0,c
  4628   0010F4  EC07  F00D         	call	___awdiv	;wreg free
  4629   0010F8  5001               	movf	?___awdiv^0,w,c
  4630   0010FA  0F30               	addlw	48
  4631   0010FC  ECF5  F011         	call	_putch
  4632                           
  4633                           ;download_log.c: 59:         putch(download_array[2]%10+48);
  4634   001100  C062  F009         	movff	_download_array+2,___awmod@dividend
  4635   001104  6A0A               	clrf	(___awmod@dividend+1)^0,c
  4636   001106  0E00               	movlw	0
  4637   001108  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4638   00110A  0E0A               	movlw	10
  4639   00110C  6E0B               	movwf	___awmod@divisor^0,c
  4640   00110E  EC69  F00D         	call	___awmod	;wreg free
  4641   001112  5009               	movf	?___awmod^0,w,c
  4642   001114  0F30               	addlw	48
  4643   001116  ECF5  F011         	call	_putch
  4644   00111A                     
  4645                           ;download_log.c: 60:         putch(' ');
  4646   00111A  0E20               	movlw	32
  4647   00111C  ECF5  F011         	call	_putch
  4648   001120                     
  4649                           ;download_log.c: 63:         puts(events[download_array[3]]);
  4650   001120  0100               	movlb	0	; () banked
  4651   001122  5163               	movf	(_download_array+3)& (0+255),w,b
  4652   001124  0D02               	mullw	2
  4653   001126  50F3               	movf	243,w,c
  4654   001128  0FA0               	addlw	low _events
  4655   00112A  6ED9               	movwf	fsr2l,c
  4656   00112C  6ADA               	clrf	fsr2h,c
  4657   00112E  CFDE F002          	movff	postinc2,puts@s
  4658   001132  CFDD F003          	movff	postdec2,puts@s+1
  4659   001136  EC69  F011         	call	_puts	;wreg free
  4660   00113A                     
  4661                           ;download_log.c: 64:         putch(' ');
  4662   00113A  0E20               	movlw	32
  4663   00113C  ECF5  F011         	call	_putch
  4664   001140                     
  4665                           ;download_log.c: 67:         putch(download_array[4]/10+48);
  4666   001140  C064  F001         	movff	_download_array+4,___awdiv@dividend
  4667   001144  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4668   001146  0E00               	movlw	0
  4669   001148  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4670   00114A  0E0A               	movlw	10
  4671   00114C  6E03               	movwf	___awdiv@divisor^0,c
  4672   00114E  EC07  F00D         	call	___awdiv	;wreg free
  4673   001152  5001               	movf	?___awdiv^0,w,c
  4674   001154  0F30               	addlw	48
  4675   001156  ECF5  F011         	call	_putch
  4676   00115A                     
  4677                           ;download_log.c: 68:         putch(download_array[4]%10+48);
  4678   00115A  C064  F009         	movff	_download_array+4,___awmod@dividend
  4679   00115E  6A0A               	clrf	(___awmod@dividend+1)^0,c
  4680   001160  0E00               	movlw	0
  4681   001162  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4682   001164  0E0A               	movlw	10
  4683   001166  6E0B               	movwf	___awmod@divisor^0,c
  4684   001168  EC69  F00D         	call	___awmod	;wreg free
  4685   00116C  5009               	movf	?___awmod^0,w,c
  4686   00116E  0F30               	addlw	48
  4687   001170  ECF5  F011         	call	_putch
  4688   001174                     
  4689                           ;download_log.c: 70:         puts("\n\r");
  4690   001174  0E95               	movlw	low (STR_29+17)
  4691   001176  6E02               	movwf	puts@s^0,c
  4692   001178  0E2E               	movlw	high (STR_29+17)
  4693   00117A  6E03               	movwf	(puts@s+1)^0,c
  4694   00117C  EC69  F011         	call	_puts	;wreg free
  4695   001180                     
  4696                           ;download_log.c: 72:     }
  4697   001180  2A4B               	incf	_last^0,f,c
  4698   001182                     l3585:
  4699   001182  504C               	movf	_var^0,w,c
  4700   001184  5C4B               	subwf	_last^0,w,c
  4701   001186  A0D8               	btfss	status,0,c
  4702   001188  EFC8  F008         	goto	u2731
  4703   00118C  EFCA  F008         	goto	u2730
  4704   001190                     u2731:
  4705   001190  EF11  F008         	goto	l3549
  4706   001194                     u2730:
  4707   001194                     
  4708                           ;download_log.c: 77:     store[0]=(((time[0]-48)*10)+(time[1]-48));
  4709   001194  0100               	movlb	0	; () banked
  4710   001196  5183               	movf	_time& (0+255),w,b
  4711   001198  0D0A               	mullw	10
  4712   00119A  50F3               	movf	243,w,c
  4713   00119C  2584               	addwf	(_time+1)& (0+255),w,b
  4714   00119E  0FF0               	addlw	240
  4715   0011A0  6E39               	movwf	_store^0,c
  4716                           
  4717                           ;download_log.c: 78:     store[1]=(((time[3]-48)*10)+(time[4]-48));
  4718   0011A2  5186               	movf	(_time+3)& (0+255),w,b
  4719   0011A4  0D0A               	mullw	10
  4720   0011A6  50F3               	movf	243,w,c
  4721   0011A8  2587               	addwf	(_time+4)& (0+255),w,b
  4722   0011AA  0FF0               	addlw	240
  4723   0011AC  6E3A               	movwf	(_store+1)^0,c
  4724                           
  4725                           ;download_log.c: 79:     store[2]=(((time[6]-48)*10)+(time[7]-48));
  4726   0011AE  5189               	movf	(_time+6)& (0+255),w,b
  4727   0011B0  0D0A               	mullw	10
  4728   0011B2  50F3               	movf	243,w,c
  4729   0011B4  258A               	addwf	(_time+7)& (0+255),w,b
  4730   0011B6  0FF0               	addlw	240
  4731   0011B8  6E3B               	movwf	(_store+2)^0,c
  4732   0011BA                     
  4733                           ; BSR set to: 0
  4734                           ;download_log.c: 82:     store[3]=i;
  4735   0011BA  C056  F03C         	movff	_i,_store+3
  4736   0011BE                     
  4737                           ; BSR set to: 0
  4738                           ;download_log.c: 85:     store[4]=adc_reg_val;
  4739   0011BE  C042  F03D         	movff	_adc_reg_val,_store+4
  4740   0011C2                     
  4741                           ; BSR set to: 0
  4742                           ;download_log.c: 87:     for (char k = 0; k < 5; k++) {
  4743   0011C2  0E00               	movlw	0
  4744   0011C4  6E11               	movwf	download_log@k^0,c
  4745   0011C6                     l3599:
  4746                           
  4747                           ;download_log.c: 88:         write_external_eeprom((k), store[k]);
  4748   0011C6  5011               	movf	download_log@k^0,w,c
  4749   0011C8  0F39               	addlw	low _store
  4750   0011CA  6ED9               	movwf	fsr2l,c
  4751   0011CC  6ADA               	clrf	fsr2h,c
  4752   0011CE  50DF               	movf	indf2,w,c
  4753   0011D0  6E02               	movwf	write_external_eeprom@data^0,c
  4754   0011D2  5011               	movf	download_log@k^0,w,c
  4755   0011D4  EC2C  F011         	call	_write_external_eeprom
  4756   0011D8                     
  4757                           ;download_log.c: 89:     }
  4758   0011D8  2A11               	incf	download_log@k^0,f,c
  4759   0011DA  0E04               	movlw	4
  4760   0011DC  6411               	cpfsgt	download_log@k^0,c
  4761   0011DE  EFF3  F008         	goto	u2741
  4762   0011E2  EFF5  F008         	goto	u2740
  4763   0011E6                     u2741:
  4764   0011E6  EFE3  F008         	goto	l3599
  4765   0011EA                     u2740:
  4766   0011EA                     
  4767                           ;download_log.c: 93:     main_f = 2;
  4768   0011EA  0E02               	movlw	2
  4769   0011EC  6E59               	movwf	_main_f^0,c
  4770   0011EE  0012               	return		;funcret
  4771   0011F0                     __end_of_download_log:
  4772                           	callstack 0
  4773                           
  4774 ;; *************** function _read_external_eeprom *****************
  4775 ;; Defined at:
  4776 ;;		line 24 in file "external_eeprom.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  address         1    wreg     unsigned char 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  address         1    1[COMRAM] unsigned char 
  4781 ;;  data            1    2[COMRAM] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      unsigned char 
  4784 ;; Registers used:
  4785 ;;		wreg, status,2, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4791 ;;      Params:         0       0       0       0       0       0       0
  4792 ;;      Locals:         2       0       0       0       0       0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0
  4794 ;;      Totals:         2       0       0       0       0       0       0
  4795 ;;Total ram usage:        2 bytes
  4796 ;; Hardware stack levels used: 1
  4797 ;; Hardware stack levels required when called: 4
  4798 ;; This function calls:
  4799 ;;		_i2c_read
  4800 ;;		_i2c_rep_start
  4801 ;;		_i2c_start
  4802 ;;		_i2c_stop
  4803 ;;		_i2c_write
  4804 ;; This function is called by:
  4805 ;;		_init_config
  4806 ;;		_view_log
  4807 ;;		_download_log
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text19
  4812   002308                     __ptext19:
  4813                           	callstack 0
  4814   002308                     _read_external_eeprom:
  4815                           	callstack 25
  4816                           
  4817                           ;incstack = 0
  4818                           ;read_external_eeprom@address stored from wreg
  4819   002308  6E02               	movwf	read_external_eeprom@address^0,c
  4820   00230A                     
  4821                           ;external_eeprom.c: 24: unsigned char read_external_eeprom(unsigned char address);extern
      +                          al_eeprom.c: 25: {;external_eeprom.c: 26:  unsigned char data;;external_eeprom.c: 28:  i
      +                          2c_start();
  4822   00230A  EC45  F012         	call	_i2c_start	;wreg free
  4823   00230E                     
  4824                           ;external_eeprom.c: 29:  i2c_write(0xA0);
  4825   00230E  0EA0               	movlw	160
  4826   002310  EC33  F012         	call	_i2c_write
  4827   002314                     
  4828                           ;external_eeprom.c: 30:  i2c_write(address);
  4829   002314  5002               	movf	read_external_eeprom@address^0,w,c
  4830   002316  EC33  F012         	call	_i2c_write
  4831   00231A                     
  4832                           ;external_eeprom.c: 31:  i2c_rep_start();
  4833   00231A  EC39  F012         	call	_i2c_rep_start	;wreg free
  4834   00231E                     
  4835                           ;external_eeprom.c: 32:  i2c_write(0xA1);
  4836   00231E  0EA1               	movlw	161
  4837   002320  EC33  F012         	call	_i2c_write
  4838                           
  4839                           ;external_eeprom.c: 33:  data = i2c_read();
  4840   002324  EC2D  F012         	call	_i2c_read	;wreg free
  4841   002328  6E03               	movwf	read_external_eeprom@data^0,c
  4842   00232A                     
  4843                           ;external_eeprom.c: 34:  i2c_stop();
  4844   00232A  EC41  F012         	call	_i2c_stop	;wreg free
  4845                           
  4846                           ;external_eeprom.c: 36:  return data;
  4847   00232E  5003               	movf	read_external_eeprom@data^0,w,c
  4848   002330  0012               	return		;funcret
  4849   002332                     __end_of_read_external_eeprom:
  4850                           	callstack 0
  4851                           
  4852 ;; *************** function _puts *****************
  4853 ;; Defined at:
  4854 ;;		line 40 in file "uart.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  s               2    1[COMRAM] PTR const unsigned char 
  4857 ;;		 -> STR_30(3), STR_29(20), STR_12(3), STR_11(3), 
  4858 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(3), 
  4859 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(3), 
  4860 ;;		 -> STR_2(3), STR_1(3), 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;		None
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  2    1[COMRAM] int 
  4865 ;; Registers used:
  4866 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4872 ;;      Params:         2       0       0       0       0       0       0
  4873 ;;      Locals:         0       0       0       0       0       0       0
  4874 ;;      Temps:          0       0       0       0       0       0       0
  4875 ;;      Totals:         2       0       0       0       0       0       0
  4876 ;;Total ram usage:        2 bytes
  4877 ;; Hardware stack levels used: 1
  4878 ;; Hardware stack levels required when called: 2
  4879 ;; This function calls:
  4880 ;;		_putch
  4881 ;; This function is called by:
  4882 ;;		_download_log
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text20
  4887   0022D2                     __ptext20:
  4888                           	callstack 0
  4889   0022D2                     _puts:
  4890                           	callstack 27
  4891   0022D2                     
  4892                           ;uart.c: 40: int puts(const char *s);uart.c: 41: {;uart.c: 42:  while(*s)
  4893   0022D2  EF75  F011         	goto	l3099
  4894   0022D6                     l3095:
  4895                           
  4896                           ;uart.c: 43:  {;uart.c: 44:   putch(*s++);
  4897   0022D6  C002  FFF6         	movff	puts@s,tblptrl
  4898   0022DA  C003  FFF7         	movff	puts@s+1,tblptrh
  4899   0022DE                     	if	0	;tblptru may be non-zero
  4900   0022DE                     	endif
  4901   0022DE                     	if	0	;tblptru may be non-zero
  4902   0022DE                     	endif
  4903   0022DE  0008               	tblrd		*
  4904   0022E0  50F5               	movf	tablat,w,c
  4905   0022E2  ECF5  F011         	call	_putch
  4906   0022E6  4A02               	infsnz	puts@s^0,f,c
  4907   0022E8  2A03               	incf	(puts@s+1)^0,f,c
  4908   0022EA                     l3099:
  4909                           
  4910                           ;uart.c: 42:  while(*s)
  4911   0022EA  C002  FFF6         	movff	puts@s,tblptrl
  4912   0022EE  C003  FFF7         	movff	puts@s+1,tblptrh
  4913   0022F2                     	if	0	;tblptru may be non-zero
  4914   0022F2                     	endif
  4915   0022F2                     	if	0	;tblptru may be non-zero
  4916   0022F2                     	endif
  4917   0022F2  0008               	tblrd		*
  4918   0022F4  50F5               	movf	tablat,w,c
  4919   0022F6  0900               	iorlw	0
  4920   0022F8  A4D8               	btfss	status,2,c
  4921   0022FA  EF81  F011         	goto	u2041
  4922   0022FE  EF83  F011         	goto	u2040
  4923   002302                     u2041:
  4924   002302  EF6B  F011         	goto	l3095
  4925   002306                     u2040:
  4926   002306  0012               	return		;funcret
  4927   002308                     __end_of_puts:
  4928                           	callstack 0
  4929                           
  4930 ;; *************** function _putch *****************
  4931 ;; Defined at:
  4932 ;;		line 28 in file "uart.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  byte            1    wreg     unsigned char 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  byte            1    0[COMRAM] unsigned char 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  1    wreg      void 
  4939 ;; Registers used:
  4940 ;;		wreg
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4946 ;;      Params:         0       0       0       0       0       0       0
  4947 ;;      Locals:         1       0       0       0       0       0       0
  4948 ;;      Temps:          0       0       0       0       0       0       0
  4949 ;;      Totals:         1       0       0       0       0       0       0
  4950 ;;Total ram usage:        1 bytes
  4951 ;; Hardware stack levels used: 1
  4952 ;; Hardware stack levels required when called: 1
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_download_log
  4957 ;;		_puts
  4958 ;;		_getche
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text21
  4963   0023EA                     __ptext21:
  4964                           	callstack 0
  4965   0023EA                     _putch:
  4966                           	callstack 27
  4967                           
  4968                           ;incstack = 0
  4969                           ;putch@byte stored from wreg
  4970   0023EA  6E01               	movwf	putch@byte^0,c
  4971   0023EC                     l632:
  4972                           
  4973                           ;uart.c: 33:  while(!TXIF)
  4974   0023EC  A89E               	btfss	3998,4,c	;volatile
  4975   0023EE  EFFB  F011         	goto	u1981
  4976   0023F2  EFFD  F011         	goto	u1980
  4977   0023F6                     u1981:
  4978   0023F6  EFF6  F011         	goto	l632
  4979   0023FA                     u1980:
  4980   0023FA                     
  4981                           ;uart.c: 37:  TXREG = byte;
  4982   0023FA  C001  FFAD         	movff	putch@byte,4013	;volatile
  4983   0023FE  0012               	return		;funcret
  4984   002400                     __end_of_putch:
  4985                           	callstack 0
  4986                           
  4987 ;; *************** function ___awmod *****************
  4988 ;; Defined at:
  4989 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  dividend        2    8[COMRAM] int 
  4992 ;;  divisor         2   10[COMRAM] int 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;  sign            1   13[COMRAM] unsigned char 
  4995 ;;  counter         1   12[COMRAM] unsigned char 
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  2    8[COMRAM] int 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2, status,0
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5005 ;;      Params:         4       0       0       0       0       0       0
  5006 ;;      Locals:         2       0       0       0       0       0       0
  5007 ;;      Temps:          0       0       0       0       0       0       0
  5008 ;;      Totals:         6       0       0       0       0       0       0
  5009 ;;Total ram usage:        6 bytes
  5010 ;; Hardware stack levels used: 1
  5011 ;; Hardware stack levels required when called: 1
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_password
  5016 ;;		_view_log
  5017 ;;		_download_log
  5018 ;;		_settime
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text22
  5023   001AD2                     __ptext22:
  5024                           	callstack 0
  5025   001AD2                     ___awmod:
  5026                           	callstack 28
  5027   001AD2  0E00               	movlw	0
  5028   001AD4  6E0E               	movwf	___awmod@sign^0,c
  5029   001AD6  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  5030   001AD8  EF72  F00D         	goto	u2130
  5031   001ADC  EF70  F00D         	goto	u2131
  5032   001AE0                     u2131:
  5033   001AE0  EF78  F00D         	goto	l3163
  5034   001AE4                     u2130:
  5035   001AE4  6C09               	negf	___awmod@dividend^0,c
  5036   001AE6  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  5037   001AE8  B0D8               	btfsc	status,0,c
  5038   001AEA  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  5039   001AEC  0E01               	movlw	1
  5040   001AEE  6E0E               	movwf	___awmod@sign^0,c
  5041   001AF0                     l3163:
  5042   001AF0  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  5043   001AF2  EF7F  F00D         	goto	u2140
  5044   001AF6  EF7D  F00D         	goto	u2141
  5045   001AFA                     u2141:
  5046   001AFA  EF83  F00D         	goto	l3167
  5047   001AFE                     u2140:
  5048   001AFE  6C0B               	negf	___awmod@divisor^0,c
  5049   001B00  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  5050   001B02  B0D8               	btfsc	status,0,c
  5051   001B04  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  5052   001B06                     l3167:
  5053   001B06  500B               	movf	___awmod@divisor^0,w,c
  5054   001B08  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  5055   001B0A  B4D8               	btfsc	status,2,c
  5056   001B0C  EF8A  F00D         	goto	u2151
  5057   001B10  EF8C  F00D         	goto	u2150
  5058   001B14                     u2151:
  5059   001B14  EFB0  F00D         	goto	l3183
  5060   001B18                     u2150:
  5061   001B18  0E01               	movlw	1
  5062   001B1A  6E0D               	movwf	___awmod@counter^0,c
  5063   001B1C  EF94  F00D         	goto	l3173
  5064   001B20                     l3171:
  5065   001B20  90D8               	bcf	status,0,c
  5066   001B22  360B               	rlcf	___awmod@divisor^0,f,c
  5067   001B24  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  5068   001B26  2A0D               	incf	___awmod@counter^0,f,c
  5069   001B28                     l3173:
  5070   001B28  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  5071   001B2A  EF99  F00D         	goto	u2161
  5072   001B2E  EF9B  F00D         	goto	u2160
  5073   001B32                     u2161:
  5074   001B32  EF90  F00D         	goto	l3171
  5075   001B36                     u2160:
  5076   001B36                     l3175:
  5077   001B36  500B               	movf	___awmod@divisor^0,w,c
  5078   001B38  5C09               	subwf	___awmod@dividend^0,w,c
  5079   001B3A  500C               	movf	(___awmod@divisor+1)^0,w,c
  5080   001B3C  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  5081   001B3E  A0D8               	btfss	status,0,c
  5082   001B40  EFA4  F00D         	goto	u2171
  5083   001B44  EFA6  F00D         	goto	u2170
  5084   001B48                     u2171:
  5085   001B48  EFAA  F00D         	goto	l3179
  5086   001B4C                     u2170:
  5087   001B4C  500B               	movf	___awmod@divisor^0,w,c
  5088   001B4E  5E09               	subwf	___awmod@dividend^0,f,c
  5089   001B50  500C               	movf	(___awmod@divisor+1)^0,w,c
  5090   001B52  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  5091   001B54                     l3179:
  5092   001B54  90D8               	bcf	status,0,c
  5093   001B56  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  5094   001B58  320B               	rrcf	___awmod@divisor^0,f,c
  5095   001B5A  2E0D               	decfsz	___awmod@counter^0,f,c
  5096   001B5C  EF9B  F00D         	goto	l3175
  5097   001B60                     l3183:
  5098   001B60  500E               	movf	___awmod@sign^0,w,c
  5099   001B62  B4D8               	btfsc	status,2,c
  5100   001B64  EFB6  F00D         	goto	u2181
  5101   001B68  EFB8  F00D         	goto	u2180
  5102   001B6C                     u2181:
  5103   001B6C  EFBC  F00D         	goto	l3187
  5104   001B70                     u2180:
  5105   001B70  6C09               	negf	___awmod@dividend^0,c
  5106   001B72  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  5107   001B74  B0D8               	btfsc	status,0,c
  5108   001B76  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  5109   001B78                     l3187:
  5110   001B78  C009  F009         	movff	___awmod@dividend,?___awmod
  5111   001B7C  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  5112   001B80  0012               	return		;funcret
  5113   001B82                     __end_of___awmod:
  5114                           	callstack 0
  5115                           
  5116 ;; *************** function ___awdiv *****************
  5117 ;; Defined at:
  5118 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  dividend        2    0[COMRAM] int 
  5121 ;;  divisor         2    2[COMRAM] int 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  quotient        2    6[COMRAM] int 
  5124 ;;  sign            1    5[COMRAM] unsigned char 
  5125 ;;  counter         1    4[COMRAM] unsigned char 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  2    0[COMRAM] int 
  5128 ;; Registers used:
  5129 ;;		wreg, status,2, status,0
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5135 ;;      Params:         4       0       0       0       0       0       0
  5136 ;;      Locals:         4       0       0       0       0       0       0
  5137 ;;      Temps:          0       0       0       0       0       0       0
  5138 ;;      Totals:         8       0       0       0       0       0       0
  5139 ;;Total ram usage:        8 bytes
  5140 ;; Hardware stack levels used: 1
  5141 ;; Hardware stack levels required when called: 1
  5142 ;; This function calls:
  5143 ;;		Nothing
  5144 ;; This function is called by:
  5145 ;;		_password
  5146 ;;		_view_log
  5147 ;;		_download_log
  5148 ;;		_settime
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text23
  5153   001A0E                     __ptext23:
  5154                           	callstack 0
  5155   001A0E                     ___awdiv:
  5156                           	callstack 28
  5157   001A0E  0E00               	movlw	0
  5158   001A10  6E06               	movwf	___awdiv@sign^0,c
  5159   001A12  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5160   001A14  EF10  F00D         	goto	u2070
  5161   001A18  EF0E  F00D         	goto	u2071
  5162   001A1C                     u2071:
  5163   001A1C  EF16  F00D         	goto	l3119
  5164   001A20                     u2070:
  5165   001A20  6C03               	negf	___awdiv@divisor^0,c
  5166   001A22  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5167   001A24  B0D8               	btfsc	status,0,c
  5168   001A26  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5169   001A28  0E01               	movlw	1
  5170   001A2A  6E06               	movwf	___awdiv@sign^0,c
  5171   001A2C                     l3119:
  5172   001A2C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5173   001A2E  EF1D  F00D         	goto	u2080
  5174   001A32  EF1B  F00D         	goto	u2081
  5175   001A36                     u2081:
  5176   001A36  EF23  F00D         	goto	l3125
  5177   001A3A                     u2080:
  5178   001A3A  6C01               	negf	___awdiv@dividend^0,c
  5179   001A3C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5180   001A3E  B0D8               	btfsc	status,0,c
  5181   001A40  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5182   001A42  0E01               	movlw	1
  5183   001A44  1A06               	xorwf	___awdiv@sign^0,f,c
  5184   001A46                     l3125:
  5185   001A46  0E00               	movlw	0
  5186   001A48  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5187   001A4A  0E00               	movlw	0
  5188   001A4C  6E07               	movwf	___awdiv@quotient^0,c
  5189   001A4E  5003               	movf	___awdiv@divisor^0,w,c
  5190   001A50  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5191   001A52  B4D8               	btfsc	status,2,c
  5192   001A54  EF2E  F00D         	goto	u2091
  5193   001A58  EF30  F00D         	goto	u2090
  5194   001A5C                     u2091:
  5195   001A5C  EF58  F00D         	goto	l3147
  5196   001A60                     u2090:
  5197   001A60  0E01               	movlw	1
  5198   001A62  6E05               	movwf	___awdiv@counter^0,c
  5199   001A64  EF38  F00D         	goto	l3133
  5200   001A68                     l3131:
  5201   001A68  90D8               	bcf	status,0,c
  5202   001A6A  3603               	rlcf	___awdiv@divisor^0,f,c
  5203   001A6C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5204   001A6E  2A05               	incf	___awdiv@counter^0,f,c
  5205   001A70                     l3133:
  5206   001A70  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5207   001A72  EF3D  F00D         	goto	u2101
  5208   001A76  EF3F  F00D         	goto	u2100
  5209   001A7A                     u2101:
  5210   001A7A  EF34  F00D         	goto	l3131
  5211   001A7E                     u2100:
  5212   001A7E                     l3135:
  5213   001A7E  90D8               	bcf	status,0,c
  5214   001A80  3607               	rlcf	___awdiv@quotient^0,f,c
  5215   001A82  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5216   001A84  5003               	movf	___awdiv@divisor^0,w,c
  5217   001A86  5C01               	subwf	___awdiv@dividend^0,w,c
  5218   001A88  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5219   001A8A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5220   001A8C  A0D8               	btfss	status,0,c
  5221   001A8E  EF4B  F00D         	goto	u2111
  5222   001A92  EF4D  F00D         	goto	u2110
  5223   001A96                     u2111:
  5224   001A96  EF52  F00D         	goto	l3143
  5225   001A9A                     u2110:
  5226   001A9A  5003               	movf	___awdiv@divisor^0,w,c
  5227   001A9C  5E01               	subwf	___awdiv@dividend^0,f,c
  5228   001A9E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5229   001AA0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5230   001AA2  8007               	bsf	___awdiv@quotient^0,0,c
  5231   001AA4                     l3143:
  5232   001AA4  90D8               	bcf	status,0,c
  5233   001AA6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5234   001AA8  3203               	rrcf	___awdiv@divisor^0,f,c
  5235   001AAA  2E05               	decfsz	___awdiv@counter^0,f,c
  5236   001AAC  EF3F  F00D         	goto	l3135
  5237   001AB0                     l3147:
  5238   001AB0  5006               	movf	___awdiv@sign^0,w,c
  5239   001AB2  B4D8               	btfsc	status,2,c
  5240   001AB4  EF5E  F00D         	goto	u2121
  5241   001AB8  EF60  F00D         	goto	u2120
  5242   001ABC                     u2121:
  5243   001ABC  EF64  F00D         	goto	l3151
  5244   001AC0                     u2120:
  5245   001AC0  6C07               	negf	___awdiv@quotient^0,c
  5246   001AC2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5247   001AC4  B0D8               	btfsc	status,0,c
  5248   001AC6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5249   001AC8                     l3151:
  5250   001AC8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5251   001ACC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5252   001AD0  0012               	return		;funcret
  5253   001AD2                     __end_of___awdiv:
  5254                           	callstack 0
  5255                           
  5256 ;; *************** function _dashboard *****************
  5257 ;; Defined at:
  5258 ;;		line 51 in file "dashboard.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;		None
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;		None
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  1    wreg      void 
  5265 ;; Registers used:
  5266 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5272 ;;      Params:         0       0       0       0       0       0       0
  5273 ;;      Locals:         0       0       0       0       0       0       0
  5274 ;;      Temps:          0       0       0       0       0       0       0
  5275 ;;      Totals:         0       0       0       0       0       0       0
  5276 ;;Total ram usage:        0 bytes
  5277 ;; Hardware stack levels used: 1
  5278 ;; Hardware stack levels required when called: 6
  5279 ;; This function calls:
  5280 ;;		___lwdiv
  5281 ;;		___lwmod
  5282 ;;		_clcd_print
  5283 ;;		_clcd_putch
  5284 ;;		_display_time
  5285 ;;		_get_time
  5286 ;;		_store_event
  5287 ;; This function is called by:
  5288 ;;		_main
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text24
  5293   0016E4                     __ptext24:
  5294                           	callstack 0
  5295   0016E4                     _dashboard:
  5296                           	callstack 24
  5297   0016E4                     
  5298                           ;dashboard.c: 53:     clcd_print("  TIME    EV  SP", (0x80 + (0)));
  5299   0016E4  0E7D               	movlw	low STR_13
  5300   0016E6  6E03               	movwf	clcd_print@data^0,c
  5301   0016E8  0E2F               	movlw	high STR_13
  5302   0016EA  6E04               	movwf	(clcd_print@data+1)^0,c
  5303   0016EC  0E80               	movlw	128
  5304   0016EE  6E05               	movwf	clcd_print@addr^0,c
  5305   0016F0  EC1C  F010         	call	_clcd_print	;wreg free
  5306   0016F4                     
  5307                           ;dashboard.c: 59:     clcd_print(events[i], (0xC0 + (10)));
  5308   0016F4  5056               	movf	_i^0,w,c
  5309   0016F6  0D02               	mullw	2
  5310   0016F8  50F3               	movf	243,w,c
  5311   0016FA  0FA0               	addlw	low _events
  5312   0016FC  6ED9               	movwf	fsr2l,c
  5313   0016FE  6ADA               	clrf	fsr2h,c
  5314   001700  CFDE F003          	movff	postinc2,clcd_print@data
  5315   001704  CFDD F004          	movff	postdec2,clcd_print@data+1
  5316   001708  0ECA               	movlw	202
  5317   00170A  6E05               	movwf	clcd_print@addr^0,c
  5318   00170C  EC1C  F010         	call	_clcd_print	;wreg free
  5319   001710                     
  5320                           ;dashboard.c: 62:     if (key == 2 && i < 6) {
  5321   001710  0E02               	movlw	2
  5322   001712  185B               	xorwf	_key^0,w,c
  5323   001714  A4D8               	btfss	status,2,c
  5324   001716  EF8F  F00B         	goto	u2271
  5325   00171A  EF91  F00B         	goto	u2270
  5326   00171E                     u2271:
  5327   00171E  EF9C  F00B         	goto	l3275
  5328   001722                     u2270:
  5329   001722  0E06               	movlw	6
  5330   001724  6056               	cpfslt	_i^0,c
  5331   001726  EF97  F00B         	goto	u2281
  5332   00172A  EF99  F00B         	goto	u2280
  5333   00172E                     u2281:
  5334   00172E  EF9C  F00B         	goto	l3275
  5335   001732                     u2280:
  5336   001732                     
  5337                           ;dashboard.c: 63:             i++;
  5338   001732  2A56               	incf	_i^0,f,c
  5339   001734                     
  5340                           ;dashboard.c: 64:             store_event();
  5341   001734  EC6B  F00F         	call	_store_event	;wreg free
  5342   001738                     l3275:
  5343                           
  5344                           ;dashboard.c: 68:     if (key == 3 && i != 7) {
  5345   001738  0E03               	movlw	3
  5346   00173A  185B               	xorwf	_key^0,w,c
  5347   00173C  A4D8               	btfss	status,2,c
  5348   00173E  EFA3  F00B         	goto	u2291
  5349   001742  EFA5  F00B         	goto	u2290
  5350   001746                     u2291:
  5351   001746  EFB9  F00B         	goto	l3285
  5352   00174A                     u2290:
  5353   00174A  0E07               	movlw	7
  5354   00174C  1856               	xorwf	_i^0,w,c
  5355   00174E  B4D8               	btfsc	status,2,c
  5356   001750  EFAC  F00B         	goto	u2301
  5357   001754  EFAE  F00B         	goto	u2300
  5358   001758                     u2301:
  5359   001758  EFB9  F00B         	goto	l3285
  5360   00175C                     u2300:
  5361   00175C                     
  5362                           ;dashboard.c: 69:         if (i > 1) {
  5363   00175C  0E01               	movlw	1
  5364   00175E  6456               	cpfsgt	_i^0,c
  5365   001760  EFB4  F00B         	goto	u2311
  5366   001764  EFB6  F00B         	goto	u2310
  5367   001768                     u2311:
  5368   001768  EFB9  F00B         	goto	l3285
  5369   00176C                     u2310:
  5370   00176C                     
  5371                           ;dashboard.c: 70:             i--;
  5372   00176C  0656               	decf	_i^0,f,c
  5373   00176E                     
  5374                           ;dashboard.c: 71:             store_event();
  5375   00176E  EC6B  F00F         	call	_store_event	;wreg free
  5376   001772                     l3285:
  5377                           
  5378                           ;dashboard.c: 75:     if (key == 1 ) {
  5379   001772  045B               	decf	_key^0,w,c
  5380   001774  A4D8               	btfss	status,2,c
  5381   001776  EFBF  F00B         	goto	u2321
  5382   00177A  EFC1  F00B         	goto	u2320
  5383   00177E                     u2321:
  5384   00177E  EFC5  F00B         	goto	l3291
  5385   001782                     u2320:
  5386   001782                     
  5387                           ;dashboard.c: 76:         i = 7;
  5388   001782  0E07               	movlw	7
  5389   001784  6E56               	movwf	_i^0,c
  5390   001786                     
  5391                           ;dashboard.c: 77:         store_event();
  5392   001786  EC6B  F00F         	call	_store_event	;wreg free
  5393   00178A                     l3291:
  5394                           
  5395                           ;dashboard.c: 80:     if (i == 7 && key == 2) {
  5396   00178A  0E07               	movlw	7
  5397   00178C  1856               	xorwf	_i^0,w,c
  5398   00178E  A4D8               	btfss	status,2,c
  5399   001790  EFCC  F00B         	goto	u2331
  5400   001794  EFCE  F00B         	goto	u2330
  5401   001798                     u2331:
  5402   001798  EFDB  F00B         	goto	l3299
  5403   00179C                     u2330:
  5404   00179C  0E02               	movlw	2
  5405   00179E  185B               	xorwf	_key^0,w,c
  5406   0017A0  A4D8               	btfss	status,2,c
  5407   0017A2  EFD5  F00B         	goto	u2341
  5408   0017A6  EFD7  F00B         	goto	u2340
  5409   0017AA                     u2341:
  5410   0017AA  EFDB  F00B         	goto	l3299
  5411   0017AE                     u2340:
  5412   0017AE                     
  5413                           ;dashboard.c: 81:         i = 2;
  5414   0017AE  0E02               	movlw	2
  5415   0017B0  6E56               	movwf	_i^0,c
  5416   0017B2                     
  5417                           ;dashboard.c: 82:         store_event();
  5418   0017B2  EC6B  F00F         	call	_store_event	;wreg free
  5419   0017B6                     l3299:
  5420                           
  5421                           ;dashboard.c: 87:         clcd_putch(((adc_reg_val / 10) + 48), (0xC0 + (14)));
  5422   0017B6  0ECE               	movlw	206
  5423   0017B8  6E0F               	movwf	clcd_putch@addr^0,c
  5424   0017BA  C042  F001         	movff	_adc_reg_val,___lwdiv@dividend
  5425   0017BE  C043  F002         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  5426   0017C2  0E00               	movlw	0
  5427   0017C4  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  5428   0017C6  0E0A               	movlw	10
  5429   0017C8  6E03               	movwf	___lwdiv@divisor^0,c
  5430   0017CA  ECE2  F00F         	call	___lwdiv	;wreg free
  5431   0017CE  5001               	movf	?___lwdiv^0,w,c
  5432   0017D0  0F30               	addlw	48
  5433   0017D2  ECDE  F011         	call	_clcd_putch
  5434   0017D6                     
  5435                           ;dashboard.c: 88:         clcd_putch(((adc_reg_val % 10) + 48), (0xC0 + (15)));
  5436   0017D6  0ECF               	movlw	207
  5437   0017D8  6E0F               	movwf	clcd_putch@addr^0,c
  5438   0017DA  C042  F001         	movff	_adc_reg_val,___lwmod@dividend
  5439   0017DE  C043  F002         	movff	_adc_reg_val+1,___lwmod@dividend+1
  5440   0017E2  0E00               	movlw	0
  5441   0017E4  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5442   0017E6  0E0A               	movlw	10
  5443   0017E8  6E03               	movwf	___lwmod@divisor^0,c
  5444   0017EA  EC84  F010         	call	___lwmod	;wreg free
  5445   0017EE  5001               	movf	?___lwmod^0,w,c
  5446   0017F0  0F30               	addlw	48
  5447   0017F2  ECDE  F011         	call	_clcd_putch
  5448   0017F6                     
  5449                           ;dashboard.c: 92:     get_time();
  5450   0017F6  ECA4  F00E         	call	_get_time	;wreg free
  5451   0017FA                     
  5452                           ;dashboard.c: 93:     display_time();
  5453   0017FA  EC25  F012         	call	_display_time	;wreg free
  5454   0017FE  0012               	return		;funcret
  5455   001800                     __end_of_dashboard:
  5456                           	callstack 0
  5457                           
  5458 ;; *************** function _store_event *****************
  5459 ;; Defined at:
  5460 ;;		line 22 in file "store_event.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;		None
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  k               1    5[COMRAM] unsigned char 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  1    wreg      void 
  5467 ;; Registers used:
  5468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5474 ;;      Params:         0       0       0       0       0       0       0
  5475 ;;      Locals:         1       0       0       0       0       0       0
  5476 ;;      Temps:          0       0       0       0       0       0       0
  5477 ;;      Totals:         1       0       0       0       0       0       0
  5478 ;;Total ram usage:        1 bytes
  5479 ;; Hardware stack levels used: 1
  5480 ;; Hardware stack levels required when called: 4
  5481 ;; This function calls:
  5482 ;;		_write_external_eeprom
  5483 ;; This function is called by:
  5484 ;;		_dashboard
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           	psect	text25
  5489   001ED6                     __ptext25:
  5490                           	callstack 0
  5491   001ED6                     _store_event:
  5492                           	callstack 25
  5493   001ED6                     
  5494                           ;store_event.c: 25:     store[0]=(((time[0]-48)*10)+(time[1]-48));
  5495   001ED6  0100               	movlb	0	; () banked
  5496   001ED8  5183               	movf	_time& (0+255),w,b
  5497   001EDA  0D0A               	mullw	10
  5498   001EDC  50F3               	movf	243,w,c
  5499   001EDE  2584               	addwf	(_time+1)& (0+255),w,b
  5500   001EE0  0FF0               	addlw	240
  5501   001EE2  6E39               	movwf	_store^0,c
  5502                           
  5503                           ;store_event.c: 26:     store[1]=(((time[3]-48)*10)+(time[4]-48));
  5504   001EE4  5186               	movf	(_time+3)& (0+255),w,b
  5505   001EE6  0D0A               	mullw	10
  5506   001EE8  50F3               	movf	243,w,c
  5507   001EEA  2587               	addwf	(_time+4)& (0+255),w,b
  5508   001EEC  0FF0               	addlw	240
  5509   001EEE  6E3A               	movwf	(_store+1)^0,c
  5510                           
  5511                           ;store_event.c: 27:     store[2]=(((time[6]-48)*10)+(time[7]-48));
  5512   001EF0  5189               	movf	(_time+6)& (0+255),w,b
  5513   001EF2  0D0A               	mullw	10
  5514   001EF4  50F3               	movf	243,w,c
  5515   001EF6  258A               	addwf	(_time+7)& (0+255),w,b
  5516   001EF8  0FF0               	addlw	240
  5517   001EFA  6E3B               	movwf	(_store+2)^0,c
  5518   001EFC                     
  5519                           ; BSR set to: 0
  5520                           ;store_event.c: 30:     store[3]=i;
  5521   001EFC  C056  F03C         	movff	_i,_store+3
  5522   001F00                     
  5523                           ; BSR set to: 0
  5524                           ;store_event.c: 34:         store[4]=adc_reg_val;
  5525   001F00  C042  F03D         	movff	_adc_reg_val,_store+4
  5526   001F04                     
  5527                           ; BSR set to: 0
  5528                           ;store_event.c: 36:     for(char k=0; k<5; k++)
  5529   001F04  0E00               	movlw	0
  5530   001F06  6E06               	movwf	store_event@k^0,c
  5531   001F08                     l3073:
  5532                           
  5533                           ;store_event.c: 37:     {;store_event.c: 38:         write_external_eeprom( (lap*10+k),s
      +                          tore[k]);
  5534   001F08  5006               	movf	store_event@k^0,w,c
  5535   001F0A  0F39               	addlw	low _store
  5536   001F0C  6ED9               	movwf	fsr2l,c
  5537   001F0E  6ADA               	clrf	fsr2h,c
  5538   001F10  50DF               	movf	indf2,w,c
  5539   001F12  6E02               	movwf	write_external_eeprom@data^0,c
  5540   001F14  5051               	movf	_lap^0,w,c
  5541   001F16  0D0A               	mullw	10
  5542   001F18  50F3               	movf	243,w,c
  5543   001F1A  2406               	addwf	store_event@k^0,w,c
  5544   001F1C  EC2C  F011         	call	_write_external_eeprom
  5545   001F20                     
  5546                           ;store_event.c: 39:     }
  5547   001F20  2A06               	incf	store_event@k^0,f,c
  5548   001F22  0E04               	movlw	4
  5549   001F24  6406               	cpfsgt	store_event@k^0,c
  5550   001F26  EF97  F00F         	goto	u2001
  5551   001F2A  EF99  F00F         	goto	u2000
  5552   001F2E                     u2001:
  5553   001F2E  EF84  F00F         	goto	l3073
  5554   001F32                     u2000:
  5555   001F32                     
  5556                           ;store_event.c: 42:     if(lap==10)
  5557   001F32  0E0A               	movlw	10
  5558   001F34  1851               	xorwf	_lap^0,w,c
  5559   001F36  A4D8               	btfss	status,2,c
  5560   001F38  EFA0  F00F         	goto	u2011
  5561   001F3C  EFA2  F00F         	goto	u2010
  5562   001F40                     u2011:
  5563   001F40  EFA6  F00F         	goto	l501
  5564   001F44                     u2010:
  5565   001F44                     
  5566                           ;store_event.c: 43:     {;store_event.c: 44:         lap=0;
  5567   001F44  0E00               	movlw	0
  5568   001F46  6E51               	movwf	_lap^0,c
  5569                           
  5570                           ;store_event.c: 45:         overflow=1;
  5571   001F48  0E01               	movlw	1
  5572   001F4A  6E50               	movwf	_overflow^0,c
  5573   001F4C                     l501:
  5574   001F4C  0012               	return		;funcret
  5575   001F4E                     __end_of_store_event:
  5576                           	callstack 0
  5577                           
  5578 ;; *************** function _get_time *****************
  5579 ;; Defined at:
  5580 ;;		line 30 in file "dashboard.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;		None
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;		None
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  1    wreg      void 
  5587 ;; Registers used:
  5588 ;;		wreg, status,2, status,0, cstack
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5594 ;;      Params:         0       0       0       0       0       0       0
  5595 ;;      Locals:         0       0       0       0       0       0       0
  5596 ;;      Temps:          0       0       0       0       0       0       0
  5597 ;;      Totals:         0       0       0       0       0       0       0
  5598 ;;Total ram usage:        0 bytes
  5599 ;; Hardware stack levels used: 1
  5600 ;; Hardware stack levels required when called: 5
  5601 ;; This function calls:
  5602 ;;		_read_ds1307
  5603 ;; This function is called by:
  5604 ;;		_dashboard
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           	psect	text26
  5609   001D48                     __ptext26:
  5610                           	callstack 0
  5611   001D48                     _get_time:
  5612                           	callstack 24
  5613   001D48                     
  5614                           ;dashboard.c: 31:     clock_reg[0] = read_ds1307(0x02);
  5615   001D48  0E02               	movlw	2
  5616   001D4A  EC99  F011         	call	_read_ds1307
  5617   001D4E  0100               	movlb	0	; () banked
  5618   001D50  6F7A               	movwf	_clock_reg& (0+255),b
  5619                           
  5620                           ;dashboard.c: 32:     clock_reg[1] = read_ds1307(0x01);
  5621   001D52  0E01               	movlw	1
  5622   001D54  EC99  F011         	call	_read_ds1307
  5623   001D58  0100               	movlb	0	; () banked
  5624   001D5A  6F7B               	movwf	(_clock_reg+1)& (0+255),b
  5625                           
  5626                           ;dashboard.c: 33:     clock_reg[2] = read_ds1307(0x00);
  5627   001D5C  0E00               	movlw	0
  5628   001D5E  EC99  F011         	call	_read_ds1307
  5629   001D62  0100               	movlb	0	; () banked
  5630   001D64  6F7C               	movwf	(_clock_reg+2)& (0+255),b
  5631   001D66                     
  5632                           ; BSR set to: 0
  5633                           ;dashboard.c: 35:     if (clock_reg[0] & 0x40) {
  5634   001D66  AD7A               	btfss	_clock_reg& (0+255),6,b
  5635   001D68  EFB8  F00E         	goto	u1991
  5636   001D6C  EFBA  F00E         	goto	u1990
  5637   001D70                     u1991:
  5638   001D70  EFC5  F00E         	goto	l3049
  5639   001D74                     u1990:
  5640   001D74                     
  5641                           ; BSR set to: 0
  5642                           ;dashboard.c: 36:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  5643   001D74  397A               	swapf	_clock_reg& (0+255),w,b
  5644   001D76  0B0F               	andlw	15
  5645   001D78  0B01               	andlw	1
  5646   001D7A  0F30               	addlw	48
  5647   001D7C  6F83               	movwf	_time& (0+255),b
  5648                           
  5649                           ;dashboard.c: 37:         time[1] = '0' + (clock_reg[0] & 0x0F);
  5650   001D7E  517A               	movf	_clock_reg& (0+255),w,b
  5651   001D80  0B0F               	andlw	15
  5652   001D82  0F30               	addlw	48
  5653   001D84  6F84               	movwf	(_time+1)& (0+255),b
  5654                           
  5655                           ;dashboard.c: 38:     } else {
  5656   001D86  EFCE  F00E         	goto	l3051
  5657   001D8A                     l3049:
  5658                           
  5659                           ; BSR set to: 0
  5660                           ;dashboard.c: 39:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  5661   001D8A  397A               	swapf	_clock_reg& (0+255),w,b
  5662   001D8C  0B0F               	andlw	15
  5663   001D8E  0B03               	andlw	3
  5664   001D90  0F30               	addlw	48
  5665   001D92  6F83               	movwf	_time& (0+255),b
  5666                           
  5667                           ;dashboard.c: 40:         time[1] = '0' + (clock_reg[0] & 0x0F);
  5668   001D94  517A               	movf	_clock_reg& (0+255),w,b
  5669   001D96  0B0F               	andlw	15
  5670   001D98  0F30               	addlw	48
  5671   001D9A  6F84               	movwf	(_time+1)& (0+255),b
  5672   001D9C                     l3051:
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;dashboard.c: 42:     time[2] = ':';
  5676   001D9C  0E3A               	movlw	58
  5677   001D9E  6F85               	movwf	(_time+2)& (0+255),b
  5678   001DA0                     
  5679                           ; BSR set to: 0
  5680                           ;dashboard.c: 43:     time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  5681   001DA0  397B               	swapf	(_clock_reg+1)& (0+255),w,b
  5682   001DA2  0B0F               	andlw	15
  5683   001DA4  0B0F               	andlw	15
  5684   001DA6  0F30               	addlw	48
  5685   001DA8  6F86               	movwf	(_time+3)& (0+255),b
  5686   001DAA                     
  5687                           ; BSR set to: 0
  5688                           ;dashboard.c: 44:     time[4] = '0' + (clock_reg[1] & 0x0F);
  5689   001DAA  517B               	movf	(_clock_reg+1)& (0+255),w,b
  5690   001DAC  0B0F               	andlw	15
  5691   001DAE  0F30               	addlw	48
  5692   001DB0  6F87               	movwf	(_time+4)& (0+255),b
  5693   001DB2                     
  5694                           ; BSR set to: 0
  5695                           ;dashboard.c: 45:     time[5] = ':';
  5696   001DB2  0E3A               	movlw	58
  5697   001DB4  6F88               	movwf	(_time+5)& (0+255),b
  5698                           
  5699                           ;dashboard.c: 46:     time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  5700   001DB6  397C               	swapf	(_clock_reg+2)& (0+255),w,b
  5701   001DB8  0B0F               	andlw	15
  5702   001DBA  0B0F               	andlw	15
  5703   001DBC  0F30               	addlw	48
  5704   001DBE  6F89               	movwf	(_time+6)& (0+255),b
  5705                           
  5706                           ;dashboard.c: 47:     time[7] = '0' + (clock_reg[2] & 0x0F);
  5707   001DC0  517C               	movf	(_clock_reg+2)& (0+255),w,b
  5708   001DC2  0B0F               	andlw	15
  5709   001DC4  0F30               	addlw	48
  5710   001DC6  6F8A               	movwf	(_time+7)& (0+255),b
  5711   001DC8                     
  5712                           ; BSR set to: 0
  5713                           ;dashboard.c: 48:     time[8] = '\0';
  5714   001DC8  0E00               	movlw	0
  5715   001DCA  6F8B               	movwf	(_time+8)& (0+255),b
  5716   001DCC                     
  5717                           ; BSR set to: 0
  5718   001DCC  0012               	return		;funcret
  5719   001DCE                     __end_of_get_time:
  5720                           	callstack 0
  5721                           
  5722 ;; *************** function _read_ds1307 *****************
  5723 ;; Defined at:
  5724 ;;		line 55 in file "ds1307.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  address         1    wreg     unsigned char 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  address         1    1[COMRAM] unsigned char 
  5729 ;;  data            1    2[COMRAM] unsigned char 
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  1    wreg      unsigned char 
  5732 ;; Registers used:
  5733 ;;		wreg, status,2, cstack
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5739 ;;      Params:         0       0       0       0       0       0       0
  5740 ;;      Locals:         2       0       0       0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0       0       0
  5742 ;;      Totals:         2       0       0       0       0       0       0
  5743 ;;Total ram usage:        2 bytes
  5744 ;; Hardware stack levels used: 1
  5745 ;; Hardware stack levels required when called: 4
  5746 ;; This function calls:
  5747 ;;		_i2c_read
  5748 ;;		_i2c_rep_start
  5749 ;;		_i2c_start
  5750 ;;		_i2c_stop
  5751 ;;		_i2c_write
  5752 ;; This function is called by:
  5753 ;;		_get_time
  5754 ;;		_init_ds1307
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           	psect	text27
  5759   002332                     __ptext27:
  5760                           	callstack 0
  5761   002332                     _read_ds1307:
  5762                           	callstack 24
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;incstack = 0
  5766                           ;read_ds1307@address stored from wreg
  5767   002332  6E02               	movwf	read_ds1307@address^0,c
  5768   002334                     
  5769                           ;ds1307.c: 55: unsigned char read_ds1307(unsigned char address);ds1307.c: 56: {;ds1307.c
      +                          : 57:  unsigned char data;;ds1307.c: 59:  i2c_start();
  5770   002334  EC45  F012         	call	_i2c_start	;wreg free
  5771   002338                     
  5772                           ;ds1307.c: 60:  i2c_write(0xD0);
  5773   002338  0ED0               	movlw	208
  5774   00233A  EC33  F012         	call	_i2c_write
  5775   00233E                     
  5776                           ;ds1307.c: 61:  i2c_write(address);
  5777   00233E  5002               	movf	read_ds1307@address^0,w,c
  5778   002340  EC33  F012         	call	_i2c_write
  5779   002344                     
  5780                           ;ds1307.c: 62:  i2c_rep_start();
  5781   002344  EC39  F012         	call	_i2c_rep_start	;wreg free
  5782   002348                     
  5783                           ;ds1307.c: 63:  i2c_write(0xD1);
  5784   002348  0ED1               	movlw	209
  5785   00234A  EC33  F012         	call	_i2c_write
  5786                           
  5787                           ;ds1307.c: 64:  data = i2c_read();
  5788   00234E  EC2D  F012         	call	_i2c_read	;wreg free
  5789   002352  6E03               	movwf	read_ds1307@data^0,c
  5790   002354                     
  5791                           ;ds1307.c: 65:  i2c_stop();
  5792   002354  EC41  F012         	call	_i2c_stop	;wreg free
  5793                           
  5794                           ;ds1307.c: 67:  return data;
  5795   002358  5003               	movf	read_ds1307@data^0,w,c
  5796   00235A  0012               	return		;funcret
  5797   00235C                     __end_of_read_ds1307:
  5798                           	callstack 0
  5799                           
  5800 ;; *************** function _i2c_rep_start *****************
  5801 ;; Defined at:
  5802 ;;		line 49 in file "i2c.c"
  5803 ;; Parameters:    Size  Location     Type
  5804 ;;		None
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;		None
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  1    wreg      void 
  5809 ;; Registers used:
  5810 ;;		cstack
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5816 ;;      Params:         0       0       0       0       0       0       0
  5817 ;;      Locals:         0       0       0       0       0       0       0
  5818 ;;      Temps:          0       0       0       0       0       0       0
  5819 ;;      Totals:         0       0       0       0       0       0       0
  5820 ;;Total ram usage:        0 bytes
  5821 ;; Hardware stack levels used: 1
  5822 ;; Hardware stack levels required when called: 2
  5823 ;; This function calls:
  5824 ;;		_i2c_idle
  5825 ;; This function is called by:
  5826 ;;		_read_ds1307
  5827 ;;		_read_external_eeprom
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           	psect	text28
  5832   002472                     __ptext28:
  5833                           	callstack 0
  5834   002472                     _i2c_rep_start:
  5835                           	callstack 26
  5836   002472                     
  5837                           ;i2c.c: 51:  RSEN = 1;
  5838   002472  82C5               	bsf	4037,1,c	;volatile
  5839   002474                     
  5840                           ;i2c.c: 52:  i2c_idle();
  5841   002474  EC1C  F012         	call	_i2c_idle	;wreg free
  5842   002478  0012               	return		;funcret
  5843   00247A                     __end_of_i2c_rep_start:
  5844                           	callstack 0
  5845                           
  5846 ;; *************** function _i2c_read *****************
  5847 ;; Defined at:
  5848 ;;		line 73 in file "i2c.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;		None
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;		None
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  1    wreg      unsigned char 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2, cstack
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5862 ;;      Params:         0       0       0       0       0       0       0
  5863 ;;      Locals:         0       0       0       0       0       0       0
  5864 ;;      Temps:          0       0       0       0       0       0       0
  5865 ;;      Totals:         0       0       0       0       0       0       0
  5866 ;;Total ram usage:        0 bytes
  5867 ;; Hardware stack levels used: 1
  5868 ;; Hardware stack levels required when called: 3
  5869 ;; This function calls:
  5870 ;;		_i2c_no_ack
  5871 ;;		_i2c_rx_mode
  5872 ;; This function is called by:
  5873 ;;		_read_ds1307
  5874 ;;		_read_external_eeprom
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           	psect	text29
  5879   00245A                     __ptext29:
  5880                           	callstack 0
  5881   00245A                     _i2c_read:
  5882                           	callstack 25
  5883   00245A                     
  5884                           ;i2c.c: 75:  i2c_rx_mode();
  5885   00245A  EC3D  F012         	call	_i2c_rx_mode	;wreg free
  5886                           
  5887                           ;i2c.c: 76:  i2c_no_ack();
  5888   00245E  EC49  F012         	call	_i2c_no_ack	;wreg free
  5889   002462                     
  5890                           ;i2c.c: 78:  return SSPBUF;
  5891   002462  50C9               	movf	201,w,c	;volatile
  5892   002464  0012               	return		;funcret
  5893   002466                     __end_of_i2c_read:
  5894                           	callstack 0
  5895                           
  5896 ;; *************** function _i2c_rx_mode *****************
  5897 ;; Defined at:
  5898 ;;		line 61 in file "i2c.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5912 ;;      Params:         0       0       0       0       0       0       0
  5913 ;;      Locals:         0       0       0       0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0
  5915 ;;      Totals:         0       0       0       0       0       0       0
  5916 ;;Total ram usage:        0 bytes
  5917 ;; Hardware stack levels used: 1
  5918 ;; Hardware stack levels required when called: 2
  5919 ;; This function calls:
  5920 ;;		_i2c_idle
  5921 ;; This function is called by:
  5922 ;;		_i2c_read
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           	psect	text30
  5927   00247A                     __ptext30:
  5928                           	callstack 0
  5929   00247A                     _i2c_rx_mode:
  5930                           	callstack 25
  5931   00247A                     
  5932                           ;i2c.c: 63:  RCEN = 1;
  5933   00247A  86C5               	bsf	4037,3,c	;volatile
  5934   00247C                     
  5935                           ;i2c.c: 64:  i2c_idle();
  5936   00247C  EC1C  F012         	call	_i2c_idle	;wreg free
  5937   002480  0012               	return		;funcret
  5938   002482                     __end_of_i2c_rx_mode:
  5939                           	callstack 0
  5940                           
  5941 ;; *************** function _i2c_no_ack *****************
  5942 ;; Defined at:
  5943 ;;		line 67 in file "i2c.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;		None
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;		None
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  1    wreg      void 
  5950 ;; Registers used:
  5951 ;;		None
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5957 ;;      Params:         0       0       0       0       0       0       0
  5958 ;;      Locals:         0       0       0       0       0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0
  5960 ;;      Totals:         0       0       0       0       0       0       0
  5961 ;;Total ram usage:        0 bytes
  5962 ;; Hardware stack levels used: 1
  5963 ;; Hardware stack levels required when called: 1
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_i2c_read
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text31
  5972   002492                     __ptext31:
  5973                           	callstack 0
  5974   002492                     _i2c_no_ack:
  5975                           	callstack 26
  5976   002492                     
  5977                           ;i2c.c: 69:  ACKDT = 1;
  5978   002492  8AC5               	bsf	4037,5,c	;volatile
  5979                           
  5980                           ;i2c.c: 70:  ACKEN = 1;
  5981   002494  88C5               	bsf	4037,4,c	;volatile
  5982   002496  0012               	return		;funcret
  5983   002498                     __end_of_i2c_no_ack:
  5984                           	callstack 0
  5985                           
  5986 ;; *************** function _display_time *****************
  5987 ;; Defined at:
  5988 ;;		line 26 in file "dashboard.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;		None
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;		None
  5993 ;; Return value:  Size  Location     Type
  5994 ;;                  1    wreg      void 
  5995 ;; Registers used:
  5996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6002 ;;      Params:         0       0       0       0       0       0       0
  6003 ;;      Locals:         0       0       0       0       0       0       0
  6004 ;;      Temps:          0       0       0       0       0       0       0
  6005 ;;      Totals:         0       0       0       0       0       0       0
  6006 ;;Total ram usage:        0 bytes
  6007 ;; Hardware stack levels used: 1
  6008 ;; Hardware stack levels required when called: 3
  6009 ;; This function calls:
  6010 ;;		_clcd_print
  6011 ;; This function is called by:
  6012 ;;		_dashboard
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text32
  6017   00244A                     __ptext32:
  6018                           	callstack 0
  6019   00244A                     _display_time:
  6020                           	callstack 26
  6021   00244A                     
  6022                           ;dashboard.c: 27:     clcd_print(time, (0xC0 + (0)));
  6023   00244A  0E83               	movlw	low _time
  6024   00244C  6E03               	movwf	clcd_print@data^0,c
  6025   00244E  6A04               	clrf	(clcd_print@data+1)^0,c
  6026   002450  0EC0               	movlw	192
  6027   002452  6E05               	movwf	clcd_print@addr^0,c
  6028   002454  EC1C  F010         	call	_clcd_print	;wreg free
  6029   002458  0012               	return		;funcret
  6030   00245A                     __end_of_display_time:
  6031                           	callstack 0
  6032                           
  6033 ;; *************** function ___lwmod *****************
  6034 ;; Defined at:
  6035 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  dividend        2    0[COMRAM] unsigned int 
  6038 ;;  divisor         2    2[COMRAM] unsigned int 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  counter         1    4[COMRAM] unsigned char 
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  2    0[COMRAM] unsigned int 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6050 ;;      Params:         4       0       0       0       0       0       0
  6051 ;;      Locals:         1       0       0       0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0
  6053 ;;      Totals:         5       0       0       0       0       0       0
  6054 ;;Total ram usage:        5 bytes
  6055 ;; Hardware stack levels used: 1
  6056 ;; Hardware stack levels required when called: 1
  6057 ;; This function calls:
  6058 ;;		Nothing
  6059 ;; This function is called by:
  6060 ;;		_dashboard
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text33
  6065   002108                     __ptext33:
  6066                           	callstack 0
  6067   002108                     ___lwmod:
  6068                           	callstack 28
  6069   002108  5003               	movf	___lwmod@divisor^0,w,c
  6070   00210A  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  6071   00210C  B4D8               	btfsc	status,2,c
  6072   00210E  EF8B  F010         	goto	u2221
  6073   002112  EF8D  F010         	goto	u2220
  6074   002116                     u2221:
  6075   002116  EFB1  F010         	goto	l1271
  6076   00211A                     u2220:
  6077   00211A  0E01               	movlw	1
  6078   00211C  6E05               	movwf	___lwmod@counter^0,c
  6079   00211E  EF95  F010         	goto	l3219
  6080   002122                     l3217:
  6081   002122  90D8               	bcf	status,0,c
  6082   002124  3603               	rlcf	___lwmod@divisor^0,f,c
  6083   002126  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  6084   002128  2A05               	incf	___lwmod@counter^0,f,c
  6085   00212A                     l3219:
  6086   00212A  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  6087   00212C  EF9A  F010         	goto	u2231
  6088   002130  EF9C  F010         	goto	u2230
  6089   002134                     u2231:
  6090   002134  EF91  F010         	goto	l3217
  6091   002138                     u2230:
  6092   002138                     l3221:
  6093   002138  5003               	movf	___lwmod@divisor^0,w,c
  6094   00213A  5C01               	subwf	___lwmod@dividend^0,w,c
  6095   00213C  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6096   00213E  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  6097   002140  A0D8               	btfss	status,0,c
  6098   002142  EFA5  F010         	goto	u2241
  6099   002146  EFA7  F010         	goto	u2240
  6100   00214A                     u2241:
  6101   00214A  EFAB  F010         	goto	l3225
  6102   00214E                     u2240:
  6103   00214E  5003               	movf	___lwmod@divisor^0,w,c
  6104   002150  5E01               	subwf	___lwmod@dividend^0,f,c
  6105   002152  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6106   002154  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  6107   002156                     l3225:
  6108   002156  90D8               	bcf	status,0,c
  6109   002158  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  6110   00215A  3203               	rrcf	___lwmod@divisor^0,f,c
  6111   00215C  2E05               	decfsz	___lwmod@counter^0,f,c
  6112   00215E  EF9C  F010         	goto	l3221
  6113   002162                     l1271:
  6114   002162  C001  F001         	movff	___lwmod@dividend,?___lwmod
  6115   002166  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  6116   00216A  0012               	return		;funcret
  6117   00216C                     __end_of___lwmod:
  6118                           	callstack 0
  6119                           
  6120 ;; *************** function ___lwdiv *****************
  6121 ;; Defined at:
  6122 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  dividend        2    0[COMRAM] unsigned int 
  6125 ;;  divisor         2    2[COMRAM] unsigned int 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  quotient        2    4[COMRAM] unsigned int 
  6128 ;;  counter         1    6[COMRAM] unsigned char 
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  2    0[COMRAM] unsigned int 
  6131 ;; Registers used:
  6132 ;;		wreg, status,2, status,0
  6133 ;; Tracked objects:
  6134 ;;		On entry : 0/0
  6135 ;;		On exit  : 0/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6138 ;;      Params:         4       0       0       0       0       0       0
  6139 ;;      Locals:         3       0       0       0       0       0       0
  6140 ;;      Temps:          0       0       0       0       0       0       0
  6141 ;;      Totals:         7       0       0       0       0       0       0
  6142 ;;Total ram usage:        7 bytes
  6143 ;; Hardware stack levels used: 1
  6144 ;; Hardware stack levels required when called: 1
  6145 ;; This function calls:
  6146 ;;		Nothing
  6147 ;; This function is called by:
  6148 ;;		_dashboard
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152                           	psect	text34
  6153   001FC4                     __ptext34:
  6154                           	callstack 0
  6155   001FC4                     ___lwdiv:
  6156                           	callstack 28
  6157   001FC4  0E00               	movlw	0
  6158   001FC6  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  6159   001FC8  0E00               	movlw	0
  6160   001FCA  6E05               	movwf	___lwdiv@quotient^0,c
  6161   001FCC  5003               	movf	___lwdiv@divisor^0,w,c
  6162   001FCE  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6163   001FD0  B4D8               	btfsc	status,2,c
  6164   001FD2  EFED  F00F         	goto	u2191
  6165   001FD6  EFEF  F00F         	goto	u2190
  6166   001FDA                     u2191:
  6167   001FDA  EF17  F010         	goto	l1261
  6168   001FDE                     u2190:
  6169   001FDE  0E01               	movlw	1
  6170   001FE0  6E07               	movwf	___lwdiv@counter^0,c
  6171   001FE2  EFF7  F00F         	goto	l3199
  6172   001FE6                     l3197:
  6173   001FE6  90D8               	bcf	status,0,c
  6174   001FE8  3603               	rlcf	___lwdiv@divisor^0,f,c
  6175   001FEA  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6176   001FEC  2A07               	incf	___lwdiv@counter^0,f,c
  6177   001FEE                     l3199:
  6178   001FEE  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  6179   001FF0  EFFC  F00F         	goto	u2201
  6180   001FF4  EFFE  F00F         	goto	u2200
  6181   001FF8                     u2201:
  6182   001FF8  EFF3  F00F         	goto	l3197
  6183   001FFC                     u2200:
  6184   001FFC                     l3201:
  6185   001FFC  90D8               	bcf	status,0,c
  6186   001FFE  3605               	rlcf	___lwdiv@quotient^0,f,c
  6187   002000  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6188   002002  5003               	movf	___lwdiv@divisor^0,w,c
  6189   002004  5C01               	subwf	___lwdiv@dividend^0,w,c
  6190   002006  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6191   002008  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6192   00200A  A0D8               	btfss	status,0,c
  6193   00200C  EF0A  F010         	goto	u2211
  6194   002010  EF0C  F010         	goto	u2210
  6195   002014                     u2211:
  6196   002014  EF11  F010         	goto	l3209
  6197   002018                     u2210:
  6198   002018  5003               	movf	___lwdiv@divisor^0,w,c
  6199   00201A  5E01               	subwf	___lwdiv@dividend^0,f,c
  6200   00201C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6201   00201E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6202   002020  8005               	bsf	___lwdiv@quotient^0,0,c
  6203   002022                     l3209:
  6204   002022  90D8               	bcf	status,0,c
  6205   002024  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6206   002026  3203               	rrcf	___lwdiv@divisor^0,f,c
  6207   002028  2E07               	decfsz	___lwdiv@counter^0,f,c
  6208   00202A  EFFE  F00F         	goto	l3201
  6209   00202E                     l1261:
  6210   00202E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  6211   002032  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6212   002036  0012               	return		;funcret
  6213   002038                     __end_of___lwdiv:
  6214                           	callstack 0
  6215                           
  6216 ;; *************** function _clear_log *****************
  6217 ;; Defined at:
  6218 ;;		line 22 in file "clear_log.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  key             1    wreg     unsigned char 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  key             1    5[COMRAM] unsigned char 
  6223 ;;  k               1    6[COMRAM] unsigned char 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      void 
  6226 ;; Registers used:
  6227 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6233 ;;      Params:         0       0       0       0       0       0       0
  6234 ;;      Locals:         2       0       0       0       0       0       0
  6235 ;;      Temps:          0       0       0       0       0       0       0
  6236 ;;      Totals:         2       0       0       0       0       0       0
  6237 ;;Total ram usage:        2 bytes
  6238 ;; Hardware stack levels used: 1
  6239 ;; Hardware stack levels required when called: 4
  6240 ;; This function calls:
  6241 ;;		_clcd_print
  6242 ;;		_write_external_eeprom
  6243 ;; This function is called by:
  6244 ;;		_main
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text35
  6249   001C2A                     __ptext35:
  6250                           	callstack 0
  6251   001C2A                     _clear_log:
  6252                           	callstack 26
  6253                           
  6254                           ;incstack = 0
  6255                           ;clear_log@key stored from wreg
  6256   001C2A  6E06               	movwf	clear_log@key^0,c
  6257   001C2C                     
  6258                           ;clear_log.c: 23:     lap = 0;
  6259   001C2C  0E00               	movlw	0
  6260   001C2E  6E51               	movwf	_lap^0,c
  6261                           
  6262                           ;clear_log.c: 24:     overflow = 0;
  6263   001C30  0E00               	movlw	0
  6264   001C32  6E50               	movwf	_overflow^0,c
  6265   001C34                     
  6266                           ;clear_log.c: 27:     clcd_print("   LOG CLEARED   ", (0x80 + (0)));
  6267   001C34  0EF3               	movlw	low STR_25
  6268   001C36  6E03               	movwf	clcd_print@data^0,c
  6269   001C38  0E2E               	movlw	high STR_25
  6270   001C3A  6E04               	movwf	(clcd_print@data+1)^0,c
  6271   001C3C  0E80               	movlw	128
  6272   001C3E  6E05               	movwf	clcd_print@addr^0,c
  6273   001C40  EC1C  F010         	call	_clcd_print	;wreg free
  6274   001C44                     
  6275                           ;clear_log.c: 28:     clcd_print("                 ", (0xC0 + (0)));
  6276   001C44  0EE1               	movlw	low STR_26
  6277   001C46  6E03               	movwf	clcd_print@data^0,c
  6278   001C48  0E2E               	movlw	high STR_26
  6279   001C4A  6E04               	movwf	(clcd_print@data+1)^0,c
  6280   001C4C  0EC0               	movlw	192
  6281   001C4E  6E05               	movwf	clcd_print@addr^0,c
  6282   001C50  EC1C  F010         	call	_clcd_print	;wreg free
  6283   001C54                     
  6284                           ;clear_log.c: 31:     if (key == 16) {
  6285   001C54  0E10               	movlw	16
  6286   001C56  1806               	xorwf	clear_log@key^0,w,c
  6287   001C58  A4D8               	btfss	status,2,c
  6288   001C5A  EF31  F00E         	goto	u2681
  6289   001C5E  EF33  F00E         	goto	u2680
  6290   001C62                     u2681:
  6291   001C62  EF60  F00E         	goto	l558
  6292   001C66                     u2680:
  6293   001C66                     
  6294                           ;clear_log.c: 36:         store[0] = (((time[0] - 48)*10)+(time[1] - 48));
  6295   001C66  0100               	movlb	0	; () banked
  6296   001C68  5183               	movf	_time& (0+255),w,b
  6297   001C6A  0D0A               	mullw	10
  6298   001C6C  50F3               	movf	243,w,c
  6299   001C6E  2584               	addwf	(_time+1)& (0+255),w,b
  6300   001C70  0FF0               	addlw	240
  6301   001C72  6E39               	movwf	_store^0,c
  6302                           
  6303                           ;clear_log.c: 37:         store[1] = (((time[3] - 48)*10)+(time[4] - 48));
  6304   001C74  5186               	movf	(_time+3)& (0+255),w,b
  6305   001C76  0D0A               	mullw	10
  6306   001C78  50F3               	movf	243,w,c
  6307   001C7A  2587               	addwf	(_time+4)& (0+255),w,b
  6308   001C7C  0FF0               	addlw	240
  6309   001C7E  6E3A               	movwf	(_store+1)^0,c
  6310                           
  6311                           ;clear_log.c: 38:         store[2] = (((time[6] - 48)*10)+(time[7] - 48));
  6312   001C80  5189               	movf	(_time+6)& (0+255),w,b
  6313   001C82  0D0A               	mullw	10
  6314   001C84  50F3               	movf	243,w,c
  6315   001C86  258A               	addwf	(_time+7)& (0+255),w,b
  6316   001C88  0FF0               	addlw	240
  6317   001C8A  6E3B               	movwf	(_store+2)^0,c
  6318   001C8C                     
  6319                           ; BSR set to: 0
  6320                           ;clear_log.c: 41:         store[3] = i;
  6321   001C8C  C056  F03C         	movff	_i,_store+3
  6322   001C90                     
  6323                           ; BSR set to: 0
  6324                           ;clear_log.c: 44:         store[4] = adc_reg_val;
  6325   001C90  C042  F03D         	movff	_adc_reg_val,_store+4
  6326   001C94                     
  6327                           ; BSR set to: 0
  6328                           ;clear_log.c: 46:         for (char k = 0; k < 5; k++) {
  6329   001C94  0E00               	movlw	0
  6330   001C96  6E07               	movwf	clear_log@k^0,c
  6331   001C98                     l3529:
  6332                           
  6333                           ;clear_log.c: 47:             write_external_eeprom((k), store[k]);
  6334   001C98  5007               	movf	clear_log@k^0,w,c
  6335   001C9A  0F39               	addlw	low _store
  6336   001C9C  6ED9               	movwf	fsr2l,c
  6337   001C9E  6ADA               	clrf	fsr2h,c
  6338   001CA0  50DF               	movf	indf2,w,c
  6339   001CA2  6E02               	movwf	write_external_eeprom@data^0,c
  6340   001CA4  5007               	movf	clear_log@k^0,w,c
  6341   001CA6  EC2C  F011         	call	_write_external_eeprom
  6342   001CAA                     
  6343                           ;clear_log.c: 48:         }
  6344   001CAA  2A07               	incf	clear_log@k^0,f,c
  6345   001CAC  0E04               	movlw	4
  6346   001CAE  6407               	cpfsgt	clear_log@k^0,c
  6347   001CB0  EF5C  F00E         	goto	u2691
  6348   001CB4  EF5E  F00E         	goto	u2690
  6349   001CB8                     u2691:
  6350   001CB8  EF4C  F00E         	goto	l3529
  6351   001CBC                     u2690:
  6352   001CBC                     
  6353                           ;clear_log.c: 49:         main_f = 2;
  6354   001CBC  0E02               	movlw	2
  6355   001CBE  6E59               	movwf	_main_f^0,c
  6356   001CC0                     l558:
  6357   001CC0  0012               	return		;funcret
  6358   001CC2                     __end_of_clear_log:
  6359                           	callstack 0
  6360                           
  6361 ;; *************** function _change_pass *****************
  6362 ;; Defined at:
  6363 ;;		line 43 in file "change_password.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;  key             1    wreg     unsigned char 
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;  key             1   22[COMRAM] unsigned char 
  6368 ;;  k               1   23[COMRAM] unsigned char 
  6369 ;;  delay           4   18[COMRAM] unsigned long 
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  1    wreg      void 
  6372 ;; Registers used:
  6373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6379 ;;      Params:         0       0       0       0       0       0       0
  6380 ;;      Locals:         6       0       0       0       0       0       0
  6381 ;;      Temps:          2       0       0       0       0       0       0
  6382 ;;      Totals:         8       0       0       0       0       0       0
  6383 ;;Total ram usage:        8 bytes
  6384 ;; Hardware stack levels used: 1
  6385 ;; Hardware stack levels required when called: 4
  6386 ;; This function calls:
  6387 ;;		_clcd_print
  6388 ;;		_clcd_putch
  6389 ;;		_clcd_write
  6390 ;;		_my_strcp
  6391 ;;		_write_external_eeprom
  6392 ;; This function is called by:
  6393 ;;		_main
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           	psect	text36
  6398   0003AC                     __ptext36:
  6399                           	callstack 0
  6400   0003AC                     _change_pass:
  6401                           	callstack 26
  6402                           
  6403                           ;incstack = 0
  6404                           ;change_pass@key stored from wreg
  6405   0003AC  6E17               	movwf	change_pass@key^0,c
  6406   0003AE                     
  6407                           ;change_password.c: 44:     if (reset_flag == 0) {
  6408   0003AE  5049               	movf	_reset_flag^0,w,c
  6409   0003B0  A4D8               	btfss	status,2,c
  6410   0003B2  EFDD  F001         	goto	u2751
  6411   0003B6  EFDF  F001         	goto	u2750
  6412   0003BA                     u2751:
  6413   0003BA  EF73  F002         	goto	l3649
  6414   0003BE                     u2750:
  6415   0003BE                     
  6416                           ;change_password.c: 45:         clcd_print("  New Password : ", (0x80 + (0)));
  6417   0003BE  0EBD               	movlw	low STR_31
  6418   0003C0  6E03               	movwf	clcd_print@data^0,c
  6419   0003C2  0E2E               	movlw	high STR_31
  6420   0003C4  6E04               	movwf	(clcd_print@data+1)^0,c
  6421   0003C6  0E80               	movlw	128
  6422   0003C8  6E05               	movwf	clcd_print@addr^0,c
  6423   0003CA  EC1C  F010         	call	_clcd_print	;wreg free
  6424   0003CE                     
  6425                           ;change_password.c: 48:         if (del++ < 500) {
  6426   0003CE  503E               	movf	_del^0,w,c
  6427   0003D0  6E11               	movwf	??_change_pass^0,c
  6428   0003D2  503F               	movf	(_del+1)^0,w,c
  6429   0003D4  6E12               	movwf	(??_change_pass+1)^0,c
  6430   0003D6  4A3E               	infsnz	_del^0,f,c
  6431   0003D8  2A3F               	incf	(_del+1)^0,f,c
  6432   0003DA  BE12               	btfsc	(??_change_pass+1)^0,7,c
  6433   0003DC  EFFB  F001         	goto	u2760
  6434   0003E0  0EF4               	movlw	244
  6435   0003E2  5C11               	subwf	??_change_pass^0,w,c
  6436   0003E4  0E01               	movlw	1
  6437   0003E6  5812               	subwfb	(??_change_pass+1)^0,w,c
  6438   0003E8  B0D8               	btfsc	status,0,c
  6439   0003EA  EFF9  F001         	goto	u2761
  6440   0003EE  EFFB  F001         	goto	u2760
  6441   0003F2                     u2761:
  6442   0003F2  EF03  F002         	goto	l3615
  6443   0003F6                     u2760:
  6444   0003F6                     
  6445                           ;change_password.c: 49:             clcd_putch('_', (0xC0 + (ind)));
  6446   0003F6  504A               	movf	_ind^0,w,c
  6447   0003F8  0FC0               	addlw	192
  6448   0003FA  6E0F               	movwf	clcd_putch@addr^0,c
  6449   0003FC  0E5F               	movlw	95
  6450   0003FE  ECDE  F011         	call	_clcd_putch
  6451                           
  6452                           ;change_password.c: 50:         } else if (del > 500 && del < 1000) {
  6453   000402  EF2B  F002         	goto	l3623
  6454   000406                     l3615:
  6455   000406  BE3F               	btfsc	(_del+1)^0,7,c
  6456   000408  EF0F  F002         	goto	u2771
  6457   00040C  0EF5               	movlw	245
  6458   00040E  5C3E               	subwf	_del^0,w,c
  6459   000410  0E01               	movlw	1
  6460   000412  583F               	subwfb	(_del+1)^0,w,c
  6461   000414  A0D8               	btfss	status,0,c
  6462   000416  EF0F  F002         	goto	u2771
  6463   00041A  EF11  F002         	goto	u2770
  6464   00041E                     u2771:
  6465   00041E  EF27  F002         	goto	l3621
  6466   000422                     u2770:
  6467   000422  BE3F               	btfsc	(_del+1)^0,7,c
  6468   000424  EF1F  F002         	goto	u2780
  6469   000428  0EE8               	movlw	232
  6470   00042A  5C3E               	subwf	_del^0,w,c
  6471   00042C  0E03               	movlw	3
  6472   00042E  583F               	subwfb	(_del+1)^0,w,c
  6473   000430  B0D8               	btfsc	status,0,c
  6474   000432  EF1D  F002         	goto	u2781
  6475   000436  EF1F  F002         	goto	u2780
  6476   00043A                     u2781:
  6477   00043A  EF27  F002         	goto	l3621
  6478   00043E                     u2780:
  6479   00043E                     
  6480                           ;change_password.c: 51:             clcd_putch(' ', (0xC0 + (ind)));
  6481   00043E  504A               	movf	_ind^0,w,c
  6482   000440  0FC0               	addlw	192
  6483   000442  6E0F               	movwf	clcd_putch@addr^0,c
  6484   000444  0E20               	movlw	32
  6485   000446  ECDE  F011         	call	_clcd_putch
  6486                           
  6487                           ;change_password.c: 52:         } else
  6488   00044A  EF2B  F002         	goto	l3623
  6489   00044E                     l3621:
  6490                           
  6491                           ;change_password.c: 53:             del = 0;
  6492   00044E  0E00               	movlw	0
  6493   000450  6E3F               	movwf	(_del+1)^0,c
  6494   000452  0E00               	movlw	0
  6495   000454  6E3E               	movwf	_del^0,c
  6496   000456                     l3623:
  6497                           
  6498                           ;change_password.c: 55:         if (key == 5) {
  6499   000456  0E05               	movlw	5
  6500   000458  1817               	xorwf	change_pass@key^0,w,c
  6501   00045A  A4D8               	btfss	status,2,c
  6502   00045C  EF32  F002         	goto	u2791
  6503   000460  EF34  F002         	goto	u2790
  6504   000464                     u2791:
  6505   000464  EF43  F002         	goto	l3631
  6506   000468                     u2790:
  6507   000468                     
  6508                           ;change_password.c: 56:             temp1[ind] = '0';
  6509   000468  504A               	movf	_ind^0,w,c
  6510   00046A  0F91               	addlw	low _temp1
  6511   00046C  6ED9               	movwf	fsr2l,c
  6512   00046E  6ADA               	clrf	fsr2h,c
  6513   000470  0E30               	movlw	48
  6514   000472  6EDF               	movwf	indf2,c
  6515   000474                     
  6516                           ;change_password.c: 57:             clcd_putch('*', (0xC0 + (ind)));
  6517   000474  504A               	movf	_ind^0,w,c
  6518   000476  0FC0               	addlw	192
  6519   000478  6E0F               	movwf	clcd_putch@addr^0,c
  6520   00047A  0E2A               	movlw	42
  6521   00047C  ECDE  F011         	call	_clcd_putch
  6522   000480                     l3629:
  6523                           
  6524                           ;change_password.c: 58:             ind++;
  6525   000480  2A4A               	incf	_ind^0,f,c
  6526                           
  6527                           ;change_password.c: 59:         } else if (key == 6) {
  6528   000482  EF5A  F002         	goto	l3639
  6529   000486                     l3631:
  6530   000486  0E06               	movlw	6
  6531   000488  1817               	xorwf	change_pass@key^0,w,c
  6532   00048A  A4D8               	btfss	status,2,c
  6533   00048C  EF4A  F002         	goto	u2801
  6534   000490  EF4C  F002         	goto	u2800
  6535   000494                     u2801:
  6536   000494  EF5A  F002         	goto	l3639
  6537   000498                     u2800:
  6538   000498                     
  6539                           ;change_password.c: 60:             temp1[ind] = '1';
  6540   000498  504A               	movf	_ind^0,w,c
  6541   00049A  0F91               	addlw	low _temp1
  6542   00049C  6ED9               	movwf	fsr2l,c
  6543   00049E  6ADA               	clrf	fsr2h,c
  6544   0004A0  0E31               	movlw	49
  6545   0004A2  6EDF               	movwf	indf2,c
  6546   0004A4                     
  6547                           ;change_password.c: 61:             clcd_putch('*', (0xC0 + (ind)));
  6548   0004A4  504A               	movf	_ind^0,w,c
  6549   0004A6  0FC0               	addlw	192
  6550   0004A8  6E0F               	movwf	clcd_putch@addr^0,c
  6551   0004AA  0E2A               	movlw	42
  6552   0004AC  ECDE  F011         	call	_clcd_putch
  6553   0004B0  EF40  F002         	goto	l3629
  6554   0004B4                     l3639:
  6555                           
  6556                           ;change_password.c: 64:         if (ind == 4) {
  6557   0004B4  0E04               	movlw	4
  6558   0004B6  184A               	xorwf	_ind^0,w,c
  6559   0004B8  A4D8               	btfss	status,2,c
  6560   0004BA  EF61  F002         	goto	u2811
  6561   0004BE  EF63  F002         	goto	u2810
  6562   0004C2                     u2811:
  6563   0004C2  EF8B  F003         	goto	l716
  6564   0004C6                     u2810:
  6565   0004C6                     
  6566                           ;change_password.c: 65:             temp1[ind] = '\0';
  6567   0004C6  504A               	movf	_ind^0,w,c
  6568   0004C8  0F91               	addlw	low _temp1
  6569   0004CA  6ED9               	movwf	fsr2l,c
  6570   0004CC  6ADA               	clrf	fsr2h,c
  6571   0004CE  6ADF               	clrf	indf2,c
  6572   0004D0                     
  6573                           ;change_password.c: 66:             reset_flag = 1;
  6574   0004D0  0E01               	movlw	1
  6575   0004D2  6E49               	movwf	_reset_flag^0,c
  6576   0004D4                     
  6577                           ;change_password.c: 67:             ind = 0;
  6578   0004D4  0E00               	movlw	0
  6579   0004D6  6E4A               	movwf	_ind^0,c
  6580   0004D8                     
  6581                           ;change_password.c: 68:             clcd_write(0x01, 0);
  6582   0004D8  0E00               	movlw	0
  6583   0004DA  6E01               	movwf	clcd_write@control_bit^0,c
  6584   0004DC  0E01               	movlw	1
  6585   0004DE  EC4C  F011         	call	_clcd_write
  6586   0004E2  EF8B  F003         	goto	l716
  6587   0004E6                     l3649:
  6588   0004E6  0449               	decf	_reset_flag^0,w,c
  6589   0004E8  A4D8               	btfss	status,2,c
  6590   0004EA  EF79  F002         	goto	u2821
  6591   0004EE  EF7B  F002         	goto	u2820
  6592   0004F2                     u2821:
  6593   0004F2  EF8B  F003         	goto	l716
  6594   0004F6                     u2820:
  6595   0004F6                     
  6596                           ;change_password.c: 71:         clcd_print("  Retype Password : ", (0x80 + (0)));
  6597   0004F6  0E6F               	movlw	low STR_32
  6598   0004F8  6E03               	movwf	clcd_print@data^0,c
  6599   0004FA  0E2E               	movlw	high STR_32
  6600   0004FC  6E04               	movwf	(clcd_print@data+1)^0,c
  6601   0004FE  0E80               	movlw	128
  6602   000500  6E05               	movwf	clcd_print@addr^0,c
  6603   000502  EC1C  F010         	call	_clcd_print	;wreg free
  6604   000506                     
  6605                           ;change_password.c: 73:         if (del++ < 500) {
  6606   000506  503E               	movf	_del^0,w,c
  6607   000508  6E11               	movwf	??_change_pass^0,c
  6608   00050A  503F               	movf	(_del+1)^0,w,c
  6609   00050C  6E12               	movwf	(??_change_pass+1)^0,c
  6610   00050E  4A3E               	infsnz	_del^0,f,c
  6611   000510  2A3F               	incf	(_del+1)^0,f,c
  6612   000512  BE12               	btfsc	(??_change_pass+1)^0,7,c
  6613   000514  EF97  F002         	goto	u2830
  6614   000518  0EF4               	movlw	244
  6615   00051A  5C11               	subwf	??_change_pass^0,w,c
  6616   00051C  0E01               	movlw	1
  6617   00051E  5812               	subwfb	(??_change_pass+1)^0,w,c
  6618   000520  B0D8               	btfsc	status,0,c
  6619   000522  EF95  F002         	goto	u2831
  6620   000526  EF97  F002         	goto	u2830
  6621   00052A                     u2831:
  6622   00052A  EF9F  F002         	goto	l3657
  6623   00052E                     u2830:
  6624   00052E                     
  6625                           ;change_password.c: 74:             clcd_putch('_', (0xC0 + (ind)));
  6626   00052E  504A               	movf	_ind^0,w,c
  6627   000530  0FC0               	addlw	192
  6628   000532  6E0F               	movwf	clcd_putch@addr^0,c
  6629   000534  0E5F               	movlw	95
  6630   000536  ECDE  F011         	call	_clcd_putch
  6631                           
  6632                           ;change_password.c: 75:         } else if (del > 500 && del < 1000) {
  6633   00053A  EFC7  F002         	goto	l3665
  6634   00053E                     l3657:
  6635   00053E  BE3F               	btfsc	(_del+1)^0,7,c
  6636   000540  EFAB  F002         	goto	u2841
  6637   000544  0EF5               	movlw	245
  6638   000546  5C3E               	subwf	_del^0,w,c
  6639   000548  0E01               	movlw	1
  6640   00054A  583F               	subwfb	(_del+1)^0,w,c
  6641   00054C  A0D8               	btfss	status,0,c
  6642   00054E  EFAB  F002         	goto	u2841
  6643   000552  EFAD  F002         	goto	u2840
  6644   000556                     u2841:
  6645   000556  EFC3  F002         	goto	l3663
  6646   00055A                     u2840:
  6647   00055A  BE3F               	btfsc	(_del+1)^0,7,c
  6648   00055C  EFBB  F002         	goto	u2850
  6649   000560  0EE8               	movlw	232
  6650   000562  5C3E               	subwf	_del^0,w,c
  6651   000564  0E03               	movlw	3
  6652   000566  583F               	subwfb	(_del+1)^0,w,c
  6653   000568  B0D8               	btfsc	status,0,c
  6654   00056A  EFB9  F002         	goto	u2851
  6655   00056E  EFBB  F002         	goto	u2850
  6656   000572                     u2851:
  6657   000572  EFC3  F002         	goto	l3663
  6658   000576                     u2850:
  6659   000576                     
  6660                           ;change_password.c: 76:             clcd_putch(' ', (0xC0 + (ind)));
  6661   000576  504A               	movf	_ind^0,w,c
  6662   000578  0FC0               	addlw	192
  6663   00057A  6E0F               	movwf	clcd_putch@addr^0,c
  6664   00057C  0E20               	movlw	32
  6665   00057E  ECDE  F011         	call	_clcd_putch
  6666                           
  6667                           ;change_password.c: 77:         } else
  6668   000582  EFC7  F002         	goto	l3665
  6669   000586                     l3663:
  6670                           
  6671                           ;change_password.c: 78:             del = 0;
  6672   000586  0E00               	movlw	0
  6673   000588  6E3F               	movwf	(_del+1)^0,c
  6674   00058A  0E00               	movlw	0
  6675   00058C  6E3E               	movwf	_del^0,c
  6676   00058E                     l3665:
  6677                           
  6678                           ;change_password.c: 80:         if (key == 5) {
  6679   00058E  0E05               	movlw	5
  6680   000590  1817               	xorwf	change_pass@key^0,w,c
  6681   000592  A4D8               	btfss	status,2,c
  6682   000594  EFCE  F002         	goto	u2861
  6683   000598  EFD0  F002         	goto	u2860
  6684   00059C                     u2861:
  6685   00059C  EFDF  F002         	goto	l3673
  6686   0005A0                     u2860:
  6687   0005A0                     
  6688                           ;change_password.c: 81:             temp2[ind] = '0';
  6689   0005A0  504A               	movf	_ind^0,w,c
  6690   0005A2  0F8C               	addlw	low _temp2
  6691   0005A4  6ED9               	movwf	fsr2l,c
  6692   0005A6  6ADA               	clrf	fsr2h,c
  6693   0005A8  0E30               	movlw	48
  6694   0005AA  6EDF               	movwf	indf2,c
  6695   0005AC                     
  6696                           ;change_password.c: 82:             clcd_putch('*', (0xC0 + (ind)));
  6697   0005AC  504A               	movf	_ind^0,w,c
  6698   0005AE  0FC0               	addlw	192
  6699   0005B0  6E0F               	movwf	clcd_putch@addr^0,c
  6700   0005B2  0E2A               	movlw	42
  6701   0005B4  ECDE  F011         	call	_clcd_putch
  6702   0005B8                     l3671:
  6703                           
  6704                           ;change_password.c: 83:             ind++;
  6705   0005B8  2A4A               	incf	_ind^0,f,c
  6706                           
  6707                           ;change_password.c: 84:         } else if (key == 6) {
  6708   0005BA  EFF6  F002         	goto	l3681
  6709   0005BE                     l3673:
  6710   0005BE  0E06               	movlw	6
  6711   0005C0  1817               	xorwf	change_pass@key^0,w,c
  6712   0005C2  A4D8               	btfss	status,2,c
  6713   0005C4  EFE6  F002         	goto	u2871
  6714   0005C8  EFE8  F002         	goto	u2870
  6715   0005CC                     u2871:
  6716   0005CC  EFF6  F002         	goto	l3681
  6717   0005D0                     u2870:
  6718   0005D0                     
  6719                           ;change_password.c: 85:             temp2[ind] = '1';
  6720   0005D0  504A               	movf	_ind^0,w,c
  6721   0005D2  0F8C               	addlw	low _temp2
  6722   0005D4  6ED9               	movwf	fsr2l,c
  6723   0005D6  6ADA               	clrf	fsr2h,c
  6724   0005D8  0E31               	movlw	49
  6725   0005DA  6EDF               	movwf	indf2,c
  6726   0005DC                     
  6727                           ;change_password.c: 86:             clcd_putch('*', (0xC0 + (ind)));
  6728   0005DC  504A               	movf	_ind^0,w,c
  6729   0005DE  0FC0               	addlw	192
  6730   0005E0  6E0F               	movwf	clcd_putch@addr^0,c
  6731   0005E2  0E2A               	movlw	42
  6732   0005E4  ECDE  F011         	call	_clcd_putch
  6733   0005E8  EFDC  F002         	goto	l3671
  6734   0005EC                     l3681:
  6735                           
  6736                           ;change_password.c: 89:         if (ind == 4) {
  6737   0005EC  0E04               	movlw	4
  6738   0005EE  184A               	xorwf	_ind^0,w,c
  6739   0005F0  A4D8               	btfss	status,2,c
  6740   0005F2  EFFD  F002         	goto	u2881
  6741   0005F6  EFFF  F002         	goto	u2880
  6742   0005FA                     u2881:
  6743   0005FA  EF8B  F003         	goto	l716
  6744   0005FE                     u2880:
  6745   0005FE                     
  6746                           ;change_password.c: 90:             temp2[ind] = '\0';
  6747   0005FE  504A               	movf	_ind^0,w,c
  6748   000600  0F8C               	addlw	low _temp2
  6749   000602  6ED9               	movwf	fsr2l,c
  6750   000604  6ADA               	clrf	fsr2h,c
  6751   000606  6ADF               	clrf	indf2,c
  6752   000608                     
  6753                           ;change_password.c: 91:             if (my_strcp(temp1, temp2) == 0) {
  6754   000608  0E91               	movlw	low _temp1
  6755   00060A  6E01               	movwf	my_strcp@one^0,c
  6756   00060C  0E8C               	movlw	low _temp2
  6757   00060E  6E02               	movwf	my_strcp@two^0,c
  6758   000610  EC29  F00F         	call	_my_strcp	;wreg free
  6759   000614  5001               	movf	?_my_strcp^0,w,c
  6760   000616  1002               	iorwf	(?_my_strcp+1)^0,w,c
  6761   000618  A4D8               	btfss	status,2,c
  6762   00061A  EF11  F003         	goto	u2891
  6763   00061E  EF13  F003         	goto	u2890
  6764   000622                     u2891:
  6765   000622  EF89  F003         	goto	l3729
  6766   000626                     u2890:
  6767   000626                     
  6768                           ;change_password.c: 92:                 pass[0] = temp1[0];
  6769   000626  C091  F09B         	movff	_temp1,_pass
  6770   00062A                     
  6771                           ;change_password.c: 93:                 write_external_eeprom((200), temp1[0]);
  6772   00062A  C091  F002         	movff	_temp1,write_external_eeprom@data
  6773   00062E  0EC8               	movlw	200
  6774   000630  EC2C  F011         	call	_write_external_eeprom
  6775   000634                     
  6776                           ;change_password.c: 94:                 pass[1] = temp1[1];
  6777   000634  C092  F09C         	movff	_temp1+1,_pass+1
  6778                           
  6779                           ;change_password.c: 95:                 write_external_eeprom((201), temp1[1]);
  6780   000638  C092  F002         	movff	_temp1+1,write_external_eeprom@data
  6781   00063C  0EC9               	movlw	201
  6782   00063E  EC2C  F011         	call	_write_external_eeprom
  6783   000642                     
  6784                           ;change_password.c: 96:                 pass[2] = temp1[2];
  6785   000642  C093  F09D         	movff	_temp1+2,_pass+2
  6786                           
  6787                           ;change_password.c: 97:                 write_external_eeprom((202), temp1[2]);
  6788   000646  C093  F002         	movff	_temp1+2,write_external_eeprom@data
  6789   00064A  0ECA               	movlw	202
  6790   00064C  EC2C  F011         	call	_write_external_eeprom
  6791   000650                     
  6792                           ;change_password.c: 98:                 pass[3] = temp1[3];
  6793   000650  C094  F09E         	movff	_temp1+3,_pass+3
  6794                           
  6795                           ;change_password.c: 99:                 write_external_eeprom((203), temp1[3]);
  6796   000654  C094  F002         	movff	_temp1+3,write_external_eeprom@data
  6797   000658  0ECB               	movlw	203
  6798   00065A  EC2C  F011         	call	_write_external_eeprom
  6799   00065E                     
  6800                           ;change_password.c: 101:                 clcd_print(" Password Change  ", (0x80 + (0)));
  6801   00065E  0E98               	movlw	low STR_33
  6802   000660  6E03               	movwf	clcd_print@data^0,c
  6803   000662  0E2E               	movlw	high STR_33
  6804   000664  6E04               	movwf	(clcd_print@data+1)^0,c
  6805   000666  0E80               	movlw	128
  6806   000668  6E05               	movwf	clcd_print@addr^0,c
  6807   00066A  EC1C  F010         	call	_clcd_print	;wreg free
  6808   00066E                     
  6809                           ;change_password.c: 102:                 clcd_print("   SUCCESSFULL  ", (0xC0 + (0)));
  6810   00066E  0E17               	movlw	low STR_34
  6811   000670  6E03               	movwf	clcd_print@data^0,c
  6812   000672  0E2F               	movlw	high STR_34
  6813   000674  6E04               	movwf	(clcd_print@data+1)^0,c
  6814   000676  0EC0               	movlw	192
  6815   000678  6E05               	movwf	clcd_print@addr^0,c
  6816   00067A  EC1C  F010         	call	_clcd_print	;wreg free
  6817   00067E                     
  6818                           ;change_password.c: 103:                 for (unsigned long int delay = 200000; delay--;
      +                          );
  6819   00067E  0E40               	movlw	64
  6820   000680  6E13               	movwf	change_pass@delay^0,c
  6821   000682  0E0D               	movlw	13
  6822   000684  6E14               	movwf	(change_pass@delay+1)^0,c
  6823   000686  0E03               	movlw	3
  6824   000688  6E15               	movwf	(change_pass@delay+2)^0,c
  6825   00068A  0E00               	movlw	0
  6826   00068C  6E16               	movwf	(change_pass@delay+3)^0,c
  6827   00068E                     l3703:
  6828   00068E  0613               	decf	change_pass@delay^0,f,c
  6829   000690  0E00               	movlw	0
  6830   000692  5A14               	subwfb	(change_pass@delay+1)^0,f,c
  6831   000694  5A15               	subwfb	(change_pass@delay+2)^0,f,c
  6832   000696  5A16               	subwfb	(change_pass@delay+3)^0,f,c
  6833   000698  2813               	incf	change_pass@delay^0,w,c
  6834   00069A  E10A               	bnz	u2901
  6835   00069C  2814               	incf	(change_pass@delay+1)^0,w,c
  6836   00069E  E108               	bnz	u2901
  6837   0006A0  2815               	incf	(change_pass@delay+2)^0,w,c
  6838   0006A2  E106               	bnz	u2901
  6839   0006A4  2816               	incf	(change_pass@delay+3)^0,w,c
  6840   0006A6  A4D8               	btfss	status,2,c
  6841   0006A8  EF58  F003         	goto	u2901
  6842   0006AC  EF5A  F003         	goto	u2900
  6843   0006B0                     u2901:
  6844   0006B0  EF47  F003         	goto	l3703
  6845   0006B4                     u2900:
  6846   0006B4                     
  6847                           ;change_password.c: 104:                 ind = 0;
  6848   0006B4  0E00               	movlw	0
  6849   0006B6  6E4A               	movwf	_ind^0,c
  6850                           
  6851                           ;change_password.c: 105:                 reset_flag = 0;
  6852   0006B8  0E00               	movlw	0
  6853   0006BA  6E49               	movwf	_reset_flag^0,c
  6854   0006BC                     
  6855                           ;change_password.c: 111:                 store[0] = (((time[0] - 48)*10)+(time[1] - 48))
      +                          ;
  6856   0006BC  0100               	movlb	0	; () banked
  6857   0006BE  5183               	movf	_time& (0+255),w,b
  6858   0006C0  0D0A               	mullw	10
  6859   0006C2  50F3               	movf	243,w,c
  6860   0006C4  2584               	addwf	(_time+1)& (0+255),w,b
  6861   0006C6  0FF0               	addlw	240
  6862   0006C8  6E39               	movwf	_store^0,c
  6863   0006CA                     
  6864                           ; BSR set to: 0
  6865                           ;change_password.c: 112:                 store[1] = (((time[3] - 48)*10)+(time[4] - 48))
      +                          ;
  6866   0006CA  5186               	movf	(_time+3)& (0+255),w,b
  6867   0006CC  0D0A               	mullw	10
  6868   0006CE  50F3               	movf	243,w,c
  6869   0006D0  2587               	addwf	(_time+4)& (0+255),w,b
  6870   0006D2  0FF0               	addlw	240
  6871   0006D4  6E3A               	movwf	(_store+1)^0,c
  6872   0006D6                     
  6873                           ; BSR set to: 0
  6874                           ;change_password.c: 113:                 store[2] = (((time[6] - 48)*10)+(time[7] - 48))
      +                          ;
  6875   0006D6  5189               	movf	(_time+6)& (0+255),w,b
  6876   0006D8  0D0A               	mullw	10
  6877   0006DA  50F3               	movf	243,w,c
  6878   0006DC  258A               	addwf	(_time+7)& (0+255),w,b
  6879   0006DE  0FF0               	addlw	240
  6880   0006E0  6E3B               	movwf	(_store+2)^0,c
  6881   0006E2                     
  6882                           ; BSR set to: 0
  6883                           ;change_password.c: 116:                 store[3] = i;
  6884   0006E2  C056  F03C         	movff	_i,_store+3
  6885   0006E6                     
  6886                           ; BSR set to: 0
  6887                           ;change_password.c: 119:                 store[4] = adc_reg_val;
  6888   0006E6  C042  F03D         	movff	_adc_reg_val,_store+4
  6889   0006EA                     
  6890                           ; BSR set to: 0
  6891                           ;change_password.c: 120:                 for (char k = 0; k < 5; k++) {
  6892   0006EA  0E00               	movlw	0
  6893   0006EC  6E18               	movwf	change_pass@k^0,c
  6894   0006EE                     l3723:
  6895                           
  6896                           ;change_password.c: 121:                     write_external_eeprom((k), store[k]);
  6897   0006EE  5018               	movf	change_pass@k^0,w,c
  6898   0006F0  0F39               	addlw	low _store
  6899   0006F2  6ED9               	movwf	fsr2l,c
  6900   0006F4  6ADA               	clrf	fsr2h,c
  6901   0006F6  50DF               	movf	indf2,w,c
  6902   0006F8  6E02               	movwf	write_external_eeprom@data^0,c
  6903   0006FA  5018               	movf	change_pass@k^0,w,c
  6904   0006FC  EC2C  F011         	call	_write_external_eeprom
  6905   000700                     
  6906                           ;change_password.c: 122:                 }
  6907   000700  2A18               	incf	change_pass@k^0,f,c
  6908   000702  0E04               	movlw	4
  6909   000704  6418               	cpfsgt	change_pass@k^0,c
  6910   000706  EF87  F003         	goto	u2911
  6911   00070A  EF89  F003         	goto	u2910
  6912   00070E                     u2911:
  6913   00070E  EF77  F003         	goto	l3723
  6914   000712                     u2910:
  6915   000712                     l3729:
  6916                           
  6917                           ;change_password.c: 126:                 main_f = 2;
  6918   000712  0E02               	movlw	2
  6919   000714  6E59               	movwf	_main_f^0,c
  6920   000716                     l716:
  6921   000716  0012               	return		;funcret
  6922   000718                     __end_of_change_pass:
  6923                           	callstack 0
  6924                           
  6925 ;; *************** function _write_external_eeprom *****************
  6926 ;; Defined at:
  6927 ;;		line 14 in file "external_eeprom.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;  address         1    wreg     unsigned char 
  6930 ;;  data            1    1[COMRAM] unsigned char 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;  address         1    4[COMRAM] unsigned char 
  6933 ;;  i               2    2[COMRAM] int 
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  1    wreg      void 
  6936 ;; Registers used:
  6937 ;;		wreg, status,2, status,0, cstack
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6943 ;;      Params:         1       0       0       0       0       0       0
  6944 ;;      Locals:         3       0       0       0       0       0       0
  6945 ;;      Temps:          0       0       0       0       0       0       0
  6946 ;;      Totals:         4       0       0       0       0       0       0
  6947 ;;Total ram usage:        4 bytes
  6948 ;; Hardware stack levels used: 1
  6949 ;; Hardware stack levels required when called: 3
  6950 ;; This function calls:
  6951 ;;		_i2c_start
  6952 ;;		_i2c_stop
  6953 ;;		_i2c_write
  6954 ;; This function is called by:
  6955 ;;		_init_config
  6956 ;;		_store_event
  6957 ;;		_clear_log
  6958 ;;		_download_log
  6959 ;;		_change_pass
  6960 ;;		_settime
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text37
  6965   002258                     __ptext37:
  6966                           	callstack 0
  6967   002258                     _write_external_eeprom:
  6968                           	callstack 26
  6969                           
  6970                           ;incstack = 0
  6971                           ;write_external_eeprom@address stored from wreg
  6972   002258  6E05               	movwf	write_external_eeprom@address^0,c
  6973   00225A                     
  6974                           ;external_eeprom.c: 14: void write_external_eeprom(unsigned char address, unsigned char 
      +                          data);external_eeprom.c: 15: {;external_eeprom.c: 16:  i2c_start();
  6975   00225A  EC45  F012         	call	_i2c_start	;wreg free
  6976   00225E                     
  6977                           ;external_eeprom.c: 17:  i2c_write(0xA0);
  6978   00225E  0EA0               	movlw	160
  6979   002260  EC33  F012         	call	_i2c_write
  6980   002264                     
  6981                           ;external_eeprom.c: 18:  i2c_write(address);
  6982   002264  5005               	movf	write_external_eeprom@address^0,w,c
  6983   002266  EC33  F012         	call	_i2c_write
  6984   00226A                     
  6985                           ;external_eeprom.c: 19:  i2c_write(data);
  6986   00226A  5002               	movf	write_external_eeprom@data^0,w,c
  6987   00226C  EC33  F012         	call	_i2c_write
  6988   002270                     
  6989                           ;external_eeprom.c: 20:  i2c_stop();
  6990   002270  EC41  F012         	call	_i2c_stop	;wreg free
  6991   002274                     
  6992                           ;external_eeprom.c: 21:     for(int i=3000; i--;);
  6993   002274  0E0B               	movlw	11
  6994   002276  6E04               	movwf	(write_external_eeprom@i+1)^0,c
  6995   002278  0EB8               	movlw	184
  6996   00227A  6E03               	movwf	write_external_eeprom@i^0,c
  6997   00227C                     l2913:
  6998   00227C  0603               	decf	write_external_eeprom@i^0,f,c
  6999   00227E  A0D8               	btfss	status,0,c
  7000   002280  0604               	decf	(write_external_eeprom@i+1)^0,f,c
  7001   002282  2803               	incf	write_external_eeprom@i^0,w,c
  7002   002284  E106               	bnz	u1971
  7003   002286  2804               	incf	(write_external_eeprom@i+1)^0,w,c
  7004   002288  A4D8               	btfss	status,2,c
  7005   00228A  EF49  F011         	goto	u1971
  7006   00228E  EF4B  F011         	goto	u1970
  7007   002292                     u1971:
  7008   002292  EF3E  F011         	goto	l2913
  7009   002296                     u1970:
  7010   002296  0012               	return		;funcret
  7011   002298                     __end_of_write_external_eeprom:
  7012                           	callstack 0
  7013                           
  7014 ;; *************** function _i2c_write *****************
  7015 ;; Defined at:
  7016 ;;		line 55 in file "i2c.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  data            1    wreg     unsigned char 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  data            1    0[COMRAM] unsigned char 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  1    wreg      void 
  7023 ;; Registers used:
  7024 ;;		wreg, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7030 ;;      Params:         0       0       0       0       0       0       0
  7031 ;;      Locals:         1       0       0       0       0       0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0
  7033 ;;      Totals:         1       0       0       0       0       0       0
  7034 ;;Total ram usage:        1 bytes
  7035 ;; Hardware stack levels used: 1
  7036 ;; Hardware stack levels required when called: 2
  7037 ;; This function calls:
  7038 ;;		_i2c_idle
  7039 ;; This function is called by:
  7040 ;;		_write_ds1307
  7041 ;;		_read_ds1307
  7042 ;;		_write_external_eeprom
  7043 ;;		_read_external_eeprom
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047                           	psect	text38
  7048   002466                     __ptext38:
  7049                           	callstack 0
  7050   002466                     _i2c_write:
  7051                           	callstack 26
  7052                           
  7053                           ;incstack = 0
  7054                           ;i2c_write@data stored from wreg
  7055   002466  6E01               	movwf	i2c_write@data^0,c
  7056   002468                     
  7057                           ;i2c.c: 55: void i2c_write(unsigned char data);i2c.c: 56: {;i2c.c: 57:  SSPBUF = data;
  7058   002468  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  7059   00246C                     
  7060                           ;i2c.c: 58:  i2c_idle();
  7061   00246C  EC1C  F012         	call	_i2c_idle	;wreg free
  7062   002470  0012               	return		;funcret
  7063   002472                     __end_of_i2c_write:
  7064                           	callstack 0
  7065                           
  7066 ;; *************** function _i2c_stop *****************
  7067 ;; Defined at:
  7068 ;;		line 43 in file "i2c.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;		None
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;		None
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  1    wreg      void 
  7075 ;; Registers used:
  7076 ;;		cstack
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7082 ;;      Params:         0       0       0       0       0       0       0
  7083 ;;      Locals:         0       0       0       0       0       0       0
  7084 ;;      Temps:          0       0       0       0       0       0       0
  7085 ;;      Totals:         0       0       0       0       0       0       0
  7086 ;;Total ram usage:        0 bytes
  7087 ;; Hardware stack levels used: 1
  7088 ;; Hardware stack levels required when called: 2
  7089 ;; This function calls:
  7090 ;;		_i2c_idle
  7091 ;; This function is called by:
  7092 ;;		_write_ds1307
  7093 ;;		_read_ds1307
  7094 ;;		_write_external_eeprom
  7095 ;;		_read_external_eeprom
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           	psect	text39
  7100   002482                     __ptext39:
  7101                           	callstack 0
  7102   002482                     _i2c_stop:
  7103                           	callstack 26
  7104   002482                     
  7105                           ;i2c.c: 45:  PEN = 1;
  7106   002482  84C5               	bsf	4037,2,c	;volatile
  7107   002484                     
  7108                           ;i2c.c: 46:  i2c_idle();
  7109   002484  EC1C  F012         	call	_i2c_idle	;wreg free
  7110   002488  0012               	return		;funcret
  7111   00248A                     __end_of_i2c_stop:
  7112                           	callstack 0
  7113                           
  7114 ;; *************** function _i2c_start *****************
  7115 ;; Defined at:
  7116 ;;		line 37 in file "i2c.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;		None
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;		None
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  1    wreg      void 
  7123 ;; Registers used:
  7124 ;;		cstack
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/0
  7127 ;;		On exit  : 0/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7130 ;;      Params:         0       0       0       0       0       0       0
  7131 ;;      Locals:         0       0       0       0       0       0       0
  7132 ;;      Temps:          0       0       0       0       0       0       0
  7133 ;;      Totals:         0       0       0       0       0       0       0
  7134 ;;Total ram usage:        0 bytes
  7135 ;; Hardware stack levels used: 1
  7136 ;; Hardware stack levels required when called: 2
  7137 ;; This function calls:
  7138 ;;		_i2c_idle
  7139 ;; This function is called by:
  7140 ;;		_write_ds1307
  7141 ;;		_read_ds1307
  7142 ;;		_write_external_eeprom
  7143 ;;		_read_external_eeprom
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text40
  7148   00248A                     __ptext40:
  7149                           	callstack 0
  7150   00248A                     _i2c_start:
  7151                           	callstack 26
  7152   00248A                     
  7153                           ;i2c.c: 39:  SEN = 1;
  7154   00248A  80C5               	bsf	4037,0,c	;volatile
  7155   00248C                     
  7156                           ;i2c.c: 40:  i2c_idle();
  7157   00248C  EC1C  F012         	call	_i2c_idle	;wreg free
  7158   002490  0012               	return		;funcret
  7159   002492                     __end_of_i2c_start:
  7160                           	callstack 0
  7161                           
  7162 ;; *************** function _i2c_idle *****************
  7163 ;; Defined at:
  7164 ;;		line 23 in file "i2c.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;		None
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;		None
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  1    wreg      void 
  7171 ;; Registers used:
  7172 ;;		None
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7178 ;;      Params:         0       0       0       0       0       0       0
  7179 ;;      Locals:         0       0       0       0       0       0       0
  7180 ;;      Temps:          0       0       0       0       0       0       0
  7181 ;;      Totals:         0       0       0       0       0       0       0
  7182 ;;Total ram usage:        0 bytes
  7183 ;; Hardware stack levels used: 1
  7184 ;; Hardware stack levels required when called: 1
  7185 ;; This function calls:
  7186 ;;		Nothing
  7187 ;; This function is called by:
  7188 ;;		_i2c_start
  7189 ;;		_i2c_stop
  7190 ;;		_i2c_rep_start
  7191 ;;		_i2c_write
  7192 ;;		_i2c_rx_mode
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           	psect	text41
  7197   002438                     __ptext41:
  7198                           	callstack 0
  7199   002438                     _i2c_idle:
  7200                           	callstack 26
  7201   002438                     l369:
  7202   002438  A69E               	btfss	3998,3,c	;volatile
  7203   00243A  EF21  F012         	goto	u1901
  7204   00243E  EF23  F012         	goto	u1900
  7205   002442                     u1901:
  7206   002442  EF1C  F012         	goto	l369
  7207   002446                     u1900:
  7208   002446                     
  7209                           ;i2c.c: 26:  SSPIF = 0;
  7210   002446  969E               	bcf	3998,3,c	;volatile
  7211   002448  0012               	return		;funcret
  7212   00244A                     __end_of_i2c_idle:
  7213                           	callstack 0
  7214                           
  7215 ;; *************** function _my_strcp *****************
  7216 ;; Defined at:
  7217 ;;		line 31 in file "change_password.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;  one             1    0[COMRAM] PTR unsigned char 
  7220 ;;		 -> temp1(5), 
  7221 ;;  two             1    1[COMRAM] PTR unsigned char 
  7222 ;;		 -> temp2(5), 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;  k               2    6[COMRAM] int 
  7225 ;;  last            2    4[COMRAM] int 
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  2    0[COMRAM] int 
  7228 ;; Registers used:
  7229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7230 ;; Tracked objects:
  7231 ;;		On entry : 0/0
  7232 ;;		On exit  : 0/0
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7235 ;;      Params:         2       0       0       0       0       0       0
  7236 ;;      Locals:         4       0       0       0       0       0       0
  7237 ;;      Temps:          2       0       0       0       0       0       0
  7238 ;;      Totals:         8       0       0       0       0       0       0
  7239 ;;Total ram usage:        8 bytes
  7240 ;; Hardware stack levels used: 1
  7241 ;; Hardware stack levels required when called: 1
  7242 ;; This function calls:
  7243 ;;		Nothing
  7244 ;; This function is called by:
  7245 ;;		_change_pass
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249                           	psect	text42
  7250   001E52                     __ptext42:
  7251                           	callstack 0
  7252   001E52                     _my_strcp:
  7253                           	callstack 28
  7254   001E52                     
  7255                           ;change_password.c: 32:     int k = 0, last = 0;
  7256   001E52  0E00               	movlw	0
  7257   001E54  6E08               	movwf	(my_strcp@k+1)^0,c
  7258   001E56  0E00               	movlw	0
  7259   001E58  6E07               	movwf	my_strcp@k^0,c
  7260   001E5A  0E00               	movlw	0
  7261   001E5C  6E06               	movwf	(my_strcp@last+1)^0,c
  7262   001E5E  0E00               	movlw	0
  7263   001E60  6E05               	movwf	my_strcp@last^0,c
  7264                           
  7265                           ;change_password.c: 33:     while (one[k] != '\0') {
  7266   001E62  EF5A  F00F         	goto	l3109
  7267   001E66                     l3103:
  7268                           
  7269                           ;change_password.c: 34:         if (one[k] != two[k]) {
  7270   001E66  5002               	movf	my_strcp@two^0,w,c
  7271   001E68  2407               	addwf	my_strcp@k^0,w,c
  7272   001E6A  6ED9               	movwf	fsr2l,c
  7273   001E6C  6ADA               	clrf	fsr2h,c
  7274   001E6E  5001               	movf	my_strcp@one^0,w,c
  7275   001E70  2407               	addwf	my_strcp@k^0,w,c
  7276   001E72  6EE1               	movwf	fsr1l,c
  7277   001E74  6AE2               	clrf	fsr1h,c
  7278   001E76  50DE               	movf	postinc2,w,c
  7279   001E78  18E6               	xorwf	postinc1,w,c
  7280   001E7A  B4D8               	btfsc	status,2,c
  7281   001E7C  EF42  F00F         	goto	u2051
  7282   001E80  EF44  F00F         	goto	u2050
  7283   001E84                     u2051:
  7284   001E84  EF58  F00F         	goto	l3107
  7285   001E88                     u2050:
  7286   001E88                     
  7287                           ;change_password.c: 35:             last = one[k] - two[k];
  7288   001E88  5001               	movf	my_strcp@one^0,w,c
  7289   001E8A  2407               	addwf	my_strcp@k^0,w,c
  7290   001E8C  6ED9               	movwf	fsr2l,c
  7291   001E8E  6ADA               	clrf	fsr2h,c
  7292   001E90  50DF               	movf	indf2,w,c
  7293   001E92  6E03               	movwf	??_my_strcp^0,c
  7294   001E94  5002               	movf	my_strcp@two^0,w,c
  7295   001E96  2407               	addwf	my_strcp@k^0,w,c
  7296   001E98  6ED9               	movwf	fsr2l,c
  7297   001E9A  6ADA               	clrf	fsr2h,c
  7298   001E9C  50DF               	movf	indf2,w,c
  7299   001E9E  6E04               	movwf	(??_my_strcp+1)^0,c
  7300   001EA0  5004               	movf	(??_my_strcp+1)^0,w,c
  7301   001EA2  5C03               	subwf	??_my_strcp^0,w,c
  7302   001EA4  6E05               	movwf	my_strcp@last^0,c
  7303   001EA6  6A06               	clrf	(my_strcp@last+1)^0,c
  7304   001EA8  A0D8               	btfss	status,0,c
  7305   001EAA  0606               	decf	(my_strcp@last+1)^0,f,c
  7306                           
  7307                           ;change_password.c: 36:             break;
  7308   001EAC  EF66  F00F         	goto	l686
  7309   001EB0                     l3107:
  7310                           
  7311                           ;change_password.c: 38:         k++;
  7312   001EB0  4A07               	infsnz	my_strcp@k^0,f,c
  7313   001EB2  2A08               	incf	(my_strcp@k+1)^0,f,c
  7314   001EB4                     l3109:
  7315                           
  7316                           ;change_password.c: 33:     while (one[k] != '\0') {
  7317   001EB4  5001               	movf	my_strcp@one^0,w,c
  7318   001EB6  2407               	addwf	my_strcp@k^0,w,c
  7319   001EB8  6ED9               	movwf	fsr2l,c
  7320   001EBA  6ADA               	clrf	fsr2h,c
  7321   001EBC  50DF               	movf	indf2,w,c
  7322   001EBE  A4D8               	btfss	status,2,c
  7323   001EC0  EF64  F00F         	goto	u2061
  7324   001EC4  EF66  F00F         	goto	u2060
  7325   001EC8                     u2061:
  7326   001EC8  EF33  F00F         	goto	l3103
  7327   001ECC                     u2060:
  7328   001ECC                     l686:
  7329                           
  7330                           ;change_password.c: 40:     return last;
  7331   001ECC  C005  F001         	movff	my_strcp@last,?_my_strcp
  7332   001ED0  C006  F002         	movff	my_strcp@last+1,?_my_strcp+1
  7333   001ED4  0012               	return		;funcret
  7334   001ED6                     __end_of_my_strcp:
  7335                           	callstack 0
  7336                           
  7337 ;; *************** function _clcd_putch *****************
  7338 ;; Defined at:
  7339 ;;		line 68 in file "clcd.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  data            1    wreg     const unsigned char 
  7342 ;;  addr            1   14[COMRAM] unsigned char 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  data            1   15[COMRAM] const unsigned char 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      void 
  7347 ;; Registers used:
  7348 ;;		wreg, status,2, cstack
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7354 ;;      Params:         1       0       0       0       0       0       0
  7355 ;;      Locals:         1       0       0       0       0       0       0
  7356 ;;      Temps:          0       0       0       0       0       0       0
  7357 ;;      Totals:         2       0       0       0       0       0       0
  7358 ;;Total ram usage:        2 bytes
  7359 ;; Hardware stack levels used: 1
  7360 ;; Hardware stack levels required when called: 2
  7361 ;; This function calls:
  7362 ;;		_clcd_write
  7363 ;; This function is called by:
  7364 ;;		_dashboard
  7365 ;;		_password
  7366 ;;		_menu
  7367 ;;		_view_log
  7368 ;;		_change_pass
  7369 ;;		_settime
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           	psect	text43
  7374   0023BC                     __ptext43:
  7375                           	callstack 0
  7376   0023BC                     _clcd_putch:
  7377                           	callstack 27
  7378                           
  7379                           ;incstack = 0
  7380                           ;clcd_putch@data stored from wreg
  7381   0023BC  6E10               	movwf	clcd_putch@data^0,c
  7382   0023BE                     
  7383                           ;clcd.c: 68: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 69: {
      +                          ;clcd.c: 70:  clcd_write(addr, 0);
  7384   0023BE  0E00               	movlw	0
  7385   0023C0  6E01               	movwf	clcd_write@control_bit^0,c
  7386   0023C2  500F               	movf	clcd_putch@addr^0,w,c
  7387   0023C4  EC4C  F011         	call	_clcd_write
  7388                           
  7389                           ;clcd.c: 71:  clcd_write(data, 1);
  7390   0023C8  0E01               	movlw	1
  7391   0023CA  6E01               	movwf	clcd_write@control_bit^0,c
  7392   0023CC  5010               	movf	clcd_putch@data^0,w,c
  7393   0023CE  EC4C  F011         	call	_clcd_write
  7394   0023D2  0012               	return		;funcret
  7395   0023D4                     __end_of_clcd_putch:
  7396                           	callstack 0
  7397                           
  7398 ;; *************** function _clcd_print *****************
  7399 ;; Defined at:
  7400 ;;		line 59 in file "clcd.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  data            2    2[COMRAM] PTR const unsigned char 
  7403 ;;		 -> STR_35(18), STR_34(17), STR_33(19), STR_32(21), 
  7404 ;;		 -> STR_31(18), STR_28(14), STR_27(18), STR_26(18), 
  7405 ;;		 -> STR_25(18), STR_24(17), STR_23(16), STR_22(17), 
  7406 ;;		 -> STR_21(18), STR_20(17), STR_19(16), STR_18(15), 
  7407 ;;		 -> STR_17(17), STR_16(6), STR_15(16), STR_14(17), 
  7408 ;;		 -> STR_13(17), time(9), STR_12(3), STR_11(3), 
  7409 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(3), 
  7410 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(3), 
  7411 ;;		 -> STR_2(3), STR_1(3), 
  7412 ;;  addr            1    4[COMRAM] unsigned char 
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;		None
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  1    wreg      void 
  7417 ;; Registers used:
  7418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7424 ;;      Params:         3       0       0       0       0       0       0
  7425 ;;      Locals:         0       0       0       0       0       0       0
  7426 ;;      Temps:          0       0       0       0       0       0       0
  7427 ;;      Totals:         3       0       0       0       0       0       0
  7428 ;;Total ram usage:        3 bytes
  7429 ;; Hardware stack levels used: 1
  7430 ;; Hardware stack levels required when called: 2
  7431 ;; This function calls:
  7432 ;;		_clcd_write
  7433 ;; This function is called by:
  7434 ;;		_display_time
  7435 ;;		_dashboard
  7436 ;;		_password
  7437 ;;		_menu
  7438 ;;		_view_log
  7439 ;;		_clear_log
  7440 ;;		_download_log
  7441 ;;		_change_pass
  7442 ;;		_settime
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           	psect	text44
  7447   002038                     __ptext44:
  7448                           	callstack 0
  7449   002038                     _clcd_print:
  7450                           	callstack 27
  7451   002038                     
  7452                           ;clcd.c: 59: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 60: 
      +                          {;clcd.c: 61:  clcd_write(addr, 0);
  7453   002038  0E00               	movlw	0
  7454   00203A  6E01               	movwf	clcd_write@control_bit^0,c
  7455   00203C  5005               	movf	clcd_print@addr^0,w,c
  7456   00203E  EC4C  F011         	call	_clcd_write
  7457                           
  7458                           ;clcd.c: 62:  while (*data != '\0')
  7459   002042  EF39  F010         	goto	l2899
  7460   002046                     l2895:
  7461                           
  7462                           ;clcd.c: 63:  {;clcd.c: 64:   clcd_write(*data++, 1);
  7463   002046  0E01               	movlw	1
  7464   002048  6E01               	movwf	clcd_write@control_bit^0,c
  7465   00204A  C003  FFF6         	movff	clcd_print@data,tblptrl
  7466   00204E  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  7467   002052  6AF8               	clrf	tblptru,c
  7468   002054  0E05               	movlw	(high __ramtop+-1)
  7469   002056  64F7               	cpfsgt	tblptrh,c
  7470   002058  D003               	bra	u1947
  7471   00205A  0008               	tblrd		*
  7472   00205C  50F5               	movf	tablat,w,c
  7473   00205E  D005               	bra	u1940
  7474   002060                     u1947:
  7475   002060  CFF6 FFE9          	movff	tblptrl,fsr0l
  7476   002064  CFF7 FFEA          	movff	tblptrh,fsr0h
  7477   002068  50EF               	movf	indf0,w,c
  7478   00206A                     u1940:
  7479   00206A  EC4C  F011         	call	_clcd_write
  7480   00206E  4A03               	infsnz	clcd_print@data^0,f,c
  7481   002070  2A04               	incf	(clcd_print@data+1)^0,f,c
  7482   002072                     l2899:
  7483                           
  7484                           ;clcd.c: 62:  while (*data != '\0')
  7485   002072  C003  FFF6         	movff	clcd_print@data,tblptrl
  7486   002076  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  7487   00207A  6AF8               	clrf	tblptru,c
  7488   00207C  0E05               	movlw	(high __ramtop+-1)
  7489   00207E  64F7               	cpfsgt	tblptrh,c
  7490   002080  D003               	bra	u1957
  7491   002082  0008               	tblrd		*
  7492   002084  50F5               	movf	tablat,w,c
  7493   002086  D005               	bra	u1950
  7494   002088                     u1957:
  7495   002088  CFF6 FFE9          	movff	tblptrl,fsr0l
  7496   00208C  CFF7 FFEA          	movff	tblptrh,fsr0h
  7497   002090  50EF               	movf	indf0,w,c
  7498   002092                     u1950:
  7499   002092  0900               	iorlw	0
  7500   002094  A4D8               	btfss	status,2,c
  7501   002096  EF4F  F010         	goto	u1961
  7502   00209A  EF51  F010         	goto	u1960
  7503   00209E                     u1961:
  7504   00209E  EF23  F010         	goto	l2895
  7505   0020A2                     u1960:
  7506   0020A2  0012               	return		;funcret
  7507   0020A4                     __end_of_clcd_print:
  7508                           	callstack 0
  7509                           
  7510 ;; *************** function _clcd_write *****************
  7511 ;; Defined at:
  7512 ;;		line 5 in file "clcd.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  byte            1    wreg     unsigned char 
  7515 ;;  control_bit     1    0[COMRAM] unsigned char 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;  byte            1    1[COMRAM] unsigned char 
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      void 
  7520 ;; Registers used:
  7521 ;;		wreg
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7527 ;;      Params:         1       0       0       0       0       0       0
  7528 ;;      Locals:         1       0       0       0       0       0       0
  7529 ;;      Temps:          0       0       0       0       0       0       0
  7530 ;;      Totals:         2       0       0       0       0       0       0
  7531 ;;Total ram usage:        2 bytes
  7532 ;; Hardware stack levels used: 1
  7533 ;; Hardware stack levels required when called: 1
  7534 ;; This function calls:
  7535 ;;		Nothing
  7536 ;; This function is called by:
  7537 ;;		_init_clcd
  7538 ;;		_clcd_print
  7539 ;;		_clcd_putch
  7540 ;;		_main
  7541 ;;		_password
  7542 ;;		_menu
  7543 ;;		_change_pass
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           	psect	text45
  7548   002298                     __ptext45:
  7549                           	callstack 0
  7550   002298                     _clcd_write:
  7551                           	callstack 27
  7552                           
  7553                           ;incstack = 0
  7554                           ;clcd_write@byte stored from wreg
  7555   002298  6E02               	movwf	clcd_write@byte^0,c
  7556   00229A                     
  7557                           ;clcd.c: 5: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 6: {;
      +                          clcd.c: 7:  RC1 = control_bit;
  7558   00229A  B001               	btfsc	clcd_write@control_bit^0,0,c
  7559   00229C  EF52  F011         	goto	u1911
  7560   0022A0  EF55  F011         	goto	u1910
  7561   0022A4                     u1911:
  7562   0022A4  8282               	bsf	3970,1,c	;volatile
  7563   0022A6  EF56  F011         	goto	u1925
  7564   0022AA                     u1910:
  7565   0022AA  9282               	bcf	3970,1,c	;volatile
  7566   0022AC                     u1925:
  7567   0022AC                     
  7568                           ;clcd.c: 8:  PORTD = byte;
  7569   0022AC  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  7570   0022B0                     
  7571                           ;clcd.c: 11:  RC2 = 1;
  7572   0022B0  8482               	bsf	3970,2,c	;volatile
  7573   0022B2                     
  7574                           ;clcd.c: 12:  RC2 = 0;
  7575   0022B2  9482               	bcf	3970,2,c	;volatile
  7576   0022B4                     
  7577                           ;clcd.c: 14:  TRISD7 = 0xFF;
  7578   0022B4  8E95               	bsf	3989,7,c	;volatile
  7579   0022B6                     
  7580                           ;clcd.c: 15:  RC0 = 1;
  7581   0022B6  8082               	bsf	3970,0,c	;volatile
  7582   0022B8                     
  7583                           ;clcd.c: 16:  RC1 = 0;
  7584   0022B8  9282               	bcf	3970,1,c	;volatile
  7585   0022BA                     l2865:
  7586                           
  7587                           ;clcd.c: 19:  {;clcd.c: 20:   RC2 = 1;
  7588   0022BA  8482               	bsf	3970,2,c	;volatile
  7589   0022BC                     
  7590                           ;clcd.c: 21:   RC2 = 0;
  7591   0022BC  9482               	bcf	3970,2,c	;volatile
  7592   0022BE                     
  7593                           ;clcd.c: 22:  } while (RD7);
  7594   0022BE  BE83               	btfsc	3971,7,c	;volatile
  7595   0022C0  EF64  F011         	goto	u1931
  7596   0022C4  EF66  F011         	goto	u1930
  7597   0022C8                     u1931:
  7598   0022C8  EF5D  F011         	goto	l2865
  7599   0022CC                     u1930:
  7600   0022CC                     
  7601                           ;clcd.c: 24:  RC0 = 0;
  7602   0022CC  9082               	bcf	3970,0,c	;volatile
  7603                           
  7604                           ;clcd.c: 25:  TRISD7 = 0x00;
  7605   0022CE  9E95               	bcf	3989,7,c	;volatile
  7606   0022D0  0012               	return		;funcret
  7607   0022D2                     __end_of_clcd_write:
  7608                           	callstack 0
  7609                           
  7610 ;; *************** function ___xxtofl *****************
  7611 ;; Defined at:
  7612 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;  sign            1    wreg     unsigned char 
  7615 ;;  val             4    7[COMRAM] long 
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;  sign            1   15[COMRAM] unsigned char 
  7618 ;;  arg             4   17[COMRAM] unsigned long 
  7619 ;;  exp             1   16[COMRAM] unsigned char 
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  4    7[COMRAM] unsigned char 
  7622 ;; Registers used:
  7623 ;;		wreg, status,2, status,0
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7629 ;;      Params:         4       0       0       0       0       0       0
  7630 ;;      Locals:         6       0       0       0       0       0       0
  7631 ;;      Temps:          4       0       0       0       0       0       0
  7632 ;;      Totals:        14       0       0       0       0       0       0
  7633 ;;Total ram usage:       14 bytes
  7634 ;; Hardware stack levels used: 1
  7635 ;; Hardware stack levels required when called: 1
  7636 ;; This function calls:
  7637 ;;		Nothing
  7638 ;; This function is called by:
  7639 ;;		_main
  7640 ;; This function uses a non-reentrant model
  7641 ;;
  7642                           
  7643                           	psect	text46
  7644   0013F4                     __ptext46:
  7645                           	callstack 0
  7646   0013F4                     ___xxtofl:
  7647                           	callstack 29
  7648                           
  7649                           ;incstack = 0
  7650                           ;___xxtofl@sign stored from wreg
  7651   0013F4  6E10               	movwf	___xxtofl@sign^0,c
  7652   0013F6  5010               	movf	___xxtofl@sign^0,w,c
  7653   0013F8  B4D8               	btfsc	status,2,c
  7654   0013FA  EF01  F00A         	goto	u3351
  7655   0013FE  EF03  F00A         	goto	u3350
  7656   001402                     u3351:
  7657   001402  EF25  F00A         	goto	l1425
  7658   001406                     u3350:
  7659   001406  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  7660   001408  EF0A  F00A         	goto	u3360
  7661   00140C  EF08  F00A         	goto	u3361
  7662   001410                     u3361:
  7663   001410  EF25  F00A         	goto	l1425
  7664   001414                     u3360:
  7665   001414  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  7666   001418  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  7667   00141C  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  7668   001420  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  7669   001424  1E0C               	comf	??___xxtofl^0,f,c
  7670   001426  1E0D               	comf	(??___xxtofl+1)^0,f,c
  7671   001428  1E0E               	comf	(??___xxtofl+2)^0,f,c
  7672   00142A  1E0F               	comf	(??___xxtofl+3)^0,f,c
  7673   00142C  2A0C               	incf	??___xxtofl^0,f,c
  7674   00142E  0E00               	movlw	0
  7675   001430  220D               	addwfc	(??___xxtofl+1)^0,f,c
  7676   001432  220E               	addwfc	(??___xxtofl+2)^0,f,c
  7677   001434  220F               	addwfc	(??___xxtofl+3)^0,f,c
  7678   001436  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  7679   00143A  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  7680   00143E  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  7681   001442  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  7682   001446  EF2D  F00A         	goto	l4013
  7683   00144A                     l1425:
  7684   00144A  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  7685   00144E  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7686   001452  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7687   001456  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7688   00145A                     l4013:
  7689   00145A  5008               	movf	___xxtofl@val^0,w,c
  7690   00145C  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  7691   00145E  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  7692   001460  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  7693   001462  A4D8               	btfss	status,2,c
  7694   001464  EF36  F00A         	goto	u3371
  7695   001468  EF38  F00A         	goto	u3370
  7696   00146C                     u3371:
  7697   00146C  EF42  F00A         	goto	l4019
  7698   001470                     u3370:
  7699   001470  0E00               	movlw	0
  7700   001472  6E08               	movwf	?___xxtofl^0,c
  7701   001474  0E00               	movlw	0
  7702   001476  6E09               	movwf	(?___xxtofl+1)^0,c
  7703   001478  0E00               	movlw	0
  7704   00147A  6E0A               	movwf	(?___xxtofl+2)^0,c
  7705   00147C  0E00               	movlw	0
  7706   00147E  6E0B               	movwf	(?___xxtofl+3)^0,c
  7707   001480  EFD3  F00A         	goto	l1428
  7708   001484                     l4019:
  7709   001484  0E96               	movlw	150
  7710   001486  6E11               	movwf	___xxtofl@exp^0,c
  7711   001488  EF4C  F00A         	goto	l4023
  7712   00148C                     l4021:
  7713   00148C  2A11               	incf	___xxtofl@exp^0,f,c
  7714   00148E  90D8               	bcf	status,0,c
  7715   001490  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  7716   001492  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  7717   001494  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  7718   001496  3212               	rrcf	___xxtofl@arg^0,f,c
  7719   001498                     l4023:
  7720   001498  0E00               	movlw	0
  7721   00149A  1412               	andwf	___xxtofl@arg^0,w,c
  7722   00149C  6E0C               	movwf	??___xxtofl^0,c
  7723   00149E  0E00               	movlw	0
  7724   0014A0  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  7725   0014A2  6E0D               	movwf	(??___xxtofl+1)^0,c
  7726   0014A4  0E00               	movlw	0
  7727   0014A6  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  7728   0014A8  6E0E               	movwf	(??___xxtofl+2)^0,c
  7729   0014AA  0EFE               	movlw	254
  7730   0014AC  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  7731   0014AE  6E0F               	movwf	(??___xxtofl+3)^0,c
  7732   0014B0  500C               	movf	??___xxtofl^0,w,c
  7733   0014B2  100D               	iorwf	(??___xxtofl+1)^0,w,c
  7734   0014B4  100E               	iorwf	(??___xxtofl+2)^0,w,c
  7735   0014B6  100F               	iorwf	(??___xxtofl+3)^0,w,c
  7736   0014B8  A4D8               	btfss	status,2,c
  7737   0014BA  EF61  F00A         	goto	u3381
  7738   0014BE  EF63  F00A         	goto	u3380
  7739   0014C2                     u3381:
  7740   0014C2  EF46  F00A         	goto	l4021
  7741   0014C6                     u3380:
  7742   0014C6  EF71  F00A         	goto	l1432
  7743   0014CA                     l4025:
  7744   0014CA  2A11               	incf	___xxtofl@exp^0,f,c
  7745   0014CC  0E01               	movlw	1
  7746   0014CE  2612               	addwf	___xxtofl@arg^0,f,c
  7747   0014D0  0E00               	movlw	0
  7748   0014D2  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  7749   0014D4  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  7750   0014D6  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  7751   0014D8  90D8               	bcf	status,0,c
  7752   0014DA  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  7753   0014DC  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  7754   0014DE  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  7755   0014E0  3212               	rrcf	___xxtofl@arg^0,f,c
  7756   0014E2                     l1432:
  7757   0014E2  0E00               	movlw	0
  7758   0014E4  1412               	andwf	___xxtofl@arg^0,w,c
  7759   0014E6  6E0C               	movwf	??___xxtofl^0,c
  7760   0014E8  0E00               	movlw	0
  7761   0014EA  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  7762   0014EC  6E0D               	movwf	(??___xxtofl+1)^0,c
  7763   0014EE  0E00               	movlw	0
  7764   0014F0  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  7765   0014F2  6E0E               	movwf	(??___xxtofl+2)^0,c
  7766   0014F4  0EFF               	movlw	255
  7767   0014F6  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  7768   0014F8  6E0F               	movwf	(??___xxtofl+3)^0,c
  7769   0014FA  500C               	movf	??___xxtofl^0,w,c
  7770   0014FC  100D               	iorwf	(??___xxtofl+1)^0,w,c
  7771   0014FE  100E               	iorwf	(??___xxtofl+2)^0,w,c
  7772   001500  100F               	iorwf	(??___xxtofl+3)^0,w,c
  7773   001502  A4D8               	btfss	status,2,c
  7774   001504  EF86  F00A         	goto	u3391
  7775   001508  EF88  F00A         	goto	u3390
  7776   00150C                     u3391:
  7777   00150C  EF65  F00A         	goto	l4025
  7778   001510                     u3390:
  7779   001510  EF90  F00A         	goto	l4033
  7780   001514                     l4031:
  7781   001514  0611               	decf	___xxtofl@exp^0,f,c
  7782   001516  90D8               	bcf	status,0,c
  7783   001518  3612               	rlcf	___xxtofl@arg^0,f,c
  7784   00151A  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  7785   00151C  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  7786   00151E  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  7787   001520                     l4033:
  7788   001520  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  7789   001522  EF95  F00A         	goto	u3401
  7790   001526  EF97  F00A         	goto	u3400
  7791   00152A                     u3401:
  7792   00152A  EF9F  F00A         	goto	l1439
  7793   00152E                     u3400:
  7794   00152E  0E02               	movlw	2
  7795   001530  6011               	cpfslt	___xxtofl@exp^0,c
  7796   001532  EF9D  F00A         	goto	u3411
  7797   001536  EF9F  F00A         	goto	u3410
  7798   00153A                     u3411:
  7799   00153A  EF8A  F00A         	goto	l4031
  7800   00153E                     u3410:
  7801   00153E                     l1439:
  7802   00153E  B011               	btfsc	___xxtofl@exp^0,0,c
  7803   001540  EFA4  F00A         	goto	u3421
  7804   001544  EFA6  F00A         	goto	u3420
  7805   001548                     u3421:
  7806   001548  EFA7  F00A         	goto	l4039
  7807   00154C                     u3420:
  7808   00154C  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  7809   00154E                     l4039:
  7810   00154E  90D8               	bcf	status,0,c
  7811   001550  3211               	rrcf	___xxtofl@exp^0,f,c
  7812   001552  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  7813   001556  6A0D               	clrf	(??___xxtofl+1)^0,c
  7814   001558  6A0E               	clrf	(??___xxtofl+2)^0,c
  7815   00155A  6A0F               	clrf	(??___xxtofl+3)^0,c
  7816   00155C  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  7817   001560  6A0E               	clrf	(??___xxtofl+2)^0,c
  7818   001562  6A0D               	clrf	(??___xxtofl+1)^0,c
  7819   001564  6A0C               	clrf	??___xxtofl^0,c
  7820   001566  500C               	movf	??___xxtofl^0,w,c
  7821   001568  1212               	iorwf	___xxtofl@arg^0,f,c
  7822   00156A  500D               	movf	(??___xxtofl+1)^0,w,c
  7823   00156C  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  7824   00156E  500E               	movf	(??___xxtofl+2)^0,w,c
  7825   001570  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  7826   001572  500F               	movf	(??___xxtofl+3)^0,w,c
  7827   001574  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  7828   001576  5010               	movf	___xxtofl@sign^0,w,c
  7829   001578  B4D8               	btfsc	status,2,c
  7830   00157A  EFC1  F00A         	goto	u3431
  7831   00157E  EFC3  F00A         	goto	u3430
  7832   001582                     u3431:
  7833   001582  EFCB  F00A         	goto	l4049
  7834   001586                     u3430:
  7835   001586  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  7836   001588  EFCA  F00A         	goto	u3440
  7837   00158C  EFC8  F00A         	goto	u3441
  7838   001590                     u3441:
  7839   001590  EFCB  F00A         	goto	l4049
  7840   001594                     u3440:
  7841   001594  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  7842   001596                     l4049:
  7843   001596  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  7844   00159A  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  7845   00159E  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  7846   0015A2  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  7847   0015A6                     l1428:
  7848   0015A6  0012               	return		;funcret
  7849   0015A8                     __end_of___xxtofl:
  7850                           	callstack 0
  7851                           
  7852 ;; *************** function ___fltol *****************
  7853 ;; Defined at:
  7854 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;  f1              4   46[COMRAM] unsigned char 
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;  exp1            1   55[COMRAM] unsigned char 
  7859 ;;  sign1           1   54[COMRAM] unsigned char 
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  4   46[COMRAM] long 
  7862 ;; Registers used:
  7863 ;;		wreg, status,2, status,0
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/0
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7869 ;;      Params:         4       0       0       0       0       0       0
  7870 ;;      Locals:         2       0       0       0       0       0       0
  7871 ;;      Temps:          4       0       0       0       0       0       0
  7872 ;;      Totals:        10       0       0       0       0       0       0
  7873 ;;Total ram usage:       10 bytes
  7874 ;; Hardware stack levels used: 1
  7875 ;; Hardware stack levels required when called: 1
  7876 ;; This function calls:
  7877 ;;		Nothing
  7878 ;; This function is called by:
  7879 ;;		_main
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           	psect	text47
  7884   001908                     __ptext47:
  7885                           	callstack 0
  7886   001908                     ___fltol:
  7887                           	callstack 29
  7888   001908  3431               	rlcf	(___fltol@f1+2)^0,w,c
  7889   00190A  3432               	rlcf	(___fltol@f1+3)^0,w,c
  7890   00190C  6E38               	movwf	___fltol@exp1^0,c
  7891   00190E  5038               	movf	___fltol@exp1^0,w,c
  7892   001910  A4D8               	btfss	status,2,c
  7893   001912  EF8D  F00C         	goto	u3281
  7894   001916  EF8F  F00C         	goto	u3280
  7895   00191A                     u3281:
  7896   00191A  EF99  F00C         	goto	l3969
  7897   00191E                     u3280:
  7898   00191E                     l3965:
  7899   00191E  0E00               	movlw	0
  7900   001920  6E2F               	movwf	?___fltol^0,c
  7901   001922  0E00               	movlw	0
  7902   001924  6E30               	movwf	(?___fltol+1)^0,c
  7903   001926  0E00               	movlw	0
  7904   001928  6E31               	movwf	(?___fltol+2)^0,c
  7905   00192A  0E00               	movlw	0
  7906   00192C  6E32               	movwf	(?___fltol+3)^0,c
  7907   00192E  EF06  F00D         	goto	l1067
  7908   001932                     l3969:
  7909   001932  C02F  F033         	movff	___fltol@f1,??___fltol
  7910   001936  C030  F034         	movff	___fltol@f1+1,??___fltol+1
  7911   00193A  C031  F035         	movff	___fltol@f1+2,??___fltol+2
  7912   00193E  C032  F036         	movff	___fltol@f1+3,??___fltol+3
  7913   001942  0E20               	movlw	32
  7914   001944  EFA9  F00C         	goto	u3290
  7915   001948                     u3295:
  7916   001948  90D8               	bcf	status,0,c
  7917   00194A  3236               	rrcf	(??___fltol+3)^0,f,c
  7918   00194C  3235               	rrcf	(??___fltol+2)^0,f,c
  7919   00194E  3234               	rrcf	(??___fltol+1)^0,f,c
  7920   001950  3233               	rrcf	??___fltol^0,f,c
  7921   001952                     u3290:
  7922   001952  2EE8               	decfsz	wreg,f,c
  7923   001954  EFA4  F00C         	goto	u3295
  7924   001958  5033               	movf	??___fltol^0,w,c
  7925   00195A  6E37               	movwf	___fltol@sign1^0,c
  7926   00195C  8E31               	bsf	(___fltol@f1+2)^0,7,c
  7927   00195E  0EFF               	movlw	255
  7928   001960  162F               	andwf	___fltol@f1^0,f,c
  7929   001962  0EFF               	movlw	255
  7930   001964  1630               	andwf	(___fltol@f1+1)^0,f,c
  7931   001966  0EFF               	movlw	255
  7932   001968  1631               	andwf	(___fltol@f1+2)^0,f,c
  7933   00196A  0E00               	movlw	0
  7934   00196C  1632               	andwf	(___fltol@f1+3)^0,f,c
  7935   00196E  0E96               	movlw	150
  7936   001970  5E38               	subwf	___fltol@exp1^0,f,c
  7937   001972  BE38               	btfsc	___fltol@exp1^0,7,c
  7938   001974  EFC0  F00C         	goto	u3300
  7939   001978  EFBE  F00C         	goto	u3301
  7940   00197C                     u3301:
  7941   00197C  EFD6  F00C         	goto	l3989
  7942   001980                     u3300:
  7943   001980  5038               	movf	___fltol@exp1^0,w,c
  7944   001982  0A80               	xorlw	128
  7945   001984  0F97               	addlw	151
  7946   001986  B0D8               	btfsc	status,0,c
  7947   001988  EFC8  F00C         	goto	u3311
  7948   00198C  EFCA  F00C         	goto	u3310
  7949   001990                     u3311:
  7950   001990  EFCC  F00C         	goto	l3985
  7951   001994                     u3310:
  7952   001994  EF8F  F00C         	goto	l3965
  7953   001998                     l3985:
  7954   001998  90D8               	bcf	status,0,c
  7955   00199A  3232               	rrcf	(___fltol@f1+3)^0,f,c
  7956   00199C  3231               	rrcf	(___fltol@f1+2)^0,f,c
  7957   00199E  3230               	rrcf	(___fltol@f1+1)^0,f,c
  7958   0019A0  322F               	rrcf	___fltol@f1^0,f,c
  7959   0019A2  3E38               	incfsz	___fltol@exp1^0,f,c
  7960   0019A4  EFCC  F00C         	goto	l3985
  7961   0019A8  EFEE  F00C         	goto	l3999
  7962   0019AC                     l3989:
  7963   0019AC  0E1F               	movlw	31
  7964   0019AE  6438               	cpfsgt	___fltol@exp1^0,c
  7965   0019B0  EFDC  F00C         	goto	u3321
  7966   0019B4  EFDE  F00C         	goto	u3320
  7967   0019B8                     u3321:
  7968   0019B8  EFE6  F00C         	goto	l3997
  7969   0019BC                     u3320:
  7970   0019BC  EF8F  F00C         	goto	l3965
  7971   0019C0                     l3995:
  7972   0019C0  90D8               	bcf	status,0,c
  7973   0019C2  362F               	rlcf	___fltol@f1^0,f,c
  7974   0019C4  3630               	rlcf	(___fltol@f1+1)^0,f,c
  7975   0019C6  3631               	rlcf	(___fltol@f1+2)^0,f,c
  7976   0019C8  3632               	rlcf	(___fltol@f1+3)^0,f,c
  7977   0019CA  0638               	decf	___fltol@exp1^0,f,c
  7978   0019CC                     l3997:
  7979   0019CC  5038               	movf	___fltol@exp1^0,w,c
  7980   0019CE  A4D8               	btfss	status,2,c
  7981   0019D0  EFEC  F00C         	goto	u3331
  7982   0019D4  EFEE  F00C         	goto	u3330
  7983   0019D8                     u3331:
  7984   0019D8  EFE0  F00C         	goto	l3995
  7985   0019DC                     u3330:
  7986   0019DC                     l3999:
  7987   0019DC  5037               	movf	___fltol@sign1^0,w,c
  7988   0019DE  B4D8               	btfsc	status,2,c
  7989   0019E0  EFF4  F00C         	goto	u3341
  7990   0019E4  EFF6  F00C         	goto	u3340
  7991   0019E8                     u3341:
  7992   0019E8  EFFE  F00C         	goto	l4003
  7993   0019EC                     u3340:
  7994   0019EC  1E32               	comf	(___fltol@f1+3)^0,f,c
  7995   0019EE  1E31               	comf	(___fltol@f1+2)^0,f,c
  7996   0019F0  1E30               	comf	(___fltol@f1+1)^0,f,c
  7997   0019F2  6C2F               	negf	___fltol@f1^0,c
  7998   0019F4  0E00               	movlw	0
  7999   0019F6  2230               	addwfc	(___fltol@f1+1)^0,f,c
  8000   0019F8  2231               	addwfc	(___fltol@f1+2)^0,f,c
  8001   0019FA  2232               	addwfc	(___fltol@f1+3)^0,f,c
  8002   0019FC                     l4003:
  8003   0019FC  C02F  F02F         	movff	___fltol@f1,?___fltol
  8004   001A00  C030  F030         	movff	___fltol@f1+1,?___fltol+1
  8005   001A04  C031  F031         	movff	___fltol@f1+2,?___fltol+2
  8006   001A08  C032  F032         	movff	___fltol@f1+3,?___fltol+3
  8007   001A0C                     l1067:
  8008   001A0C  0012               	return		;funcret
  8009   001A0E                     __end_of___fltol:
  8010                           	callstack 0
  8011                           
  8012 ;; *************** function ___fldiv *****************
  8013 ;; Defined at:
  8014 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;  b               4   21[COMRAM] long 
  8017 ;;  a               4   25[COMRAM] long 
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;  grs             4   40[COMRAM] unsigned long 
  8020 ;;  rem             4   33[COMRAM] unsigned long 
  8021 ;;  new_exp         2   38[COMRAM] short 
  8022 ;;  aexp            1   45[COMRAM] unsigned char 
  8023 ;;  bexp            1   44[COMRAM] unsigned char 
  8024 ;;  sign            1   37[COMRAM] unsigned char 
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  4   21[COMRAM] unsigned char 
  8027 ;; Registers used:
  8028 ;;		wreg, status,2, status,0
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8034 ;;      Params:         8       0       0       0       0       0       0
  8035 ;;      Locals:        13       0       0       0       0       0       0
  8036 ;;      Temps:          4       0       0       0       0       0       0
  8037 ;;      Totals:        25       0       0       0       0       0       0
  8038 ;;Total ram usage:       25 bytes
  8039 ;; Hardware stack levels used: 1
  8040 ;; Hardware stack levels required when called: 1
  8041 ;; This function calls:
  8042 ;;		Nothing
  8043 ;; This function is called by:
  8044 ;;		_main
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048                           	psect	text48
  8049   000012                     __ptext48:
  8050                           	callstack 0
  8051   000012                     ___fldiv:
  8052                           	callstack 29
  8053   000012  5019               	movf	(___fldiv@b+3)^0,w,c
  8054   000014  0B80               	andlw	128
  8055   000016  6E26               	movwf	___fldiv@sign^0,c
  8056   000018  5019               	movf	(___fldiv@b+3)^0,w,c
  8057   00001A  2419               	addwf	(___fldiv@b+3)^0,w,c
  8058   00001C  6E2D               	movwf	___fldiv@bexp^0,c
  8059   00001E  AE18               	btfss	(___fldiv@b+2)^0,7,c
  8060   000020  EF14  F000         	goto	u3051
  8061   000024  EF16  F000         	goto	u3050
  8062   000028                     u3051:
  8063   000028  EF17  F000         	goto	l3831
  8064   00002C                     u3050:
  8065   00002C  802D               	bsf	___fldiv@bexp^0,0,c
  8066   00002E                     l3831:
  8067   00002E  502D               	movf	___fldiv@bexp^0,w,c
  8068   000030  B4D8               	btfsc	status,2,c
  8069   000032  EF1D  F000         	goto	u3061
  8070   000036  EF1F  F000         	goto	u3060
  8071   00003A                     u3061:
  8072   00003A  EF34  F000         	goto	l3841
  8073   00003E                     u3060:
  8074   00003E  282D               	incf	___fldiv@bexp^0,w,c
  8075   000040  A4D8               	btfss	status,2,c
  8076   000042  EF25  F000         	goto	u3071
  8077   000046  EF27  F000         	goto	u3070
  8078   00004A                     u3071:
  8079   00004A  EF2F  F000         	goto	l3837
  8080   00004E                     u3070:
  8081   00004E  0E00               	movlw	0
  8082   000050  6E16               	movwf	___fldiv@b^0,c
  8083   000052  0E00               	movlw	0
  8084   000054  6E17               	movwf	(___fldiv@b+1)^0,c
  8085   000056  0E00               	movlw	0
  8086   000058  6E18               	movwf	(___fldiv@b+2)^0,c
  8087   00005A  0E00               	movlw	0
  8088   00005C  6E19               	movwf	(___fldiv@b+3)^0,c
  8089   00005E                     l3837:
  8090   00005E  8E18               	bsf	(___fldiv@b+2)^0,7,c
  8091   000060  0E00               	movlw	0
  8092   000062  6E19               	movwf	(___fldiv@b+3)^0,c
  8093   000064  EF3C  F000         	goto	l3843
  8094   000068                     l3841:
  8095   000068  0E00               	movlw	0
  8096   00006A  6E16               	movwf	___fldiv@b^0,c
  8097   00006C  0E00               	movlw	0
  8098   00006E  6E17               	movwf	(___fldiv@b+1)^0,c
  8099   000070  0E00               	movlw	0
  8100   000072  6E18               	movwf	(___fldiv@b+2)^0,c
  8101   000074  0E00               	movlw	0
  8102   000076  6E19               	movwf	(___fldiv@b+3)^0,c
  8103   000078                     l3843:
  8104   000078  501D               	movf	(___fldiv@a+3)^0,w,c
  8105   00007A  0B80               	andlw	128
  8106   00007C  1A26               	xorwf	___fldiv@sign^0,f,c
  8107   00007E  501D               	movf	(___fldiv@a+3)^0,w,c
  8108   000080  241D               	addwf	(___fldiv@a+3)^0,w,c
  8109   000082  6E2E               	movwf	___fldiv@aexp^0,c
  8110   000084  AE1C               	btfss	(___fldiv@a+2)^0,7,c
  8111   000086  EF47  F000         	goto	u3081
  8112   00008A  EF49  F000         	goto	u3080
  8113   00008E                     u3081:
  8114   00008E  EF4A  F000         	goto	l3851
  8115   000092                     u3080:
  8116   000092  802E               	bsf	___fldiv@aexp^0,0,c
  8117   000094                     l3851:
  8118   000094  502E               	movf	___fldiv@aexp^0,w,c
  8119   000096  B4D8               	btfsc	status,2,c
  8120   000098  EF50  F000         	goto	u3091
  8121   00009C  EF52  F000         	goto	u3090
  8122   0000A0                     u3091:
  8123   0000A0  EF67  F000         	goto	l3861
  8124   0000A4                     u3090:
  8125   0000A4  282E               	incf	___fldiv@aexp^0,w,c
  8126   0000A6  A4D8               	btfss	status,2,c
  8127   0000A8  EF58  F000         	goto	u3101
  8128   0000AC  EF5A  F000         	goto	u3100
  8129   0000B0                     u3101:
  8130   0000B0  EF62  F000         	goto	l3857
  8131   0000B4                     u3100:
  8132   0000B4  0E00               	movlw	0
  8133   0000B6  6E1A               	movwf	___fldiv@a^0,c
  8134   0000B8  0E00               	movlw	0
  8135   0000BA  6E1B               	movwf	(___fldiv@a+1)^0,c
  8136   0000BC  0E00               	movlw	0
  8137   0000BE  6E1C               	movwf	(___fldiv@a+2)^0,c
  8138   0000C0  0E00               	movlw	0
  8139   0000C2  6E1D               	movwf	(___fldiv@a+3)^0,c
  8140   0000C4                     l3857:
  8141   0000C4  8E1C               	bsf	(___fldiv@a+2)^0,7,c
  8142   0000C6  0E00               	movlw	0
  8143   0000C8  6E1D               	movwf	(___fldiv@a+3)^0,c
  8144   0000CA  EF6F  F000         	goto	l3863
  8145   0000CE                     l3861:
  8146   0000CE  0E00               	movlw	0
  8147   0000D0  6E1A               	movwf	___fldiv@a^0,c
  8148   0000D2  0E00               	movlw	0
  8149   0000D4  6E1B               	movwf	(___fldiv@a+1)^0,c
  8150   0000D6  0E00               	movlw	0
  8151   0000D8  6E1C               	movwf	(___fldiv@a+2)^0,c
  8152   0000DA  0E00               	movlw	0
  8153   0000DC  6E1D               	movwf	(___fldiv@a+3)^0,c
  8154   0000DE                     l3863:
  8155   0000DE  501A               	movf	___fldiv@a^0,w,c
  8156   0000E0  101B               	iorwf	(___fldiv@a+1)^0,w,c
  8157   0000E2  101C               	iorwf	(___fldiv@a+2)^0,w,c
  8158   0000E4  101D               	iorwf	(___fldiv@a+3)^0,w,c
  8159   0000E6  A4D8               	btfss	status,2,c
  8160   0000E8  EF78  F000         	goto	u3111
  8161   0000EC  EF7A  F000         	goto	u3110
  8162   0000F0                     u3111:
  8163   0000F0  EF92  F000         	goto	l3875
  8164   0000F4                     u3110:
  8165   0000F4  0E00               	movlw	0
  8166   0000F6  6E16               	movwf	___fldiv@b^0,c
  8167   0000F8  0E00               	movlw	0
  8168   0000FA  6E17               	movwf	(___fldiv@b+1)^0,c
  8169   0000FC  0E00               	movlw	0
  8170   0000FE  6E18               	movwf	(___fldiv@b+2)^0,c
  8171   000100  0E00               	movlw	0
  8172   000102  6E19               	movwf	(___fldiv@b+3)^0,c
  8173   000104  0E80               	movlw	128
  8174   000106  1218               	iorwf	(___fldiv@b+2)^0,f,c
  8175   000108  0E7F               	movlw	127
  8176   00010A  1219               	iorwf	(___fldiv@b+3)^0,f,c
  8177   00010C                     l3869:
  8178   00010C  5026               	movf	___fldiv@sign^0,w,c
  8179   00010E  1219               	iorwf	(___fldiv@b+3)^0,f,c
  8180   000110  C016  F016         	movff	___fldiv@b,?___fldiv
  8181   000114  C017  F017         	movff	___fldiv@b+1,?___fldiv+1
  8182   000118  C018  F018         	movff	___fldiv@b+2,?___fldiv+2
  8183   00011C  C019  F019         	movff	___fldiv@b+3,?___fldiv+3
  8184   000120  EFD5  F001         	goto	l1352
  8185   000124                     l3875:
  8186   000124  502D               	movf	___fldiv@bexp^0,w,c
  8187   000126  A4D8               	btfss	status,2,c
  8188   000128  EF98  F000         	goto	u3121
  8189   00012C  EF9A  F000         	goto	u3120
  8190   000130                     u3121:
  8191   000130  EFA4  F000         	goto	l3883
  8192   000134                     u3120:
  8193   000134  0E00               	movlw	0
  8194   000136  6E16               	movwf	?___fldiv^0,c
  8195   000138  0E00               	movlw	0
  8196   00013A  6E17               	movwf	(?___fldiv+1)^0,c
  8197   00013C  0E00               	movlw	0
  8198   00013E  6E18               	movwf	(?___fldiv+2)^0,c
  8199   000140  0E00               	movlw	0
  8200   000142  6E19               	movwf	(?___fldiv+3)^0,c
  8201   000144  EFD5  F001         	goto	l1352
  8202   000148                     l3883:
  8203   000148  502E               	movf	___fldiv@aexp^0,w,c
  8204   00014A  C02D  F01E         	movff	___fldiv@bexp,??___fldiv
  8205   00014E  6A1F               	clrf	(??___fldiv+1)^0,c
  8206   000150  5E1E               	subwf	??___fldiv^0,f,c
  8207   000152  0E00               	movlw	0
  8208   000154  5A1F               	subwfb	(??___fldiv+1)^0,f,c
  8209   000156  0E7F               	movlw	127
  8210   000158  241E               	addwf	??___fldiv^0,w,c
  8211   00015A  6E27               	movwf	___fldiv@new_exp^0,c
  8212   00015C  0E00               	movlw	0
  8213   00015E  201F               	addwfc	(??___fldiv+1)^0,w,c
  8214   000160  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  8215   000162  C016  F022         	movff	___fldiv@b,___fldiv@rem
  8216   000166  C017  F023         	movff	___fldiv@b+1,___fldiv@rem+1
  8217   00016A  C018  F024         	movff	___fldiv@b+2,___fldiv@rem+2
  8218   00016E  C019  F025         	movff	___fldiv@b+3,___fldiv@rem+3
  8219   000172  0E00               	movlw	0
  8220   000174  6E16               	movwf	___fldiv@b^0,c
  8221   000176  0E00               	movlw	0
  8222   000178  6E17               	movwf	(___fldiv@b+1)^0,c
  8223   00017A  0E00               	movlw	0
  8224   00017C  6E18               	movwf	(___fldiv@b+2)^0,c
  8225   00017E  0E00               	movlw	0
  8226   000180  6E19               	movwf	(___fldiv@b+3)^0,c
  8227   000182  0E00               	movlw	0
  8228   000184  6E29               	movwf	___fldiv@grs^0,c
  8229   000186  0E00               	movlw	0
  8230   000188  6E2A               	movwf	(___fldiv@grs+1)^0,c
  8231   00018A  0E00               	movlw	0
  8232   00018C  6E2B               	movwf	(___fldiv@grs+2)^0,c
  8233   00018E  0E00               	movlw	0
  8234   000190  6E2C               	movwf	(___fldiv@grs+3)^0,c
  8235   000192  0E00               	movlw	0
  8236   000194  6E2E               	movwf	___fldiv@aexp^0,c
  8237   000196  EF05  F001         	goto	l1354
  8238   00019A                     l3893:
  8239   00019A  502E               	movf	___fldiv@aexp^0,w,c
  8240   00019C  B4D8               	btfsc	status,2,c
  8241   00019E  EFD3  F000         	goto	u3131
  8242   0001A2  EFD5  F000         	goto	u3130
  8243   0001A6                     u3131:
  8244   0001A6  EFEC  F000         	goto	l3901
  8245   0001AA                     u3130:
  8246   0001AA  90D8               	bcf	status,0,c
  8247   0001AC  3622               	rlcf	___fldiv@rem^0,f,c
  8248   0001AE  3623               	rlcf	(___fldiv@rem+1)^0,f,c
  8249   0001B0  3624               	rlcf	(___fldiv@rem+2)^0,f,c
  8250   0001B2  3625               	rlcf	(___fldiv@rem+3)^0,f,c
  8251   0001B4  90D8               	bcf	status,0,c
  8252   0001B6  3616               	rlcf	___fldiv@b^0,f,c
  8253   0001B8  3617               	rlcf	(___fldiv@b+1)^0,f,c
  8254   0001BA  3618               	rlcf	(___fldiv@b+2)^0,f,c
  8255   0001BC  3619               	rlcf	(___fldiv@b+3)^0,f,c
  8256   0001BE  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  8257   0001C0  EFE4  F000         	goto	u3141
  8258   0001C4  EFE6  F000         	goto	u3140
  8259   0001C8                     u3141:
  8260   0001C8  EFE7  F000         	goto	l1357
  8261   0001CC                     u3140:
  8262   0001CC  8016               	bsf	___fldiv@b^0,0,c
  8263   0001CE                     l1357:
  8264   0001CE  90D8               	bcf	status,0,c
  8265   0001D0  3629               	rlcf	___fldiv@grs^0,f,c
  8266   0001D2  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  8267   0001D4  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  8268   0001D6  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  8269   0001D8                     l3901:
  8270   0001D8  501A               	movf	___fldiv@a^0,w,c
  8271   0001DA  5C22               	subwf	___fldiv@rem^0,w,c
  8272   0001DC  501B               	movf	(___fldiv@a+1)^0,w,c
  8273   0001DE  5823               	subwfb	(___fldiv@rem+1)^0,w,c
  8274   0001E0  501C               	movf	(___fldiv@a+2)^0,w,c
  8275   0001E2  5824               	subwfb	(___fldiv@rem+2)^0,w,c
  8276   0001E4  501D               	movf	(___fldiv@a+3)^0,w,c
  8277   0001E6  5825               	subwfb	(___fldiv@rem+3)^0,w,c
  8278   0001E8  A0D8               	btfss	status,0,c
  8279   0001EA  EFF9  F000         	goto	u3151
  8280   0001EE  EFFB  F000         	goto	u3150
  8281   0001F2                     u3151:
  8282   0001F2  EF04  F001         	goto	l3907
  8283   0001F6                     u3150:
  8284   0001F6  8C2C               	bsf	(___fldiv@grs+3)^0,6,c
  8285   0001F8  501A               	movf	___fldiv@a^0,w,c
  8286   0001FA  5E22               	subwf	___fldiv@rem^0,f,c
  8287   0001FC  501B               	movf	(___fldiv@a+1)^0,w,c
  8288   0001FE  5A23               	subwfb	(___fldiv@rem+1)^0,f,c
  8289   000200  501C               	movf	(___fldiv@a+2)^0,w,c
  8290   000202  5A24               	subwfb	(___fldiv@rem+2)^0,f,c
  8291   000204  501D               	movf	(___fldiv@a+3)^0,w,c
  8292   000206  5A25               	subwfb	(___fldiv@rem+3)^0,f,c
  8293   000208                     l3907:
  8294   000208  2A2E               	incf	___fldiv@aexp^0,f,c
  8295   00020A                     l1354:
  8296   00020A  0E19               	movlw	25
  8297   00020C  642E               	cpfsgt	___fldiv@aexp^0,c
  8298   00020E  EF0B  F001         	goto	u3161
  8299   000212  EF0D  F001         	goto	u3160
  8300   000216                     u3161:
  8301   000216  EFCD  F000         	goto	l3893
  8302   00021A                     u3160:
  8303   00021A  5022               	movf	___fldiv@rem^0,w,c
  8304   00021C  1023               	iorwf	(___fldiv@rem+1)^0,w,c
  8305   00021E  1024               	iorwf	(___fldiv@rem+2)^0,w,c
  8306   000220  1025               	iorwf	(___fldiv@rem+3)^0,w,c
  8307   000222  B4D8               	btfsc	status,2,c
  8308   000224  EF16  F001         	goto	u3171
  8309   000228  EF18  F001         	goto	u3170
  8310   00022C                     u3171:
  8311   00022C  EF30  F001         	goto	l3919
  8312   000230                     u3170:
  8313   000230  8029               	bsf	___fldiv@grs^0,0,c
  8314   000232  EF30  F001         	goto	l3919
  8315   000236                     l3913:
  8316   000236  90D8               	bcf	status,0,c
  8317   000238  3616               	rlcf	___fldiv@b^0,f,c
  8318   00023A  3617               	rlcf	(___fldiv@b+1)^0,f,c
  8319   00023C  3618               	rlcf	(___fldiv@b+2)^0,f,c
  8320   00023E  3619               	rlcf	(___fldiv@b+3)^0,f,c
  8321   000240  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  8322   000242  EF25  F001         	goto	u3181
  8323   000246  EF27  F001         	goto	u3180
  8324   00024A                     u3181:
  8325   00024A  EF28  F001         	goto	l1363
  8326   00024E                     u3180:
  8327   00024E  8016               	bsf	___fldiv@b^0,0,c
  8328   000250                     l1363:
  8329   000250  90D8               	bcf	status,0,c
  8330   000252  3629               	rlcf	___fldiv@grs^0,f,c
  8331   000254  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  8332   000256  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  8333   000258  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  8334   00025A  0627               	decf	___fldiv@new_exp^0,f,c
  8335   00025C  A0D8               	btfss	status,0,c
  8336   00025E  0628               	decf	(___fldiv@new_exp+1)^0,f,c
  8337   000260                     l3919:
  8338   000260  AE18               	btfss	(___fldiv@b+2)^0,7,c
  8339   000262  EF35  F001         	goto	u3191
  8340   000266  EF37  F001         	goto	u3190
  8341   00026A                     u3191:
  8342   00026A  EF1B  F001         	goto	l3913
  8343   00026E                     u3190:
  8344   00026E  0E00               	movlw	0
  8345   000270  6E2E               	movwf	___fldiv@aexp^0,c
  8346   000272  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  8347   000274  EF3E  F001         	goto	u3201
  8348   000278  EF40  F001         	goto	u3200
  8349   00027C                     u3201:
  8350   00027C  EF64  F001         	goto	l1365
  8351   000280                     u3200:
  8352   000280  0EFF               	movlw	255
  8353   000282  1429               	andwf	___fldiv@grs^0,w,c
  8354   000284  6E1E               	movwf	??___fldiv^0,c
  8355   000286  0EFF               	movlw	255
  8356   000288  142A               	andwf	(___fldiv@grs+1)^0,w,c
  8357   00028A  6E1F               	movwf	(??___fldiv+1)^0,c
  8358   00028C  0EFF               	movlw	255
  8359   00028E  142B               	andwf	(___fldiv@grs+2)^0,w,c
  8360   000290  6E20               	movwf	(??___fldiv+2)^0,c
  8361   000292  0E7F               	movlw	127
  8362   000294  142C               	andwf	(___fldiv@grs+3)^0,w,c
  8363   000296  6E21               	movwf	(??___fldiv+3)^0,c
  8364   000298  501E               	movf	??___fldiv^0,w,c
  8365   00029A  101F               	iorwf	(??___fldiv+1)^0,w,c
  8366   00029C  1020               	iorwf	(??___fldiv+2)^0,w,c
  8367   00029E  1021               	iorwf	(??___fldiv+3)^0,w,c
  8368   0002A0  B4D8               	btfsc	status,2,c
  8369   0002A2  EF55  F001         	goto	u3211
  8370   0002A6  EF57  F001         	goto	u3210
  8371   0002AA                     u3211:
  8372   0002AA  EF5B  F001         	goto	l1366
  8373   0002AE                     u3210:
  8374   0002AE                     l3927:
  8375   0002AE  0E01               	movlw	1
  8376   0002B0  6E2E               	movwf	___fldiv@aexp^0,c
  8377   0002B2  EF64  F001         	goto	l1365
  8378   0002B6                     l1366:
  8379   0002B6  A016               	btfss	___fldiv@b^0,0,c
  8380   0002B8  EF60  F001         	goto	u3221
  8381   0002BC  EF62  F001         	goto	u3220
  8382   0002C0                     u3221:
  8383   0002C0  EF64  F001         	goto	l1365
  8384   0002C4                     u3220:
  8385   0002C4  EF57  F001         	goto	l3927
  8386   0002C8                     l1365:
  8387   0002C8  502E               	movf	___fldiv@aexp^0,w,c
  8388   0002CA  B4D8               	btfsc	status,2,c
  8389   0002CC  EF6A  F001         	goto	u3231
  8390   0002D0  EF6C  F001         	goto	u3230
  8391   0002D4                     u3231:
  8392   0002D4  EF90  F001         	goto	l3939
  8393   0002D8                     u3230:
  8394   0002D8  0E01               	movlw	1
  8395   0002DA  2616               	addwf	___fldiv@b^0,f,c
  8396   0002DC  0E00               	movlw	0
  8397   0002DE  2217               	addwfc	(___fldiv@b+1)^0,f,c
  8398   0002E0  2218               	addwfc	(___fldiv@b+2)^0,f,c
  8399   0002E2  2219               	addwfc	(___fldiv@b+3)^0,f,c
  8400   0002E4  A019               	btfss	(___fldiv@b+3)^0,0,c
  8401   0002E6  EF77  F001         	goto	u3241
  8402   0002EA  EF79  F001         	goto	u3240
  8403   0002EE                     u3241:
  8404   0002EE  EF90  F001         	goto	l3939
  8405   0002F2                     u3240:
  8406   0002F2  C016  F01E         	movff	___fldiv@b,??___fldiv
  8407   0002F6  C017  F01F         	movff	___fldiv@b+1,??___fldiv+1
  8408   0002FA  C018  F020         	movff	___fldiv@b+2,??___fldiv+2
  8409   0002FE  C019  F021         	movff	___fldiv@b+3,??___fldiv+3
  8410   000302  3421               	rlcf	(??___fldiv+3)^0,w,c
  8411   000304  3221               	rrcf	(??___fldiv+3)^0,f,c
  8412   000306  3220               	rrcf	(??___fldiv+2)^0,f,c
  8413   000308  321F               	rrcf	(??___fldiv+1)^0,f,c
  8414   00030A  321E               	rrcf	??___fldiv^0,f,c
  8415   00030C  C01E  F016         	movff	??___fldiv,___fldiv@b
  8416   000310  C01F  F017         	movff	??___fldiv+1,___fldiv@b+1
  8417   000314  C020  F018         	movff	??___fldiv+2,___fldiv@b+2
  8418   000318  C021  F019         	movff	??___fldiv+3,___fldiv@b+3
  8419   00031C  4A27               	infsnz	___fldiv@new_exp^0,f,c
  8420   00031E  2A28               	incf	(___fldiv@new_exp+1)^0,f,c
  8421   000320                     l3939:
  8422   000320  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8423   000322  EF9B  F001         	goto	u3251
  8424   000326  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  8425   000328  E108               	bnz	u3250
  8426   00032A  2827               	incf	___fldiv@new_exp^0,w,c
  8427   00032C  A0D8               	btfss	status,0,c
  8428   00032E  EF9B  F001         	goto	u3251
  8429   000332  EF9D  F001         	goto	u3250
  8430   000336                     u3251:
  8431   000336  EFA8  F001         	goto	l3943
  8432   00033A                     u3250:
  8433   00033A  0E00               	movlw	0
  8434   00033C  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  8435   00033E  6827               	setf	___fldiv@new_exp^0,c
  8436   000340  0E00               	movlw	0
  8437   000342  6E16               	movwf	___fldiv@b^0,c
  8438   000344  0E00               	movlw	0
  8439   000346  6E17               	movwf	(___fldiv@b+1)^0,c
  8440   000348  0E00               	movlw	0
  8441   00034A  6E18               	movwf	(___fldiv@b+2)^0,c
  8442   00034C  0E00               	movlw	0
  8443   00034E  6E19               	movwf	(___fldiv@b+3)^0,c
  8444   000350                     l3943:
  8445   000350  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8446   000352  EFB5  F001         	goto	u3260
  8447   000356  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  8448   000358  E106               	bnz	u3261
  8449   00035A  0427               	decf	___fldiv@new_exp^0,w,c
  8450   00035C  B0D8               	btfsc	status,0,c
  8451   00035E  EFB3  F001         	goto	u3261
  8452   000362  EFB5  F001         	goto	u3260
  8453   000366                     u3261:
  8454   000366  EFC3  F001         	goto	l3947
  8455   00036A                     u3260:
  8456   00036A  0E00               	movlw	0
  8457   00036C  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  8458   00036E  0E00               	movlw	0
  8459   000370  6E27               	movwf	___fldiv@new_exp^0,c
  8460   000372  0E00               	movlw	0
  8461   000374  6E16               	movwf	___fldiv@b^0,c
  8462   000376  0E00               	movlw	0
  8463   000378  6E17               	movwf	(___fldiv@b+1)^0,c
  8464   00037A  0E00               	movlw	0
  8465   00037C  6E18               	movwf	(___fldiv@b+2)^0,c
  8466   00037E  0E00               	movlw	0
  8467   000380  6E19               	movwf	(___fldiv@b+3)^0,c
  8468   000382  0E00               	movlw	0
  8469   000384  6E26               	movwf	___fldiv@sign^0,c
  8470   000386                     l3947:
  8471   000386  C027  F02D         	movff	___fldiv@new_exp,___fldiv@bexp
  8472   00038A  A02D               	btfss	___fldiv@bexp^0,0,c
  8473   00038C  EFCA  F001         	goto	u3271
  8474   000390  EFCC  F001         	goto	u3270
  8475   000394                     u3271:
  8476   000394  EFCF  F001         	goto	l3953
  8477   000398                     u3270:
  8478   000398  8E18               	bsf	(___fldiv@b+2)^0,7,c
  8479   00039A  EFD0  F001         	goto	l3955
  8480   00039E                     l3953:
  8481   00039E  9E18               	bcf	(___fldiv@b+2)^0,7,c
  8482   0003A0                     l3955:
  8483   0003A0  90D8               	bcf	status,0,c
  8484   0003A2  302D               	rrcf	___fldiv@bexp^0,w,c
  8485   0003A4  6E19               	movwf	(___fldiv@b+3)^0,c
  8486   0003A6  EF86  F000         	goto	l3869
  8487   0003AA                     l1352:
  8488   0003AA  0012               	return		;funcret
  8489   0003AC                     __end_of___fldiv:
  8490                           	callstack 0
  8491                           
  8492 ;; *************** function _isr *****************
  8493 ;; Defined at:
  8494 ;;		line 6 in file "isr.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;		None
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;		None
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  1    wreg      void 
  8501 ;; Registers used:
  8502 ;;		wreg, status,2, status,0
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8508 ;;      Params:         0       0       0       0       0       0       0
  8509 ;;      Locals:         0       0       0       0       0       0       0
  8510 ;;      Temps:          0       0       0       0       0       0       0
  8511 ;;      Totals:         0       0       0       0       0       0       0
  8512 ;;Total ram usage:        0 bytes
  8513 ;; Hardware stack levels used: 1
  8514 ;; This function calls:
  8515 ;;		Nothing
  8516 ;; This function is called by:
  8517 ;;		Interrupt level 2
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	intcode
  8522   000008                     __pintcode:
  8523                           	callstack 0
  8524   000008                     _isr:
  8525                           	callstack 24
  8526                           
  8527                           ;incstack = 0
  8528   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8529   00000A  EDB6  F010         	call	int_func,f	;refresh shadow registers
  8530                           
  8531                           	psect	intcode_body
  8532   00216C                     __pintcode_body:
  8533                           	callstack 24
  8534   00216C                     int_func:
  8535                           	callstack 24
  8536   00216C  0006               	pop		; remove dummy address from shadow register refresh
  8537   00216E                     
  8538                           ;isr.c: 8:  static unsigned long count;;isr.c: 10:  if (TMR0IF)
  8539   00216E  A4F2               	btfss	4082,2,c	;volatile
  8540   002170  EFBC  F010         	goto	i2u359_41
  8541   002174  EFBE  F010         	goto	i2u359_40
  8542   002178                     i2u359_41:
  8543   002178  EFE3  F010         	goto	i2l431
  8544   00217C                     i2u359_40:
  8545   00217C                     
  8546                           ;isr.c: 11:  {;isr.c: 12:   TMR0 = TMR0 + 8;
  8547   00217C  0E08               	movlw	8
  8548   00217E  24D6               	addwf	214,w,c	;volatile
  8549   002180  6ED6               	movwf	214,c	;volatile
  8550   002182  0E00               	movlw	0
  8551   002184  20D7               	addwfc	215,w,c	;volatile
  8552   002186  6ED7               	movwf	215,c	;volatile
  8553                           
  8554                           ;isr.c: 14:   if (count++ == 20000)
  8555   002188  0E01               	movlw	1
  8556   00218A  0100               	movlb	0	; () banked
  8557   00218C  2776               	addwf	isr@count& (0+255),f,b
  8558   00218E  0E00               	movlw	0
  8559   002190  2377               	addwfc	(isr@count+1)& (0+255),f,b
  8560   002192  2378               	addwfc	(isr@count+2)& (0+255),f,b
  8561   002194  2379               	addwfc	(isr@count+3)& (0+255),f,b
  8562   002196  0E21               	movlw	33
  8563   002198  1976               	xorwf	isr@count& (0+255),w,b
  8564   00219A  E109               	bnz	i2u360_41
  8565   00219C  0E4E               	movlw	78
  8566   00219E  1977               	xorwf	(isr@count+1)& (0+255),w,b
  8567   0021A0  1178               	iorwf	(isr@count+2)& (0+255),w,b
  8568   0021A2  1179               	iorwf	(isr@count+3)& (0+255),w,b
  8569   0021A4  A4D8               	btfss	status,2,c
  8570   0021A6  EFD7  F010         	goto	i2u360_41
  8571   0021AA  EFD9  F010         	goto	i2u360_40
  8572   0021AE                     i2u360_41:
  8573   0021AE  EFE2  F010         	goto	i2l4129
  8574   0021B2                     i2u360_40:
  8575   0021B2                     
  8576                           ; BSR set to: 0
  8577                           ;isr.c: 15:   {;isr.c: 17:    count = 0;
  8578   0021B2  0E00               	movlw	0
  8579   0021B4  6F76               	movwf	isr@count& (0+255),b
  8580   0021B6  0E00               	movlw	0
  8581   0021B8  6F77               	movwf	(isr@count+1)& (0+255),b
  8582   0021BA  0E00               	movlw	0
  8583   0021BC  6F78               	movwf	(isr@count+2)& (0+255),b
  8584   0021BE  0E00               	movlw	0
  8585   0021C0  6F79               	movwf	(isr@count+3)& (0+255),b
  8586   0021C2                     
  8587                           ; BSR set to: 0
  8588                           ;isr.c: 18:             tick_count--;
  8589   0021C2  065D               	decf	_tick_count^0,f,c
  8590   0021C4                     i2l4129:
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;isr.c: 22:   TMR0IF = 0;
  8594   0021C4  94F2               	bcf	4082,2,c	;volatile
  8595   0021C6                     i2l431:
  8596   0021C6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8597   0021C8  0011               	retfie		f
  8598   0021CA                     __end_of_isr:
  8599                           	callstack 0
  8600                           
  8601                           	psect	rparam
  8602   000000                     
  8603                           	psect	temp
  8604   00005F                     btemp:
  8605                           	callstack 0
  8606   00005F                     	ds	1
  8607   000000                     int$flags	set	btemp
  8608   000000                     wtemp8	set	btemp+1
  8609   000000                     ttemp5	set	btemp+1
  8610   000000                     ttemp6	set	btemp+4
  8611   000000                     ttemp7	set	btemp+8
  8612                           
  8613                           	psect	idloc
  8614                           
  8615                           ;Config register IDLOC0 @ 0x200000
  8616                           ;	unspecified, using default values
  8617   200000                     	org	2097152
  8618   200000  FF                 	db	255
  8619                           
  8620                           ;Config register IDLOC1 @ 0x200001
  8621                           ;	unspecified, using default values
  8622   200001                     	org	2097153
  8623   200001  FF                 	db	255
  8624                           
  8625                           ;Config register IDLOC2 @ 0x200002
  8626                           ;	unspecified, using default values
  8627   200002                     	org	2097154
  8628   200002  FF                 	db	255
  8629                           
  8630                           ;Config register IDLOC3 @ 0x200003
  8631                           ;	unspecified, using default values
  8632   200003                     	org	2097155
  8633   200003  FF                 	db	255
  8634                           
  8635                           ;Config register IDLOC4 @ 0x200004
  8636                           ;	unspecified, using default values
  8637   200004                     	org	2097156
  8638   200004  FF                 	db	255
  8639                           
  8640                           ;Config register IDLOC5 @ 0x200005
  8641                           ;	unspecified, using default values
  8642   200005                     	org	2097157
  8643   200005  FF                 	db	255
  8644                           
  8645                           ;Config register IDLOC6 @ 0x200006
  8646                           ;	unspecified, using default values
  8647   200006                     	org	2097158
  8648   200006  FF                 	db	255
  8649                           
  8650                           ;Config register IDLOC7 @ 0x200007
  8651                           ;	unspecified, using default values
  8652   200007                     	org	2097159
  8653   200007  FF                 	db	255
  8654                           
  8655                           	psect	config
  8656                           
  8657                           ; Padding undefined space
  8658   300000                     	org	3145728
  8659   300000  FF                 	db	255
  8660                           
  8661                           ;Config register CONFIG1H @ 0x300001
  8662                           ;	unspecified, using default values
  8663                           ;	Oscillator Selection bits
  8664                           ;	OSC = 0x7, unprogrammed default
  8665                           ;	Fail-Safe Clock Monitor Enable bit
  8666                           ;	FCMEN = 0x0, unprogrammed default
  8667                           ;	Internal/External Oscillator Switchover bit
  8668                           ;	IESO = 0x0, unprogrammed default
  8669   300001                     	org	3145729
  8670   300001  07                 	db	7
  8671                           
  8672                           ;Config register CONFIG2L @ 0x300002
  8673                           ;	unspecified, using default values
  8674                           ;	Power-up Timer Enable bit
  8675                           ;	PWRT = 0x1, unprogrammed default
  8676                           ;	Brown-out Reset Enable bits
  8677                           ;	BOREN = 0x3, unprogrammed default
  8678                           ;	Brown-out Reset Voltage bits
  8679                           ;	BORV = 0x3, unprogrammed default
  8680   300002                     	org	3145730
  8681   300002  1F                 	db	31
  8682                           
  8683                           ;Config register CONFIG2H @ 0x300003
  8684                           ;	unspecified, using default values
  8685                           ;	Watchdog Timer Enable bit
  8686                           ;	WDT = 0x1, unprogrammed default
  8687                           ;	Watchdog Timer Postscale Select bits
  8688                           ;	WDTPS = 0xF, unprogrammed default
  8689   300003                     	org	3145731
  8690   300003  1F                 	db	31
  8691                           
  8692                           ; Padding undefined space
  8693   300004                     	org	3145732
  8694   300004  FF                 	db	255
  8695                           
  8696                           ;Config register CONFIG3H @ 0x300005
  8697                           ;	unspecified, using default values
  8698                           ;	PORTB A/D Enable bit
  8699                           ;	PBADEN = 0x1, unprogrammed default
  8700                           ;	Low-Power Timer 1 Oscillator Enable bit
  8701                           ;	LPT1OSC = 0x0, unprogrammed default
  8702                           ;	MCLR Pin Enable bit
  8703                           ;	MCLRE = 0x1, unprogrammed default
  8704   300005                     	org	3145733
  8705   300005  82                 	db	130
  8706                           
  8707                           ;Config register CONFIG4L @ 0x300006
  8708                           ;	unspecified, using default values
  8709                           ;	Stack Full/Underflow Reset Enable bit
  8710                           ;	STVREN = 0x1, unprogrammed default
  8711                           ;	Single-Supply ICSP Enable bit
  8712                           ;	LVP = 0x1, unprogrammed default
  8713                           ;	Boot Block Size Select bit
  8714                           ;	BBSIZ = 0x0, unprogrammed default
  8715                           ;	Extended Instruction Set Enable bit
  8716                           ;	XINST = 0x0, unprogrammed default
  8717                           ;	Background Debugger Enable bit
  8718                           ;	DEBUG = 0x1, unprogrammed default
  8719   300006                     	org	3145734
  8720   300006  85                 	db	133
  8721                           
  8722                           ; Padding undefined space
  8723   300007                     	org	3145735
  8724   300007  FF                 	db	255
  8725                           
  8726                           ;Config register CONFIG5L @ 0x300008
  8727                           ;	unspecified, using default values
  8728                           ;	Code Protection bit
  8729                           ;	CP0 = 0x1, unprogrammed default
  8730                           ;	Code Protection bit
  8731                           ;	CP1 = 0x1, unprogrammed default
  8732                           ;	Code Protection bit
  8733                           ;	CP2 = 0x1, unprogrammed default
  8734                           ;	Code Protection bit
  8735                           ;	CP3 = 0x1, unprogrammed default
  8736   300008                     	org	3145736
  8737   300008  0F                 	db	15
  8738                           
  8739                           ;Config register CONFIG5H @ 0x300009
  8740                           ;	unspecified, using default values
  8741                           ;	Boot Block Code Protection bit
  8742                           ;	CPB = 0x1, unprogrammed default
  8743                           ;	Data EEPROM Code Protection bit
  8744                           ;	CPD = 0x1, unprogrammed default
  8745   300009                     	org	3145737
  8746   300009  C0                 	db	192
  8747                           
  8748                           ;Config register CONFIG6L @ 0x30000A
  8749                           ;	unspecified, using default values
  8750                           ;	Write Protection bit
  8751                           ;	WRT0 = 0x1, unprogrammed default
  8752                           ;	Write Protection bit
  8753                           ;	WRT1 = 0x1, unprogrammed default
  8754                           ;	Write Protection bit
  8755                           ;	WRT2 = 0x1, unprogrammed default
  8756                           ;	Write Protection bit
  8757                           ;	WRT3 = 0x1, unprogrammed default
  8758   30000A                     	org	3145738
  8759   30000A  0F                 	db	15
  8760                           
  8761                           ;Config register CONFIG6H @ 0x30000B
  8762                           ;	unspecified, using default values
  8763                           ;	Configuration Register Write Protection bit
  8764                           ;	WRTC = 0x1, unprogrammed default
  8765                           ;	Boot Block Write Protection bit
  8766                           ;	WRTB = 0x1, unprogrammed default
  8767                           ;	Data EEPROM Write Protection bit
  8768                           ;	WRTD = 0x1, unprogrammed default
  8769   30000B                     	org	3145739
  8770   30000B  E0                 	db	224
  8771                           
  8772                           ;Config register CONFIG7L @ 0x30000C
  8773                           ;	unspecified, using default values
  8774                           ;	Table Read Protection bit
  8775                           ;	EBTR0 = 0x1, unprogrammed default
  8776                           ;	Table Read Protection bit
  8777                           ;	EBTR1 = 0x1, unprogrammed default
  8778                           ;	Table Read Protection bit
  8779                           ;	EBTR2 = 0x1, unprogrammed default
  8780                           ;	Table Read Protection bit
  8781                           ;	EBTR3 = 0x1, unprogrammed default
  8782   30000C                     	org	3145740
  8783   30000C  0F                 	db	15
  8784                           
  8785                           ;Config register CONFIG7H @ 0x30000D
  8786                           ;	unspecified, using default values
  8787                           ;	Boot Block Table Read Protection bit
  8788                           ;	EBTRB = 0x1, unprogrammed default
  8789   30000D                     	org	3145741
  8790   30000D  40                 	db	64
  8791                           tosu	equ	0xFFF
  8792                           tosh	equ	0xFFE
  8793                           tosl	equ	0xFFD
  8794                           stkptr	equ	0xFFC
  8795                           pclatu	equ	0xFFB
  8796                           pclath	equ	0xFFA
  8797                           pcl	equ	0xFF9
  8798                           tblptru	equ	0xFF8
  8799                           tblptrh	equ	0xFF7
  8800                           tblptrl	equ	0xFF6
  8801                           tablat	equ	0xFF5
  8802                           prodh	equ	0xFF4
  8803                           prodl	equ	0xFF3
  8804                           indf0	equ	0xFEF
  8805                           postinc0	equ	0xFEE
  8806                           postdec0	equ	0xFED
  8807                           preinc0	equ	0xFEC
  8808                           plusw0	equ	0xFEB
  8809                           fsr0h	equ	0xFEA
  8810                           fsr0l	equ	0xFE9
  8811                           wreg	equ	0xFE8
  8812                           indf1	equ	0xFE7
  8813                           postinc1	equ	0xFE6
  8814                           postdec1	equ	0xFE5
  8815                           preinc1	equ	0xFE4
  8816                           plusw1	equ	0xFE3
  8817                           fsr1h	equ	0xFE2
  8818                           fsr1l	equ	0xFE1
  8819                           bsr	equ	0xFE0
  8820                           indf2	equ	0xFDF
  8821                           postinc2	equ	0xFDE
  8822                           postdec2	equ	0xFDD
  8823                           preinc2	equ	0xFDC
  8824                           plusw2	equ	0xFDB
  8825                           fsr2h	equ	0xFDA
  8826                           fsr2l	equ	0xFD9
  8827                           status	equ	0xFD8

Data Sizes:
    Strings     400
    Constant    0
    Data        37
    BSS         99
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      94
    BANK0           160      0      98
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[3]), STR_10(CODE[3]), STR_11(CODE[3]), STR_12(CODE[3]), 
		 -> STR_13(CODE[17]), STR_14(CODE[17]), STR_15(CODE[16]), STR_16(CODE[6]), 
		 -> STR_17(CODE[17]), STR_18(CODE[15]), STR_19(CODE[16]), STR_2(CODE[3]), 
		 -> STR_20(CODE[17]), STR_21(CODE[18]), STR_22(CODE[17]), STR_23(CODE[16]), 
		 -> STR_24(CODE[17]), STR_25(CODE[18]), STR_26(CODE[18]), STR_27(CODE[18]), 
		 -> STR_28(CODE[14]), STR_3(CODE[3]), STR_31(CODE[18]), STR_32(CODE[21]), 
		 -> STR_33(CODE[19]), STR_34(CODE[17]), STR_35(CODE[18]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), 
		 -> STR_9(CODE[3]), time(BANK0[9]), 

    events	PTR unsigned char [12] size(2) Largest target is 3
		 -> STR_1(CODE[3]), STR_10(CODE[3]), STR_11(CODE[3]), STR_12(CODE[3]), 
		 -> STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 
		 -> STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), STR_9(CODE[3]), 

    logs	PTR unsigned char [5] size(2) Largest target is 18
		 -> STR_19(CODE[16]), STR_20(CODE[17]), STR_21(CODE[18]), STR_22(CODE[17]), 
		 -> STR_23(CODE[16]), 

    my_strcmp@one	PTR unsigned char  size(1) Largest target is 5
		 -> pass(BANK0[5]), 

    my_strcmp@two	PTR unsigned char  size(1) Largest target is 5
		 -> temp_password(BANK0[5]), 

    my_strcp@one	PTR unsigned char  size(1) Largest target is 5
		 -> temp1(BANK0[5]), 

    my_strcp@two	PTR unsigned char  size(1) Largest target is 5
		 -> temp2(BANK0[5]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[3]), STR_10(CODE[3]), STR_11(CODE[3]), STR_12(CODE[3]), 
		 -> STR_2(CODE[3]), STR_29(CODE[20]), STR_3(CODE[3]), STR_30(CODE[3]), 
		 -> STR_4(CODE[3]), STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), 
		 -> STR_8(CODE[3]), STR_9(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _view_log->_clcd_putch
    _settime->_clcd_putch
    _settime->_write_ds1307
    _password->_clcd_putch
    _menu->_clcd_putch
    _init_config->_init_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->___awmod
    _init_clcd->_clcd_write
    _download_log->___awmod
    _read_external_eeprom->_i2c_write
    _puts->_putch
    ___awmod->___awdiv
    _dashboard->_clcd_putch
    _store_event->_write_external_eeprom
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_time->_clcd_print
    _clear_log->_clcd_print
    _clear_log->_write_external_eeprom
    _change_pass->_clcd_putch
    _write_external_eeprom->_i2c_write
    _clcd_putch->___awmod
    _clcd_print->_clcd_write
    ___xxtofl->_read_adc
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  112793
                            ___fldiv
                            ___fltol
                           ___xxtofl
                        _change_pass
                         _clcd_write
                          _clear_log
                          _dashboard
                       _download_log
                        _init_config
                               _menu
                           _password
                           _read_adc
                      _read_switches
                            _settime
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                             8     8      0   15274
                                             16 COMRAM     8     8      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _settime                                              4     4      0   16860
                                             16 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                       _write_ds1307
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      30
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _password                                            15    15      0   16907
                                             16 COMRAM    15    15      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                          _my_strcmp
 ---------------------------------------------------------------------------------
 (2) _my_strcmp                                            8     6      2     398
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _menu                                                 1     1      0   10743
                                             16 COMRAM     1     1      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _init_config                                          2     2      0    3380
                                             17 COMRAM     2     2      0
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                        _init_timer0
                          _init_uart
               _read_external_eeprom
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     734
                                             16 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _write_ds1307                                         2     1      1     598
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    1412
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _download_log                                         3     3      0   12076
                                             14 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                              _putch
                               _puts
               _read_external_eeprom
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     295
                                              1 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    3032
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    2732
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _dashboard                                            0     0      0   15773
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                       _display_time
                           _get_time
                        _store_event
 ---------------------------------------------------------------------------------
 (2) _store_event                                          1     1      0    1167
                                              5 COMRAM     1     1      0
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0    4671
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            2     2      0    5860
                                              5 COMRAM     2     2      0
                         _clcd_print
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _change_pass                                          8     8      0   12331
                                             16 COMRAM     8     8      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                           _my_strcp
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _write_external_eeprom                                4     3      1    1077
                                              1 COMRAM     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _my_strcp                                             8     6      2     398
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    4572
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    4671
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           2     1      1    1412
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              7 COMRAM    14    10      4
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             46 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
       _read_adc (ARG)
     _read_adc (ARG)
   ___fltol
     ___fldiv (ARG)
     ___xxtofl (ARG)
     _read_adc (ARG)
   ___xxtofl
   _change_pass
     _clcd_print
       _clcd_write
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
       _clcd_write (ARG)
     _clcd_write
     _my_strcp
     _write_external_eeprom
       _i2c_start
         _i2c_idle
       _i2c_stop
         _i2c_idle
       _i2c_write
         _i2c_idle
   _clcd_write
   _clear_log
     _clcd_print
     _write_external_eeprom
   _dashboard
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_putch
     _display_time
       _clcd_print
     _get_time
       _read_ds1307
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
         _i2c_stop
         _i2c_write
     _store_event
       _write_external_eeprom
   _download_log
     ___awdiv
     ___awmod
     _clcd_print
     _putch
     _puts
       _putch
     _read_external_eeprom
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_stop
       _i2c_write
     _write_external_eeprom
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         ___awdiv (ARG)
         ___awmod (ARG)
         _i2c_start (ARG)
         _i2c_stop (ARG)
         _i2c_write (ARG)
     _init_i2c
     _init_matrix_keypad
     _init_timer0
     _init_uart
     _read_external_eeprom
     _write_external_eeprom
   _menu
     _clcd_print
     _clcd_putch
     _clcd_write
   _password
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _my_strcmp
   _read_adc
   _read_switches
     _scan_key
   _settime
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _write_ds1307
     _write_external_eeprom
   _view_log
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _read_external_eeprom

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
BITBIGSFRll        281      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      62       5       61.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     38      5E       1      100.0%
BITBIGSFRhhhlhh     19      0       0      17        0.0%
BITBIGSFRlhhhhh     10      0       0      19        0.0%
BITBIGSFRlhl         F      0       0      23        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRhhhlhh      B      0       0      18        0.0%
BITBIGSFRlhhhhl      9      0       0      20        0.0%
BITBIGSFRlhhl        7      0       0      22        0.0%
BITBIGSFRlhhhl       2      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C0      25        0.0%
DATA                 0      0      C0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jun 04 14:58:32 2024

                 my_strcmp@one 0001                   my_strcmp@two 0002                   ___fldiv@aexp 002E  
                 ___fldiv@bexp 002D                              _i 0056                   ___fldiv@sign 0026  
        _write_external_eeprom 2258                 clcd_print@addr 0005                 clcd_print@data 0003  
                my_strcmp@last 0005                             l33 239C                             l36 222A  
                           l61 22CC                             l62 22D0                             l71 20A2  
                           l39 2256                             l65 1C28                             l74 23D2  
                           _GO 7E11                   ___awdiv@sign 0006                             _hr 0048  
           _init_matrix_keypad 2426                            l121 1D46                            l210 1FC2  
                          l242 1DCC                            l250 17FE                            l146 131E  
                          l331 235A                            l308 0A2A                            l180 181A  
                          l413 2296                            l237 2458                            l501 1F4C  
                          l325 2210                            l181 1906                            l190 1884  
                          l182 1856                            l183 182E                            l416 2330  
                          l328 23BA                            l192 1898                            l177 2436  
                          l185 1842                            l371 2446                            l195 18C8  
                          l372 2448                            l604 11EE                            l284 1E48  
                          l188 1870                            l524 0D54                            l285 1E50  
                          l197 18DC                            l189 18AC                            l382 2488  
                          l366 23E8                            l446 2412                            l198 1904  
                          l534 0FC4                            l391 2480                            l199 18F0  
                          l632 23EC                            l369 2438                            l385 2478  
                          l641 2306                            l481 16E2                            l394 2496  
                          l298 0A2A                            l379 2490                            l635 23FE  
                          l388 2470                            l716 0716                            l397 2464  
                          l629 2424                            l558 1CC0                            l754 0BDA  
                          l595 0FFA                            l686 1ECC                            l687 1ED4  
                          l767 0D3A                            _CKE 7E3E                            _GIE 7F97  
                          _RC0 7C10                            _RC1 7C11                            _RC2 7C12  
                          u100 1814                            u101 1810                            u110 1828  
                          u111 1824                            _RD7 7C1F                            u200 18EA  
                          u120 183C                            u201 18E6                            u121 1838  
                          u210 18FE                            u130 1850                            u211 18FA  
                          u131 184C                            u140 186A                            u141 1866  
                          u150 187E                            u151 187A                            u160 1892  
                          u161 188E                            u170 18A6                            u171 18A2  
                          u180 18C2                            u500 1F60                            u181 18BE  
                          u501 1F5C                            u190 18D6                            u510 1F76  
                          u191 18D2                            u511 1F72                            u520 1F86  
                          _PEN 7E2A                            u521 1F82                            u530 1FA0  
                          u531 1F9C                            u540 1FB8                            u541 1FB4  
                          _SEN 7E28                            _PSA 7EAB                            _SMP 7E3F  
                ?_display_time 0001                    _start_index 004F                            _del 003E  
                          _lap 0051                            _ind 004A                            _key 005B  
                          _min 0047                            _sec 0046                            _isr 0008  
                          _var 004C                 clcd_putch@addr 000F                 clcd_putch@data 0010  
                 ___awmod@sign 000E                            wreg 0FE8            ?_init_matrix_keypad 0001  
                 ___fltol@exp1 0038                           l1001 1AD0                           l1014 1B80  
                         l3001 23E4                           l1067 1A0C                           l3011 21F2  
                         l3003 23E6                           l3101 1E52                           l1261 202E  
                         l3013 21FC                           l3005 21CA                           l3021 2414  
                         l3103 1E66                           l1271 2162                           l3111 1A0E  
                         l3031 2314                           l3007 21D2                           l3015 2400  
                         l3023 241E                           l1352 03AA                           l1432 14E2  
                         l4001 19EC                           l1425 144A                           l3105 1E88  
                         l3201 1FFC                           l3041 244A                           l3121 1A3A  
                         l3113 1A12                           l3033 231A                           l3009 21DE  
                         l3017 2408                           l3025 2422                           l1354 020A  
                         l1363 0250                           l4003 19FC                           l4011 1414  
                         l3107 1EB0                           l3211 2028                           l3203 2002  
                         l3051 1D9C                           l3043 1D48                           l3131 1A68  
                         l3123 1A42                           l3115 1A20                           l3035 231E  
                         l3027 230A                           l3019 2410                           l1428 15A6  
                         l1268 2036                           l1365 02C8                           l1357 01CE  
                         l4021 148C                           l4013 145A                           l3109 1EB4  
                         l3205 2018                           l3221 2138                           l3213 2108  
                         l3053 1DA0                           l3045 1D66                           l3061 1ED6  
                         l3301 17D6                           l3141 1AA2                           l3133 1A70  
                         l3125 1A46                           l3117 1A28                           l3037 232A  
                         l3029 230E                           l4101 136A                           l1366 02B6  
                         l1278 216A                           l1439 153E                           l4031 1514  
                         l4023 1498                           l4015 1470                           l4007 13F6  
                         l3207 2020                           l3223 214E                           l3215 211A  
                         l3055 1DAA                           l3047 1D74                           l3063 1EFC  
                         l3303 17F6                           l3151 1AC8                           l3143 1AA4  
                         l3135 1A7E                           l3127 1A4E                           l3119 1A2C  
                         l3311 0744                           l3231 2228                           l4111 13B0  
                         l4103 137A                           l4041 1552                           l4033 1520  
                         l4025 14CA                           l4009 1406                           l3209 2022  
                         l3225 2156                           l3217 2122                           l3057 1DB2  
                         l3049 1D8A                           l3081 1F44                           l3073 1F08  
                         l3065 1F00                           l3305 17FA                           l3145 1AAA  
                         l3137 1A84                           l3129 1A60                           l3161 1AEC  
                         l3241 1CCA                           l3401 1630                           l3321 07C6  
                         l3313 0754                           l3233 2238                           l1705 18FE  
                         l1641 1800                           l4113 13B8                           l4105 1384  
                         l4043 1576                           l4035 152E                           l4027 14CC  
                         l4019 1484                           l3227 215C                           l3219 212A  
                         l3059 1DC8                           l3075 1F20                           l3067 1F04  
                         l3139 1A9A                           l3147 1AB0                           l3171 1B20  
                         l3163 1AF0                           l3155 1AD2                           l3243 1CCE  
                         l3403 1640                           l3411 165E                           l3091 1E30  
                         l3083 1DCE                           l3331 0808                           l3323 07D6  
                         l3315 077E                           l3307 071A                           l3235 224E  
                         l1643 1814                           l4115 13CA                           l4107 1396  
                         l4045 1586                           l4037 154C                           l4029 14D8  
                         l3077 1F22                           l3149 1AC0                           l3181 1B5A  
                         l3173 1B28                           l3165 1AFE                           l3157 1AD6  
                         l3093 22D2                           l3261 1D40                           l3245 1CD6  
                         l3421 169A                           l3413 1670                           l3405 1644  
                         l3085 1DE2                           l3341 083C                           l3333 080E  
                         l3325 07DE                           l3317 078E                           l3309 0738  
                         l3229 2214                           l1709 1904                           l1661 1850  
                         l3501 0F4C                           l4117 13D4                           l4109 13A0  
                         l4061 1210                           l4053 11F0                           l4047 1594  
                         l4039 154E                           l3511 1C34                           l3191 1FC4  
                         l3079 1F32                           l3271 1732                           l3263 16E4  
                         l3175 1B36                           l3183 1B60                           l3167 1B06  
                         l3159 1AE4                           l3095 22D6                           l3255 1D0E  
                         l3247 1CDA                           l3239 1CC2                           l3431 16C2  
                         l3415 1680                           l3423 169E                           l3407 164A  
                         l3087 1E04                           l3351 0884                           l3343 084E  
                         l3335 0820                           l3327 07F0                           l3319 07AA  
                         l1671 187E                           l1655 183C                           l3503 0F6A  
                         l4119 13E6                           l4071 1256                           l4063 1214  
                         l4055 11F4                           l4049 1596                           l3521 1C90  
                         l3513 1C44                           l3193 1FCC                           l3281 176C  
                         l3273 1734                           l3265 16F4                           l3185 1B70  
                         l3177 1B4C                           l3169 1B18                           l3097 22E6  
                         l3601 11D8                           l3257 1D20                           l3249 1D06  
                         l3433 16D4                           l3425 16B0                           l3417 1684  
                         l3409 165A                           l3089 1E2C                           l3361 08E0  
                         l3353 088C                           l3345 0858                           l3337 082C  
                         l3329 07FC                           l1665 186A                           l1649 1828  
                         l3505 0F88                           l3441 0D64                           l4081 12E6  
                         l4073 1272                           l4065 122A                           l4057 11FC  
                         l3611 03CE                           l3531 1CAA                           l3523 1C94  
                         l3515 1C54                           l3195 1FDE                           l3291 178A  
                         l3283 176E                           l3275 1738                           l3267 1710  
                         l3187 1B78                           l3179 1B54                           l3099 22EA  
                         l3603 11DA                           l3259 1D24                           l3435 16DE  
                         l3427 16BA                           l3419 168A                           l3371 0976  
                         l3363 0912                           l3355 089C                           l3347 0876  
                         l1683 18A6                           l3507 0FA6                           l3451 0DBE  
                         l3443 0D68                           l4083 12F6                           l4091 1322  
                         l4075 127A                           l4067 1234                           l4059 120C  
                         l2901 225A                           l3701 067E                           l3621 044E  
                         l3613 03F6                           l3533 1CAC                           l3517 1C66  
                         l3509 1C2C                           l3197 1FE6                           l3293 179C  
                         l3277 174A                           l3285 1772                           l3269 1722  
                         l3605 11EA                           l3541 0FF6                           l3429 16BE  
                         l3381 09B8                           l3373 097E                           l3365 0930  
                         l3357 08A2                           l3349 0880                           l1693 18D6  
                         l1677 1892                           l1941 1F76                           l3461 0DFA  
                         l3453 0DCE                           l3445 0D7A                           l3437 0D3E  
                         l4093 1332                           l4085 12FA                           l4077 1282  
                         l4069 123C                           l2911 2274                           l2903 225E  
                         l3711 06D6                           l3703 068E                           l3631 0486  
                         l3623 0456                           l3615 0406                           l3607 03AE  
                         l3535 1CBC                           l3519 1C8C                           l3199 1FEE  
                         l3295 17AE                           l3287 1782                           l3279 175C  
                         l3543 100A                           l3391 15AA                           l3383 09D8  
                         l3367 0940                           l3359 08C2                           l3375 098C  
                         l1687 18C2                           l1951 1FA0                           l1943 1F86  
                         l1935 1F50                           l3463 0E0A                           l3471 0E32  
                         l3447 0DAA                           l3455 0DD4                           l3439 0D50  
                         l4095 133C                           l4087 130C                           l4079 128E  
                         l2913 227C                           l2905 2264                           l3713 06E2  
                         l3705 06B4                           l3641 04C6                           l3633 0498  
                         l3625 0468                           l3617 0422                           l3609 03BE  
                         l3529 1C98                           l2921 2344                           l3297 17B2  
                         l3289 1786                           l3561 1072                           l3545 100E  
                         l3537 0FC6                           l3393 15E2                           l3385 0A16  
                         l3377 099C                           l3369 0966                           l1937 1F60  
                         l1953 1FA8                           l3801 0CEE                           l3481 0E6A  
                         l3465 0E0C                           l3457 0DE4                           l3449 0DAC  
                         l4097 134E                           l4089 1316                           l2851 229A  
                         l2843 2438                           l2907 226A                           l3723 06EE  
                         l3715 06E6                           l3707 06BC                           l3651 04F6  
                         l3643 04D0                           l3635 04A4                           l3627 0474  
                         l3619 043E                           l2923 2348                           l2915 2334  
                         l3299 17B6                           l3571 111A                           l3563 10A6  
                         l3555 102A                           l3547 101A                           l3539 0FE6  
                         l2931 23A4                           l3395 15F2                           l3387 0A18  
                         l3379 09A8                           l1699 18EA                           l1955 1FB8  
                         l1939 1F66                           l3811 0CFA                           l3803 0CF2  
                         l3491 0EDE                           l3483 0E86                           l3467 0E1E  
                         l3459 0DE8                           l4099 1358                           l3901 01D8  
                         l2861 22B6                           l2853 22AC                           l2909 2270  
                         l3725 0700                           l3717 06EA                           l3709 06CA  
                         l3661 0576                           l3653 0506                           l3645 04D4  
                         l3629 0480                           l2845 247A                           l2925 2354  
                         l2917 2338                           l2941 23FA                           l3581 1174  
                         l3573 1120                           l3565 10AC                           l3557 1052  
                         l3549 1022                           l2933 23AA                           l3397 160A  
                         l3389 0A1C                           l1949 1F90                           l3813 0D0C  
                         l3805 0CF6                           l3821 0D24                           l3741 0A76  
                         l3733 0A2E                           l3493 0EE8                           l3485 0E96  
                         l3477 0E3A                           l3911 0230                           l3903 01F6  
                         l3831 002E                           l2863 22B8                           l2855 22B0  
                         l2871 248A                           l3727 0702                           l3671 05B8  
                         l3663 0586                           l3655 052E                           l3647 04D8  
                         l3639 04B4                           l2847 247C                           l2919 233E  
                         l3591 11BE                           l3583 1180                           l3575 113A  
                         l3567 10C6                           l3559 1056                           l2943 237E  
                         l2951 1B86                           l2935 23B0                           l3399 161E  
                         l1959 1FC0                           l3823 0D36                           l3815 0D0E  
                         l3751 0AF8                           l3743 0A94                           l3735 0A3E  
                         l3495 0F06                           l3487 0EA2                           l3479 0E66  
                         l3921 026E                           l3913 0236                           l3905 01F8  
                         l3833 003E                           l3841 0068                           l3825 0012  
                         l2865 22BA                           l2857 22B2                           l2873 248C  
                         l2881 2484                           l3729 0712                           l3681 05EC  
                         l3673 05BE                           l3665 058E                           l3657 053E  
                         l3649 04E6                           l2849 2492                           l3593 11C2  
                         l3577 1140                           l3569 10E0                           l3585 1182  
                         l2945 2392                           l2961 1BB8                           l2953 1B8C  
                         l2937 23B6                           l2929 23A0                           l3817 0D1E  
                         l3761 0B60                           l3753 0B02                           l3745 0AB2  
                         l3737 0A4E                           l3497 0F24                           l3489 0EC0  
                         l3931 02D8                           l3923 0272                           l3915 0240  
                         l3907 0208                           l3851 0094                           l3843 0078  
                         l3835 004E                           l3827 001E                           l2867 22BC  
                         l2859 22B4                           l2875 2468                           l3691 0634  
                         l3683 05FE                           l3675 05D0                           l3667 05A0  
                         l3659 055A                           l2883 2472                           l2939 23EC  
                         l3587 1194                           l3579 115A                           l2947 239A  
                         l2971 1BE4                           l2963 1BC2                           l2955 1B8E  
                         l3819 0D20                           l3771 0BA2                           l3763 0B72  
                         l3755 0B20                           l3747 0ABC                           l3739 0A72  
                         l3499 0F2E                           l3941 033A                           l3933 02E4  
                         l3925 0280                           l3917 024E                           l3909 021A  
                         l3853 00A4                           l3861 00CE                           l3845 007E  
                         l3837 005E                           l3829 002C                           l2869 22BE  
                         l2893 2038                           l2877 246C                           l3693 0642  
                         l3685 0608                           l3677 05DC                           l3669 05AC  
                         l2885 2474                           l3589 11BA                           l2981 1C16  
                         l2973 1BEC                           l2965 1BCA                           l2957 1B9E  
                         l2949 1B82                           l3781 0BD4                           l3773 0BA6  
                         l3765 0B7A                           l3757 0B3E                           l3749 0ADA  
                         l3951 0398                           l3943 0350                           l3935 02F2  
                         l3927 02AE                           l3919 0260                           l3871 0110  
                         l3863 00DE                           l3855 00B4                           l3847 0084  
                         l3839 0060                           l2895 2046                           l2879 2482  
                         l3695 0650                           l3687 0626                           l2887 245A  
                         l3599 11C6                           l2983 1C20                           l2975 1BF6  
                         l2967 1BD4                           l2959 1BA8                           l2991 2430  
                         l3775 0BAC                           l3791 0C08                           l3767 0B80  
                         l3759 0B50                           l3783 0BDE                           l3953 039E  
                         l3945 036A                           l3937 031C                           l3865 00F4  
                         l3857 00C4                           l3849 0092                           l2897 206E  
                         l2985 23BE                           l3697 065E                           l3689 062A  
                         l2889 2462                           l2977 1BFE                           l2969 1BDA  
                         l2993 23D4                           l3793 0C1A                           l3785 0BF0  
                         l3777 0BBE                           l3769 0B90                           l3955 03A0  
                         l3947 0386                           l3939 0320                           l3891 0192  
                         l3883 0148                           l3867 0104                           l3875 0124  
                         l3859 00C6                           l3971 195C                           l3963 1908  
                         l2899 2072                           l3699 066E                           l2979 1C08  
                         l2995 23D8                           l2987 2426                           l3795 0CC8  
                         l3787 0BF2                           l3779 0BD0                           l3949 038A  
                         l3893 019A                           l3885 0162                           l3877 0134  
                         l3869 010C                           l3973 195E                           l3965 191E  
                         l2997 23E0                           l2989 242E                           l3797 0CD6  
                         l3789 0C04                           l3895 01AA                           l3887 0172  
                         l3879 0134                           l3975 196E                           l2999 23E2  
                         l3799 0CE2                           l3897 01BE                           l3889 0182  
                         l3985 1998                           l3977 1972                           l3969 1932  
                         _ADFM 7E07                           l3899 01CC                           l3995 19C0  
                         l3987 19A2                           l3979 1980                           ?_isr 0001  
                         l3997 19CC                           l3989 19AC                           l3999 19DC  
                         _ADON 7E10                           STR_1 2FF3                           STR_2 2FF9  
                         STR_3 2FF0                           STR_4 2FDE                           STR_5 2FE1  
                         STR_6 2FE4                           STR_7 2FE7                           STR_8 2FDB  
                         STR_9 2FEA                           _BRGH 7D62                           _CREN 7D5C  
                         _T0CS 7EAD                           u2000 1F32                           u2001 1F2E  
                         u2010 1F44                           u2011 1F40                           u2100 1A7E  
                         u2020 1E04                           u2101 1A7A                           u2021 1E00  
                         u2110 1A9A                           u2030 1E48                           u2111 1A96  
                         u2031 1E44                           u2200 1FFC                           u2120 1AC0  
                         u2040 2306                           u3000 0BF0                           u2201 1FF8  
                         u2121 1ABC                           u2041 2302                           u3001 0BEC  
                         u2050 1E88                           u2210 2018                           u2130 1AE4  
                         u3010 0C04                           u2051 1E84                           u2211 2014  
                         u2131 1AE0                           u3011 0C00                           u3100 00B4  
                         u2060 1ECC                           u2220 211A                           u2300 175C  
                         u2140 1AFE                           u3020 0C1A                           u3101 00B0  
                         u2061 1EC8                           u2221 2116                           u2301 1758  
                         u2141 1AFA                           u3021 0C16                           u3110 00F4  
                         u2230 2138                           u2310 176C                           u2070 1A20  
                         u2150 1B18                           u3030 0D1E                           u3111 00F0  
                         u2231 2134                           u2311 1768                           u2071 1A1C  
                         u2151 1B14                           u3031 0D1A                           u3200 0280  
                         u3120 0134                           u2240 214E                           u2320 1782  
                         u2080 1A3A                           u2160 1B36                           u2400 0820  
                         u3040 0D36                           u3201 027C                           u3121 0130  
                         u2241 214A                           u2321 177E                           u2081 1A36  
                         u2161 1B32                           u2401 081C                           u3041 0D32  
                         u3210 02AE                           u3130 01AA                           u3050 002C  
                         u2330 179C                           u2090 1A60                           u2170 1B4C  
                         u2410 084E                           u2250 2238                           u3211 02AA  
                         u3131 01A6                           u3051 0028                           u2331 1798  
                         u2091 1A5C                           u2171 1B48                           u2411 084A  
                         u2251 2234                           u3220 02C4                           u3140 01CC  
                         u3060 003E                           u3300 1980                           u2340 17AE  
                         u2180 1B70                           u2260 1D40                           u2500 165A  
                         u2420 0876                           u3221 02C0                           u3141 01C8  
                         u3061 003A                           u3301 197C                           u2341 17AA  
                         u2181 1B6C                           u2261 1D3C                           u2501 1656  
                         u2421 0872                           u3230 02D8                           u3150 01F6  
                         u3070 004E                           u3310 1994                           u2190 1FDE  
                         u2270 1722                           u2510 1670                           u2430 089C  
                         u2350 0738                           u3231 02D4                           u3151 01F2  
                         u3071 004A                           u3311 1990                           u2191 1FDA  
                         u2271 171E                           u2511 166C                           u2431 0898  
                         u2351 0734                           u3240 02F2                           u3160 021A  
                         u3080 0092                           u3320 19BC                           u3400 152E  
                         u2280 1732                           u2520 1680                           u2440 0966  
                         u2360 077E                           u2600 0DBE                           u3241 02EE  
                         u3161 0216                           u3081 008E                           u3321 19B8  
                         u3401 152A                           u2281 172E                           u2521 167C  
                         u2441 0962                           u2361 077A                           u2601 0DBA  
                         u3250 033A                           u3170 0230                           u3090 00A4  
                         u3330 19DC                           u3410 153E                           u2290 174A  
                         u2530 169A                           u2450 0976                           u2370 07AA  
                         u2610 0DCE                           u3251 0336                           u3171 022C  
                         u3091 00A0                           u3331 19D8                           u3411 153A  
                         u2291 1746                           u2531 1696                           u2451 0972  
                         u2371 07A6                           u2611 0DCA                           u3260 036A  
                         u3180 024E                           u3340 19EC                           u3420 154C  
                         u1900 2446                           u2700 0FF6                           u2540 16B0  
                         u2460 0A16                           u2380 07C6                           u2620 0DE4  
                         u3500 130C                           u3261 0366                           u3181 024A  
                         u3341 19E8                           u3421 1548                           u1901 2442  
                         u2701 0FF2                           u2541 16AC                           u2461 0A12  
                         u2381 07C2                           u2621 0DE0                           u3501 1308  
                         u3270 0398                           u3190 026E                           u3430 1586  
                         u3350 1406                           u1910 22AA                           u2710 100A  
                         u2550 16D4                           u2470 15F2                           u2390 07F0  
                         u2630 0DFA                           u3510 1332                           u3271 0394  
                         u3191 026A                           u3431 1582                           u3351 1402  
                         u1911 22A4                           u2711 1006                           u2551 16D0  
                         u2471 15EE                           u2391 07EC                           u2631 0DF6  
                         u3511 132E                           u3280 191E                           u3440 1594  
                         u3360 1414                           u2800 0498                           u2720 1072  
                         u2480 1630                           u2640 0E0A                           u2560 0D50  
                         u3520 134E                           u3281 191A                           u3441 1590  
                         u3361 1410                           u2801 0494                           u2721 106E  
                         u2481 162C                           u2641 0E06                           u2561 0D4C  
                         u3521 134A                           u3290 1952                           u3370 1470  
                         u1930 22CC                           u2810 04C6                           u2730 1194  
                         u2490 1640                           u2650 0E1E                           u2570 0D64  
                         u3530 136A                           u3450 120C          ?_read_external_eeprom 0001  
                         u3371 146C                           u1931 22C8                           u2811 04C2  
                         u2731 1190                           u2491 163C                           u2651 0E1A  
                         u2571 0D60                           u3531 1366                           u3451 1208  
                         u3380 14C6                           u1940 206A                           u2900 06B4  
                         u2820 04F6                           u2740 11EA                           u2660 0E2E  
                         u2580 0D7A                           u3540 137A                           u3460 122A  
                         u3381 14C2                           u1925 22AC                           u2901 06B0  
                         u2821 04F2                           u2741 11E6                           u2661 0E2A  
                         u2581 0D76                           u3541 1376                           u3461 1226  
                         u3390 1510                           u1950 2092                           u2910 0712  
                         u2830 052E                           u2750 03BE                           u2670 0E86  
                         u2590 0DAA                           u3550 1396                           u3470 1256  
                         u3295 1948                           u3391 150C                           u2911 070E  
                         u2831 052A                           u2751 03BA                           u2671 0E82  
                         u2591 0DA6                           u3551 1392                           u3471 1252  
                         u1960 20A2                           u2840 055A                           u2760 03F6  
                         u2680 1C66                           u2920 0A4E                           u3560 13B0  
                         u3480 1272                           u1961 209E                           u2841 0556  
                         u2761 03F2                           u2681 1C62                           u3617 1B94  
                         u2921 0A4A                           u3561 13AC                           u3481 126E  
                         u1970 2296                           u2850 0576                           u2770 0422  
                         u2690 1CBC                           u2930 0B50                           u3570 13CA  
                         u3490 12F6                           u1947 2060                           u1971 2292  
                         u2851 0572                           u2771 041E                           u2691 1CB8  
                         u3627 1BAE                           u2931 0B4C                           u3571 13C6  
                         u3491 12F2                           _PEIE 7F96                           u2860 05A0  
                         u2780 043E                           u1980 23FA                           u2940 0B60  
                         u3580 13E6                           u1957 2088                           u2861 059C  
                         u2781 043A                           u1981 23F6                           u3637 1BC4  
                         u2941 0B5C                           u3581 13E2                           u2870 05D0  
                         u2790 0468                           u1990 1D74                           u2950 0B72  
                         u2871 05CC                           u2791 0464                           u1991 1D70  
                         u3647 1BE6                           u2951 0B6E                           u2880 05FE  
                         u2960 0B90                           u2881 05FA                           u3657 1BF8  
                         u2961 0B8C                           u2890 0626                           u2970 0BA2  
                         u2891 0622                           u3667 1C0E                           u2971 0B9E  
                         _RCIE 7CED                           u2980 0BBE                           _RCEN 7E2B  
                         _RCIF 7CF5                           u3677 1C22                           u2981 0BBA  
                         u2990 0BD0                           u2991 0BCC                           _RBPU 7F8F  
                         _TMR0 0FD6                           _SPEN 7D5F                           _RSEN 7E29  
                         _TXIF 7CF4                           _main 11F0                           _last 004B  
                         _menu 15A8                           _pass 009B                           _logs 00B8  
                         _time 0083                           fsr0h 0FEA                           fsr1h 0FE2  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 005F                           _puts 22D2                           prodl 0FF3  
                         start 000E                ___fldiv@new_exp 0027           ??_init_matrix_keypad 0001  
                 ___param_bank 0000                 clcd_write@byte 0002                    _store_event 1ED6  
                _i2c_rep_start 2472                  ??_i2c_rx_mode 0001                          ??_isr 0001  
                 ?_init_ds1307 0001                  ___fltol@sign1 0037                          _ADCS0 7E00  
                        _ADCS1 7E01                          _ADCS2 7E02                          ?_main 0001  
                 ?_read_ds1307 0001                          _ACKEN 7E2C                          _ACKDT 7E2D  
               ??_display_time 0006                          ?_menu 0001                          _BCLIF 7D0B  
              __end_of___fldiv 03AC                          _ACQT0 7E03                          _ACQT1 7E04  
                        _ACQT2 7E05                __end_of___awdiv 1AD2                          STR_10 2FED  
                        STR_11 2FFC                          STR_20 2F4A                          STR_12 2FF6  
                        STR_13 2F7D                          STR_21 2F05                          STR_30 2E95  
                        STR_14 2F6C                          STR_22 2F39                          STR_15 2FAE  
                        STR_31 2EBD                          STR_23 2F9E                          STR_16 2EED  
                        STR_24 2F28                          STR_32 2E6F                          STR_17 2F5B  
                        STR_25 2EF3                          STR_33 2E98                          STR_18 2FBE  
                        STR_34 2F17                          STR_26 2EE1                          STR_27 2ECF  
                        STR_35 2EAB                          STR_19 2F8E                          STR_28 2FCD  
              __end_of___awmod 1B82                          STR_29 2E84                __end_of___fltol 1A0E  
                        ?_puts 0002                ___awdiv@divisor 0003                __end_of___lwdiv 2038  
              __end_of___lwmod 216C                   ?_init_config 0001                          i2l431 21C6  
              ___awdiv@counter 0005                          _VCFG0 7E0C                          _VCFG1 7E0D  
                        _RCREG 0FAE                          _SPBRG 0FAF                          _PORTB 0F81  
                        _PORTD 0F83                          _TRISB 0F93                          _TRISC 0F94  
                        _TRISD 0F95                          _SSPIF 7CF3                          _TXREG 0FAD  
                 ?_init_timer0 0001      write_external_eeprom@data 0002                          _delay 0081  
                        _count 007F                          _index 0055                          _temp1 0091  
                        _temp2 008C                          _putch 23EA                          _start 004D  
                        _store 0039                          tablat 0FF5                __end_of_settime 0D3C  
                        puts@s 0002                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 0FD8                          wtemp8 0060  
             init_ds1307@dummy 0011                     _i2c_no_ack 2492                __initialization 20A4  
               ?_i2c_rep_start 0001         ?_write_external_eeprom 0002                   __end_of_main 13F4  
                 __end_of_menu 16E4                   __end_of_puts 2308               __end_of_i2c_idle 244A  
             __end_of_i2c_read 2466               __end_of_i2c_stop 248A                  ?_download_log 0001  
                       ??_main 0039                         ??_menu 0011                         ??_puts 0004  
                __activetblptr 0002            __end_of_i2c_rx_mode 2482                         _ADCON0 0FC2  
                       _ADCON1 0FC1               read_switches@key 0057         ??_read_external_eeprom 0002  
                       _ADRESH 0FC4                         _ADRESL 0FC3                         _T08BIT 7EAE  
             ___awdiv@dividend 0001                         ?_putch 0001                         _GODONE 7E11  
                       i2l4121 216E                         i2l4123 217C                         i2l4125 21B2  
                       i2l4127 21C2                         i2l4129 21C4                   _write_ds1307 239E  
                       _TMR0IE 7F95                         _TMR0IF 7F92                         _TMR0ON 7EAF  
                       _SSPADD 0FC8                         _TRISC3 7CA3                         _TRISC4 7CA4  
                       _TRISC6 7CA6                         _TRISC7 7CA7                         _TRISD7 7CAF  
                       _SSPBUF 0FC9               __end_of___xxtofl 15A8               __end_of_get_time 1DCE  
                    ??___fldiv 001E                      ??___awdiv 0005                         _chance 005C  
                    ??___awmod 000D                      ??___fltol 0033                      ??___lwdiv 0005  
                    ??___lwmod 0005                         _main_f 0059               __end_of_init_i2c 23EA  
             __end_of_init_adc 239E                         _events 00A0                         _menu_f 0058  
             __end_of_read_adc 2258                         _t_flag 0044                         clear_0 20E8  
                       clear_1 20F4                 ??_download_log 000F               ___awdiv@quotient 0007  
              ___awmod@divisor 000B                         isa$std 0001               __end_of_scan_key 1908  
              ___awmod@counter 000D               __end_of_password 0A2C                   __pdataCOMRAM 005C  
                 __mediumconst 2E6E               __end_of_my_strcp 1ED6                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8               __end_of_view_log 0FC6  
                    ??_settime 0011                   ___xxtofl@arg 0012                   ___xxtofl@exp 0011  
                 ___xxtofl@val 0008                     __accesstop 0060        __end_of__initialization 20FA  
         __end_of_display_time 245A                  ___rparam_used 0001                     ___fltol@f1 002F  
              ??_i2c_rep_start 0001                    ?_i2c_no_ack 0001                 __pcstackCOMRAM 0001  
                 __pidataBANK0 235C                    _i2c_rx_mode 247A                  __end_of_putch 2400  
            __end_of_i2c_start 2492              __end_of_i2c_write 2472                        ??_putch 0001  
                   __pbssBANK0 0060         write_external_eeprom@i 0003                      ?_i2c_idle 0001  
                    ?_i2c_read 0001                      ?_i2c_stop 0001                     _clcd_print 2038  
                   _clcd_putch 23BC                     _clcd_write 2298   write_external_eeprom@address 0005  
                 ?_store_event 0001                read_ds1307@data 0003              read_switches@once 005E  
                      _ACKSTAT 7E2E                      ?___xxtofl 0008                    password@key 001F  
                      _SSPCON1 0FC6                      ?_get_time 0001                  _read_switches 1F4E  
                   ??_i2c_idle 0001                     ??_i2c_read 0001              __end_of_dashboard 1800  
                   ??_i2c_stop 0001                      ?_init_i2c 0001           __end_of_download_log 11F0  
                    ?_init_adc 0001                      ?_read_adc 0001              __end_of_clear_log 1CC2  
                    ?_scan_key 0001        ??_write_external_eeprom 0003                        __Hparam 0000  
                    ?_password 0001                        __Lparam 0000                      ?_my_strcp 0001  
                      ___fldiv 0012                        ___awdiv 1A0E                        ___awmod 1AD2  
                    ?_view_log 0001                        ___fltol 1908                        ___lwdiv 1FC4  
                 store_event@k 0006                        ___lwmod 2108                        __pcinit 20A4  
                      __ramtop 0600                        __ptext0 11F0                        __ptext1 0D3C  
                      __ptext2 0A2C                        __ptext3 1F4E                        __ptext4 1800  
                      __ptext5 2212                        __ptext6 0718                        __ptext7 1DCE  
                      __ptext8 15A8                        __ptext9 1CC2              __end_of_init_clcd 1C2A  
                   ??___xxtofl 000C              __end_of_init_uart 2426               ___awmod@dividend 0009  
                ??_change_pass 0011                        _pre_key 005A                   init_config@j 0012  
                      _settime 0A2C                 ?_read_switches 0001                     ??_get_time 0004  
               __pintcode_body 216C           end_of_initialization 20FA                     clear_log@k 0007  
                      menu@key 0011                     ??_init_i2c 0001                     ??_init_adc 0001  
                __Lmediumconst 2E6E                     ??_read_adc 0003                        int_func 216C  
                   ??_scan_key 0001                    ?_clcd_print 0003                    ?_clcd_putch 000F  
                  ?_clcd_write 0001              __end_of_my_strcmp 1E52                     ??_password 0011  
                   _tick_count 005D                     _reset_flag 0049                     ??_my_strcp 0003  
                      postdec1 0FE5                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE                     ??_view_log 0011  
               _download_array 0060                      _PORTBbits 0F81                read_adc@channel 0007  
                password@delay 001B                   _display_time 244A                  i2c_write@data 0001  
                   _view_array 006B                  ___xxtofl@sign 0010                    my_strcp@one 0001  
                  my_strcp@two 0002                read_adc@reg_val 0005                    ___fldiv@grs 0029  
                  ___fldiv@rem 0022                     _star_index 0053            __end_of_change_pass 0718  
     read_external_eeprom@data 0003                   ??_i2c_no_ack 0001                   ?_i2c_rx_mode 0001  
                __pidataCOMRAM 2498                    _adc_reg_val 0042                    view_log@key 0018  
          start_initialization 20A4                ??_read_switches 0001                      _i2c_start 248A  
             change_pass@delay 0013                    __end_of_isr 21CA                      _i2c_write 2466  
           __end_of_i2c_no_ack 2498          __end_of_i2c_rep_start 247A                  ??_init_ds1307 0011  
                  __pdataBANK0 00A0                  ??_read_ds1307 0002                   _download_log 0FC6  
  read_switches@detection_type 0001                  ??_init_config 0012                      ___fldiv@a 001A  
                    ___fldiv@b 0016                  ??_init_timer0 0001                    __pbssCOMRAM 0039  
                  _change_pass 03AC                     ?_i2c_start 0001                     ?_i2c_write 0001  
               change_pass@key 0017                   change_pass@k 0018                      _dashboard 16E4  
             ___lwdiv@dividend 0001  __end_of_write_external_eeprom 2298                      _clear_log 1C2A  
                    __pintcode 0008                  __pmediumconst 2E6E                       ?___fldiv 0016  
                     ?___awdiv 0001                       ?___awmod 0009                       ?___fltol 002F  
           read_ds1307@address 0002                       ?___lwdiv 0001                      _clock_reg 007A  
                     ?___lwmod 0001                    _apend_index 004E            __end_of_init_ds1307 2212  
                     ?_settime 0001            __end_of_read_ds1307 235C               ___lwdiv@quotient 0005  
                    _init_clcd 1B82            __end_of_init_config 1D48                      _init_uart 2414  
                    _log_index 0052                  ?_write_ds1307 000F            __end_of_init_timer0 2414  
  read_external_eeprom@address 0002                   ??_clcd_print 0006                   ??_clcd_putch 0010  
   __end_of_init_matrix_keypad 2438                   ??_clcd_write 0002                     ?_dashboard 0001  
                     i2u360_40 21B2                       i2u360_41 21AE                       i2u359_40 217C  
                     i2u359_41 2178                     ?_clear_log 0001                      _my_strcmp 1DCE  
                 password@wait 0013                  download_log@j 000F                  download_log@k 0011  
        clcd_write@control_bit 0001                     my_strcmp@k 0007                      _star_flag 0054  
                   settime@key 0013                    ??_i2c_start 0001             __end_of_clcd_print 20A4  
                  ??_i2c_write 0001             __end_of_clcd_putch 23D4             __end_of_clcd_write 22D2  
                   ?_init_clcd 0001                     ?_init_uart 0001                      copy_data0 20B8  
               ??_write_ds1307 0010                       _i2c_idle 2438                       _i2c_read 245A  
                     _i2c_stop 2482                  _temp_password 0096                       __Hrparam 0000  
                 clear_log@key 0006                       __Lrparam 0000                     ?_my_strcmp 0001  
 __end_of_read_external_eeprom 2332                    _init_ds1307 21CA                    _read_ds1307 2332  
                  _init_config 1CC2                       ___xxtofl 13F4            write_ds1307@address 0010  
                  _init_timer0 2400                ___lwdiv@divisor 0003                ___lwdiv@counter 0007  
                     __ptext10 2414                       __ptext11 2400                       __ptext20 22D2  
                     __ptext12 2426                       __ptext21 23EA                       __ptext13 23D4  
                     __ptext30 247A                       __ptext22 1AD2                       __ptext14 21CA  
                     __ptext31 2492                       __ptext23 1A0E                       __ptext15 239E  
                     __ptext40 248A                       __ptext32 244A                       __ptext24 16E4  
                     __ptext16 1B82                       __ptext41 2438                       __ptext33 2108  
                     __ptext25 1ED6                       __ptext17 237E                       __ptext42 1E52  
                     __ptext34 1FC4                       __ptext26 1D48                       __ptext18 0FC6  
                     __ptext43 23BC                       __ptext35 1C2A                       __ptext27 2332  
                     __ptext19 2308                       __ptext44 2038                       __ptext36 03AC  
                     __ptext28 2472                       __ptext45 2298                       __ptext37 2258  
                     __ptext29 245A                       __ptext46 13F4                       __ptext38 2466  
                     __ptext47 1908                       __ptext39 2482                       __ptext48 0012  
                     _get_time 1D48                       _init_i2c 23D4                       _init_adc 237E  
                     _read_adc 2212                       _key_time 0040                       _scan_key 1800  
                  ??_dashboard 0011                       _password 0718                    ??_clear_log 0006  
                ??_store_event 0006                       _pos_flag 0045                       isa$xinst 0000  
                     _my_strcp 1E52                       _overflow 0050                       int$flags 005F  
                     _view_log 0D3C                      my_strcp@k 0007                      view_log@j 0016  
                    putch@byte 0001                   ?_change_pass 0001                       isr@count 0076  
                  ??_init_clcd 0003          __end_of_read_switches 1FC4                    ??_init_uart 0001  
                     intlevel2 0000               ___lwmod@dividend 0001                       settime@k 0014  
                  ??_my_strcmp 0003           __end_of_write_ds1307 23BC            __end_of_store_event 1F4E  
              ___lwmod@divisor 0003                ___lwmod@counter 0005                    _press_delay 007D  
             write_ds1307@data 000F           _read_external_eeprom 2308                   my_strcp@last 0005  
