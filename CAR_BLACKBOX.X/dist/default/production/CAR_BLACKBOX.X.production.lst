

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue May 28 15:58:16 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Version 2.20
    64                           ; Generated 12/02/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4580 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97   000000                     
    98                           	psect	idataCOMRAM
    99   0020C6                     __pidataCOMRAM:
   100                           	callstack 0
   101                           
   102                           ;initializer for _chance
   103   0020C6  02                 	db	2
   104                           
   105                           ;initializer for _tick_count
   106   0020C7  B4                 	db	180
   107                           
   108                           ;initializer for read_switches@once
   109   0020C8  01                 	db	1
   110                           
   111                           	psect	idataBANK0
   112   00207A                     __pidataBANK0:
   113                           	callstack 0
   114                           
   115                           ;initializer for _events
   116   00207A  E2                 	db	low STR_1
   117   00207B  E5                 	db	low STR_2
   118   00207C  DF                 	db	low STR_3
   119   00207D  D3                 	db	low STR_4
   120   00207E  D6                 	db	low STR_5
   121   00207F  D9                 	db	low STR_6
   122   002080  DC                 	db	low STR_7
   123   002081  D0                 	db	low STR_8
   124                           
   125                           ;initializer for _logs
   126   002082  A9                 	db	low STR_17
   127   002083  69                 	db	low STR_18
   128   002084  25                 	db	low STR_19
   129   002085  C7                 	db	low STR_20
   130   002086  79                 	db	low STR_21
   131   000000                     _SSPADD	set	4040
   132   000000                     _SSPCON1	set	4038
   133   000000                     _ADRESL	set	4035
   134   000000                     _ADRESH	set	4036
   135   000000                     _ACKSTAT	set	32302
   136   000000                     _CKE	set	32318
   137   000000                     _RBPU	set	32655
   138   000000                     _VCFG1	set	32269
   139   000000                     _GODONE	set	32273
   140   000000                     _PORTBbits	set	3969
   141   000000                     _ADCON1	set	4033
   142   000000                     _TRISD	set	3989
   143   000000                     _ADCON0	set	4034
   144   000000                     _PSA	set	32427
   145   000000                     _TMR0ON	set	32431
   146   000000                     _T0CS	set	32429
   147   000000                     _TMR0IF	set	32658
   148   000000                     _ACKEN	set	32300
   149   000000                     _ACKDT	set	32301
   150   000000                     _RCEN	set	32299
   151   000000                     _RSEN	set	32297
   152   000000                     _PEN	set	32298
   153   000000                     _SEN	set	32296
   154   000000                     _SMP	set	32319
   155   000000                     _TRISC4	set	31908
   156   000000                     _TRISC3	set	31907
   157   000000                     _PEIE	set	32662
   158   000000                     _GIE	set	32663
   159   000000                     _RD7	set	31775
   160   000000                     _RC0	set	31760
   161   000000                     _RC2	set	31762
   162   000000                     _GO	set	32273
   163   000000                     _ADON	set	32272
   164   000000                     _VCFG0	set	32268
   165   000000                     _ADCS2	set	32258
   166   000000                     _ADCS1	set	32257
   167   000000                     _ADCS0	set	32256
   168   000000                     _ACQT0	set	32259
   169   000000                     _ACQT1	set	32260
   170   000000                     _ACQT2	set	32261
   171   000000                     _PORTB	set	3969
   172   000000                     _RC1	set	31761
   173   000000                     _ADFM	set	32263
   174   000000                     _TRISB	set	3987
   175   000000                     _TRISC	set	3988
   176   000000                     _PORTD	set	3971
   177   000000                     _TRISD7	set	31919
   178   000000                     _SSPIF	set	31987
   179   000000                     _TMR0IE	set	32661
   180   000000                     _TMR0	set	4054
   181   000000                     _SSPBUF	set	4041
   182   000000                     _T08BIT	set	32430
   183   000000                     _BCLIF	set	32011
   184                           
   185                           	psect	smallconst
   186   000600                     __psmallconst:
   187                           	callstack 0
   188   000600  00                 	db	0
   189   000601                     STR_12:
   190   000601  20                 	db	32
   191   000602  20                 	db	32
   192   000603  20                 	db	32
   193   000604  20                 	db	32
   194   000605  20                 	db	32
   195   000606  20                 	db	32
   196   000607  53                 	db	83	;'S'
   197   000608  55                 	db	85	;'U'
   198   000609  43                 	db	67	;'C'
   199   00060A  43                 	db	67	;'C'
   200   00060B  45                 	db	69	;'E'
   201   00060C  53                 	db	83	;'S'
   202   00060D  53                 	db	83	;'S'
   203   00060E  20                 	db	32
   204   00060F  20                 	db	32
   205   000610  20                 	db	32
   206   000611  20                 	db	32
   207   000612  20                 	db	32
   208   000613  00                 	db	0
   209   000614                     STR_22:
   210   000614  45                 	db	69	;'E'
   211   000615  6E                 	db	110	;'n'
   212   000616  74                 	db	116	;'t'
   213   000617  65                 	db	101	;'e'
   214   000618  72                 	db	114	;'r'
   215   000619  65                 	db	101	;'e'
   216   00061A  64                 	db	100	;'d'
   217   00061B  20                 	db	32
   218   00061C  56                 	db	86	;'V'
   219   00061D  69                 	db	105	;'i'
   220   00061E  65                 	db	101	;'e'
   221   00061F  77                 	db	119	;'w'
   222   000620  20                 	db	32
   223   000621  4C                 	db	76	;'L'
   224   000622  6F                 	db	111	;'o'
   225   000623  67                 	db	103	;'g'
   226   000624  00                 	db	0
   227   000625                     STR_19:
   228   000625  43                 	db	67	;'C'
   229   000626  6C                 	db	108	;'l'
   230   000627  65                 	db	101	;'e'
   231   000628  61                 	db	97	;'a'
   232   000629  72                 	db	114	;'r'
   233   00062A  20                 	db	32
   234   00062B  4C                 	db	76	;'L'
   235   00062C  6F                 	db	111	;'o'
   236   00062D  67                 	db	103	;'g'
   237   00062E  20                 	db	32
   238   00062F  20                 	db	32
   239   000630  20                 	db	32
   240   000631  20                 	db	32
   241   000632  20                 	db	32
   242   000633  20                 	db	32
   243   000634  20                 	db	32
   244   000635  00                 	db	0
   245   000636                     STR_15:
   246   000636  20                 	db	32
   247   000637  20                 	db	32
   248   000638  20                 	db	32
   249   000639  54                 	db	84	;'T'
   250   00063A  72                 	db	114	;'r'
   251   00063B  79                 	db	121	;'y'
   252   00063C  20                 	db	32
   253   00063D  41                 	db	65	;'A'
   254   00063E  67                 	db	103	;'g'
   255   00063F  61                 	db	97	;'a'
   256   000640  69                 	db	105	;'i'
   257   000641  6E                 	db	110	;'n'
   258   000642  20                 	db	32
   259   000643  20                 	db	32
   260   000644  20                 	db	32
   261   000645  20                 	db	32
   262   000646  00                 	db	0
   263   000647                     STR_10:
   264   000647  20                 	db	32
   265   000648  45                 	db	69	;'E'
   266   000649  6E                 	db	110	;'n'
   267   00064A  74                 	db	116	;'t'
   268   00064B  65                 	db	101	;'e'
   269   00064C  72                 	db	114	;'r'
   270   00064D  20                 	db	32
   271   00064E  50                 	db	80	;'P'
   272   00064F  61                 	db	97	;'a'
   273   000650  73                 	db	115	;'s'
   274   000651  73                 	db	115	;'s'
   275   000652  77                 	db	119	;'w'
   276   000653  6F                 	db	111	;'o'
   277   000654  72                 	db	114	;'r'
   278   000655  64                 	db	100	;'d'
   279   000656  20                 	db	32
   280   000657  00                 	db	0
   281   000658                     STR_9:
   282   000658  20                 	db	32
   283   000659  20                 	db	32
   284   00065A  54                 	db	84	;'T'
   285   00065B  49                 	db	73	;'I'
   286   00065C  4D                 	db	77	;'M'
   287   00065D  45                 	db	69	;'E'
   288   00065E  20                 	db	32
   289   00065F  20                 	db	32
   290   000660  20                 	db	32
   291   000661  20                 	db	32
   292   000662  45                 	db	69	;'E'
   293   000663  56                 	db	86	;'V'
   294   000664  20                 	db	32
   295   000665  20                 	db	32
   296   000666  53                 	db	83	;'S'
   297   000667  50                 	db	80	;'P'
   298   000668  00                 	db	0
   299   000669                     STR_18:
   300   000669  44                 	db	68	;'D'
   301   00066A  6F                 	db	111	;'o'
   302   00066B  77                 	db	119	;'w'
   303   00066C  6E                 	db	110	;'n'
   304   00066D  6C                 	db	108	;'l'
   305   00066E  6F                 	db	111	;'o'
   306   00066F  61                 	db	97	;'a'
   307   000670  64                 	db	100	;'d'
   308   000671  20                 	db	32
   309   000672  6C                 	db	108	;'l'
   310   000673  6F                 	db	111	;'o'
   311   000674  67                 	db	103	;'g'
   312   000675  20                 	db	32
   313   000676  20                 	db	32
   314   000677  20                 	db	32
   315   000678  00                 	db	0
   316   000679                     STR_21:
   317   000679  43                 	db	67	;'C'
   318   00067A  68                 	db	104	;'h'
   319   00067B  61                 	db	97	;'a'
   320   00067C  6E                 	db	110	;'n'
   321   00067D  67                 	db	103	;'g'
   322   00067E  65                 	db	101	;'e'
   323   00067F  20                 	db	32
   324   000680  50                 	db	80	;'P'
   325   000681  61                 	db	97	;'a'
   326   000682  73                 	db	115	;'s'
   327   000683  73                 	db	115	;'s'
   328   000684  77                 	db	119	;'w'
   329   000685  6F                 	db	111	;'o'
   330   000686  72                 	db	114	;'r'
   331   000687  64                 	db	100	;'d'
   332   000688  00                 	db	0
   333   000689                     STR_11:
   334   000689  20                 	db	32
   335   00068A  20                 	db	32
   336   00068B  20                 	db	32
   337   00068C  20                 	db	32
   338   00068D  20                 	db	32
   339   00068E  20                 	db	32
   340   00068F  20                 	db	32
   341   000690  20                 	db	32
   342   000691  20                 	db	32
   343   000692  20                 	db	32
   344   000693  20                 	db	32
   345   000694  20                 	db	32
   346   000695  20                 	db	32
   347   000696  20                 	db	32
   348   000697  20                 	db	32
   349   000698  00                 	db	0
   350   000699                     STR_13:
   351   000699  20                 	db	32
   352   00069A  53                 	db	83	;'S'
   353   00069B  79                 	db	121	;'y'
   354   00069C  73                 	db	115	;'s'
   355   00069D  74                 	db	116	;'t'
   356   00069E  65                 	db	101	;'e'
   357   00069F  6D                 	db	109	;'m'
   358   0006A0  20                 	db	32
   359   0006A1  42                 	db	66	;'B'
   360   0006A2  6C                 	db	108	;'l'
   361   0006A3  6F                 	db	111	;'o'
   362   0006A4  63                 	db	99	;'c'
   363   0006A5  6B                 	db	107	;'k'
   364   0006A6  65                 	db	101	;'e'
   365   0006A7  64                 	db	100	;'d'
   366   0006A8  00                 	db	0
   367   0006A9                     STR_17:
   368   0006A9  56                 	db	86	;'V'
   369   0006AA  69                 	db	105	;'i'
   370   0006AB  65                 	db	101	;'e'
   371   0006AC  77                 	db	119	;'w'
   372   0006AD  20                 	db	32
   373   0006AE  4C                 	db	76	;'L'
   374   0006AF  6F                 	db	111	;'o'
   375   0006B0  67                 	db	103	;'g'
   376   0006B1  20                 	db	32
   377   0006B2  20                 	db	32
   378   0006B3  20                 	db	32
   379   0006B4  20                 	db	32
   380   0006B5  20                 	db	32
   381   0006B6  20                 	db	32
   382   0006B7  00                 	db	0
   383   0006B8                     STR_16:
   384   0006B8  20                 	db	32
   385   0006B9  43                 	db	67	;'C'
   386   0006BA  68                 	db	104	;'h'
   387   0006BB  61                 	db	97	;'a'
   388   0006BC  6E                 	db	110	;'n'
   389   0006BD  63                 	db	99	;'c'
   390   0006BE  65                 	db	101	;'e'
   391   0006BF  73                 	db	115	;'s'
   392   0006C0  20                 	db	32
   393   0006C1  4C                 	db	76	;'L'
   394   0006C2  65                 	db	101	;'e'
   395   0006C3  66                 	db	102	;'f'
   396   0006C4  74                 	db	116	;'t'
   397   0006C5  20                 	db	32
   398   0006C6  00                 	db	0
   399   0006C7                     STR_20:
   400   0006C7  53                 	db	83	;'S'
   401   0006C8  65                 	db	101	;'e'
   402   0006C9  74                 	db	116	;'t'
   403   0006CA  20                 	db	32
   404   0006CB  74                 	db	116	;'t'
   405   0006CC  69                 	db	105	;'i'
   406   0006CD  6D                 	db	109	;'m'
   407   0006CE  65                 	db	101	;'e'
   408   0006CF  00                 	db	0
   409   0006D0                     STR_8:
   410   0006D0  43                 	db	67	;'C'
   411   0006D1  20                 	db	32
   412   0006D2  00                 	db	0
   413   0006D3                     STR_4:
   414   0006D3  47                 	db	71	;'G'
   415   0006D4  31                 	db	49	;'1'
   416   0006D5  00                 	db	0
   417   0006D6                     STR_5:
   418   0006D6  47                 	db	71	;'G'
   419   0006D7  32                 	db	50	;'2'
   420   0006D8  00                 	db	0
   421   0006D9                     STR_6:
   422   0006D9  47                 	db	71	;'G'
   423   0006DA  33                 	db	51	;'3'
   424   0006DB  00                 	db	0
   425   0006DC                     STR_7:
   426   0006DC  47                 	db	71	;'G'
   427   0006DD  34                 	db	52	;'4'
   428   0006DE  00                 	db	0
   429   0006DF                     STR_3:
   430   0006DF  47                 	db	71	;'G'
   431   0006E0  4E                 	db	78	;'N'
   432   0006E1  00                 	db	0
   433   0006E2                     STR_1:
   434   0006E2  4F                 	db	79	;'O'
   435   0006E3  4E                 	db	78	;'N'
   436   0006E4  00                 	db	0
   437   0006E5                     STR_2:
   438   0006E5  47                 	db	71	;'G'
   439   0006E6  52                 	db	82	;'R'
   440   0006E7  00                 	db	0
   441   0006E8  00                 	db	0	; dummy byte at the end
   442   000000                     
   443                           ; #config settings
   444                           
   445                           	psect	cinit
   446   001D44                     __pcinit:
   447                           	callstack 0
   448   001D44                     start_initialization:
   449                           	callstack 0
   450   001D44                     __initialization:
   451                           	callstack 0
   452                           
   453                           ; Initialize objects allocated to BANK0 (13 bytes)
   454                           ; load TBLPTR registers with __pidataBANK0
   455   001D44  0E7A               	movlw	low __pidataBANK0
   456   001D46  6EF6               	movwf	tblptrl,c
   457   001D48  0E20               	movlw	high __pidataBANK0
   458   001D4A  6EF7               	movwf	tblptrh,c
   459   001D4C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   460   001D4E  6EF8               	movwf	tblptru,c
   461   001D50  EE00  F084         	lfsr	0,__pdataBANK0
   462   001D54  EE10 F00D          	lfsr	1,13
   463   001D58                     copy_data0:
   464   001D58  0009               	tblrd		*+
   465   001D5A  CFF5 FFEE          	movff	tablat,postinc0
   466   001D5E  50E5               	movf	postdec1,w,c
   467   001D60  50E1               	movf	fsr1l,w,c
   468   001D62  E1FA               	bnz	copy_data0
   469                           
   470                           ; Initialize objects allocated to COMRAM (3 bytes)
   471                           ; load TBLPTR registers with __pidataCOMRAM
   472   001D64  0EC6               	movlw	low __pidataCOMRAM
   473   001D66  6EF6               	movwf	tblptrl,c
   474   001D68  0E20               	movlw	high __pidataCOMRAM
   475   001D6A  6EF7               	movwf	tblptrh,c
   476   001D6C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   477   001D6E  6EF8               	movwf	tblptru,c
   478   001D70  0009               	tblrd		*+	;fetch initializer
   479   001D72  CFF5 F05C          	movff	tablat,__pdataCOMRAM
   480   001D76  0009               	tblrd		*+	;fetch initializer
   481   001D78  CFF5 F05D          	movff	tablat,__pdataCOMRAM+1
   482   001D7C  0009               	tblrd		*+	;fetch initializer
   483   001D7E  CFF5 F05E          	movff	tablat,__pdataCOMRAM+2
   484                           
   485                           ; Clear objects allocated to BANK0 (36 bytes)
   486   001D82  EE00  F060         	lfsr	0,__pbssBANK0
   487   001D86  0E24               	movlw	36
   488   001D88                     clear_0:
   489   001D88  6AEE               	clrf	postinc0,c
   490   001D8A  06E8               	decf	wreg,f,c
   491   001D8C  E1FD               	bnz	clear_0
   492                           
   493                           ; Clear objects allocated to COMRAM (35 bytes)
   494   001D8E  EE00  F039         	lfsr	0,__pbssCOMRAM
   495   001D92  0E23               	movlw	35
   496   001D94                     clear_1:
   497   001D94  6AEE               	clrf	postinc0,c
   498   001D96  06E8               	decf	wreg,f,c
   499   001D98  E1FD               	bnz	clear_1
   500   001D9A                     end_of_initialization:
   501                           	callstack 0
   502   001D9A                     __end_of__initialization:
   503                           	callstack 0
   504   001D9A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   505   001D9C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   506   001D9E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   507   001DA0  6EF8               	movwf	tblptru,c
   508   001DA2  0100               	movlb	0
   509   001DA4  EFD1  F007         	goto	_main	;jump to C main() function
   510                           
   511                           	psect	bssCOMRAM
   512   000039                     __pbssCOMRAM:
   513                           	callstack 0
   514   000039                     _clock_reg:
   515                           	callstack 0
   516   000039                     	ds	3
   517   00003C                     _press_delay:
   518                           	callstack 0
   519   00003C                     	ds	2
   520   00003E                     _delay:
   521                           	callstack 0
   522   00003E                     	ds	2
   523   000040                     _index:
   524                           	callstack 0
   525   000040                     	ds	2
   526   000042                     _key_time:
   527                           	callstack 0
   528   000042                     	ds	2
   529   000044                     _adc_reg_val:
   530                           	callstack 0
   531   000044                     	ds	2
   532   000046                     _apend_index:
   533                           	callstack 0
   534   000046                     	ds	1
   535   000047                     _start_index:
   536                           	callstack 0
   537   000047                     	ds	1
   538   000048                     _overflow:
   539                           	callstack 0
   540   000048                     	ds	1
   541   000049                     _lap:
   542                           	callstack 0
   543   000049                     	ds	1
   544   00004A                     _log_index:
   545                           	callstack 0
   546   00004A                     	ds	1
   547   00004B                     _star_flag:
   548                           	callstack 0
   549   00004B                     	ds	1
   550   00004C                     _i:
   551                           	callstack 0
   552   00004C                     	ds	1
   553   00004D                     read_switches@key:
   554                           	callstack 0
   555   00004D                     	ds	1
   556   00004E                     _menu_f:
   557                           	callstack 0
   558   00004E                     	ds	1
   559   00004F                     _main_f:
   560                           	callstack 0
   561   00004F                     	ds	1
   562   000050                     _pre_key:
   563                           	callstack 0
   564   000050                     	ds	1
   565   000051                     _key:
   566                           	callstack 0
   567   000051                     	ds	1
   568   000052                     _flag:
   569                           	callstack 0
   570   000052                     	ds	1
   571   000053                     _time:
   572                           	callstack 0
   573   000053                     	ds	9
   574                           
   575                           	psect	dataCOMRAM
   576   00005C                     __pdataCOMRAM:
   577                           	callstack 0
   578   00005C                     _chance:
   579                           	callstack 0
   580   00005C                     	ds	1
   581   00005D                     _tick_count:
   582                           	callstack 0
   583   00005D                     	ds	1
   584   00005E                     read_switches@once:
   585                           	callstack 0
   586   00005E                     	ds	1
   587                           
   588                           	psect	bssBANK0
   589   000060                     __pbssBANK0:
   590                           	callstack 0
   591   000060                     _view_array:
   592                           	callstack 0
   593   000060                     	ds	11
   594   00006B                     _store:
   595                           	callstack 0
   596   00006B                     	ds	11
   597   000076                     isr@count:
   598                           	callstack 0
   599   000076                     	ds	4
   600   00007A                     _temp_password:
   601                           	callstack 0
   602   00007A                     	ds	5
   603   00007F                     _pass:
   604                           	callstack 0
   605   00007F                     	ds	5
   606                           
   607                           	psect	dataBANK0
   608   000084                     __pdataBANK0:
   609                           	callstack 0
   610   000084                     _events:
   611                           	callstack 0
   612   000084                     	ds	8
   613   00008C                     _logs:
   614                           	callstack 0
   615   00008C                     	ds	5
   616                           
   617                           	psect	cstackCOMRAM
   618   000001                     __pcstackCOMRAM:
   619                           	callstack 0
   620   000001                     ?_read_adc:
   621                           	callstack 0
   622   000001                     ?_my_strcmp:
   623                           	callstack 0
   624   000001                     ?___awdiv:
   625                           	callstack 0
   626   000001                     ?___lwdiv:
   627                           	callstack 0
   628   000001                     ?___lwmod:
   629                           	callstack 0
   630   000001                     clcd_write@control_bit:
   631                           	callstack 0
   632   000001                     read_switches@detection_type:
   633                           	callstack 0
   634   000001                     my_strcmp@one:
   635                           	callstack 0
   636   000001                     i2c_write@data:
   637                           	callstack 0
   638   000001                     ___awdiv@dividend:
   639                           	callstack 0
   640   000001                     ___lwdiv@dividend:
   641                           	callstack 0
   642   000001                     ___lwmod@dividend:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x0
   646   000001                     	ds	1
   647   000002                     clcd_write@byte:
   648                           	callstack 0
   649   000002                     my_strcmp@two:
   650                           	callstack 0
   651   000002                     write_ds1307@data:
   652                           	callstack 0
   653   000002                     read_ds1307@address:
   654                           	callstack 0
   655   000002                     write_external_eeprom@data:
   656                           	callstack 0
   657   000002                     read_external_eeprom@address:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x1
   661   000002                     	ds	1
   662   000003                     ??_read_adc:
   663   000003                     ??_init_clcd:
   664   000003                     ??_my_strcmp:
   665   000003                     write_ds1307@address:
   666                           	callstack 0
   667   000003                     read_ds1307@data:
   668                           	callstack 0
   669   000003                     read_external_eeprom@data:
   670                           	callstack 0
   671   000003                     clcd_print@data:
   672                           	callstack 0
   673   000003                     write_external_eeprom@i:
   674                           	callstack 0
   675   000003                     ___awdiv@divisor:
   676                           	callstack 0
   677   000003                     ___lwdiv@divisor:
   678                           	callstack 0
   679   000003                     ___lwmod@divisor:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x2
   683   000003                     	ds	1
   684   000004                     init_ds1307@dummy:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0x3
   688   000004                     	ds	1
   689   000005                     clcd_print@addr:
   690                           	callstack 0
   691   000005                     write_external_eeprom@address:
   692                           	callstack 0
   693   000005                     ___awdiv@counter:
   694                           	callstack 0
   695   000005                     ___lwmod@counter:
   696                           	callstack 0
   697   000005                     read_adc@reg_val:
   698                           	callstack 0
   699   000005                     my_strcmp@last:
   700                           	callstack 0
   701   000005                     ___lwdiv@quotient:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x4
   705   000005                     	ds	1
   706   000006                     ___awdiv@sign:
   707                           	callstack 0
   708   000006                     init_config@j:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x5
   712   000006                     	ds	1
   713   000007                     read_adc@channel:
   714                           	callstack 0
   715   000007                     ___lwdiv@counter:
   716                           	callstack 0
   717   000007                     my_strcmp@k:
   718                           	callstack 0
   719   000007                     ___awdiv@quotient:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x6
   723   000007                     	ds	1
   724   000008                     ??_store_event:
   725   000008                     ?___xxtofl:
   726                           	callstack 0
   727   000008                     ___xxtofl@val:
   728                           	callstack 0
   729                           
   730                           ; 4 bytes @ 0x7
   731   000008                     	ds	1
   732   000009                     ?___awmod:
   733                           	callstack 0
   734   000009                     store_event@k:
   735                           	callstack 0
   736   000009                     ___awmod@dividend:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x8
   740   000009                     	ds	2
   741   00000B                     ___awmod@divisor:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0xA
   745   00000B                     	ds	1
   746   00000C                     ??___xxtofl:
   747                           
   748                           ; 1 bytes @ 0xB
   749   00000C                     	ds	1
   750   00000D                     ___awmod@counter:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0xC
   754   00000D                     	ds	1
   755   00000E                     ___awmod@sign:
   756                           	callstack 0
   757                           
   758                           ; 1 bytes @ 0xD
   759   00000E                     	ds	1
   760   00000F                     clcd_putch@addr:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0xE
   764   00000F                     	ds	1
   765   000010                     clcd_putch@data:
   766                           	callstack 0
   767   000010                     ___xxtofl@sign:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0xF
   771   000010                     	ds	1
   772   000011                     ??_dashboard:
   773   000011                     ??_password:
   774   000011                     ??_menu:
   775   000011                     ??_view_log:
   776   000011                     ___xxtofl@exp:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0x10
   780   000011                     	ds	1
   781   000012                     menu@key:
   782                           	callstack 0
   783   000012                     ___xxtofl@arg:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x11
   787   000012                     	ds	1
   788   000013                     password@wait:
   789                           	callstack 0
   790                           
   791                           ; 8 bytes @ 0x12
   792   000013                     	ds	3
   793   000016                     ?___fldiv:
   794                           	callstack 0
   795   000016                     view_log@key:
   796                           	callstack 0
   797   000016                     ___fldiv@b:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x15
   801   000016                     	ds	1
   802   000017                     view_log@j:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x16
   806   000017                     	ds	3
   807   00001A                     ___fldiv@a:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x19
   811   00001A                     	ds	1
   812   00001B                     password@delay:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x1A
   816   00001B                     	ds	3
   817   00001E                     ??___fldiv:
   818                           
   819                           ; 1 bytes @ 0x1D
   820   00001E                     	ds	1
   821   00001F                     password@key:
   822                           	callstack 0
   823                           
   824                           ; 1 bytes @ 0x1E
   825   00001F                     	ds	3
   826   000022                     ___fldiv@rem:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x21
   830   000022                     	ds	4
   831   000026                     ___fldiv@sign:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0x25
   835   000026                     	ds	1
   836   000027                     ___fldiv@new_exp:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x26
   840   000027                     	ds	2
   841   000029                     ___fldiv@grs:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x28
   845   000029                     	ds	4
   846   00002D                     ___fldiv@bexp:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0x2C
   850   00002D                     	ds	1
   851   00002E                     ___fldiv@aexp:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x2D
   855   00002E                     	ds	1
   856   00002F                     ?___fltol:
   857                           	callstack 0
   858   00002F                     ___fltol@f1:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0x2E
   862   00002F                     	ds	4
   863   000033                     ??___fltol:
   864                           
   865                           ; 1 bytes @ 0x32
   866   000033                     	ds	4
   867   000037                     ___fltol@sign1:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x36
   871   000037                     	ds	1
   872   000038                     ___fltol@exp1:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x37
   876   000038                     	ds	1
   877   000039                     
   878                           ; 1 bytes @ 0x38
   879 ;;
   880 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   881 ;;
   882 ;; *************** function _main *****************
   883 ;; Defined at:
   884 ;;		line 53 in file "main.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   898 ;;      Params:         0       0       0       0       0       0       0
   899 ;;      Locals:         0       0       0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0       0       0
   901 ;;      Totals:         0       0       0       0       0       0       0
   902 ;;Total ram usage:        0 bytes
   903 ;; Hardware stack levels required when called: 7
   904 ;; This function calls:
   905 ;;		___fldiv
   906 ;;		___fltol
   907 ;;		___xxtofl
   908 ;;		_clcd_write
   909 ;;		_dashboard
   910 ;;		_init_config
   911 ;;		_menu
   912 ;;		_password
   913 ;;		_read_adc
   914 ;;		_read_switches
   915 ;;		_view_log
   916 ;; This function is called by:
   917 ;;		Startup code after reset
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           	psect	text0
   922   000FA2                     __ptext0:
   923                           	callstack 0
   924   000FA2                     _main:
   925                           	callstack 24
   926   000FA2                     
   927                           ;main.c: 54:     init_config();
   928   000FA2  EC76  F00D         	call	_init_config	;wreg free
   929   000FA6                     l3195:
   930                           
   931                           ;main.c: 60:         key = read_switches(0);
   932   000FA6  0E00               	movlw	0
   933   000FA8  ECF7  F00D         	call	_read_switches
   934   000FAC  6E51               	movwf	_key^0,c
   935   000FAE                     
   936                           ;main.c: 62:         if(key != 0xFF)
   937   000FAE  2851               	incf	_key^0,w,c
   938   000FB0  B4D8               	btfsc	status,2,c
   939   000FB2  EFDD  F007         	goto	u2721
   940   000FB6  EFDF  F007         	goto	u2720
   941   000FBA                     u2721:
   942   000FBA  EFF8  F007         	goto	l3209
   943   000FBE                     u2720:
   944   000FBE                     
   945                           ;main.c: 63:         {;main.c: 64:             pre_key=key;
   946   000FBE  C051  F050         	movff	_key,_pre_key
   947   000FC2                     
   948                           ;main.c: 65:             key_time++;
   949   000FC2  4A42               	infsnz	_key_time^0,f,c
   950   000FC4  2A43               	incf	(_key_time+1)^0,f,c
   951   000FC6                     
   952                           ;main.c: 66:             if(key_time == 1000)
   953   000FC6  0EE8               	movlw	232
   954   000FC8  1842               	xorwf	_key_time^0,w,c
   955   000FCA  E107               	bnz	u2731
   956   000FCC  0E03               	movlw	3
   957   000FCE  1843               	xorwf	(_key_time+1)^0,w,c
   958   000FD0  A4D8               	btfss	status,2,c
   959   000FD2  EFED  F007         	goto	u2731
   960   000FD6  EFEF  F007         	goto	u2730
   961   000FDA                     u2731:
   962   000FDA  EFF4  F007         	goto	l3207
   963   000FDE                     u2730:
   964   000FDE                     
   965                           ;main.c: 67:             {;main.c: 68:                 key=key+10;
   966   000FDE  5051               	movf	_key^0,w,c
   967   000FE0  0F0A               	addlw	10
   968   000FE2  6E51               	movwf	_key^0,c
   969                           
   970                           ;main.c: 69:             }
   971   000FE4  EF21  F008         	goto	l3219
   972   000FE8                     l3207:
   973                           
   974                           ;main.c: 71:             {;main.c: 72:                 key=0;
   975   000FE8  0E00               	movlw	0
   976   000FEA  6E51               	movwf	_key^0,c
   977   000FEC  EF21  F008         	goto	l3219
   978   000FF0                     l3209:
   979   000FF0  BE43               	btfsc	(_key_time+1)^0,7,c
   980   000FF2  EF03  F008         	goto	u2741
   981   000FF6  5043               	movf	(_key_time+1)^0,w,c
   982   000FF8  E108               	bnz	u2740
   983   000FFA  0442               	decf	_key_time^0,w,c
   984   000FFC  A0D8               	btfss	status,0,c
   985   000FFE  EF03  F008         	goto	u2741
   986   001002  EF05  F008         	goto	u2740
   987   001006                     u2741:
   988   001006  EF1B  F008         	goto	l3217
   989   00100A                     u2740:
   990   00100A  BE43               	btfsc	(_key_time+1)^0,7,c
   991   00100C  EF13  F008         	goto	u2750
   992   001010  0EE8               	movlw	232
   993   001012  5C42               	subwf	_key_time^0,w,c
   994   001014  0E03               	movlw	3
   995   001016  5843               	subwfb	(_key_time+1)^0,w,c
   996   001018  B0D8               	btfsc	status,0,c
   997   00101A  EF11  F008         	goto	u2751
   998   00101E  EF13  F008         	goto	u2750
   999   001022                     u2751:
  1000   001022  EF1B  F008         	goto	l3217
  1001   001026                     u2750:
  1002   001026                     
  1003                           ;main.c: 76:         {;main.c: 77:             key_time=0;
  1004   001026  0E00               	movlw	0
  1005   001028  6E43               	movwf	(_key_time+1)^0,c
  1006   00102A  0E00               	movlw	0
  1007   00102C  6E42               	movwf	_key_time^0,c
  1008   00102E                     
  1009                           ;main.c: 78:             key=pre_key;
  1010   00102E  C050  F051         	movff	_pre_key,_key
  1011                           
  1012                           ;main.c: 79:         }
  1013   001032  EF21  F008         	goto	l3219
  1014   001036                     l3217:
  1015                           
  1016                           ;main.c: 81:         {;main.c: 82:             key_time=0;
  1017   001036  0E00               	movlw	0
  1018   001038  6E43               	movwf	(_key_time+1)^0,c
  1019   00103A  0E00               	movlw	0
  1020   00103C  6E42               	movwf	_key_time^0,c
  1021                           
  1022                           ;main.c: 83:             key=0;
  1023   00103E  0E00               	movlw	0
  1024   001040  6E51               	movwf	_key^0,c
  1025   001042                     l3219:
  1026                           
  1027                           ;main.c: 87:         adc_reg_val = read_adc(0x04)/10.33;
  1028   001042  0EAE               	movlw	174
  1029   001044  6E1A               	movwf	___fldiv@a^0,c
  1030   001046  0E47               	movlw	71
  1031   001048  6E1B               	movwf	(___fldiv@a+1)^0,c
  1032   00104A  0E25               	movlw	37
  1033   00104C  6E1C               	movwf	(___fldiv@a+2)^0,c
  1034   00104E  0E41               	movlw	65
  1035   001050  6E1D               	movwf	(___fldiv@a+3)^0,c
  1036   001052  0E04               	movlw	4
  1037   001054  EC59  F00F         	call	_read_adc
  1038   001058  C001  F008         	movff	?_read_adc,___xxtofl@val
  1039   00105C  C002  F009         	movff	?_read_adc+1,___xxtofl@val+1
  1040   001060  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1041   001062  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1042   001064  0E00               	movlw	0
  1043   001066  ECAD  F008         	call	___xxtofl
  1044   00106A  C008  F016         	movff	?___xxtofl,___fldiv@b
  1045   00106E  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  1046   001072  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  1047   001076  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  1048   00107A  EC75  F003         	call	___fldiv	;wreg free
  1049   00107E  C016  F02F         	movff	?___fldiv,___fltol@f1
  1050   001082  C017  F030         	movff	?___fldiv+1,___fltol@f1+1
  1051   001086  C018  F031         	movff	?___fldiv+2,___fltol@f1+2
  1052   00108A  C019  F032         	movff	?___fldiv+3,___fltol@f1+3
  1053   00108E  EC3B  F00B         	call	___fltol	;wreg free
  1054   001092  C02F  F044         	movff	?___fltol,_adc_reg_val
  1055   001096  C030  F045         	movff	?___fltol+1,_adc_reg_val+1
  1056   00109A                     
  1057                           ;main.c: 89:         if (main_f == 0) {
  1058   00109A  504F               	movf	_main_f^0,w,c
  1059   00109C  A4D8               	btfss	status,2,c
  1060   00109E  EF53  F008         	goto	u2761
  1061   0010A2  EF55  F008         	goto	u2760
  1062   0010A6                     u2761:
  1063   0010A6  EF69  F008         	goto	l3231
  1064   0010AA                     u2760:
  1065   0010AA                     
  1066                           ;main.c: 90:             dashboard();
  1067   0010AA  EC25  F00A         	call	_dashboard	;wreg free
  1068   0010AE                     
  1069                           ;main.c: 91:             if (key == 5) {
  1070   0010AE  0E05               	movlw	5
  1071   0010B0  1851               	xorwf	_key^0,w,c
  1072   0010B2  A4D8               	btfss	status,2,c
  1073   0010B4  EF5E  F008         	goto	u2771
  1074   0010B8  EF60  F008         	goto	u2770
  1075   0010BC                     u2771:
  1076   0010BC  EFD3  F007         	goto	l3195
  1077   0010C0                     u2770:
  1078   0010C0                     
  1079                           ;main.c: 92:                 clcd_write(0x01, 0);
  1080   0010C0  0E00               	movlw	0
  1081   0010C2  6E01               	movwf	clcd_write@control_bit^0,c
  1082   0010C4  0E01               	movlw	1
  1083   0010C6  EC9C  F00F         	call	_clcd_write
  1084   0010CA                     
  1085                           ;main.c: 93:                 main_f = 1;
  1086   0010CA  0E01               	movlw	1
  1087   0010CC  6E4F               	movwf	_main_f^0,c
  1088   0010CE  EFD3  F007         	goto	l3195
  1089   0010D2                     l3231:
  1090   0010D2  044F               	decf	_main_f^0,w,c
  1091   0010D4  A4D8               	btfss	status,2,c
  1092   0010D6  EF6F  F008         	goto	u2781
  1093   0010DA  EF71  F008         	goto	u2780
  1094   0010DE                     u2781:
  1095   0010DE  EF85  F008         	goto	l3241
  1096   0010E2                     u2780:
  1097   0010E2                     
  1098                           ;main.c: 96:             password(key);
  1099   0010E2  5051               	movf	_key^0,w,c
  1100   0010E4  EC42  F005         	call	_password
  1101   0010E8                     
  1102                           ;main.c: 97:             if(flag==1)
  1103   0010E8  0452               	decf	_flag^0,w,c
  1104   0010EA  A4D8               	btfss	status,2,c
  1105   0010EC  EF7A  F008         	goto	u2791
  1106   0010F0  EF7C  F008         	goto	u2790
  1107   0010F4                     u2791:
  1108   0010F4  EFD3  F007         	goto	l3195
  1109   0010F8                     u2790:
  1110   0010F8                     
  1111                           ;main.c: 98:             {;main.c: 99:                 clcd_write(0x01, 0);
  1112   0010F8  0E00               	movlw	0
  1113   0010FA  6E01               	movwf	clcd_write@control_bit^0,c
  1114   0010FC  0E01               	movlw	1
  1115   0010FE  EC9C  F00F         	call	_clcd_write
  1116   001102                     
  1117                           ;main.c: 100:                 main_f=2;
  1118   001102  0E02               	movlw	2
  1119   001104  6E4F               	movwf	_main_f^0,c
  1120   001106  EFD3  F007         	goto	l3195
  1121   00110A                     l3241:
  1122   00110A  0E02               	movlw	2
  1123   00110C  184F               	xorwf	_main_f^0,w,c
  1124   00110E  A4D8               	btfss	status,2,c
  1125   001110  EF8C  F008         	goto	u2801
  1126   001114  EF8E  F008         	goto	u2800
  1127   001118                     u2801:
  1128   001118  EF93  F008         	goto	l3245
  1129   00111C                     u2800:
  1130   00111C                     
  1131                           ;main.c: 104:         {;main.c: 105:             menu(key);
  1132   00111C  5051               	movf	_key^0,w,c
  1133   00111E  EC87  F009         	call	_menu
  1134                           
  1135                           ;main.c: 106:         }
  1136   001122  EFD3  F007         	goto	l3195
  1137   001126                     l3245:
  1138   001126  0E03               	movlw	3
  1139   001128  184F               	xorwf	_main_f^0,w,c
  1140   00112A  A4D8               	btfss	status,2,c
  1141   00112C  EF9A  F008         	goto	u2811
  1142   001130  EF9C  F008         	goto	u2810
  1143   001134                     u2811:
  1144   001134  EFD3  F007         	goto	l3195
  1145   001138                     u2810:
  1146   001138                     
  1147                           ;main.c: 108:         {;main.c: 110:             if(menu_f == 0)
  1148   001138  504E               	movf	_menu_f^0,w,c
  1149   00113A  A4D8               	btfss	status,2,c
  1150   00113C  EFA2  F008         	goto	u2821
  1151   001140  EFA4  F008         	goto	u2820
  1152   001144                     u2821:
  1153   001144  EFA9  F008         	goto	l139
  1154   001148                     u2820:
  1155   001148                     
  1156                           ;main.c: 111:             {;main.c: 113:                 view_log(key);
  1157   001148  5051               	movf	_key^0,w,c
  1158   00114A  ECD3  F006         	call	_view_log
  1159   00114E  EFD3  F007         	goto	l3195
  1160   001152                     l139:
  1161   001152  EFD3  F007         	goto	l3195
  1162   001156  EF07  F000         	goto	start
  1163   00115A                     __end_of_main:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _view_log *****************
  1167 ;; Defined at:
  1168 ;;		line 24 in file "view_log.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  key             1    wreg     unsigned char 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  key             1   21[COMRAM] unsigned char 
  1173 ;;  j               2   22[COMRAM] int 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1183 ;;      Params:         0       0       0       0       0       0       0
  1184 ;;      Locals:         3       0       0       0       0       0       0
  1185 ;;      Temps:          5       0       0       0       0       0       0
  1186 ;;      Totals:         8       0       0       0       0       0       0
  1187 ;;Total ram usage:        8 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; Hardware stack levels required when called: 5
  1190 ;; This function calls:
  1191 ;;		___awmod
  1192 ;;		_clcd_print
  1193 ;;		_clcd_putch
  1194 ;;		_read_external_eeprom
  1195 ;; This function is called by:
  1196 ;;		_main
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text1
  1201   000DA6                     __ptext1:
  1202                           	callstack 0
  1203   000DA6                     _view_log:
  1204                           	callstack 25
  1205                           
  1206                           ;incstack = 0
  1207                           ;view_log@key stored from wreg
  1208   000DA6  6E16               	movwf	view_log@key^0,c
  1209   000DA8                     
  1210                           ;view_log.c: 27:     if(overflow==0)
  1211   000DA8  5048               	movf	_overflow^0,w,c
  1212   000DAA  A4D8               	btfss	status,2,c
  1213   000DAC  EFDA  F006         	goto	u2211
  1214   000DB0  EFDC  F006         	goto	u2210
  1215   000DB4                     u2211:
  1216   000DB4  EF14  F007         	goto	l2909
  1217   000DB8                     u2210:
  1218   000DB8                     
  1219                           ;view_log.c: 28:     {;view_log.c: 29:       start_index=0;
  1220   000DB8  0E00               	movlw	0
  1221   000DBA  6E47               	movwf	_start_index^0,c
  1222   000DBC                     
  1223                           ;view_log.c: 31:       if(key==5 && apend_index < lap-1)
  1224   000DBC  0E05               	movlw	5
  1225   000DBE  1816               	xorwf	view_log@key^0,w,c
  1226   000DC0  A4D8               	btfss	status,2,c
  1227   000DC2  EFE5  F006         	goto	u2221
  1228   000DC6  EFE7  F006         	goto	u2220
  1229   000DCA                     u2221:
  1230   000DCA  EF00  F007         	goto	l2903
  1231   000DCE                     u2220:
  1232   000DCE  0EFF               	movlw	255
  1233   000DD0  2449               	addwf	_lap^0,w,c
  1234   000DD2  6E11               	movwf	??_view_log^0,c
  1235   000DD4  6A12               	clrf	(??_view_log+1)^0,c
  1236   000DD6  0EFF               	movlw	255
  1237   000DD8  2212               	addwfc	(??_view_log+1)^0,f,c
  1238   000DDA  5046               	movf	_apend_index^0,w,c
  1239   000DDC  6E13               	movwf	(??_view_log+2)^0,c
  1240   000DDE  6A14               	clrf	(??_view_log+3)^0,c
  1241   000DE0  5011               	movf	??_view_log^0,w,c
  1242   000DE2  5C13               	subwf	(??_view_log+2)^0,w,c
  1243   000DE4  5014               	movf	(??_view_log+3)^0,w,c
  1244   000DE6  0A80               	xorlw	128
  1245   000DE8  6E15               	movwf	(??_view_log+4)^0,c
  1246   000DEA  5012               	movf	(??_view_log+1)^0,w,c
  1247   000DEC  0A80               	xorlw	128
  1248   000DEE  5815               	subwfb	(??_view_log+4)^0,w,c
  1249   000DF0  B0D8               	btfsc	status,0,c
  1250   000DF2  EFFD  F006         	goto	u2231
  1251   000DF6  EFFF  F006         	goto	u2230
  1252   000DFA                     u2231:
  1253   000DFA  EF00  F007         	goto	l2903
  1254   000DFE                     u2230:
  1255   000DFE                     
  1256                           ;view_log.c: 32:       {;view_log.c: 33:           apend_index++;
  1257   000DFE  2A46               	incf	_apend_index^0,f,c
  1258   000E00                     l2903:
  1259                           
  1260                           ;view_log.c: 36:       if(key==6 && apend_index > 0)
  1261   000E00  0E06               	movlw	6
  1262   000E02  1816               	xorwf	view_log@key^0,w,c
  1263   000E04  A4D8               	btfss	status,2,c
  1264   000E06  EF07  F007         	goto	u2241
  1265   000E0A  EF09  F007         	goto	u2240
  1266   000E0E                     u2241:
  1267   000E0E  EF43  F007         	goto	l2925
  1268   000E12                     u2240:
  1269   000E12  5046               	movf	_apend_index^0,w,c
  1270   000E14  B4D8               	btfsc	status,2,c
  1271   000E16  EF0F  F007         	goto	u2251
  1272   000E1A  EF11  F007         	goto	u2250
  1273   000E1E                     u2251:
  1274   000E1E  EF43  F007         	goto	l2925
  1275   000E22                     u2250:
  1276   000E22                     l2907:
  1277                           
  1278                           ;view_log.c: 37:       {;view_log.c: 38:           apend_index--;
  1279   000E22  0646               	decf	_apend_index^0,f,c
  1280   000E24  EF43  F007         	goto	l2925
  1281   000E28                     l2909:
  1282   000E28  0448               	decf	_overflow^0,w,c
  1283   000E2A  A4D8               	btfss	status,2,c
  1284   000E2C  EF1A  F007         	goto	u2261
  1285   000E30  EF1C  F007         	goto	u2260
  1286   000E34                     u2261:
  1287   000E34  EF43  F007         	goto	l2925
  1288   000E38                     u2260:
  1289   000E38                     
  1290                           ;view_log.c: 42:     {;view_log.c: 43:         start_index=lap;
  1291   000E38  C049  F047         	movff	_lap,_start_index
  1292   000E3C                     
  1293                           ;view_log.c: 45:         if(key==5 && apend_index <9)
  1294   000E3C  0E05               	movlw	5
  1295   000E3E  1816               	xorwf	view_log@key^0,w,c
  1296   000E40  A4D8               	btfss	status,2,c
  1297   000E42  EF25  F007         	goto	u2271
  1298   000E46  EF27  F007         	goto	u2270
  1299   000E4A                     u2271:
  1300   000E4A  EF30  F007         	goto	l2919
  1301   000E4E                     u2270:
  1302   000E4E  0E09               	movlw	9
  1303   000E50  6046               	cpfslt	_apend_index^0,c
  1304   000E52  EF2D  F007         	goto	u2281
  1305   000E56  EF2F  F007         	goto	u2280
  1306   000E5A                     u2281:
  1307   000E5A  EF30  F007         	goto	l2919
  1308   000E5E                     u2280:
  1309   000E5E                     
  1310                           ;view_log.c: 46:         {;view_log.c: 47:         apend_index++;
  1311   000E5E  2A46               	incf	_apend_index^0,f,c
  1312   000E60                     l2919:
  1313                           
  1314                           ;view_log.c: 49:         if(key==6 && apend_index > 0)
  1315   000E60  0E06               	movlw	6
  1316   000E62  1816               	xorwf	view_log@key^0,w,c
  1317   000E64  A4D8               	btfss	status,2,c
  1318   000E66  EF37  F007         	goto	u2291
  1319   000E6A  EF39  F007         	goto	u2290
  1320   000E6E                     u2291:
  1321   000E6E  EF43  F007         	goto	l2925
  1322   000E72                     u2290:
  1323   000E72  5046               	movf	_apend_index^0,w,c
  1324   000E74  B4D8               	btfsc	status,2,c
  1325   000E76  EF3F  F007         	goto	u2301
  1326   000E7A  EF41  F007         	goto	u2300
  1327   000E7E                     u2301:
  1328   000E7E  EF43  F007         	goto	l2925
  1329   000E82                     u2300:
  1330   000E82  EF11  F007         	goto	l2907
  1331   000E86                     l2925:
  1332                           
  1333                           ;view_log.c: 59:     for (int j = 0; j < 10; j++) {
  1334   000E86  0E00               	movlw	0
  1335   000E88  6E18               	movwf	(view_log@j+1)^0,c
  1336   000E8A  0E00               	movlw	0
  1337   000E8C  6E17               	movwf	view_log@j^0,c
  1338   000E8E                     l2931:
  1339                           
  1340                           ;view_log.c: 60:         clcd_putch('0' + (start_index+(apend_index%10))+1, (0xC0 + (0))
      +                          );
  1341   000E8E  0EC0               	movlw	192
  1342   000E90  6E0F               	movwf	clcd_putch@addr^0,c
  1343   000E92  C046  F009         	movff	_apend_index,___awmod@dividend
  1344   000E96  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1345   000E98  0E00               	movlw	0
  1346   000E9A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1347   000E9C  0E0A               	movlw	10
  1348   000E9E  6E0B               	movwf	___awmod@divisor^0,c
  1349   000EA0  EC88  F00C         	call	___awmod	;wreg free
  1350   000EA4  5009               	movf	?___awmod^0,w,c
  1351   000EA6  2447               	addwf	_start_index^0,w,c
  1352   000EA8  0F31               	addlw	49
  1353   000EAA  EC02  F010         	call	_clcd_putch
  1354   000EAE                     
  1355                           ;view_log.c: 61:         view_array[j] = read_external_eeprom( (start_index+(apend_index
      +                          %10))*10 + j);
  1356   000EAE  5017               	movf	view_log@j^0,w,c
  1357   000EB0  0F60               	addlw	low _view_array
  1358   000EB2  6ED9               	movwf	fsr2l,c
  1359   000EB4  6ADA               	clrf	fsr2h,c
  1360   000EB6  C046  F009         	movff	_apend_index,___awmod@dividend
  1361   000EBA  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1362   000EBC  0E00               	movlw	0
  1363   000EBE  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1364   000EC0  0E0A               	movlw	10
  1365   000EC2  6E0B               	movwf	___awmod@divisor^0,c
  1366   000EC4  EC88  F00C         	call	___awmod	;wreg free
  1367   000EC8  5009               	movf	?___awmod^0,w,c
  1368   000ECA  0D0A               	mullw	10
  1369   000ECC  CFF3 F011          	movff	prodl,??_view_log
  1370   000ED0  5047               	movf	_start_index^0,w,c
  1371   000ED2  0D0A               	mullw	10
  1372   000ED4  50F3               	movf	243,w,c
  1373   000ED6  2411               	addwf	??_view_log^0,w,c
  1374   000ED8  2417               	addwf	view_log@j^0,w,c
  1375   000EDA  ECB9  F00F         	call	_read_external_eeprom
  1376   000EDE  6EDF               	movwf	indf2,c
  1377   000EE0                     
  1378                           ;view_log.c: 63:     }
  1379   000EE0  4A17               	infsnz	view_log@j^0,f,c
  1380   000EE2  2A18               	incf	(view_log@j+1)^0,f,c
  1381   000EE4  BE18               	btfsc	(view_log@j+1)^0,7,c
  1382   000EE6  EF7E  F007         	goto	u2311
  1383   000EEA  5018               	movf	(view_log@j+1)^0,w,c
  1384   000EEC  E109               	bnz	u2310
  1385   000EEE  0E0A               	movlw	10
  1386   000EF0  5C17               	subwf	view_log@j^0,w,c
  1387   000EF2  A0D8               	btfss	status,0,c
  1388   000EF4  EF7E  F007         	goto	u2311
  1389   000EF8  EF80  F007         	goto	u2310
  1390   000EFC                     u2311:
  1391   000EFC  EF47  F007         	goto	l2931
  1392   000F00                     u2310:
  1393   000F00                     
  1394                           ;view_log.c: 66:     clcd_print("Entered View Log", (0x80 + (0)));
  1395   000F00  0E14               	movlw	low STR_22
  1396   000F02  6E03               	movwf	clcd_print@data^0,c
  1397   000F04  5003               	movf	clcd_print@data^0,w,c
  1398   000F06  A4D8               	btfss	status,2,c
  1399   000F08  0E06               	movlw	high __smallconst
  1400   000F0A  6E04               	movwf	(clcd_print@data+1)^0,c
  1401   000F0C  0E80               	movlw	128
  1402   000F0E  6E05               	movwf	clcd_print@addr^0,c
  1403   000F10  EC6C  F00E         	call	_clcd_print	;wreg free
  1404   000F14                     
  1405                           ;view_log.c: 68:     clcd_putch(view_array[0], (0xC0 + (2)));
  1406   000F14  0EC2               	movlw	194
  1407   000F16  6E0F               	movwf	clcd_putch@addr^0,c
  1408   000F18  0100               	movlb	0	; () banked
  1409   000F1A  5160               	movf	_view_array& (0+255),w,b
  1410   000F1C  EC02  F010         	call	_clcd_putch
  1411   000F20                     
  1412                           ;view_log.c: 69:     clcd_putch(view_array[1], (0xC0 + (3)));
  1413   000F20  0EC3               	movlw	195
  1414   000F22  6E0F               	movwf	clcd_putch@addr^0,c
  1415   000F24  0100               	movlb	0	; () banked
  1416   000F26  5161               	movf	(_view_array+1)& (0+255),w,b
  1417   000F28  EC02  F010         	call	_clcd_putch
  1418   000F2C                     
  1419                           ;view_log.c: 70:     clcd_putch(':', (0xC0 + (4)));
  1420   000F2C  0EC4               	movlw	196
  1421   000F2E  6E0F               	movwf	clcd_putch@addr^0,c
  1422   000F30  0E3A               	movlw	58
  1423   000F32  EC02  F010         	call	_clcd_putch
  1424   000F36                     
  1425                           ;view_log.c: 72:     clcd_putch(view_array[2], (0xC0 + (5)));
  1426   000F36  0EC5               	movlw	197
  1427   000F38  6E0F               	movwf	clcd_putch@addr^0,c
  1428   000F3A  0100               	movlb	0	; () banked
  1429   000F3C  5162               	movf	(_view_array+2)& (0+255),w,b
  1430   000F3E  EC02  F010         	call	_clcd_putch
  1431   000F42                     
  1432                           ;view_log.c: 73:     clcd_putch(view_array[3], (0xC0 + (6)));
  1433   000F42  0EC6               	movlw	198
  1434   000F44  6E0F               	movwf	clcd_putch@addr^0,c
  1435   000F46  0100               	movlb	0	; () banked
  1436   000F48  5163               	movf	(_view_array+3)& (0+255),w,b
  1437   000F4A  EC02  F010         	call	_clcd_putch
  1438   000F4E                     
  1439                           ;view_log.c: 74:     clcd_putch(':', (0xC0 + (7)));
  1440   000F4E  0EC7               	movlw	199
  1441   000F50  6E0F               	movwf	clcd_putch@addr^0,c
  1442   000F52  0E3A               	movlw	58
  1443   000F54  EC02  F010         	call	_clcd_putch
  1444   000F58                     
  1445                           ;view_log.c: 76:     clcd_putch(view_array[4], (0xC0 + (8)));
  1446   000F58  0EC8               	movlw	200
  1447   000F5A  6E0F               	movwf	clcd_putch@addr^0,c
  1448   000F5C  0100               	movlb	0	; () banked
  1449   000F5E  5164               	movf	(_view_array+4)& (0+255),w,b
  1450   000F60  EC02  F010         	call	_clcd_putch
  1451   000F64                     
  1452                           ;view_log.c: 77:     clcd_putch(view_array[5], (0xC0 + (9)));
  1453   000F64  0EC9               	movlw	201
  1454   000F66  6E0F               	movwf	clcd_putch@addr^0,c
  1455   000F68  0100               	movlb	0	; () banked
  1456   000F6A  5165               	movf	(_view_array+5)& (0+255),w,b
  1457   000F6C  EC02  F010         	call	_clcd_putch
  1458   000F70                     
  1459                           ;view_log.c: 80:     clcd_putch(view_array[6], (0xC0 + (11)));
  1460   000F70  0ECB               	movlw	203
  1461   000F72  6E0F               	movwf	clcd_putch@addr^0,c
  1462   000F74  0100               	movlb	0	; () banked
  1463   000F76  5166               	movf	(_view_array+6)& (0+255),w,b
  1464   000F78  EC02  F010         	call	_clcd_putch
  1465   000F7C                     
  1466                           ;view_log.c: 81:     clcd_putch(view_array[7], (0xC0 + (12)));
  1467   000F7C  0ECC               	movlw	204
  1468   000F7E  6E0F               	movwf	clcd_putch@addr^0,c
  1469   000F80  0100               	movlb	0	; () banked
  1470   000F82  5167               	movf	(_view_array+7)& (0+255),w,b
  1471   000F84  EC02  F010         	call	_clcd_putch
  1472   000F88                     
  1473                           ;view_log.c: 84:     clcd_putch(view_array[8], (0xC0 + (14)));
  1474   000F88  0ECE               	movlw	206
  1475   000F8A  6E0F               	movwf	clcd_putch@addr^0,c
  1476   000F8C  0100               	movlb	0	; () banked
  1477   000F8E  5168               	movf	(_view_array+8)& (0+255),w,b
  1478   000F90  EC02  F010         	call	_clcd_putch
  1479   000F94                     
  1480                           ;view_log.c: 85:     clcd_putch(view_array[9], (0xC0 + (15)));
  1481   000F94  0ECF               	movlw	207
  1482   000F96  6E0F               	movwf	clcd_putch@addr^0,c
  1483   000F98  0100               	movlb	0	; () banked
  1484   000F9A  5169               	movf	(_view_array+9)& (0+255),w,b
  1485   000F9C  EC02  F010         	call	_clcd_putch
  1486   000FA0  0012               	return		;funcret
  1487   000FA2                     __end_of_view_log:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function _read_switches *****************
  1491 ;; Defined at:
  1492 ;;		line 89 in file "matrix_keypad.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  detection_ty    1    wreg     unsigned char 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  detection_ty    1    0[COMRAM] unsigned char 
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      unsigned char 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1506 ;;      Params:         0       0       0       0       0       0       0
  1507 ;;      Locals:         1       0       0       0       0       0       0
  1508 ;;      Temps:          0       0       0       0       0       0       0
  1509 ;;      Totals:         1       0       0       0       0       0       0
  1510 ;;Total ram usage:        1 bytes
  1511 ;; Hardware stack levels used: 1
  1512 ;; Hardware stack levels required when called: 2
  1513 ;; This function calls:
  1514 ;;		_scan_key
  1515 ;; This function is called by:
  1516 ;;		_main
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text2
  1521   001BEE                     __ptext2:
  1522                           	callstack 0
  1523   001BEE                     _read_switches:
  1524                           	callstack 28
  1525                           
  1526                           ;incstack = 0
  1527                           ;read_switches@detection_type stored from wreg
  1528   001BEE  6E01               	movwf	read_switches@detection_type^0,c
  1529   001BF0                     
  1530                           ;matrix_keypad.c: 89: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 90: {;matrix_keypad.c: 91:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 93:  if (detection_type == 1)
  1531   001BF0  0401               	decf	read_switches@detection_type^0,w,c
  1532   001BF2  A4D8               	btfss	status,2,c
  1533   001BF4  EFFE  F00D         	goto	u1881
  1534   001BF8  EF00  F00E         	goto	u1880
  1535   001BFC                     u1881:
  1536   001BFC  EF24  F00E         	goto	l2715
  1537   001C00                     u1880:
  1538   001C00                     
  1539                           ;matrix_keypad.c: 94:  {;matrix_keypad.c: 95:   key = scan_key();
  1540   001C00  ECB7  F00A         	call	_scan_key	;wreg free
  1541   001C04  6E4D               	movwf	read_switches@key^0,c
  1542   001C06                     
  1543                           ;matrix_keypad.c: 96:   if(key != 0xFF && once )
  1544   001C06  284D               	incf	read_switches@key^0,w,c
  1545   001C08  B4D8               	btfsc	status,2,c
  1546   001C0A  EF09  F00E         	goto	u1891
  1547   001C0E  EF0B  F00E         	goto	u1890
  1548   001C12                     u1891:
  1549   001C12  EF18  F00E         	goto	l2711
  1550   001C16                     u1890:
  1551   001C16  505E               	movf	read_switches@once^0,w,c
  1552   001C18  B4D8               	btfsc	status,2,c
  1553   001C1A  EF11  F00E         	goto	u1901
  1554   001C1E  EF13  F00E         	goto	u1900
  1555   001C22                     u1901:
  1556   001C22  EF18  F00E         	goto	l2711
  1557   001C26                     u1900:
  1558   001C26                     
  1559                           ;matrix_keypad.c: 97:   {;matrix_keypad.c: 98:    once = 0;
  1560   001C26  0E00               	movlw	0
  1561   001C28  6E5E               	movwf	read_switches@once^0,c
  1562                           
  1563                           ;matrix_keypad.c: 99:    return key;
  1564   001C2A  504D               	movf	read_switches@key^0,w,c
  1565   001C2C  EF31  F00E         	goto	l195
  1566   001C30                     l2711:
  1567   001C30  284D               	incf	read_switches@key^0,w,c
  1568   001C32  A4D8               	btfss	status,2,c
  1569   001C34  EF1E  F00E         	goto	u1911
  1570   001C38  EF20  F00E         	goto	u1910
  1571   001C3C                     u1911:
  1572   001C3C  EF30  F00E         	goto	l2721
  1573   001C40                     u1910:
  1574   001C40                     
  1575                           ;matrix_keypad.c: 102:   {;matrix_keypad.c: 103:    once = 1;
  1576   001C40  0E01               	movlw	1
  1577   001C42  6E5E               	movwf	read_switches@once^0,c
  1578   001C44  EF30  F00E         	goto	l2721
  1579   001C48                     l2715:
  1580   001C48  5001               	movf	read_switches@detection_type^0,w,c
  1581   001C4A  A4D8               	btfss	status,2,c
  1582   001C4C  EF2A  F00E         	goto	u1921
  1583   001C50  EF2C  F00E         	goto	u1920
  1584   001C54                     u1921:
  1585   001C54  EF30  F00E         	goto	l2721
  1586   001C58                     u1920:
  1587   001C58                     
  1588                           ;matrix_keypad.c: 107:  {;matrix_keypad.c: 108:   return scan_key();
  1589   001C58  ECB7  F00A         	call	_scan_key	;wreg free
  1590   001C5C  EF31  F00E         	goto	l195
  1591   001C60                     l2721:
  1592                           
  1593                           ;matrix_keypad.c: 111:  return 0xFF;
  1594   001C60  0EFF               	movlw	255
  1595   001C62                     l195:
  1596   001C62  0012               	return		;funcret
  1597   001C64                     __end_of_read_switches:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function _scan_key *****************
  1601 ;; Defined at:
  1602 ;;		line 19 in file "matrix_keypad.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      unsigned char 
  1609 ;; Registers used:
  1610 ;;		wreg
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1616 ;;      Params:         0       0       0       0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0
  1619 ;;      Totals:         0       0       0       0       0       0       0
  1620 ;;Total ram usage:        0 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; Hardware stack levels required when called: 1
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_read_switches
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text3
  1631   00156E                     __ptext3:
  1632                           	callstack 0
  1633   00156E                     _scan_key:
  1634                           	callstack 28
  1635   00156E                     
  1636                           ;matrix_keypad.c: 21:  PORTBbits.RB5 = 0;
  1637   00156E  9A81               	bcf	129,5,c	;volatile
  1638                           
  1639                           ;matrix_keypad.c: 22:  PORTBbits.RB6 = 1;
  1640   001570  8C81               	bsf	129,6,c	;volatile
  1641                           
  1642                           ;matrix_keypad.c: 23:  PORTBbits.RB7 = 1;
  1643   001572  8E81               	bsf	129,7,c	;volatile
  1644                           
  1645                           ;matrix_keypad.c: 25:  if (PORTBbits.RB1 == 0)
  1646   001574  B281               	btfsc	129,1,c	;volatile
  1647   001576  EFBF  F00A         	goto	u1571
  1648   00157A  EFC1  F00A         	goto	u1570
  1649   00157E                     u1571:
  1650   00157E  EFC4  F00A         	goto	l165
  1651   001582                     u1570:
  1652   001582                     
  1653                           ;matrix_keypad.c: 26:  {;matrix_keypad.c: 27:   return 1;
  1654   001582  0E01               	movlw	1
  1655   001584  EF3A  F00B         	goto	l166
  1656   001588                     l165:
  1657   001588  B481               	btfsc	129,2,c	;volatile
  1658   00158A  EFC9  F00A         	goto	u1581
  1659   00158E  EFCB  F00A         	goto	u1580
  1660   001592                     u1581:
  1661   001592  EFCE  F00A         	goto	l168
  1662   001596                     u1580:
  1663   001596                     
  1664                           ;matrix_keypad.c: 30:  {;matrix_keypad.c: 31:   return 4;
  1665   001596  0E04               	movlw	4
  1666   001598  EF3A  F00B         	goto	l166
  1667   00159C                     l168:
  1668   00159C  B681               	btfsc	129,3,c	;volatile
  1669   00159E  EFD3  F00A         	goto	u1591
  1670   0015A2  EFD5  F00A         	goto	u1590
  1671   0015A6                     u1591:
  1672   0015A6  EFD8  F00A         	goto	l170
  1673   0015AA                     u1590:
  1674   0015AA                     
  1675                           ;matrix_keypad.c: 34:  {;matrix_keypad.c: 35:   return 7;
  1676   0015AA  0E07               	movlw	7
  1677   0015AC  EF3A  F00B         	goto	l166
  1678   0015B0                     l170:
  1679   0015B0  B881               	btfsc	129,4,c	;volatile
  1680   0015B2  EFDD  F00A         	goto	u1601
  1681   0015B6  EFDF  F00A         	goto	u1600
  1682   0015BA                     u1601:
  1683   0015BA  EFE2  F00A         	goto	l167
  1684   0015BE                     u1600:
  1685   0015BE                     
  1686                           ;matrix_keypad.c: 38:  {;matrix_keypad.c: 39:   return 10;
  1687   0015BE  0E0A               	movlw	10
  1688   0015C0  EF3A  F00B         	goto	l166
  1689   0015C4                     l167:
  1690                           
  1691                           ;matrix_keypad.c: 42:  PORTBbits.RB5 = 1;
  1692   0015C4  8A81               	bsf	129,5,c	;volatile
  1693                           
  1694                           ;matrix_keypad.c: 43:  PORTBbits.RB6 = 0;
  1695   0015C6  9C81               	bcf	129,6,c	;volatile
  1696                           
  1697                           ;matrix_keypad.c: 44:  PORTBbits.RB7 = 1;
  1698   0015C8  8E81               	bsf	129,7,c	;volatile
  1699                           
  1700                           ;matrix_keypad.c: 46:  if (PORTBbits.RB1 == 0)
  1701   0015CA  B281               	btfsc	129,1,c	;volatile
  1702   0015CC  EFEA  F00A         	goto	u1611
  1703   0015D0  EFEC  F00A         	goto	u1610
  1704   0015D4                     u1611:
  1705   0015D4  EFEF  F00A         	goto	l173
  1706   0015D8                     u1610:
  1707   0015D8                     
  1708                           ;matrix_keypad.c: 47:  {;matrix_keypad.c: 48:   return 2;
  1709   0015D8  0E02               	movlw	2
  1710   0015DA  EF3A  F00B         	goto	l166
  1711   0015DE                     l173:
  1712   0015DE  B481               	btfsc	129,2,c	;volatile
  1713   0015E0  EFF4  F00A         	goto	u1621
  1714   0015E4  EFF6  F00A         	goto	u1620
  1715   0015E8                     u1621:
  1716   0015E8  EFF9  F00A         	goto	l175
  1717   0015EC                     u1620:
  1718   0015EC                     
  1719                           ;matrix_keypad.c: 51:  {;matrix_keypad.c: 52:   return 5;
  1720   0015EC  0E05               	movlw	5
  1721   0015EE  EF3A  F00B         	goto	l166
  1722   0015F2                     l175:
  1723   0015F2  B681               	btfsc	129,3,c	;volatile
  1724   0015F4  EFFE  F00A         	goto	u1631
  1725   0015F8  EF00  F00B         	goto	u1630
  1726   0015FC                     u1631:
  1727   0015FC  EF03  F00B         	goto	l177
  1728   001600                     u1630:
  1729   001600                     
  1730                           ;matrix_keypad.c: 55:  {;matrix_keypad.c: 56:   return 8;
  1731   001600  0E08               	movlw	8
  1732   001602  EF3A  F00B         	goto	l166
  1733   001606                     l177:
  1734   001606  B881               	btfsc	129,4,c	;volatile
  1735   001608  EF08  F00B         	goto	u1641
  1736   00160C  EF0A  F00B         	goto	u1640
  1737   001610                     u1641:
  1738   001610  EF0D  F00B         	goto	l174
  1739   001614                     u1640:
  1740   001614                     
  1741                           ;matrix_keypad.c: 59:  {;matrix_keypad.c: 60:   return 11;
  1742   001614  0E0B               	movlw	11
  1743   001616  EF3A  F00B         	goto	l166
  1744   00161A                     l174:
  1745                           
  1746                           ;matrix_keypad.c: 63:  PORTBbits.RB5 = 1;
  1747   00161A  8A81               	bsf	129,5,c	;volatile
  1748                           
  1749                           ;matrix_keypad.c: 64:  PORTBbits.RB6 = 1;
  1750   00161C  8C81               	bsf	129,6,c	;volatile
  1751                           
  1752                           ;matrix_keypad.c: 65:  PORTBbits.RB7 = 0;
  1753   00161E  9E81               	bcf	129,7,c	;volatile
  1754                           
  1755                           ;matrix_keypad.c: 67:  PORTBbits.RB7 = 0;
  1756   001620  9E81               	bcf	129,7,c	;volatile
  1757                           
  1758                           ;matrix_keypad.c: 69:  if (PORTBbits.RB1 == 0)
  1759   001622  B281               	btfsc	129,1,c	;volatile
  1760   001624  EF16  F00B         	goto	u1651
  1761   001628  EF18  F00B         	goto	u1650
  1762   00162C                     u1651:
  1763   00162C  EF1B  F00B         	goto	l180
  1764   001630                     u1650:
  1765   001630                     
  1766                           ;matrix_keypad.c: 70:  {;matrix_keypad.c: 71:   return 3;
  1767   001630  0E03               	movlw	3
  1768   001632  EF3A  F00B         	goto	l166
  1769   001636                     l180:
  1770   001636  B481               	btfsc	129,2,c	;volatile
  1771   001638  EF20  F00B         	goto	u1661
  1772   00163C  EF22  F00B         	goto	u1660
  1773   001640                     u1661:
  1774   001640  EF25  F00B         	goto	l182
  1775   001644                     u1660:
  1776   001644                     
  1777                           ;matrix_keypad.c: 74:  {;matrix_keypad.c: 75:   return 6;
  1778   001644  0E06               	movlw	6
  1779   001646  EF3A  F00B         	goto	l166
  1780   00164A                     l182:
  1781   00164A  B681               	btfsc	129,3,c	;volatile
  1782   00164C  EF2A  F00B         	goto	u1671
  1783   001650  EF2C  F00B         	goto	u1670
  1784   001654                     u1671:
  1785   001654  EF2F  F00B         	goto	l184
  1786   001658                     u1670:
  1787   001658                     
  1788                           ;matrix_keypad.c: 78:  {;matrix_keypad.c: 79:   return 9;
  1789   001658  0E09               	movlw	9
  1790   00165A  EF3A  F00B         	goto	l166
  1791   00165E                     l184:
  1792   00165E  B881               	btfsc	129,4,c	;volatile
  1793   001660  EF34  F00B         	goto	u1681
  1794   001664  EF36  F00B         	goto	u1680
  1795   001668                     u1681:
  1796   001668  EF39  F00B         	goto	l183
  1797   00166C                     u1680:
  1798   00166C                     
  1799                           ;matrix_keypad.c: 82:  {;matrix_keypad.c: 83:   return 12;
  1800   00166C  0E0C               	movlw	12
  1801   00166E  EF3A  F00B         	goto	l166
  1802   001672                     l183:
  1803   001672                     
  1804                           ;matrix_keypad.c: 86:  return 0xFF;
  1805   001672  0EFF               	movlw	255
  1806   001674                     l166:
  1807   001674  0012               	return		;funcret
  1808   001676                     __end_of_scan_key:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _read_adc *****************
  1812 ;; Defined at:
  1813 ;;		line 43 in file "adc.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  channel         1    wreg     unsigned char 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  channel         1    6[COMRAM] unsigned char 
  1818 ;;  reg_val         2    4[COMRAM] unsigned short 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  2    0[COMRAM] unsigned short 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1828 ;;      Params:         2       0       0       0       0       0       0
  1829 ;;      Locals:         3       0       0       0       0       0       0
  1830 ;;      Temps:          2       0       0       0       0       0       0
  1831 ;;      Totals:         7       0       0       0       0       0       0
  1832 ;;Total ram usage:        7 bytes
  1833 ;; Hardware stack levels used: 1
  1834 ;; Hardware stack levels required when called: 1
  1835 ;; This function calls:
  1836 ;;		Nothing
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text4
  1843   001EB2                     __ptext4:
  1844                           	callstack 0
  1845   001EB2                     _read_adc:
  1846                           	callstack 29
  1847                           
  1848                           ;incstack = 0
  1849                           ;read_adc@channel stored from wreg
  1850   001EB2  6E07               	movwf	read_adc@channel^0,c
  1851   001EB4                     
  1852                           ;adc.c: 43: unsigned short read_adc(unsigned char channel);adc.c: 44: {;adc.c: 45:  unsi
      +                          gned short reg_val;;adc.c: 48:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  1853   001EB4  C007  F003         	movff	read_adc@channel,??_read_adc
  1854   001EB8  90D8               	bcf	status,0,c
  1855   001EBA  3603               	rlcf	??_read_adc^0,f,c
  1856   001EBC  90D8               	bcf	status,0,c
  1857   001EBE  3603               	rlcf	??_read_adc^0,f,c
  1858   001EC0  50C2               	movf	194,w,c	;volatile
  1859   001EC2  0BC3               	andlw	195
  1860   001EC4  1003               	iorwf	??_read_adc^0,w,c
  1861   001EC6  6EC2               	movwf	194,c	;volatile
  1862   001EC8                     
  1863                           ;adc.c: 51:  GO = 1;
  1864   001EC8  82C2               	bsf	4034,1,c	;volatile
  1865   001ECA                     l36:
  1866   001ECA  B2C2               	btfsc	4034,1,c	;volatile
  1867   001ECC  EF6A  F00F         	goto	u1861
  1868   001ED0  EF6C  F00F         	goto	u1860
  1869   001ED4                     u1861:
  1870   001ED4  EF65  F00F         	goto	l36
  1871   001ED8                     u1860:
  1872   001ED8                     
  1873                           ;adc.c: 53:  reg_val = (ADRESH << 8) | ADRESL;
  1874   001ED8  50C3               	movf	195,w,c	;volatile
  1875   001EDA  CFC4 F003          	movff	4036,??_read_adc	;volatile
  1876   001EDE  6A04               	clrf	(??_read_adc+1)^0,c
  1877   001EE0  C003  F004         	movff	??_read_adc,??_read_adc+1
  1878   001EE4  6A03               	clrf	??_read_adc^0,c
  1879   001EE6  1003               	iorwf	??_read_adc^0,w,c
  1880   001EE8  6E05               	movwf	read_adc@reg_val^0,c
  1881   001EEA  5004               	movf	(??_read_adc+1)^0,w,c
  1882   001EEC  6E06               	movwf	(read_adc@reg_val+1)^0,c
  1883   001EEE                     
  1884                           ;adc.c: 55:  return reg_val;
  1885   001EEE  C005  F001         	movff	read_adc@reg_val,?_read_adc
  1886   001EF2  C006  F002         	movff	read_adc@reg_val+1,?_read_adc+1
  1887   001EF6  0012               	return		;funcret
  1888   001EF8                     __end_of_read_adc:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _password *****************
  1892 ;; Defined at:
  1893 ;;		line 37 in file "password.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  key             1    wreg     unsigned char 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  key             1   30[COMRAM] unsigned char 
  1898 ;;  wait            8   18[COMRAM] unsigned long long 
  1899 ;;  delay           4   26[COMRAM] unsigned long 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1909 ;;      Params:         0       0       0       0       0       0       0
  1910 ;;      Locals:        13       0       0       0       0       0       0
  1911 ;;      Temps:          2       0       0       0       0       0       0
  1912 ;;      Totals:        15       0       0       0       0       0       0
  1913 ;;Total ram usage:       15 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; Hardware stack levels required when called: 3
  1916 ;; This function calls:
  1917 ;;		___awdiv
  1918 ;;		___awmod
  1919 ;;		_clcd_print
  1920 ;;		_clcd_putch
  1921 ;;		_clcd_write
  1922 ;;		_my_strcmp
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text5
  1929   000A84                     __ptext5:
  1930                           	callstack 0
  1931   000A84                     _password:
  1932                           	callstack 27
  1933                           
  1934                           ;incstack = 0
  1935                           ;password@key stored from wreg
  1936   000A84  6E1F               	movwf	password@key^0,c
  1937   000A86                     
  1938                           ;password.c: 39:     clcd_print(" Enter Password ", (0x80 + (0)));
  1939   000A86  0E47               	movlw	low STR_10
  1940   000A88  6E03               	movwf	clcd_print@data^0,c
  1941   000A8A  5003               	movf	clcd_print@data^0,w,c
  1942   000A8C  A4D8               	btfss	status,2,c
  1943   000A8E  0E06               	movlw	high __smallconst
  1944   000A90  6E04               	movwf	(clcd_print@data+1)^0,c
  1945   000A92  0E80               	movlw	128
  1946   000A94  6E05               	movwf	clcd_print@addr^0,c
  1947   000A96  EC6C  F00E         	call	_clcd_print	;wreg free
  1948   000A9A                     
  1949                           ;password.c: 42:     if (delay++ < 500) {
  1950   000A9A  503E               	movf	_delay^0,w,c
  1951   000A9C  6E11               	movwf	??_password^0,c
  1952   000A9E  503F               	movf	(_delay+1)^0,w,c
  1953   000AA0  6E12               	movwf	(??_password+1)^0,c
  1954   000AA2  4A3E               	infsnz	_delay^0,f,c
  1955   000AA4  2A3F               	incf	(_delay+1)^0,f,c
  1956   000AA6  BE12               	btfsc	(??_password+1)^0,7,c
  1957   000AA8  EF61  F005         	goto	u2010
  1958   000AAC  0EF4               	movlw	244
  1959   000AAE  5C11               	subwf	??_password^0,w,c
  1960   000AB0  0E01               	movlw	1
  1961   000AB2  5812               	subwfb	(??_password+1)^0,w,c
  1962   000AB4  B0D8               	btfsc	status,0,c
  1963   000AB6  EF5F  F005         	goto	u2011
  1964   000ABA  EF61  F005         	goto	u2010
  1965   000ABE                     u2011:
  1966   000ABE  EF69  F005         	goto	l2775
  1967   000AC2                     u2010:
  1968   000AC2                     
  1969                           ;password.c: 43:         clcd_putch('_', (0xC0 + (index)));
  1970   000AC2  5040               	movf	_index^0,w,c
  1971   000AC4  0FC0               	addlw	192
  1972   000AC6  6E0F               	movwf	clcd_putch@addr^0,c
  1973   000AC8  0E5F               	movlw	95
  1974   000ACA  EC02  F010         	call	_clcd_putch
  1975                           
  1976                           ;password.c: 44:     } else if (delay > 500 && delay < 1000) {
  1977   000ACE  EF91  F005         	goto	l2783
  1978   000AD2                     l2775:
  1979   000AD2  BE3F               	btfsc	(_delay+1)^0,7,c
  1980   000AD4  EF75  F005         	goto	u2021
  1981   000AD8  0EF5               	movlw	245
  1982   000ADA  5C3E               	subwf	_delay^0,w,c
  1983   000ADC  0E01               	movlw	1
  1984   000ADE  583F               	subwfb	(_delay+1)^0,w,c
  1985   000AE0  A0D8               	btfss	status,0,c
  1986   000AE2  EF75  F005         	goto	u2021
  1987   000AE6  EF77  F005         	goto	u2020
  1988   000AEA                     u2021:
  1989   000AEA  EF8D  F005         	goto	l2781
  1990   000AEE                     u2020:
  1991   000AEE  BE3F               	btfsc	(_delay+1)^0,7,c
  1992   000AF0  EF85  F005         	goto	u2030
  1993   000AF4  0EE8               	movlw	232
  1994   000AF6  5C3E               	subwf	_delay^0,w,c
  1995   000AF8  0E03               	movlw	3
  1996   000AFA  583F               	subwfb	(_delay+1)^0,w,c
  1997   000AFC  B0D8               	btfsc	status,0,c
  1998   000AFE  EF83  F005         	goto	u2031
  1999   000B02  EF85  F005         	goto	u2030
  2000   000B06                     u2031:
  2001   000B06  EF8D  F005         	goto	l2781
  2002   000B0A                     u2030:
  2003   000B0A                     
  2004                           ;password.c: 45:         clcd_putch(' ', (0xC0 + (index)));
  2005   000B0A  5040               	movf	_index^0,w,c
  2006   000B0C  0FC0               	addlw	192
  2007   000B0E  6E0F               	movwf	clcd_putch@addr^0,c
  2008   000B10  0E20               	movlw	32
  2009   000B12  EC02  F010         	call	_clcd_putch
  2010                           
  2011                           ;password.c: 46:     } else
  2012   000B16  EF91  F005         	goto	l2783
  2013   000B1A                     l2781:
  2014                           
  2015                           ;password.c: 47:         delay = 0;
  2016   000B1A  0E00               	movlw	0
  2017   000B1C  6E3F               	movwf	(_delay+1)^0,c
  2018   000B1E  0E00               	movlw	0
  2019   000B20  6E3E               	movwf	_delay^0,c
  2020   000B22                     l2783:
  2021                           
  2022                           ;password.c: 49:     if (key == 5) {
  2023   000B22  0E05               	movlw	5
  2024   000B24  181F               	xorwf	password@key^0,w,c
  2025   000B26  A4D8               	btfss	status,2,c
  2026   000B28  EF98  F005         	goto	u2041
  2027   000B2C  EF9A  F005         	goto	u2040
  2028   000B30                     u2041:
  2029   000B30  EFAA  F005         	goto	l2791
  2030   000B34                     u2040:
  2031   000B34                     
  2032                           ;password.c: 50:         temp_password[index] = '0';
  2033   000B34  5040               	movf	_index^0,w,c
  2034   000B36  0F7A               	addlw	low _temp_password
  2035   000B38  6ED9               	movwf	fsr2l,c
  2036   000B3A  6ADA               	clrf	fsr2h,c
  2037   000B3C  0E30               	movlw	48
  2038   000B3E  6EDF               	movwf	indf2,c
  2039   000B40                     
  2040                           ;password.c: 51:         clcd_putch('*', (0xC0 + (index)));
  2041   000B40  5040               	movf	_index^0,w,c
  2042   000B42  0FC0               	addlw	192
  2043   000B44  6E0F               	movwf	clcd_putch@addr^0,c
  2044   000B46  0E2A               	movlw	42
  2045   000B48  EC02  F010         	call	_clcd_putch
  2046   000B4C                     l2789:
  2047                           
  2048                           ;password.c: 52:         index++;
  2049   000B4C  4A40               	infsnz	_index^0,f,c
  2050   000B4E  2A41               	incf	(_index+1)^0,f,c
  2051                           
  2052                           ;password.c: 54:     } else if (key == 6) {
  2053   000B50  EFC1  F005         	goto	l2799
  2054   000B54                     l2791:
  2055   000B54  0E06               	movlw	6
  2056   000B56  181F               	xorwf	password@key^0,w,c
  2057   000B58  A4D8               	btfss	status,2,c
  2058   000B5A  EFB1  F005         	goto	u2051
  2059   000B5E  EFB3  F005         	goto	u2050
  2060   000B62                     u2051:
  2061   000B62  EFC1  F005         	goto	l2799
  2062   000B66                     u2050:
  2063   000B66                     
  2064                           ;password.c: 55:         temp_password[index] = '1';
  2065   000B66  5040               	movf	_index^0,w,c
  2066   000B68  0F7A               	addlw	low _temp_password
  2067   000B6A  6ED9               	movwf	fsr2l,c
  2068   000B6C  6ADA               	clrf	fsr2h,c
  2069   000B6E  0E31               	movlw	49
  2070   000B70  6EDF               	movwf	indf2,c
  2071   000B72                     
  2072                           ;password.c: 56:         clcd_putch('*', (0xC0 + (index)));
  2073   000B72  5040               	movf	_index^0,w,c
  2074   000B74  0FC0               	addlw	192
  2075   000B76  6E0F               	movwf	clcd_putch@addr^0,c
  2076   000B78  0E2A               	movlw	42
  2077   000B7A  EC02  F010         	call	_clcd_putch
  2078   000B7E  EFA6  F005         	goto	l2789
  2079   000B82                     l2799:
  2080                           
  2081                           ;password.c: 61:     if (index == 4) {
  2082   000B82  0E04               	movlw	4
  2083   000B84  1840               	xorwf	_index^0,w,c
  2084   000B86  1041               	iorwf	(_index+1)^0,w,c
  2085   000B88  A4D8               	btfss	status,2,c
  2086   000B8A  EFC9  F005         	goto	u2061
  2087   000B8E  EFCB  F005         	goto	u2060
  2088   000B92                     u2061:
  2089   000B92  EFD2  F006         	goto	l280
  2090   000B96                     u2060:
  2091   000B96                     
  2092                           ;password.c: 62:         temp_password[index] = '\0';
  2093   000B96  5040               	movf	_index^0,w,c
  2094   000B98  0F7A               	addlw	low _temp_password
  2095   000B9A  6ED9               	movwf	fsr2l,c
  2096   000B9C  6ADA               	clrf	fsr2h,c
  2097   000B9E  6ADF               	clrf	indf2,c
  2098   000BA0                     
  2099                           ;password.c: 63:         if (my_strcmp(pass,temp_password) == 0) {
  2100   000BA0  0E7F               	movlw	low _pass
  2101   000BA2  6E01               	movwf	my_strcmp@one^0,c
  2102   000BA4  0E7A               	movlw	low _temp_password
  2103   000BA6  6E02               	movwf	my_strcmp@two^0,c
  2104   000BA8  EC34  F00D         	call	_my_strcmp	;wreg free
  2105   000BAC  5001               	movf	?_my_strcmp^0,w,c
  2106   000BAE  1002               	iorwf	(?_my_strcmp+1)^0,w,c
  2107   000BB0  A4D8               	btfss	status,2,c
  2108   000BB2  EFDD  F005         	goto	u2071
  2109   000BB6  EFDF  F005         	goto	u2070
  2110   000BBA                     u2071:
  2111   000BBA  EFF9  F005         	goto	l2813
  2112   000BBE                     u2070:
  2113   000BBE                     
  2114                           ;password.c: 65:             clcd_print("               ", (0x80 + (0)));
  2115   000BBE  0E89               	movlw	low STR_11
  2116   000BC0  6E03               	movwf	clcd_print@data^0,c
  2117   000BC2  5003               	movf	clcd_print@data^0,w,c
  2118   000BC4  A4D8               	btfss	status,2,c
  2119   000BC6  0E06               	movlw	high __smallconst
  2120   000BC8  6E04               	movwf	(clcd_print@data+1)^0,c
  2121   000BCA  0E80               	movlw	128
  2122   000BCC  6E05               	movwf	clcd_print@addr^0,c
  2123   000BCE  EC6C  F00E         	call	_clcd_print	;wreg free
  2124                           
  2125                           ;password.c: 66:             clcd_print("      SUCCESS     ", (0xC0 + (0)));
  2126   000BD2  0E01               	movlw	low STR_12
  2127   000BD4  6E03               	movwf	clcd_print@data^0,c
  2128   000BD6  5003               	movf	clcd_print@data^0,w,c
  2129   000BD8  A4D8               	btfss	status,2,c
  2130   000BDA  0E06               	movlw	high __smallconst
  2131   000BDC  6E04               	movwf	(clcd_print@data+1)^0,c
  2132   000BDE  0EC0               	movlw	192
  2133   000BE0  6E05               	movwf	clcd_print@addr^0,c
  2134   000BE2  EC6C  F00E         	call	_clcd_print	;wreg free
  2135   000BE6                     
  2136                           ;password.c: 67:             flag = 1;
  2137   000BE6  0E01               	movlw	1
  2138   000BE8  6E52               	movwf	_flag^0,c
  2139   000BEA  EFD2  F006         	goto	l280
  2140   000BEE                     l2809:
  2141                           
  2142                           ;password.c: 68:             return;
  2143   000BEE  EFD2  F006         	goto	l280
  2144   000BF2                     l2813:
  2145                           
  2146                           ;password.c: 73:             if (chance == 0) {
  2147   000BF2  505C               	movf	_chance^0,w,c
  2148   000BF4  A4D8               	btfss	status,2,c
  2149   000BF6  EFFF  F005         	goto	u2081
  2150   000BFA  EF01  F006         	goto	u2080
  2151   000BFE                     u2081:
  2152   000BFE  EF7F  F006         	goto	l2835
  2153   000C02                     u2080:
  2154   000C02                     
  2155                           ;password.c: 76:                 TMR0IE = 1;
  2156   000C02  8AF2               	bsf	4082,5,c	;volatile
  2157                           
  2158                           ;password.c: 77:                 GIE = 1;
  2159   000C04  8EF2               	bsf	4082,7,c	;volatile
  2160                           
  2161                           ;password.c: 78:                 PEIE = 1;
  2162   000C06  8CF2               	bsf	4082,6,c	;volatile
  2163   000C08                     
  2164                           ;password.c: 80:                 clcd_print(" System Blocked", (0x80 + (0)));
  2165   000C08  0E99               	movlw	low STR_13
  2166   000C0A  6E03               	movwf	clcd_print@data^0,c
  2167   000C0C  5003               	movf	clcd_print@data^0,w,c
  2168   000C0E  A4D8               	btfss	status,2,c
  2169   000C10  0E06               	movlw	high __smallconst
  2170   000C12  6E04               	movwf	(clcd_print@data+1)^0,c
  2171   000C14  0E80               	movlw	128
  2172   000C16  6E05               	movwf	clcd_print@addr^0,c
  2173   000C18  EC6C  F00E         	call	_clcd_print	;wreg free
  2174                           
  2175                           ;password.c: 81:                 clcd_print("     ", (0xC0 + (0)));
  2176   000C1C  0E93               	movlw	low (STR_11+10)
  2177   000C1E  6E03               	movwf	clcd_print@data^0,c
  2178   000C20  5003               	movf	clcd_print@data^0,w,c
  2179   000C22  A4D8               	btfss	status,2,c
  2180   000C24  0E06               	movlw	high __smallconst
  2181   000C26  6E04               	movwf	(clcd_print@data+1)^0,c
  2182   000C28  0EC0               	movlw	192
  2183   000C2A  6E05               	movwf	clcd_print@addr^0,c
  2184   000C2C  EC6C  F00E         	call	_clcd_print	;wreg free
  2185   000C30                     
  2186                           ;password.c: 82:                 clcd_putch('0' + (tick_count / 100), (0xC0 + (5)));
  2187   000C30  0EC5               	movlw	197
  2188   000C32  6E0F               	movwf	clcd_putch@addr^0,c
  2189   000C34  C05D  F001         	movff	_tick_count,___awdiv@dividend
  2190   000C38  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2191   000C3A  0E00               	movlw	0
  2192   000C3C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2193   000C3E  0E64               	movlw	100
  2194   000C40  6E03               	movwf	___awdiv@divisor^0,c
  2195   000C42  EC26  F00C         	call	___awdiv	;wreg free
  2196   000C46  5001               	movf	?___awdiv^0,w,c
  2197   000C48  0F30               	addlw	48
  2198   000C4A  EC02  F010         	call	_clcd_putch
  2199   000C4E                     
  2200                           ;password.c: 83:                 clcd_putch('0' + (tick_count / 10) % 10, (0xC0 + (6)));
  2201   000C4E  0EC6               	movlw	198
  2202   000C50  6E0F               	movwf	clcd_putch@addr^0,c
  2203   000C52  0E00               	movlw	0
  2204   000C54  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2205   000C56  0E0A               	movlw	10
  2206   000C58  6E03               	movwf	___awdiv@divisor^0,c
  2207   000C5A  C05D  F001         	movff	_tick_count,___awdiv@dividend
  2208   000C5E  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2209   000C60  EC26  F00C         	call	___awdiv	;wreg free
  2210   000C64  C001  F009         	movff	?___awdiv,___awmod@dividend
  2211   000C68  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2212   000C6C  0E00               	movlw	0
  2213   000C6E  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2214   000C70  0E0A               	movlw	10
  2215   000C72  6E0B               	movwf	___awmod@divisor^0,c
  2216   000C74  EC88  F00C         	call	___awmod	;wreg free
  2217   000C78  5009               	movf	?___awmod^0,w,c
  2218   000C7A  0F30               	addlw	48
  2219   000C7C  EC02  F010         	call	_clcd_putch
  2220   000C80                     
  2221                           ;password.c: 84:                 clcd_putch('0' + (tick_count % 10), (0xC0 + (7)));
  2222   000C80  0EC7               	movlw	199
  2223   000C82  6E0F               	movwf	clcd_putch@addr^0,c
  2224   000C84  C05D  F009         	movff	_tick_count,___awmod@dividend
  2225   000C88  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2226   000C8A  0E00               	movlw	0
  2227   000C8C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2228   000C8E  0E0A               	movlw	10
  2229   000C90  6E0B               	movwf	___awmod@divisor^0,c
  2230   000C92  EC88  F00C         	call	___awmod	;wreg free
  2231   000C96  5009               	movf	?___awmod^0,w,c
  2232   000C98  0F30               	addlw	48
  2233   000C9A  EC02  F010         	call	_clcd_putch
  2234   000C9E                     
  2235                           ;password.c: 85:                 for (unsigned long int delay = 200000; delay--;);
  2236   000C9E  0E40               	movlw	64
  2237   000CA0  6E1B               	movwf	password@delay^0,c
  2238   000CA2  0E0D               	movlw	13
  2239   000CA4  6E1C               	movwf	(password@delay+1)^0,c
  2240   000CA6  0E03               	movlw	3
  2241   000CA8  6E1D               	movwf	(password@delay+2)^0,c
  2242   000CAA  0E00               	movlw	0
  2243   000CAC  6E1E               	movwf	(password@delay+3)^0,c
  2244   000CAE                     l2827:
  2245   000CAE  061B               	decf	password@delay^0,f,c
  2246   000CB0  0E00               	movlw	0
  2247   000CB2  5A1C               	subwfb	(password@delay+1)^0,f,c
  2248   000CB4  5A1D               	subwfb	(password@delay+2)^0,f,c
  2249   000CB6  5A1E               	subwfb	(password@delay+3)^0,f,c
  2250   000CB8  281B               	incf	password@delay^0,w,c
  2251   000CBA  E10A               	bnz	u2091
  2252   000CBC  281C               	incf	(password@delay+1)^0,w,c
  2253   000CBE  E108               	bnz	u2091
  2254   000CC0  281D               	incf	(password@delay+2)^0,w,c
  2255   000CC2  E106               	bnz	u2091
  2256   000CC4  281E               	incf	(password@delay+3)^0,w,c
  2257   000CC6  A4D8               	btfss	status,2,c
  2258   000CC8  EF68  F006         	goto	u2091
  2259   000CCC  EF6A  F006         	goto	u2090
  2260   000CD0                     u2091:
  2261   000CD0  EF57  F006         	goto	l2827
  2262   000CD4                     u2090:
  2263   000CD4                     
  2264                           ;password.c: 87:                 if (tick_count == 0) {
  2265   000CD4  505D               	movf	_tick_count^0,w,c
  2266   000CD6  A4D8               	btfss	status,2,c
  2267   000CD8  EF70  F006         	goto	u2101
  2268   000CDC  EF72  F006         	goto	u2100
  2269   000CE0                     u2101:
  2270   000CE0  EFF7  F005         	goto	l2809
  2271   000CE4                     u2100:
  2272   000CE4                     
  2273                           ;password.c: 88:                     chance = 2;
  2274   000CE4  0E02               	movlw	2
  2275   000CE6  6E5C               	movwf	_chance^0,c
  2276                           
  2277                           ;password.c: 89:                     index = 0;
  2278   000CE8  0E00               	movlw	0
  2279   000CEA  6E41               	movwf	(_index+1)^0,c
  2280   000CEC  0E00               	movlw	0
  2281   000CEE  6E40               	movwf	_index^0,c
  2282   000CF0                     
  2283                           ;password.c: 90:                     clcd_write(0x01, 0);
  2284   000CF0  0E00               	movlw	0
  2285   000CF2  6E01               	movwf	clcd_write@control_bit^0,c
  2286   000CF4  0E01               	movlw	1
  2287   000CF6  EC9C  F00F         	call	_clcd_write
  2288   000CFA  EFD2  F006         	goto	l280
  2289   000CFE                     l2835:
  2290                           
  2291                           ;password.c: 95:                 clcd_print("   Try Again    ", (0x80 + (0)));
  2292   000CFE  0E36               	movlw	low STR_15
  2293   000D00  6E03               	movwf	clcd_print@data^0,c
  2294   000D02  5003               	movf	clcd_print@data^0,w,c
  2295   000D04  A4D8               	btfss	status,2,c
  2296   000D06  0E06               	movlw	high __smallconst
  2297   000D08  6E04               	movwf	(clcd_print@data+1)^0,c
  2298   000D0A  0E80               	movlw	128
  2299   000D0C  6E05               	movwf	clcd_print@addr^0,c
  2300   000D0E  EC6C  F00E         	call	_clcd_print	;wreg free
  2301   000D12                     
  2302                           ;password.c: 96:                 clcd_putch('0' + chance, (0xC0 + (0)));
  2303   000D12  0EC0               	movlw	192
  2304   000D14  6E0F               	movwf	clcd_putch@addr^0,c
  2305   000D16  505C               	movf	_chance^0,w,c
  2306   000D18  0F30               	addlw	48
  2307   000D1A  EC02  F010         	call	_clcd_putch
  2308   000D1E                     
  2309                           ;password.c: 97:                 clcd_print(" Chances Left ", (0xC0 + (1)));
  2310   000D1E  0EB8               	movlw	low STR_16
  2311   000D20  6E03               	movwf	clcd_print@data^0,c
  2312   000D22  5003               	movf	clcd_print@data^0,w,c
  2313   000D24  A4D8               	btfss	status,2,c
  2314   000D26  0E06               	movlw	high __smallconst
  2315   000D28  6E04               	movwf	(clcd_print@data+1)^0,c
  2316   000D2A  0EC1               	movlw	193
  2317   000D2C  6E05               	movwf	clcd_print@addr^0,c
  2318   000D2E  EC6C  F00E         	call	_clcd_print	;wreg free
  2319   000D32                     
  2320                           ;password.c: 98:                 for (unsigned long long int wait = 400000; wait--;);
  2321   000D32  0E80               	movlw	128
  2322   000D34  6E13               	movwf	password@wait^0,c
  2323   000D36  0E1A               	movlw	26
  2324   000D38  6E14               	movwf	(password@wait+1)^0,c
  2325   000D3A  0E06               	movlw	6
  2326   000D3C  6E15               	movwf	(password@wait+2)^0,c
  2327   000D3E  0E00               	movlw	0
  2328   000D40  6E16               	movwf	(password@wait+3)^0,c
  2329   000D42  0E00               	movlw	0
  2330   000D44  6E17               	movwf	(password@wait+4)^0,c
  2331   000D46  0E00               	movlw	0
  2332   000D48  6E18               	movwf	(password@wait+5)^0,c
  2333   000D4A  0E00               	movlw	0
  2334   000D4C  6E19               	movwf	(password@wait+6)^0,c
  2335   000D4E  0E00               	movlw	0
  2336   000D50  6E1A               	movwf	(password@wait+7)^0,c
  2337   000D52                     l2843:
  2338   000D52  0613               	decf	password@wait^0,f,c
  2339   000D54  0E00               	movlw	0
  2340   000D56  5A14               	subwfb	(password@wait+1)^0,f,c
  2341   000D58  5A15               	subwfb	(password@wait+2)^0,f,c
  2342   000D5A  5A16               	subwfb	(password@wait+3)^0,f,c
  2343   000D5C  5A17               	subwfb	(password@wait+4)^0,f,c
  2344   000D5E  5A18               	subwfb	(password@wait+5)^0,f,c
  2345   000D60  5A19               	subwfb	(password@wait+6)^0,f,c
  2346   000D62  5A1A               	subwfb	(password@wait+7)^0,f,c
  2347   000D64  2813               	incf	password@wait^0,w,c
  2348   000D66  E112               	bnz	u2111
  2349   000D68  2814               	incf	(password@wait+1)^0,w,c
  2350   000D6A  E110               	bnz	u2111
  2351   000D6C  2815               	incf	(password@wait+2)^0,w,c
  2352   000D6E  E10E               	bnz	u2111
  2353   000D70  2816               	incf	(password@wait+3)^0,w,c
  2354   000D72  E10C               	bnz	u2111
  2355   000D74  2817               	incf	(password@wait+4)^0,w,c
  2356   000D76  E10A               	bnz	u2111
  2357   000D78  2818               	incf	(password@wait+5)^0,w,c
  2358   000D7A  E108               	bnz	u2111
  2359   000D7C  2819               	incf	(password@wait+6)^0,w,c
  2360   000D7E  E106               	bnz	u2111
  2361   000D80  281A               	incf	(password@wait+7)^0,w,c
  2362   000D82  A4D8               	btfss	status,2,c
  2363   000D84  EFC6  F006         	goto	u2111
  2364   000D88  EFC8  F006         	goto	u2110
  2365   000D8C                     u2111:
  2366   000D8C  EFA9  F006         	goto	l2843
  2367   000D90                     u2110:
  2368   000D90                     
  2369                           ;password.c: 99:                 chance--;
  2370   000D90  065C               	decf	_chance^0,f,c
  2371   000D92                     
  2372                           ;password.c: 100:                 index = 0;
  2373   000D92  0E00               	movlw	0
  2374   000D94  6E41               	movwf	(_index+1)^0,c
  2375   000D96  0E00               	movlw	0
  2376   000D98  6E40               	movwf	_index^0,c
  2377   000D9A                     
  2378                           ;password.c: 101:                 clcd_write(0x01, 0);
  2379   000D9A  0E00               	movlw	0
  2380   000D9C  6E01               	movwf	clcd_write@control_bit^0,c
  2381   000D9E  0E01               	movlw	1
  2382   000DA0  EC9C  F00F         	call	_clcd_write
  2383   000DA4                     l280:
  2384   000DA4  0012               	return		;funcret
  2385   000DA6                     __end_of_password:
  2386                           	callstack 0
  2387                           
  2388 ;; *************** function _my_strcmp *****************
  2389 ;; Defined at:
  2390 ;;		line 25 in file "password.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  one             1    0[COMRAM] PTR unsigned char 
  2393 ;;		 -> pass(5), 
  2394 ;;  two             1    1[COMRAM] PTR unsigned char 
  2395 ;;		 -> temp_password(5), 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  k               2    6[COMRAM] int 
  2398 ;;  last            2    4[COMRAM] int 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  2    0[COMRAM] int 
  2401 ;; Registers used:
  2402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2408 ;;      Params:         2       0       0       0       0       0       0
  2409 ;;      Locals:         4       0       0       0       0       0       0
  2410 ;;      Temps:          2       0       0       0       0       0       0
  2411 ;;      Totals:         8       0       0       0       0       0       0
  2412 ;;Total ram usage:        8 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; Hardware stack levels required when called: 1
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_password
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text6
  2423   001A68                     __ptext6:
  2424                           	callstack 0
  2425   001A68                     _my_strcmp:
  2426                           	callstack 28
  2427   001A68                     
  2428                           ;password.c: 26:     int k = 0, last = 0;
  2429   001A68  0E00               	movlw	0
  2430   001A6A  6E08               	movwf	(my_strcmp@k+1)^0,c
  2431   001A6C  0E00               	movlw	0
  2432   001A6E  6E07               	movwf	my_strcmp@k^0,c
  2433   001A70  0E00               	movlw	0
  2434   001A72  6E06               	movwf	(my_strcmp@last+1)^0,c
  2435   001A74  0E00               	movlw	0
  2436   001A76  6E05               	movwf	my_strcmp@last^0,c
  2437                           
  2438                           ;password.c: 27:     while (one[k] != '\0') {
  2439   001A78  EF65  F00D         	goto	l2577
  2440   001A7C                     l2571:
  2441                           
  2442                           ;password.c: 28:         if (one[k] != two[k]) {
  2443   001A7C  5002               	movf	my_strcmp@two^0,w,c
  2444   001A7E  2407               	addwf	my_strcmp@k^0,w,c
  2445   001A80  6ED9               	movwf	fsr2l,c
  2446   001A82  6ADA               	clrf	fsr2h,c
  2447   001A84  5001               	movf	my_strcmp@one^0,w,c
  2448   001A86  2407               	addwf	my_strcmp@k^0,w,c
  2449   001A88  6EE1               	movwf	fsr1l,c
  2450   001A8A  6AE2               	clrf	fsr1h,c
  2451   001A8C  50DE               	movf	postinc2,w,c
  2452   001A8E  18E6               	xorwf	postinc1,w,c
  2453   001A90  B4D8               	btfsc	status,2,c
  2454   001A92  EF4D  F00D         	goto	u1721
  2455   001A96  EF4F  F00D         	goto	u1720
  2456   001A9A                     u1721:
  2457   001A9A  EF63  F00D         	goto	l2575
  2458   001A9E                     u1720:
  2459   001A9E                     
  2460                           ;password.c: 29:             last = one[k] - two[k];
  2461   001A9E  5001               	movf	my_strcmp@one^0,w,c
  2462   001AA0  2407               	addwf	my_strcmp@k^0,w,c
  2463   001AA2  6ED9               	movwf	fsr2l,c
  2464   001AA4  6ADA               	clrf	fsr2h,c
  2465   001AA6  50DF               	movf	indf2,w,c
  2466   001AA8  6E03               	movwf	??_my_strcmp^0,c
  2467   001AAA  5002               	movf	my_strcmp@two^0,w,c
  2468   001AAC  2407               	addwf	my_strcmp@k^0,w,c
  2469   001AAE  6ED9               	movwf	fsr2l,c
  2470   001AB0  6ADA               	clrf	fsr2h,c
  2471   001AB2  50DF               	movf	indf2,w,c
  2472   001AB4  6E04               	movwf	(??_my_strcmp+1)^0,c
  2473   001AB6  5004               	movf	(??_my_strcmp+1)^0,w,c
  2474   001AB8  5C03               	subwf	??_my_strcmp^0,w,c
  2475   001ABA  6E05               	movwf	my_strcmp@last^0,c
  2476   001ABC  6A06               	clrf	(my_strcmp@last+1)^0,c
  2477   001ABE  A0D8               	btfss	status,0,c
  2478   001AC0  0606               	decf	(my_strcmp@last+1)^0,f,c
  2479                           
  2480                           ;password.c: 30:             break;
  2481   001AC2  EF71  F00D         	goto	l267
  2482   001AC6                     l2575:
  2483                           
  2484                           ;password.c: 32:         k++;
  2485   001AC6  4A07               	infsnz	my_strcmp@k^0,f,c
  2486   001AC8  2A08               	incf	(my_strcmp@k+1)^0,f,c
  2487   001ACA                     l2577:
  2488                           
  2489                           ;password.c: 27:     while (one[k] != '\0') {
  2490   001ACA  5001               	movf	my_strcmp@one^0,w,c
  2491   001ACC  2407               	addwf	my_strcmp@k^0,w,c
  2492   001ACE  6ED9               	movwf	fsr2l,c
  2493   001AD0  6ADA               	clrf	fsr2h,c
  2494   001AD2  50DF               	movf	indf2,w,c
  2495   001AD4  A4D8               	btfss	status,2,c
  2496   001AD6  EF6F  F00D         	goto	u1731
  2497   001ADA  EF71  F00D         	goto	u1730
  2498   001ADE                     u1731:
  2499   001ADE  EF3E  F00D         	goto	l2571
  2500   001AE2                     u1730:
  2501   001AE2                     l267:
  2502                           
  2503                           ;password.c: 34:     return last;
  2504   001AE2  C005  F001         	movff	my_strcmp@last,?_my_strcmp
  2505   001AE6  C006  F002         	movff	my_strcmp@last+1,?_my_strcmp+1
  2506   001AEA  0012               	return		;funcret
  2507   001AEC                     __end_of_my_strcmp:
  2508                           	callstack 0
  2509                           
  2510 ;; *************** function ___awmod *****************
  2511 ;; Defined at:
  2512 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  dividend        2    8[COMRAM] int 
  2515 ;;  divisor         2   10[COMRAM] int 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;  sign            1   13[COMRAM] unsigned char 
  2518 ;;  counter         1   12[COMRAM] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  2    8[COMRAM] int 
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2528 ;;      Params:         4       0       0       0       0       0       0
  2529 ;;      Locals:         2       0       0       0       0       0       0
  2530 ;;      Temps:          0       0       0       0       0       0       0
  2531 ;;      Totals:         6       0       0       0       0       0       0
  2532 ;;Total ram usage:        6 bytes
  2533 ;; Hardware stack levels used: 1
  2534 ;; Hardware stack levels required when called: 1
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_password
  2539 ;;		_view_log
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text7
  2544   001910                     __ptext7:
  2545                           	callstack 0
  2546   001910                     ___awmod:
  2547                           	callstack 28
  2548   001910  0E00               	movlw	0
  2549   001912  6E0E               	movwf	___awmod@sign^0,c
  2550   001914  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  2551   001916  EF91  F00C         	goto	u1800
  2552   00191A  EF8F  F00C         	goto	u1801
  2553   00191E                     u1801:
  2554   00191E  EF97  F00C         	goto	l2631
  2555   001922                     u1800:
  2556   001922  6C09               	negf	___awmod@dividend^0,c
  2557   001924  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  2558   001926  B0D8               	btfsc	status,0,c
  2559   001928  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  2560   00192A  0E01               	movlw	1
  2561   00192C  6E0E               	movwf	___awmod@sign^0,c
  2562   00192E                     l2631:
  2563   00192E  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  2564   001930  EF9E  F00C         	goto	u1810
  2565   001934  EF9C  F00C         	goto	u1811
  2566   001938                     u1811:
  2567   001938  EFA2  F00C         	goto	l2635
  2568   00193C                     u1810:
  2569   00193C  6C0B               	negf	___awmod@divisor^0,c
  2570   00193E  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  2571   001940  B0D8               	btfsc	status,0,c
  2572   001942  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  2573   001944                     l2635:
  2574   001944  500B               	movf	___awmod@divisor^0,w,c
  2575   001946  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  2576   001948  B4D8               	btfsc	status,2,c
  2577   00194A  EFA9  F00C         	goto	u1821
  2578   00194E  EFAB  F00C         	goto	u1820
  2579   001952                     u1821:
  2580   001952  EFCF  F00C         	goto	l2651
  2581   001956                     u1820:
  2582   001956  0E01               	movlw	1
  2583   001958  6E0D               	movwf	___awmod@counter^0,c
  2584   00195A  EFB3  F00C         	goto	l2641
  2585   00195E                     l2639:
  2586   00195E  90D8               	bcf	status,0,c
  2587   001960  360B               	rlcf	___awmod@divisor^0,f,c
  2588   001962  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  2589   001964  2A0D               	incf	___awmod@counter^0,f,c
  2590   001966                     l2641:
  2591   001966  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  2592   001968  EFB8  F00C         	goto	u1831
  2593   00196C  EFBA  F00C         	goto	u1830
  2594   001970                     u1831:
  2595   001970  EFAF  F00C         	goto	l2639
  2596   001974                     u1830:
  2597   001974                     l2643:
  2598   001974  500B               	movf	___awmod@divisor^0,w,c
  2599   001976  5C09               	subwf	___awmod@dividend^0,w,c
  2600   001978  500C               	movf	(___awmod@divisor+1)^0,w,c
  2601   00197A  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  2602   00197C  A0D8               	btfss	status,0,c
  2603   00197E  EFC3  F00C         	goto	u1841
  2604   001982  EFC5  F00C         	goto	u1840
  2605   001986                     u1841:
  2606   001986  EFC9  F00C         	goto	l2647
  2607   00198A                     u1840:
  2608   00198A  500B               	movf	___awmod@divisor^0,w,c
  2609   00198C  5E09               	subwf	___awmod@dividend^0,f,c
  2610   00198E  500C               	movf	(___awmod@divisor+1)^0,w,c
  2611   001990  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  2612   001992                     l2647:
  2613   001992  90D8               	bcf	status,0,c
  2614   001994  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  2615   001996  320B               	rrcf	___awmod@divisor^0,f,c
  2616   001998  2E0D               	decfsz	___awmod@counter^0,f,c
  2617   00199A  EFBA  F00C         	goto	l2643
  2618   00199E                     l2651:
  2619   00199E  500E               	movf	___awmod@sign^0,w,c
  2620   0019A0  B4D8               	btfsc	status,2,c
  2621   0019A2  EFD5  F00C         	goto	u1851
  2622   0019A6  EFD7  F00C         	goto	u1850
  2623   0019AA                     u1851:
  2624   0019AA  EFDB  F00C         	goto	l2655
  2625   0019AE                     u1850:
  2626   0019AE  6C09               	negf	___awmod@dividend^0,c
  2627   0019B0  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  2628   0019B2  B0D8               	btfsc	status,0,c
  2629   0019B4  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  2630   0019B6                     l2655:
  2631   0019B6  C009  F009         	movff	___awmod@dividend,?___awmod
  2632   0019BA  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  2633   0019BE  0012               	return		;funcret
  2634   0019C0                     __end_of___awmod:
  2635                           	callstack 0
  2636                           
  2637 ;; *************** function ___awdiv *****************
  2638 ;; Defined at:
  2639 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;  dividend        2    0[COMRAM] int 
  2642 ;;  divisor         2    2[COMRAM] int 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  quotient        2    6[COMRAM] int 
  2645 ;;  sign            1    5[COMRAM] unsigned char 
  2646 ;;  counter         1    4[COMRAM] unsigned char 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  2    0[COMRAM] int 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2656 ;;      Params:         4       0       0       0       0       0       0
  2657 ;;      Locals:         4       0       0       0       0       0       0
  2658 ;;      Temps:          0       0       0       0       0       0       0
  2659 ;;      Totals:         8       0       0       0       0       0       0
  2660 ;;Total ram usage:        8 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; Hardware stack levels required when called: 1
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_password
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text8
  2671   00184C                     __ptext8:
  2672                           	callstack 0
  2673   00184C                     ___awdiv:
  2674                           	callstack 28
  2675   00184C  0E00               	movlw	0
  2676   00184E  6E06               	movwf	___awdiv@sign^0,c
  2677   001850  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2678   001852  EF2F  F00C         	goto	u1740
  2679   001856  EF2D  F00C         	goto	u1741
  2680   00185A                     u1741:
  2681   00185A  EF35  F00C         	goto	l2587
  2682   00185E                     u1740:
  2683   00185E  6C03               	negf	___awdiv@divisor^0,c
  2684   001860  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2685   001862  B0D8               	btfsc	status,0,c
  2686   001864  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2687   001866  0E01               	movlw	1
  2688   001868  6E06               	movwf	___awdiv@sign^0,c
  2689   00186A                     l2587:
  2690   00186A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2691   00186C  EF3C  F00C         	goto	u1750
  2692   001870  EF3A  F00C         	goto	u1751
  2693   001874                     u1751:
  2694   001874  EF42  F00C         	goto	l2593
  2695   001878                     u1750:
  2696   001878  6C01               	negf	___awdiv@dividend^0,c
  2697   00187A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2698   00187C  B0D8               	btfsc	status,0,c
  2699   00187E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2700   001880  0E01               	movlw	1
  2701   001882  1A06               	xorwf	___awdiv@sign^0,f,c
  2702   001884                     l2593:
  2703   001884  0E00               	movlw	0
  2704   001886  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2705   001888  0E00               	movlw	0
  2706   00188A  6E07               	movwf	___awdiv@quotient^0,c
  2707   00188C  5003               	movf	___awdiv@divisor^0,w,c
  2708   00188E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2709   001890  B4D8               	btfsc	status,2,c
  2710   001892  EF4D  F00C         	goto	u1761
  2711   001896  EF4F  F00C         	goto	u1760
  2712   00189A                     u1761:
  2713   00189A  EF77  F00C         	goto	l2615
  2714   00189E                     u1760:
  2715   00189E  0E01               	movlw	1
  2716   0018A0  6E05               	movwf	___awdiv@counter^0,c
  2717   0018A2  EF57  F00C         	goto	l2601
  2718   0018A6                     l2599:
  2719   0018A6  90D8               	bcf	status,0,c
  2720   0018A8  3603               	rlcf	___awdiv@divisor^0,f,c
  2721   0018AA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2722   0018AC  2A05               	incf	___awdiv@counter^0,f,c
  2723   0018AE                     l2601:
  2724   0018AE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2725   0018B0  EF5C  F00C         	goto	u1771
  2726   0018B4  EF5E  F00C         	goto	u1770
  2727   0018B8                     u1771:
  2728   0018B8  EF53  F00C         	goto	l2599
  2729   0018BC                     u1770:
  2730   0018BC                     l2603:
  2731   0018BC  90D8               	bcf	status,0,c
  2732   0018BE  3607               	rlcf	___awdiv@quotient^0,f,c
  2733   0018C0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2734   0018C2  5003               	movf	___awdiv@divisor^0,w,c
  2735   0018C4  5C01               	subwf	___awdiv@dividend^0,w,c
  2736   0018C6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2737   0018C8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2738   0018CA  A0D8               	btfss	status,0,c
  2739   0018CC  EF6A  F00C         	goto	u1781
  2740   0018D0  EF6C  F00C         	goto	u1780
  2741   0018D4                     u1781:
  2742   0018D4  EF71  F00C         	goto	l2611
  2743   0018D8                     u1780:
  2744   0018D8  5003               	movf	___awdiv@divisor^0,w,c
  2745   0018DA  5E01               	subwf	___awdiv@dividend^0,f,c
  2746   0018DC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2747   0018DE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2748   0018E0  8007               	bsf	___awdiv@quotient^0,0,c
  2749   0018E2                     l2611:
  2750   0018E2  90D8               	bcf	status,0,c
  2751   0018E4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2752   0018E6  3203               	rrcf	___awdiv@divisor^0,f,c
  2753   0018E8  2E05               	decfsz	___awdiv@counter^0,f,c
  2754   0018EA  EF5E  F00C         	goto	l2603
  2755   0018EE                     l2615:
  2756   0018EE  5006               	movf	___awdiv@sign^0,w,c
  2757   0018F0  B4D8               	btfsc	status,2,c
  2758   0018F2  EF7D  F00C         	goto	u1791
  2759   0018F6  EF7F  F00C         	goto	u1790
  2760   0018FA                     u1791:
  2761   0018FA  EF83  F00C         	goto	l2619
  2762   0018FE                     u1790:
  2763   0018FE  6C07               	negf	___awdiv@quotient^0,c
  2764   001900  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2765   001902  B0D8               	btfsc	status,0,c
  2766   001904  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2767   001906                     l2619:
  2768   001906  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2769   00190A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2770   00190E  0012               	return		;funcret
  2771   001910                     __end_of___awdiv:
  2772                           	callstack 0
  2773                           
  2774 ;; *************** function _menu *****************
  2775 ;; Defined at:
  2776 ;;		line 20 in file "menu.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  key             1    wreg     unsigned char 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  key             1   17[COMRAM] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2790 ;;      Params:         0       0       0       0       0       0       0
  2791 ;;      Locals:         1       0       0       0       0       0       0
  2792 ;;      Temps:          1       0       0       0       0       0       0
  2793 ;;      Totals:         2       0       0       0       0       0       0
  2794 ;;Total ram usage:        2 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; Hardware stack levels required when called: 3
  2797 ;; This function calls:
  2798 ;;		_clcd_print
  2799 ;;		_clcd_putch
  2800 ;;		_clcd_write
  2801 ;; This function is called by:
  2802 ;;		_main
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text9
  2807   00130E                     __ptext9:
  2808                           	callstack 0
  2809   00130E                     _menu:
  2810                           	callstack 27
  2811                           
  2812                           ;incstack = 0
  2813                           ;menu@key stored from wreg
  2814   00130E  6E12               	movwf	menu@key^0,c
  2815   001310                     
  2816                           ;menu.c: 20: void menu(char key);menu.c: 21: {;menu.c: 22:     clcd_print(logs[log_index
      +                          ], (0x80 + (2)));
  2817   001310  504A               	movf	_log_index^0,w,c
  2818   001312  0F8C               	addlw	low _logs
  2819   001314  6ED9               	movwf	fsr2l,c
  2820   001316  6ADA               	clrf	fsr2h,c
  2821   001318  50DF               	movf	indf2,w,c
  2822   00131A  6E11               	movwf	??_menu^0,c
  2823   00131C  C011  F003         	movff	??_menu,clcd_print@data
  2824   001320  5003               	movf	clcd_print@data^0,w,c
  2825   001322  A4D8               	btfss	status,2,c
  2826   001324  0E06               	movlw	high __smallconst
  2827   001326  6E04               	movwf	(clcd_print@data+1)^0,c
  2828   001328  0E82               	movlw	130
  2829   00132A  6E05               	movwf	clcd_print@addr^0,c
  2830   00132C  EC6C  F00E         	call	_clcd_print	;wreg free
  2831                           
  2832                           ;menu.c: 23:     clcd_print(logs[(log_index+1)], (0xC0 + (2)));
  2833   001330  504A               	movf	_log_index^0,w,c
  2834   001332  0F8D               	addlw	low (_logs+1)
  2835   001334  6ED9               	movwf	fsr2l,c
  2836   001336  6ADA               	clrf	fsr2h,c
  2837   001338  50DF               	movf	indf2,w,c
  2838   00133A  6E11               	movwf	??_menu^0,c
  2839   00133C  C011  F003         	movff	??_menu,clcd_print@data
  2840   001340  5003               	movf	clcd_print@data^0,w,c
  2841   001342  A4D8               	btfss	status,2,c
  2842   001344  0E06               	movlw	high __smallconst
  2843   001346  6E04               	movwf	(clcd_print@data+1)^0,c
  2844   001348  0EC2               	movlw	194
  2845   00134A  6E05               	movwf	clcd_print@addr^0,c
  2846   00134C  EC6C  F00E         	call	_clcd_print	;wreg free
  2847   001350                     
  2848                           ;menu.c: 25:     if(star_flag==0)
  2849   001350  504B               	movf	_star_flag^0,w,c
  2850   001352  A4D8               	btfss	status,2,c
  2851   001354  EFAE  F009         	goto	u2121
  2852   001358  EFB0  F009         	goto	u2120
  2853   00135C                     u2121:
  2854   00135C  EFBC  F009         	goto	l2857
  2855   001360                     u2120:
  2856   001360                     
  2857                           ;menu.c: 26:     {;menu.c: 27:         clcd_putch('*',(0x80 + (0)));
  2858   001360  0E80               	movlw	128
  2859   001362  6E0F               	movwf	clcd_putch@addr^0,c
  2860   001364  0E2A               	movlw	42
  2861   001366  EC02  F010         	call	_clcd_putch
  2862                           
  2863                           ;menu.c: 28:         clcd_putch(' ',(0xC0 + (0)));
  2864   00136A  0EC0               	movlw	192
  2865   00136C  6E0F               	movwf	clcd_putch@addr^0,c
  2866   00136E  0E20               	movlw	32
  2867   001370  EC02  F010         	call	_clcd_putch
  2868                           
  2869                           ;menu.c: 29:     }
  2870   001374  EFC6  F009         	goto	l2859
  2871   001378                     l2857:
  2872                           
  2873                           ;menu.c: 31:     {;menu.c: 32:         clcd_putch(' ',(0x80 + (0)));
  2874   001378  0E80               	movlw	128
  2875   00137A  6E0F               	movwf	clcd_putch@addr^0,c
  2876   00137C  0E20               	movlw	32
  2877   00137E  EC02  F010         	call	_clcd_putch
  2878                           
  2879                           ;menu.c: 33:         clcd_putch('*',(0xC0 + (0)));
  2880   001382  0EC0               	movlw	192
  2881   001384  6E0F               	movwf	clcd_putch@addr^0,c
  2882   001386  0E2A               	movlw	42
  2883   001388  EC02  F010         	call	_clcd_putch
  2884   00138C                     l2859:
  2885                           
  2886                           ;menu.c: 37:     if(key==5 )
  2887   00138C  0E05               	movlw	5
  2888   00138E  1812               	xorwf	menu@key^0,w,c
  2889   001390  A4D8               	btfss	status,2,c
  2890   001392  EFCD  F009         	goto	u2131
  2891   001396  EFCF  F009         	goto	u2130
  2892   00139A                     u2131:
  2893   00139A  EFE4  F009         	goto	l2869
  2894   00139E                     u2130:
  2895   00139E                     
  2896                           ;menu.c: 38:     {;menu.c: 39:         if(star_flag==0)
  2897   00139E  504B               	movf	_star_flag^0,w,c
  2898   0013A0  A4D8               	btfss	status,2,c
  2899   0013A2  EFD5  F009         	goto	u2141
  2900   0013A6  EFD7  F009         	goto	u2140
  2901   0013AA                     u2141:
  2902   0013AA  EFDB  F009         	goto	l2865
  2903   0013AE                     u2140:
  2904   0013AE                     
  2905                           ;menu.c: 40:             star_flag=1;
  2906   0013AE  0E01               	movlw	1
  2907   0013B0  6E4B               	movwf	_star_flag^0,c
  2908   0013B2  EFE4  F009         	goto	l2869
  2909   0013B6                     l2865:
  2910   0013B6  0E03               	movlw	3
  2911   0013B8  604A               	cpfslt	_log_index^0,c
  2912   0013BA  EFE1  F009         	goto	u2151
  2913   0013BE  EFE3  F009         	goto	u2150
  2914   0013C2                     u2151:
  2915   0013C2  EFE4  F009         	goto	l2869
  2916   0013C6                     u2150:
  2917   0013C6                     
  2918                           ;menu.c: 42:             log_index++;
  2919   0013C6  2A4A               	incf	_log_index^0,f,c
  2920   0013C8                     l2869:
  2921                           
  2922                           ;menu.c: 45:     if(key==6 )
  2923   0013C8  0E06               	movlw	6
  2924   0013CA  1812               	xorwf	menu@key^0,w,c
  2925   0013CC  A4D8               	btfss	status,2,c
  2926   0013CE  EFEB  F009         	goto	u2161
  2927   0013D2  EFED  F009         	goto	u2160
  2928   0013D6                     u2161:
  2929   0013D6  EF02  F00A         	goto	l2879
  2930   0013DA                     u2160:
  2931   0013DA                     
  2932                           ;menu.c: 46:     {;menu.c: 47:          if(star_flag==1)
  2933   0013DA  044B               	decf	_star_flag^0,w,c
  2934   0013DC  A4D8               	btfss	status,2,c
  2935   0013DE  EFF3  F009         	goto	u2171
  2936   0013E2  EFF5  F009         	goto	u2170
  2937   0013E6                     u2171:
  2938   0013E6  EFF9  F009         	goto	l2875
  2939   0013EA                     u2170:
  2940   0013EA                     
  2941                           ;menu.c: 48:             star_flag=0;
  2942   0013EA  0E00               	movlw	0
  2943   0013EC  6E4B               	movwf	_star_flag^0,c
  2944   0013EE  EF02  F00A         	goto	l2879
  2945   0013F2                     l2875:
  2946   0013F2  504A               	movf	_log_index^0,w,c
  2947   0013F4  B4D8               	btfsc	status,2,c
  2948   0013F6  EFFF  F009         	goto	u2181
  2949   0013FA  EF01  F00A         	goto	u2180
  2950   0013FE                     u2181:
  2951   0013FE  EF02  F00A         	goto	l2879
  2952   001402                     u2180:
  2953   001402                     
  2954                           ;menu.c: 50:             log_index--;
  2955   001402  064A               	decf	_log_index^0,f,c
  2956   001404                     l2879:
  2957                           
  2958                           ;menu.c: 54:     if(key==15)
  2959   001404  0E0F               	movlw	15
  2960   001406  1812               	xorwf	menu@key^0,w,c
  2961   001408  A4D8               	btfss	status,2,c
  2962   00140A  EF09  F00A         	goto	u2191
  2963   00140E  EF0B  F00A         	goto	u2190
  2964   001412                     u2191:
  2965   001412  EF14  F00A         	goto	l2887
  2966   001416                     u2190:
  2967   001416                     
  2968                           ;menu.c: 55:     {;menu.c: 56:         clcd_write(0x01, 0);
  2969   001416  0E00               	movlw	0
  2970   001418  6E01               	movwf	clcd_write@control_bit^0,c
  2971   00141A  0E01               	movlw	1
  2972   00141C  EC9C  F00F         	call	_clcd_write
  2973   001420                     
  2974                           ;menu.c: 57:         main_f=3;
  2975   001420  0E03               	movlw	3
  2976   001422  6E4F               	movwf	_main_f^0,c
  2977   001424                     
  2978                           ;menu.c: 58:         menu_f=log_index;
  2979   001424  C04A  F04E         	movff	_log_index,_menu_f
  2980   001428                     l2887:
  2981                           
  2982                           ;menu.c: 60:     if(key==16)
  2983   001428  0E10               	movlw	16
  2984   00142A  1812               	xorwf	menu@key^0,w,c
  2985   00142C  A4D8               	btfss	status,2,c
  2986   00142E  EF1B  F00A         	goto	u2201
  2987   001432  EF1D  F00A         	goto	u2200
  2988   001436                     u2201:
  2989   001436  EF24  F00A         	goto	l461
  2990   00143A                     u2200:
  2991   00143A                     
  2992                           ;menu.c: 61:     {;menu.c: 62:         clcd_write(0x01, 0);
  2993   00143A  0E00               	movlw	0
  2994   00143C  6E01               	movwf	clcd_write@control_bit^0,c
  2995   00143E  0E01               	movlw	1
  2996   001440  EC9C  F00F         	call	_clcd_write
  2997   001444                     
  2998                           ;menu.c: 63:         main_f=0;
  2999   001444  0E00               	movlw	0
  3000   001446  6E4F               	movwf	_main_f^0,c
  3001   001448                     l461:
  3002   001448  0012               	return		;funcret
  3003   00144A                     __end_of_menu:
  3004                           	callstack 0
  3005                           
  3006 ;; *************** function _init_config *****************
  3007 ;; Defined at:
  3008 ;;		line 21 in file "main.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  j               2    5[COMRAM] int 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3022 ;;      Params:         0       0       0       0       0       0       0
  3023 ;;      Locals:         2       0       0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0       0       0
  3025 ;;      Totals:         2       0       0       0       0       0       0
  3026 ;;Total ram usage:        2 bytes
  3027 ;; Hardware stack levels used: 1
  3028 ;; Hardware stack levels required when called: 6
  3029 ;; This function calls:
  3030 ;;		_init_adc
  3031 ;;		_init_clcd
  3032 ;;		_init_ds1307
  3033 ;;		_init_i2c
  3034 ;;		_init_matrix_keypad
  3035 ;;		_init_timer0
  3036 ;;		_read_external_eeprom
  3037 ;;		_write_external_eeprom
  3038 ;; This function is called by:
  3039 ;;		_main
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text10
  3044   001AEC                     __ptext10:
  3045                           	callstack 0
  3046   001AEC                     _init_config:
  3047                           	callstack 24
  3048   001AEC                     
  3049                           ;main.c: 22:     init_clcd();
  3050   001AEC  ECE0  F00C         	call	_init_clcd	;wreg free
  3051                           
  3052                           ;main.c: 23:     init_matrix_keypad();
  3053   001AF0  EC23  F010         	call	_init_matrix_keypad	;wreg free
  3054   001AF4                     
  3055                           ;main.c: 24:     init_adc();
  3056   001AF4  ECE3  F00F         	call	_init_adc	;wreg free
  3057   001AF8                     
  3058                           ;main.c: 25:     init_i2c();
  3059   001AF8  EC0E  F010         	call	_init_i2c	;wreg free
  3060                           
  3061                           ;main.c: 26:     init_ds1307();
  3062   001AFC  EC35  F00F         	call	_init_ds1307	;wreg free
  3063   001B00                     
  3064                           ;main.c: 27:  init_timer0();
  3065   001B00  EC19  F010         	call	_init_timer0	;wreg free
  3066   001B04                     
  3067                           ;main.c: 30:     write_external_eeprom(200,'0');
  3068   001B04  0E30               	movlw	48
  3069   001B06  6E02               	movwf	write_external_eeprom@data^0,c
  3070   001B08  0EC8               	movlw	200
  3071   001B0A  EC7C  F00F         	call	_write_external_eeprom
  3072   001B0E                     
  3073                           ;main.c: 31:     write_external_eeprom(201,'0');
  3074   001B0E  0E30               	movlw	48
  3075   001B10  6E02               	movwf	write_external_eeprom@data^0,c
  3076   001B12  0EC9               	movlw	201
  3077   001B14  EC7C  F00F         	call	_write_external_eeprom
  3078   001B18                     
  3079                           ;main.c: 32:     write_external_eeprom(202,'0');
  3080   001B18  0E30               	movlw	48
  3081   001B1A  6E02               	movwf	write_external_eeprom@data^0,c
  3082   001B1C  0ECA               	movlw	202
  3083   001B1E  EC7C  F00F         	call	_write_external_eeprom
  3084   001B22                     
  3085                           ;main.c: 33:     write_external_eeprom(203,'0');
  3086   001B22  0E30               	movlw	48
  3087   001B24  6E02               	movwf	write_external_eeprom@data^0,c
  3088   001B26  0ECB               	movlw	203
  3089   001B28  EC7C  F00F         	call	_write_external_eeprom
  3090   001B2C                     
  3091                           ;main.c: 36: for(int j=0; j<4; j++)
  3092   001B2C  0E00               	movlw	0
  3093   001B2E  6E07               	movwf	(init_config@j+1)^0,c
  3094   001B30  0E00               	movlw	0
  3095   001B32  6E06               	movwf	init_config@j^0,c
  3096   001B34                     l2689:
  3097                           
  3098                           ;main.c: 37: {;main.c: 38:     pass[j] = read_external_eeprom(j+200);
  3099   001B34  5006               	movf	init_config@j^0,w,c
  3100   001B36  0F7F               	addlw	low _pass
  3101   001B38  6ED9               	movwf	fsr2l,c
  3102   001B3A  6ADA               	clrf	fsr2h,c
  3103   001B3C  5006               	movf	init_config@j^0,w,c
  3104   001B3E  0FC8               	addlw	200
  3105   001B40  ECB9  F00F         	call	_read_external_eeprom
  3106   001B44  6EDF               	movwf	indf2,c
  3107   001B46                     
  3108                           ;main.c: 39: }
  3109   001B46  4A06               	infsnz	init_config@j^0,f,c
  3110   001B48  2A07               	incf	(init_config@j+1)^0,f,c
  3111   001B4A  BE07               	btfsc	(init_config@j+1)^0,7,c
  3112   001B4C  EFB1  F00D         	goto	u1871
  3113   001B50  5007               	movf	(init_config@j+1)^0,w,c
  3114   001B52  E109               	bnz	u1870
  3115   001B54  0E04               	movlw	4
  3116   001B56  5C06               	subwf	init_config@j^0,w,c
  3117   001B58  A0D8               	btfss	status,0,c
  3118   001B5A  EFB1  F00D         	goto	u1871
  3119   001B5E  EFB3  F00D         	goto	u1870
  3120   001B62                     u1871:
  3121   001B62  EF9A  F00D         	goto	l2689
  3122   001B66                     u1870:
  3123   001B66                     
  3124                           ;main.c: 40:     pass[4]='\0';
  3125   001B66  0E00               	movlw	0
  3126   001B68  0100               	movlb	0	; () banked
  3127   001B6A  6F83               	movwf	(_pass+4)& (0+255),b
  3128   001B6C                     
  3129                           ; BSR set to: 0
  3130   001B6C  0012               	return		;funcret
  3131   001B6E                     __end_of_init_config:
  3132                           	callstack 0
  3133                           
  3134 ;; *************** function _read_external_eeprom *****************
  3135 ;; Defined at:
  3136 ;;		line 24 in file "external_eeprom.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  address         1    wreg     unsigned char 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  address         1    1[COMRAM] unsigned char 
  3141 ;;  data            1    2[COMRAM] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      unsigned char 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3151 ;;      Params:         0       0       0       0       0       0       0
  3152 ;;      Locals:         2       0       0       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0
  3154 ;;      Totals:         2       0       0       0       0       0       0
  3155 ;;Total ram usage:        2 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 4
  3158 ;; This function calls:
  3159 ;;		_i2c_read
  3160 ;;		_i2c_rep_start
  3161 ;;		_i2c_start
  3162 ;;		_i2c_stop
  3163 ;;		_i2c_write
  3164 ;; This function is called by:
  3165 ;;		_init_config
  3166 ;;		_view_log
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text11
  3171   001F72                     __ptext11:
  3172                           	callstack 0
  3173   001F72                     _read_external_eeprom:
  3174                           	callstack 25
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;incstack = 0
  3178                           ;read_external_eeprom@address stored from wreg
  3179   001F72  6E02               	movwf	read_external_eeprom@address^0,c
  3180   001F74                     
  3181                           ;external_eeprom.c: 24: unsigned char read_external_eeprom(unsigned char address);extern
      +                          al_eeprom.c: 25: {;external_eeprom.c: 26:  unsigned char data;;external_eeprom.c: 28:  i
      +                          2c_start();
  3182   001F74  EC54  F010         	call	_i2c_start	;wreg free
  3183   001F78                     
  3184                           ;external_eeprom.c: 29:  i2c_write(0xA0);
  3185   001F78  0EA0               	movlw	160
  3186   001F7A  EC44  F010         	call	_i2c_write
  3187   001F7E                     
  3188                           ;external_eeprom.c: 30:  i2c_write(address);
  3189   001F7E  5002               	movf	read_external_eeprom@address^0,w,c
  3190   001F80  EC44  F010         	call	_i2c_write
  3191   001F84                     
  3192                           ;external_eeprom.c: 31:  i2c_rep_start();
  3193   001F84  EC58  F010         	call	_i2c_rep_start	;wreg free
  3194   001F88                     
  3195                           ;external_eeprom.c: 32:  i2c_write(0xA1);
  3196   001F88  0EA1               	movlw	161
  3197   001F8A  EC44  F010         	call	_i2c_write
  3198                           
  3199                           ;external_eeprom.c: 33:  data = i2c_read();
  3200   001F8E  EC4A  F010         	call	_i2c_read	;wreg free
  3201   001F92  6E03               	movwf	read_external_eeprom@data^0,c
  3202   001F94                     
  3203                           ;external_eeprom.c: 34:  i2c_stop();
  3204   001F94  EC50  F010         	call	_i2c_stop	;wreg free
  3205                           
  3206                           ;external_eeprom.c: 36:  return data;
  3207   001F98  5003               	movf	read_external_eeprom@data^0,w,c
  3208   001F9A  0012               	return		;funcret
  3209   001F9C                     __end_of_read_external_eeprom:
  3210                           	callstack 0
  3211                           
  3212 ;; *************** function _init_timer0 *****************
  3213 ;; Defined at:
  3214 ;;		line 4 in file "timer0.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3228 ;;      Params:         0       0       0       0       0       0       0
  3229 ;;      Locals:         0       0       0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0       0
  3231 ;;      Totals:         0       0       0       0       0       0       0
  3232 ;;Total ram usage:        0 bytes
  3233 ;; Hardware stack levels used: 1
  3234 ;; Hardware stack levels required when called: 1
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_init_config
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text12
  3243   002032                     __ptext12:
  3244                           	callstack 0
  3245   002032                     _init_timer0:
  3246                           	callstack 28
  3247   002032                     
  3248                           ;timer0.c: 12:  T08BIT = 1;
  3249   002032  8CD5               	bsf	4053,6,c	;volatile
  3250                           
  3251                           ;timer0.c: 15:  T0CS = 0;
  3252   002034  9AD5               	bcf	4053,5,c	;volatile
  3253                           
  3254                           ;timer0.c: 18:  TMR0ON = 1;
  3255   002036  8ED5               	bsf	4053,7,c	;volatile
  3256                           
  3257                           ;timer0.c: 21:  PSA = 1;
  3258   002038  86D5               	bsf	4053,3,c	;volatile
  3259   00203A                     
  3260                           ;timer0.c: 24:  TMR0 = 6;
  3261   00203A  0E00               	movlw	0
  3262   00203C  6ED7               	movwf	215,c	;volatile
  3263   00203E  0E06               	movlw	6
  3264   002040  6ED6               	movwf	214,c	;volatile
  3265   002042                     
  3266                           ;timer0.c: 27:  TMR0IF = 0;
  3267   002042  94F2               	bcf	4082,2,c	;volatile
  3268   002044  0012               	return		;funcret
  3269   002046                     __end_of_init_timer0:
  3270                           	callstack 0
  3271                           
  3272 ;; *************** function _init_matrix_keypad *****************
  3273 ;; Defined at:
  3274 ;;		line 5 in file "matrix_keypad.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3288 ;;      Params:         0       0       0       0       0       0       0
  3289 ;;      Locals:         0       0       0       0       0       0       0
  3290 ;;      Temps:          0       0       0       0       0       0       0
  3291 ;;      Totals:         0       0       0       0       0       0       0
  3292 ;;Total ram usage:        0 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 1
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_init_config
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text13
  3303   002046                     __ptext13:
  3304                           	callstack 0
  3305   002046                     _init_matrix_keypad:
  3306                           	callstack 28
  3307   002046                     
  3308                           ;matrix_keypad.c: 8:  ADCON1 = 0x0F;
  3309   002046  0E0F               	movlw	15
  3310   002048  6EC1               	movwf	193,c	;volatile
  3311                           
  3312                           ;matrix_keypad.c: 11:  TRISB = 0x1E;
  3313   00204A  0E1E               	movlw	30
  3314   00204C  6E93               	movwf	147,c	;volatile
  3315   00204E                     
  3316                           ;matrix_keypad.c: 14:  RBPU = 0;
  3317   00204E  9EF1               	bcf	4081,7,c	;volatile
  3318   002050                     
  3319                           ;matrix_keypad.c: 16:  PORTB = PORTB | 0xE0;
  3320   002050  5081               	movf	129,w,c	;volatile
  3321   002052  09E0               	iorlw	224
  3322   002054  6E81               	movwf	129,c	;volatile
  3323   002056  0012               	return		;funcret
  3324   002058                     __end_of_init_matrix_keypad:
  3325                           	callstack 0
  3326                           
  3327 ;; *************** function _init_i2c *****************
  3328 ;; Defined at:
  3329 ;;		line 4 in file "i2c.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;		None
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      void 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3343 ;;      Params:         0       0       0       0       0       0       0
  3344 ;;      Locals:         0       0       0       0       0       0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0
  3346 ;;      Totals:         0       0       0       0       0       0       0
  3347 ;;Total ram usage:        0 bytes
  3348 ;; Hardware stack levels used: 1
  3349 ;; Hardware stack levels required when called: 1
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		_init_config
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text14
  3358   00201C                     __ptext14:
  3359                           	callstack 0
  3360   00201C                     _init_i2c:
  3361                           	callstack 28
  3362   00201C                     
  3363                           ;i2c.c: 7:  TRISC3 = 1;
  3364   00201C  8694               	bsf	3988,3,c	;volatile
  3365                           
  3366                           ;i2c.c: 8:  TRISC4 = 1;
  3367   00201E  8894               	bsf	3988,4,c	;volatile
  3368   002020                     
  3369                           ;i2c.c: 10:  SSPCON1 = 0x28;
  3370   002020  0E28               	movlw	40
  3371   002022  6EC6               	movwf	198,c	;volatile
  3372                           
  3373                           ;i2c.c: 12:  SSPADD = 0x31;
  3374   002024  0E31               	movlw	49
  3375   002026  6EC8               	movwf	200,c	;volatile
  3376   002028                     
  3377                           ;i2c.c: 14:  CKE = 0;
  3378   002028  9CC7               	bcf	4039,6,c	;volatile
  3379   00202A                     
  3380                           ;i2c.c: 16:  SMP = 1;
  3381   00202A  8EC7               	bsf	4039,7,c	;volatile
  3382   00202C                     
  3383                           ;i2c.c: 18:  SSPIF = 0;
  3384   00202C  969E               	bcf	3998,3,c	;volatile
  3385   00202E                     
  3386                           ;i2c.c: 20:  BCLIF = 0;
  3387   00202E  96A1               	bcf	4001,3,c	;volatile
  3388   002030  0012               	return		;funcret
  3389   002032                     __end_of_init_i2c:
  3390                           	callstack 0
  3391                           
  3392 ;; *************** function _init_ds1307 *****************
  3393 ;; Defined at:
  3394 ;;		line 13 in file "ds1307.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;		None
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  dummy           1    3[COMRAM] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      void 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3408 ;;      Params:         0       0       0       0       0       0       0
  3409 ;;      Locals:         1       0       0       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0       0       0
  3411 ;;      Totals:         1       0       0       0       0       0       0
  3412 ;;Total ram usage:        1 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; Hardware stack levels required when called: 5
  3415 ;; This function calls:
  3416 ;;		_read_ds1307
  3417 ;;		_write_ds1307
  3418 ;; This function is called by:
  3419 ;;		_init_config
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text15
  3424   001E6A                     __ptext15:
  3425                           	callstack 0
  3426   001E6A                     _init_ds1307:
  3427                           	callstack 24
  3428   001E6A                     
  3429                           ;ds1307.c: 15:  unsigned char dummy;;ds1307.c: 18:  dummy = read_ds1307(0x00);
  3430   001E6A  0E00               	movlw	0
  3431   001E6C  ECCE  F00F         	call	_read_ds1307
  3432   001E70  6E04               	movwf	init_ds1307@dummy^0,c
  3433   001E72                     
  3434                           ;ds1307.c: 19:  write_ds1307(0x00, dummy | 0x80);
  3435   001E72  5004               	movf	init_ds1307@dummy^0,w,c
  3436   001E74  0980               	iorlw	128
  3437   001E76  6E02               	movwf	write_ds1307@data^0,c
  3438   001E78  0E00               	movlw	0
  3439   001E7A  ECF3  F00F         	call	_write_ds1307
  3440   001E7E                     
  3441                           ;ds1307.c: 22:  dummy = read_ds1307(0x02);
  3442   001E7E  0E02               	movlw	2
  3443   001E80  ECCE  F00F         	call	_read_ds1307
  3444   001E84  6E04               	movwf	init_ds1307@dummy^0,c
  3445                           
  3446                           ;ds1307.c: 23:  write_ds1307(0x02, dummy | 0x40);
  3447   001E86  5004               	movf	init_ds1307@dummy^0,w,c
  3448   001E88  0940               	iorlw	64
  3449   001E8A  6E02               	movwf	write_ds1307@data^0,c
  3450   001E8C  0E02               	movlw	2
  3451   001E8E  ECF3  F00F         	call	_write_ds1307
  3452   001E92                     
  3453                           ;ds1307.c: 38:  write_ds1307(0x07, 0x93);
  3454   001E92  0E93               	movlw	147
  3455   001E94  6E02               	movwf	write_ds1307@data^0,c
  3456   001E96  0E07               	movlw	7
  3457   001E98  ECF3  F00F         	call	_write_ds1307
  3458   001E9C                     
  3459                           ;ds1307.c: 41:  dummy = read_ds1307(0x00);
  3460   001E9C  0E00               	movlw	0
  3461   001E9E  ECCE  F00F         	call	_read_ds1307
  3462   001EA2  6E04               	movwf	init_ds1307@dummy^0,c
  3463                           
  3464                           ;ds1307.c: 42:  write_ds1307(0x00, dummy & 0x7F);
  3465   001EA4  5004               	movf	init_ds1307@dummy^0,w,c
  3466   001EA6  0B7F               	andlw	127
  3467   001EA8  6E02               	movwf	write_ds1307@data^0,c
  3468   001EAA  0E00               	movlw	0
  3469   001EAC  ECF3  F00F         	call	_write_ds1307
  3470   001EB0  0012               	return		;funcret
  3471   001EB2                     __end_of_init_ds1307:
  3472                           	callstack 0
  3473                           
  3474 ;; *************** function _write_ds1307 *****************
  3475 ;; Defined at:
  3476 ;;		line 46 in file "ds1307.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  address         1    wreg     unsigned char 
  3479 ;;  data            1    1[COMRAM] unsigned char 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  address         1    2[COMRAM] unsigned char 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      void 
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3491 ;;      Params:         1       0       0       0       0       0       0
  3492 ;;      Locals:         1       0       0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0       0       0
  3494 ;;      Totals:         2       0       0       0       0       0       0
  3495 ;;Total ram usage:        2 bytes
  3496 ;; Hardware stack levels used: 1
  3497 ;; Hardware stack levels required when called: 3
  3498 ;; This function calls:
  3499 ;;		_i2c_start
  3500 ;;		_i2c_stop
  3501 ;;		_i2c_write
  3502 ;; This function is called by:
  3503 ;;		_init_ds1307
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           	psect	text16
  3508   001FE6                     __ptext16:
  3509                           	callstack 0
  3510   001FE6                     _write_ds1307:
  3511                           	callstack 25
  3512                           
  3513                           ;incstack = 0
  3514                           ;write_ds1307@address stored from wreg
  3515   001FE6  6E03               	movwf	write_ds1307@address^0,c
  3516   001FE8                     
  3517                           ;ds1307.c: 46: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 47
      +                          : {;ds1307.c: 48:  i2c_start();
  3518   001FE8  EC54  F010         	call	_i2c_start	;wreg free
  3519   001FEC                     
  3520                           ;ds1307.c: 49:  i2c_write(0xD0);
  3521   001FEC  0ED0               	movlw	208
  3522   001FEE  EC44  F010         	call	_i2c_write
  3523   001FF2                     
  3524                           ;ds1307.c: 50:  i2c_write(address);
  3525   001FF2  5003               	movf	write_ds1307@address^0,w,c
  3526   001FF4  EC44  F010         	call	_i2c_write
  3527   001FF8                     
  3528                           ;ds1307.c: 51:  i2c_write(data);
  3529   001FF8  5002               	movf	write_ds1307@data^0,w,c
  3530   001FFA  EC44  F010         	call	_i2c_write
  3531   001FFE                     
  3532                           ;ds1307.c: 52:  i2c_stop();
  3533   001FFE  EC50  F010         	call	_i2c_stop	;wreg free
  3534   002002  0012               	return		;funcret
  3535   002004                     __end_of_write_ds1307:
  3536                           	callstack 0
  3537                           
  3538 ;; *************** function _init_clcd *****************
  3539 ;; Defined at:
  3540 ;;		line 28 in file "clcd.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3554 ;;      Params:         0       0       0       0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0
  3556 ;;      Temps:          1       0       0       0       0       0       0
  3557 ;;      Totals:         1       0       0       0       0       0       0
  3558 ;;Total ram usage:        1 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; Hardware stack levels required when called: 2
  3561 ;; This function calls:
  3562 ;;		_clcd_write
  3563 ;; This function is called by:
  3564 ;;		_init_config
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text17
  3569   0019C0                     __ptext17:
  3570                           	callstack 0
  3571   0019C0                     _init_clcd:
  3572                           	callstack 27
  3573   0019C0                     
  3574                           ;clcd.c: 31:  TRISD = 0x00;
  3575   0019C0  0E00               	movlw	0
  3576   0019C2  6E95               	movwf	149,c	;volatile
  3577   0019C4                     
  3578                           ;clcd.c: 33:  TRISC = TRISC & 0xF8;
  3579   0019C4  5094               	movf	148,w,c	;volatile
  3580   0019C6  0BF8               	andlw	248
  3581   0019C8  6E94               	movwf	148,c	;volatile
  3582   0019CA                     
  3583                           ;clcd.c: 35:  RC0 = 0;
  3584   0019CA  9082               	bcf	3970,0,c	;volatile
  3585   0019CC                     
  3586                           ;clcd.c: 39:     _delay((unsigned long)((30)*(20000000/4000.0)));
  3587   0019CC  0EC3               	movlw	195
  3588   0019CE  6E03               	movwf	??_init_clcd^0,c
  3589   0019D0  0ECD               	movlw	205
  3590   0019D2                     u2857:
  3591   0019D2  2EE8               	decfsz	wreg,f,c
  3592   0019D4  D7FE               	bra	u2857
  3593   0019D6  2E03               	decfsz	??_init_clcd^0,f,c
  3594   0019D8  D7FC               	bra	u2857
  3595   0019DA  0000               	nop	
  3596   0019DC                     
  3597                           ;clcd.c: 42:     clcd_write(0x33, 0 );
  3598   0019DC  0E00               	movlw	0
  3599   0019DE  6E01               	movwf	clcd_write@control_bit^0,c
  3600   0019E0  0E33               	movlw	51
  3601   0019E2  EC9C  F00F         	call	_clcd_write
  3602   0019E6                     
  3603                           ;clcd.c: 43:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  3604   0019E6  0E1B               	movlw	27
  3605   0019E8  6E03               	movwf	??_init_clcd^0,c
  3606   0019EA  0E9E               	movlw	158
  3607   0019EC                     u2867:
  3608   0019EC  2EE8               	decfsz	wreg,f,c
  3609   0019EE  D7FE               	bra	u2867
  3610   0019F0  2E03               	decfsz	??_init_clcd^0,f,c
  3611   0019F2  D7FC               	bra	u2867
  3612   0019F4  D000               	nop2	
  3613   0019F6                     
  3614                           ;clcd.c: 44:     clcd_write(0x33, 0 );
  3615   0019F6  0E00               	movlw	0
  3616   0019F8  6E01               	movwf	clcd_write@control_bit^0,c
  3617   0019FA  0E33               	movlw	51
  3618   0019FC  EC9C  F00F         	call	_clcd_write
  3619   001A00                     
  3620                           ;clcd.c: 45:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3621   001A00  0EA6               	movlw	166
  3622   001A02                     u2877:
  3623   001A02  2EE8               	decfsz	wreg,f,c
  3624   001A04  D7FE               	bra	u2877
  3625   001A06  D000               	nop2	
  3626   001A08                     
  3627                           ;clcd.c: 46:     clcd_write(0x33, 0 );
  3628   001A08  0E00               	movlw	0
  3629   001A0A  6E01               	movwf	clcd_write@control_bit^0,c
  3630   001A0C  0E33               	movlw	51
  3631   001A0E  EC9C  F00F         	call	_clcd_write
  3632   001A12                     
  3633                           ;clcd.c: 47:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3634   001A12  D000               	nop2		;2 cycle nop
  3635   001A14  D000               	nop2		;2 cycle nop
  3636   001A16  0000               	nop	
  3637   001A18                     
  3638                           ;clcd.c: 49:     clcd_write(0x02, 0);
  3639   001A18  0E00               	movlw	0
  3640   001A1A  6E01               	movwf	clcd_write@control_bit^0,c
  3641   001A1C  0E02               	movlw	2
  3642   001A1E  EC9C  F00F         	call	_clcd_write
  3643   001A22                     
  3644                           ;clcd.c: 50:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3645   001A22  0EA6               	movlw	166
  3646   001A24                     u2887:
  3647   001A24  2EE8               	decfsz	wreg,f,c
  3648   001A26  D7FE               	bra	u2887
  3649   001A28  D000               	nop2	
  3650   001A2A                     
  3651                           ;clcd.c: 51:     clcd_write(0x38, 0);
  3652   001A2A  0E00               	movlw	0
  3653   001A2C  6E01               	movwf	clcd_write@control_bit^0,c
  3654   001A2E  0E38               	movlw	56
  3655   001A30  EC9C  F00F         	call	_clcd_write
  3656   001A34                     
  3657                           ;clcd.c: 52:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3658   001A34  0EA6               	movlw	166
  3659   001A36                     u2897:
  3660   001A36  2EE8               	decfsz	wreg,f,c
  3661   001A38  D7FE               	bra	u2897
  3662   001A3A  D000               	nop2	
  3663   001A3C                     
  3664                           ;clcd.c: 53:     clcd_write(0x01, 0);
  3665   001A3C  0E00               	movlw	0
  3666   001A3E  6E01               	movwf	clcd_write@control_bit^0,c
  3667   001A40  0E01               	movlw	1
  3668   001A42  EC9C  F00F         	call	_clcd_write
  3669   001A46                     
  3670                           ;clcd.c: 54:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  3671   001A46  0E04               	movlw	4
  3672   001A48  6E03               	movwf	??_init_clcd^0,c
  3673   001A4A  0E3E               	movlw	62
  3674   001A4C                     u2907:
  3675   001A4C  2EE8               	decfsz	wreg,f,c
  3676   001A4E  D7FE               	bra	u2907
  3677   001A50  2E03               	decfsz	??_init_clcd^0,f,c
  3678   001A52  D7FC               	bra	u2907
  3679   001A54                     
  3680                           ;clcd.c: 55:     clcd_write(0x0C, 0);
  3681   001A54  0E00               	movlw	0
  3682   001A56  6E01               	movwf	clcd_write@control_bit^0,c
  3683   001A58  0E0C               	movlw	12
  3684   001A5A  EC9C  F00F         	call	_clcd_write
  3685   001A5E                     
  3686                           ;clcd.c: 56:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3687   001A5E  0EA6               	movlw	166
  3688   001A60                     u2917:
  3689   001A60  2EE8               	decfsz	wreg,f,c
  3690   001A62  D7FE               	bra	u2917
  3691   001A64  D000               	nop2	
  3692   001A66  0012               	return		;funcret
  3693   001A68                     __end_of_init_clcd:
  3694                           	callstack 0
  3695                           
  3696 ;; *************** function _init_adc *****************
  3697 ;; Defined at:
  3698 ;;		line 4 in file "adc.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1    wreg      void 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3712 ;;      Params:         0       0       0       0       0       0       0
  3713 ;;      Locals:         0       0       0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0
  3715 ;;      Totals:         0       0       0       0       0       0       0
  3716 ;;Total ram usage:        0 bytes
  3717 ;; Hardware stack levels used: 1
  3718 ;; Hardware stack levels required when called: 1
  3719 ;; This function calls:
  3720 ;;		Nothing
  3721 ;; This function is called by:
  3722 ;;		_init_config
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text18
  3727   001FC6                     __ptext18:
  3728                           	callstack 0
  3729   001FC6                     _init_adc:
  3730                           	callstack 28
  3731   001FC6                     
  3732                           ;adc.c: 7:  ADFM = 1;
  3733   001FC6  8EC0               	bsf	4032,7,c	;volatile
  3734                           
  3735                           ;adc.c: 13:  ACQT2 = 0;
  3736   001FC8  9AC0               	bcf	4032,5,c	;volatile
  3737                           
  3738                           ;adc.c: 14:  ACQT1 = 1;
  3739   001FCA  88C0               	bsf	4032,4,c	;volatile
  3740                           
  3741                           ;adc.c: 15:  ACQT0 = 0;
  3742   001FCC  96C0               	bcf	4032,3,c	;volatile
  3743                           
  3744                           ;adc.c: 21:  ADCS0 = 0;
  3745   001FCE  90C0               	bcf	4032,0,c	;volatile
  3746                           
  3747                           ;adc.c: 22:  ADCS1 = 1;
  3748   001FD0  82C0               	bsf	4032,1,c	;volatile
  3749                           
  3750                           ;adc.c: 23:  ADCS2 = 0;
  3751   001FD2  94C0               	bcf	4032,2,c	;volatile
  3752                           
  3753                           ;adc.c: 26:  GODONE = 0;
  3754   001FD4  92C2               	bcf	4034,1,c	;volatile
  3755                           
  3756                           ;adc.c: 31:  VCFG1 = 0;
  3757   001FD6  9AC1               	bcf	4033,5,c	;volatile
  3758                           
  3759                           ;adc.c: 33:  VCFG0 = 0;
  3760   001FD8  98C1               	bcf	4033,4,c	;volatile
  3761   001FDA                     
  3762                           ;adc.c: 36:  ADRESH = 0;
  3763   001FDA  0E00               	movlw	0
  3764   001FDC  6EC4               	movwf	196,c	;volatile
  3765                           
  3766                           ;adc.c: 37:  ADRESL = 0;
  3767   001FDE  0E00               	movlw	0
  3768   001FE0  6EC3               	movwf	195,c	;volatile
  3769   001FE2                     
  3770                           ;adc.c: 40:  ADON = 1;
  3771   001FE2  80C2               	bsf	4034,0,c	;volatile
  3772   001FE4  0012               	return		;funcret
  3773   001FE6                     __end_of_init_adc:
  3774                           	callstack 0
  3775                           
  3776 ;; *************** function _dashboard *****************
  3777 ;; Defined at:
  3778 ;;		line 51 in file "dashboard.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3792 ;;      Params:         0       0       0       0       0       0       0
  3793 ;;      Locals:         0       0       0       0       0       0       0
  3794 ;;      Temps:          1       0       0       0       0       0       0
  3795 ;;      Totals:         1       0       0       0       0       0       0
  3796 ;;Total ram usage:        1 bytes
  3797 ;; Hardware stack levels used: 1
  3798 ;; Hardware stack levels required when called: 6
  3799 ;; This function calls:
  3800 ;;		___lwdiv
  3801 ;;		___lwmod
  3802 ;;		_clcd_print
  3803 ;;		_clcd_putch
  3804 ;;		_display_time
  3805 ;;		_get_time
  3806 ;;		_store_event
  3807 ;; This function is called by:
  3808 ;;		_main
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text19
  3813   00144A                     __ptext19:
  3814                           	callstack 0
  3815   00144A                     _dashboard:
  3816                           	callstack 24
  3817   00144A                     
  3818                           ;dashboard.c: 53:     clcd_print("  TIME    EV  SP", (0x80 + (0)));
  3819   00144A  0E58               	movlw	low STR_9
  3820   00144C  6E03               	movwf	clcd_print@data^0,c
  3821   00144E  5003               	movf	clcd_print@data^0,w,c
  3822   001450  A4D8               	btfss	status,2,c
  3823   001452  0E06               	movlw	high __smallconst
  3824   001454  6E04               	movwf	(clcd_print@data+1)^0,c
  3825   001456  0E80               	movlw	128
  3826   001458  6E05               	movwf	clcd_print@addr^0,c
  3827   00145A  EC6C  F00E         	call	_clcd_print	;wreg free
  3828   00145E                     
  3829                           ;dashboard.c: 59:     clcd_print(events[i], (0xC0 + (10)));
  3830   00145E  504C               	movf	_i^0,w,c
  3831   001460  0F84               	addlw	low _events
  3832   001462  6ED9               	movwf	fsr2l,c
  3833   001464  6ADA               	clrf	fsr2h,c
  3834   001466  50DF               	movf	indf2,w,c
  3835   001468  6E11               	movwf	??_dashboard^0,c
  3836   00146A  C011  F003         	movff	??_dashboard,clcd_print@data
  3837   00146E  5003               	movf	clcd_print@data^0,w,c
  3838   001470  A4D8               	btfss	status,2,c
  3839   001472  0E06               	movlw	high __smallconst
  3840   001474  6E04               	movwf	(clcd_print@data+1)^0,c
  3841   001476  0ECA               	movlw	202
  3842   001478  6E05               	movwf	clcd_print@addr^0,c
  3843   00147A  EC6C  F00E         	call	_clcd_print	;wreg free
  3844   00147E                     
  3845                           ;dashboard.c: 62:     if (key == 2 && i < 6) {
  3846   00147E  0E02               	movlw	2
  3847   001480  1851               	xorwf	_key^0,w,c
  3848   001482  A4D8               	btfss	status,2,c
  3849   001484  EF46  F00A         	goto	u1931
  3850   001488  EF48  F00A         	goto	u1930
  3851   00148C                     u1931:
  3852   00148C  EF53  F00A         	goto	l2737
  3853   001490                     u1930:
  3854   001490  0E06               	movlw	6
  3855   001492  604C               	cpfslt	_i^0,c
  3856   001494  EF4E  F00A         	goto	u1941
  3857   001498  EF50  F00A         	goto	u1940
  3858   00149C                     u1941:
  3859   00149C  EF53  F00A         	goto	l2737
  3860   0014A0                     u1940:
  3861   0014A0                     
  3862                           ;dashboard.c: 63:             i++;
  3863   0014A0  2A4C               	incf	_i^0,f,c
  3864   0014A2                     
  3865                           ;dashboard.c: 64:             store_event();
  3866   0014A2  ECBE  F00B         	call	_store_event	;wreg free
  3867   0014A6                     l2737:
  3868                           
  3869                           ;dashboard.c: 68:     if (key == 3 && i != 7) {
  3870   0014A6  0E03               	movlw	3
  3871   0014A8  1851               	xorwf	_key^0,w,c
  3872   0014AA  A4D8               	btfss	status,2,c
  3873   0014AC  EF5A  F00A         	goto	u1951
  3874   0014B0  EF5C  F00A         	goto	u1950
  3875   0014B4                     u1951:
  3876   0014B4  EF70  F00A         	goto	l2747
  3877   0014B8                     u1950:
  3878   0014B8  0E07               	movlw	7
  3879   0014BA  184C               	xorwf	_i^0,w,c
  3880   0014BC  B4D8               	btfsc	status,2,c
  3881   0014BE  EF63  F00A         	goto	u1961
  3882   0014C2  EF65  F00A         	goto	u1960
  3883   0014C6                     u1961:
  3884   0014C6  EF70  F00A         	goto	l2747
  3885   0014CA                     u1960:
  3886   0014CA                     
  3887                           ;dashboard.c: 69:         if (i > 1) {
  3888   0014CA  0E01               	movlw	1
  3889   0014CC  644C               	cpfsgt	_i^0,c
  3890   0014CE  EF6B  F00A         	goto	u1971
  3891   0014D2  EF6D  F00A         	goto	u1970
  3892   0014D6                     u1971:
  3893   0014D6  EF70  F00A         	goto	l2747
  3894   0014DA                     u1970:
  3895   0014DA                     
  3896                           ;dashboard.c: 70:             i--;
  3897   0014DA  064C               	decf	_i^0,f,c
  3898   0014DC                     
  3899                           ;dashboard.c: 71:             store_event();
  3900   0014DC  ECBE  F00B         	call	_store_event	;wreg free
  3901   0014E0                     l2747:
  3902                           
  3903                           ;dashboard.c: 75:     if (key == 1 ) {
  3904   0014E0  0451               	decf	_key^0,w,c
  3905   0014E2  A4D8               	btfss	status,2,c
  3906   0014E4  EF76  F00A         	goto	u1981
  3907   0014E8  EF78  F00A         	goto	u1980
  3908   0014EC                     u1981:
  3909   0014EC  EF7C  F00A         	goto	l2753
  3910   0014F0                     u1980:
  3911   0014F0                     
  3912                           ;dashboard.c: 76:         i = 7;
  3913   0014F0  0E07               	movlw	7
  3914   0014F2  6E4C               	movwf	_i^0,c
  3915   0014F4                     
  3916                           ;dashboard.c: 77:         store_event();
  3917   0014F4  ECBE  F00B         	call	_store_event	;wreg free
  3918   0014F8                     l2753:
  3919                           
  3920                           ;dashboard.c: 80:     if (i == 7 && key == 2) {
  3921   0014F8  0E07               	movlw	7
  3922   0014FA  184C               	xorwf	_i^0,w,c
  3923   0014FC  A4D8               	btfss	status,2,c
  3924   0014FE  EF83  F00A         	goto	u1991
  3925   001502  EF85  F00A         	goto	u1990
  3926   001506                     u1991:
  3927   001506  EF92  F00A         	goto	l2761
  3928   00150A                     u1990:
  3929   00150A  0E02               	movlw	2
  3930   00150C  1851               	xorwf	_key^0,w,c
  3931   00150E  A4D8               	btfss	status,2,c
  3932   001510  EF8C  F00A         	goto	u2001
  3933   001514  EF8E  F00A         	goto	u2000
  3934   001518                     u2001:
  3935   001518  EF92  F00A         	goto	l2761
  3936   00151C                     u2000:
  3937   00151C                     
  3938                           ;dashboard.c: 81:         i = 2;
  3939   00151C  0E02               	movlw	2
  3940   00151E  6E4C               	movwf	_i^0,c
  3941   001520                     
  3942                           ;dashboard.c: 82:         store_event();
  3943   001520  ECBE  F00B         	call	_store_event	;wreg free
  3944   001524                     l2761:
  3945                           
  3946                           ;dashboard.c: 87:         clcd_putch(((adc_reg_val / 10) + 48), (0xC0 + (14)));
  3947   001524  0ECE               	movlw	206
  3948   001526  6E0F               	movwf	clcd_putch@addr^0,c
  3949   001528  C044  F001         	movff	_adc_reg_val,___lwdiv@dividend
  3950   00152C  C045  F002         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  3951   001530  0E00               	movlw	0
  3952   001532  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3953   001534  0E0A               	movlw	10
  3954   001536  6E03               	movwf	___lwdiv@divisor^0,c
  3955   001538  EC32  F00E         	call	___lwdiv	;wreg free
  3956   00153C  5001               	movf	?___lwdiv^0,w,c
  3957   00153E  0F30               	addlw	48
  3958   001540  EC02  F010         	call	_clcd_putch
  3959   001544                     
  3960                           ;dashboard.c: 88:         clcd_putch(((adc_reg_val % 10) + 48), (0xC0 + (15)));
  3961   001544  0ECF               	movlw	207
  3962   001546  6E0F               	movwf	clcd_putch@addr^0,c
  3963   001548  C044  F001         	movff	_adc_reg_val,___lwmod@dividend
  3964   00154C  C045  F002         	movff	_adc_reg_val+1,___lwmod@dividend+1
  3965   001550  0E00               	movlw	0
  3966   001552  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3967   001554  0E0A               	movlw	10
  3968   001556  6E03               	movwf	___lwmod@divisor^0,c
  3969   001558  ECD4  F00E         	call	___lwmod	;wreg free
  3970   00155C  5001               	movf	?___lwmod^0,w,c
  3971   00155E  0F30               	addlw	48
  3972   001560  EC02  F010         	call	_clcd_putch
  3973   001564                     
  3974                           ;dashboard.c: 92:     get_time();
  3975   001564  ECB7  F00D         	call	_get_time	;wreg free
  3976   001568                     
  3977                           ;dashboard.c: 93:     display_time();
  3978   001568  EC35  F010         	call	_display_time	;wreg free
  3979   00156C  0012               	return		;funcret
  3980   00156E                     __end_of_dashboard:
  3981                           	callstack 0
  3982                           
  3983 ;; *************** function _store_event *****************
  3984 ;; Defined at:
  3985 ;;		line 22 in file "store_event.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  k               1    8[COMRAM] unsigned char 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3999 ;;      Params:         0       0       0       0       0       0       0
  4000 ;;      Locals:         1       0       0       0       0       0       0
  4001 ;;      Temps:          1       0       0       0       0       0       0
  4002 ;;      Totals:         2       0       0       0       0       0       0
  4003 ;;Total ram usage:        2 bytes
  4004 ;; Hardware stack levels used: 1
  4005 ;; Hardware stack levels required when called: 4
  4006 ;; This function calls:
  4007 ;;		___lwdiv
  4008 ;;		___lwmod
  4009 ;;		_write_external_eeprom
  4010 ;; This function is called by:
  4011 ;;		_dashboard
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text20
  4016   00177C                     __ptext20:
  4017                           	callstack 0
  4018   00177C                     _store_event:
  4019                           	callstack 25
  4020   00177C                     
  4021                           ;store_event.c: 25:     store[0]=time[0];
  4022   00177C  C053  F06B         	movff	_time,_store
  4023                           
  4024                           ;store_event.c: 26:     store[1]=time[1];
  4025   001780  C054  F06C         	movff	_time+1,_store+1
  4026                           
  4027                           ;store_event.c: 27:     store[2]=time[3];
  4028   001784  C056  F06D         	movff	_time+3,_store+2
  4029                           
  4030                           ;store_event.c: 28:     store[3]=time[4];
  4031   001788  C057  F06E         	movff	_time+4,_store+3
  4032                           
  4033                           ;store_event.c: 29:     store[4]=time[6];
  4034   00178C  C059  F06F         	movff	_time+6,_store+4
  4035                           
  4036                           ;store_event.c: 30:     store[5]=time[7];
  4037   001790  C05A  F070         	movff	_time+7,_store+5
  4038   001794                     
  4039                           ;store_event.c: 33:     store[6]=events[i][0];
  4040   001794  504C               	movf	_i^0,w,c
  4041   001796  0F84               	addlw	low _events
  4042   001798  6ED9               	movwf	fsr2l,c
  4043   00179A  6ADA               	clrf	fsr2h,c
  4044   00179C  CFDF FFF6          	movff	indf2,tblptrl
  4045   0017A0                     	if	1	;There is more than 1 active tblptr byte
  4046   0017A0  0E06               	movlw	high __smallconst
  4047   0017A2  6EF7               	movwf	tblptrh,c
  4048   0017A4                     	endif
  4049   0017A4                     	if	0	;tblptru may be non-zero
  4050   0017A4                     	endif
  4051   0017A4                     	if	0	;tblptru may be non-zero
  4052   0017A4                     	endif
  4053   0017A4  0008               	tblrd		*
  4054   0017A6  CFF5 F071          	movff	tablat,_store+6
  4055                           
  4056                           ;store_event.c: 34:     store[7]=events[i][1];
  4057   0017AA  504C               	movf	_i^0,w,c
  4058   0017AC  0F84               	addlw	low _events
  4059   0017AE  6ED9               	movwf	fsr2l,c
  4060   0017B0  6ADA               	clrf	fsr2h,c
  4061   0017B2  50DF               	movf	indf2,w,c
  4062   0017B4  6E08               	movwf	??_store_event^0,c
  4063   0017B6  0E01               	movlw	1
  4064   0017B8  2608               	addwf	??_store_event^0,f,c
  4065   0017BA  C008  FFF6         	movff	??_store_event,tblptrl
  4066   0017BE                     	if	1	;There is more than 1 active tblptr byte
  4067   0017BE  0E06               	movlw	high __smallconst
  4068   0017C0  6EF7               	movwf	tblptrh,c
  4069   0017C2                     	endif
  4070   0017C2                     	if	0	;tblptru may be non-zero
  4071   0017C2                     	endif
  4072   0017C2                     	if	0	;tblptru may be non-zero
  4073   0017C2                     	endif
  4074   0017C2  0008               	tblrd		*
  4075   0017C4  CFF5 F072          	movff	tablat,_store+7
  4076   0017C8                     
  4077                           ;store_event.c: 38:         store[8]=(adc_reg_val / 10) + 48;
  4078   0017C8  C044  F001         	movff	_adc_reg_val,___lwdiv@dividend
  4079   0017CC  C045  F002         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  4080   0017D0  0E00               	movlw	0
  4081   0017D2  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  4082   0017D4  0E0A               	movlw	10
  4083   0017D6  6E03               	movwf	___lwdiv@divisor^0,c
  4084   0017D8  EC32  F00E         	call	___lwdiv	;wreg free
  4085   0017DC  5001               	movf	?___lwdiv^0,w,c
  4086   0017DE  0F30               	addlw	48
  4087   0017E0  0100               	movlb	0	; () banked
  4088   0017E2  6F73               	movwf	(_store+8)& (0+255),b
  4089   0017E4                     
  4090                           ; BSR set to: 0
  4091                           ;store_event.c: 39:         store[9]=(adc_reg_val % 10) + 48;
  4092   0017E4  C044  F001         	movff	_adc_reg_val,___lwmod@dividend
  4093   0017E8  C045  F002         	movff	_adc_reg_val+1,___lwmod@dividend+1
  4094   0017EC  0E00               	movlw	0
  4095   0017EE  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4096   0017F0  0E0A               	movlw	10
  4097   0017F2  6E03               	movwf	___lwmod@divisor^0,c
  4098   0017F4  ECD4  F00E         	call	___lwmod	;wreg free
  4099   0017F8  5001               	movf	?___lwmod^0,w,c
  4100   0017FA  0F30               	addlw	48
  4101   0017FC  0100               	movlb	0	; () banked
  4102   0017FE  6F74               	movwf	(_store+9)& (0+255),b
  4103   001800                     
  4104                           ; BSR set to: 0
  4105                           ;store_event.c: 41:     for(char k=0; k<10; k++)
  4106   001800  0E00               	movlw	0
  4107   001802  6E09               	movwf	store_event@k^0,c
  4108   001804                     l2557:
  4109                           
  4110                           ;store_event.c: 42:     {;store_event.c: 43:         write_external_eeprom( (lap*10+k),s
      +                          tore[k]);
  4111   001804  5009               	movf	store_event@k^0,w,c
  4112   001806  0F6B               	addlw	low _store
  4113   001808  6ED9               	movwf	fsr2l,c
  4114   00180A  6ADA               	clrf	fsr2h,c
  4115   00180C  50DF               	movf	indf2,w,c
  4116   00180E  6E02               	movwf	write_external_eeprom@data^0,c
  4117   001810  5049               	movf	_lap^0,w,c
  4118   001812  0D0A               	mullw	10
  4119   001814  50F3               	movf	243,w,c
  4120   001816  2409               	addwf	store_event@k^0,w,c
  4121   001818  EC7C  F00F         	call	_write_external_eeprom
  4122   00181C                     
  4123                           ;store_event.c: 44:     }
  4124   00181C  2A09               	incf	store_event@k^0,f,c
  4125   00181E  0E09               	movlw	9
  4126   001820  6409               	cpfsgt	store_event@k^0,c
  4127   001822  EF15  F00C         	goto	u1701
  4128   001826  EF17  F00C         	goto	u1700
  4129   00182A                     u1701:
  4130   00182A  EF02  F00C         	goto	l2557
  4131   00182E                     u1700:
  4132   00182E                     
  4133                           ;store_event.c: 46:     lap++;
  4134   00182E  2A49               	incf	_lap^0,f,c
  4135   001830                     
  4136                           ;store_event.c: 47:     if(lap==10)
  4137   001830  0E0A               	movlw	10
  4138   001832  1849               	xorwf	_lap^0,w,c
  4139   001834  A4D8               	btfss	status,2,c
  4140   001836  EF1F  F00C         	goto	u1711
  4141   00183A  EF21  F00C         	goto	u1710
  4142   00183E                     u1711:
  4143   00183E  EF25  F00C         	goto	l483
  4144   001842                     u1710:
  4145   001842                     
  4146                           ;store_event.c: 48:     {;store_event.c: 49:         lap=0;
  4147   001842  0E00               	movlw	0
  4148   001844  6E49               	movwf	_lap^0,c
  4149                           
  4150                           ;store_event.c: 50:         overflow=1;
  4151   001846  0E01               	movlw	1
  4152   001848  6E48               	movwf	_overflow^0,c
  4153   00184A                     l483:
  4154   00184A  0012               	return		;funcret
  4155   00184C                     __end_of_store_event:
  4156                           	callstack 0
  4157                           
  4158 ;; *************** function _write_external_eeprom *****************
  4159 ;; Defined at:
  4160 ;;		line 14 in file "external_eeprom.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  address         1    wreg     unsigned char 
  4163 ;;  data            1    1[COMRAM] unsigned char 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  address         1    4[COMRAM] unsigned char 
  4166 ;;  i               2    2[COMRAM] int 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, status,2, status,0, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4176 ;;      Params:         1       0       0       0       0       0       0
  4177 ;;      Locals:         3       0       0       0       0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0
  4179 ;;      Totals:         4       0       0       0       0       0       0
  4180 ;;Total ram usage:        4 bytes
  4181 ;; Hardware stack levels used: 1
  4182 ;; Hardware stack levels required when called: 3
  4183 ;; This function calls:
  4184 ;;		_i2c_start
  4185 ;;		_i2c_stop
  4186 ;;		_i2c_write
  4187 ;; This function is called by:
  4188 ;;		_init_config
  4189 ;;		_store_event
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text21
  4194   001EF8                     __ptext21:
  4195                           	callstack 0
  4196   001EF8                     _write_external_eeprom:
  4197                           	callstack 26
  4198                           
  4199                           ;incstack = 0
  4200                           ;write_external_eeprom@address stored from wreg
  4201   001EF8  6E05               	movwf	write_external_eeprom@address^0,c
  4202   001EFA                     
  4203                           ;external_eeprom.c: 14: void write_external_eeprom(unsigned char address, unsigned char 
      +                          data);external_eeprom.c: 15: {;external_eeprom.c: 16:  i2c_start();
  4204   001EFA  EC54  F010         	call	_i2c_start	;wreg free
  4205   001EFE                     
  4206                           ;external_eeprom.c: 17:  i2c_write(0xA0);
  4207   001EFE  0EA0               	movlw	160
  4208   001F00  EC44  F010         	call	_i2c_write
  4209   001F04                     
  4210                           ;external_eeprom.c: 18:  i2c_write(address);
  4211   001F04  5005               	movf	write_external_eeprom@address^0,w,c
  4212   001F06  EC44  F010         	call	_i2c_write
  4213   001F0A                     
  4214                           ;external_eeprom.c: 19:  i2c_write(data);
  4215   001F0A  5002               	movf	write_external_eeprom@data^0,w,c
  4216   001F0C  EC44  F010         	call	_i2c_write
  4217   001F10                     
  4218                           ;external_eeprom.c: 20:  i2c_stop();
  4219   001F10  EC50  F010         	call	_i2c_stop	;wreg free
  4220   001F14                     
  4221                           ;external_eeprom.c: 21:     for(int i=3000; i--;);
  4222   001F14  0E0B               	movlw	11
  4223   001F16  6E04               	movwf	(write_external_eeprom@i+1)^0,c
  4224   001F18  0EB8               	movlw	184
  4225   001F1A  6E03               	movwf	write_external_eeprom@i^0,c
  4226   001F1C                     l2295:
  4227   001F1C  0603               	decf	write_external_eeprom@i^0,f,c
  4228   001F1E  A0D8               	btfss	status,0,c
  4229   001F20  0604               	decf	(write_external_eeprom@i+1)^0,f,c
  4230   001F22  2803               	incf	write_external_eeprom@i^0,w,c
  4231   001F24  E106               	bnz	u1501
  4232   001F26  2804               	incf	(write_external_eeprom@i+1)^0,w,c
  4233   001F28  A4D8               	btfss	status,2,c
  4234   001F2A  EF99  F00F         	goto	u1501
  4235   001F2E  EF9B  F00F         	goto	u1500
  4236   001F32                     u1501:
  4237   001F32  EF8E  F00F         	goto	l2295
  4238   001F36                     u1500:
  4239   001F36  0012               	return		;funcret
  4240   001F38                     __end_of_write_external_eeprom:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function ___lwmod *****************
  4244 ;; Defined at:
  4245 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  dividend        2    0[COMRAM] unsigned int 
  4248 ;;  divisor         2    2[COMRAM] unsigned int 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  counter         1    4[COMRAM] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  2    0[COMRAM] unsigned int 
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4260 ;;      Params:         4       0       0       0       0       0       0
  4261 ;;      Locals:         1       0       0       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0
  4263 ;;      Totals:         5       0       0       0       0       0       0
  4264 ;;Total ram usage:        5 bytes
  4265 ;; Hardware stack levels used: 1
  4266 ;; Hardware stack levels required when called: 1
  4267 ;; This function calls:
  4268 ;;		Nothing
  4269 ;; This function is called by:
  4270 ;;		_dashboard
  4271 ;;		_store_event
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text22
  4276   001DA8                     __ptext22:
  4277                           	callstack 0
  4278   001DA8                     ___lwmod:
  4279                           	callstack 27
  4280   001DA8  5003               	movf	___lwmod@divisor^0,w,c
  4281   001DAA  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  4282   001DAC  B4D8               	btfsc	status,2,c
  4283   001DAE  EFDB  F00E         	goto	u1541
  4284   001DB2  EFDD  F00E         	goto	u1540
  4285   001DB6                     u1541:
  4286   001DB6  EF01  F00F         	goto	l1015
  4287   001DBA                     u1540:
  4288   001DBA  0E01               	movlw	1
  4289   001DBC  6E05               	movwf	___lwmod@counter^0,c
  4290   001DBE  EFE5  F00E         	goto	l2349
  4291   001DC2                     l2347:
  4292   001DC2  90D8               	bcf	status,0,c
  4293   001DC4  3603               	rlcf	___lwmod@divisor^0,f,c
  4294   001DC6  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  4295   001DC8  2A05               	incf	___lwmod@counter^0,f,c
  4296   001DCA                     l2349:
  4297   001DCA  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  4298   001DCC  EFEA  F00E         	goto	u1551
  4299   001DD0  EFEC  F00E         	goto	u1550
  4300   001DD4                     u1551:
  4301   001DD4  EFE1  F00E         	goto	l2347
  4302   001DD8                     u1550:
  4303   001DD8                     l2351:
  4304   001DD8  5003               	movf	___lwmod@divisor^0,w,c
  4305   001DDA  5C01               	subwf	___lwmod@dividend^0,w,c
  4306   001DDC  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4307   001DDE  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  4308   001DE0  A0D8               	btfss	status,0,c
  4309   001DE2  EFF5  F00E         	goto	u1561
  4310   001DE6  EFF7  F00E         	goto	u1560
  4311   001DEA                     u1561:
  4312   001DEA  EFFB  F00E         	goto	l2355
  4313   001DEE                     u1560:
  4314   001DEE  5003               	movf	___lwmod@divisor^0,w,c
  4315   001DF0  5E01               	subwf	___lwmod@dividend^0,f,c
  4316   001DF2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4317   001DF4  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  4318   001DF6                     l2355:
  4319   001DF6  90D8               	bcf	status,0,c
  4320   001DF8  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  4321   001DFA  3203               	rrcf	___lwmod@divisor^0,f,c
  4322   001DFC  2E05               	decfsz	___lwmod@counter^0,f,c
  4323   001DFE  EFEC  F00E         	goto	l2351
  4324   001E02                     l1015:
  4325   001E02  C001  F001         	movff	___lwmod@dividend,?___lwmod
  4326   001E06  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  4327   001E0A  0012               	return		;funcret
  4328   001E0C                     __end_of___lwmod:
  4329                           	callstack 0
  4330                           
  4331 ;; *************** function ___lwdiv *****************
  4332 ;; Defined at:
  4333 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  dividend        2    0[COMRAM] unsigned int 
  4336 ;;  divisor         2    2[COMRAM] unsigned int 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  quotient        2    4[COMRAM] unsigned int 
  4339 ;;  counter         1    6[COMRAM] unsigned char 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  2    0[COMRAM] unsigned int 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4349 ;;      Params:         4       0       0       0       0       0       0
  4350 ;;      Locals:         3       0       0       0       0       0       0
  4351 ;;      Temps:          0       0       0       0       0       0       0
  4352 ;;      Totals:         7       0       0       0       0       0       0
  4353 ;;Total ram usage:        7 bytes
  4354 ;; Hardware stack levels used: 1
  4355 ;; Hardware stack levels required when called: 1
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_dashboard
  4360 ;;		_store_event
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           	psect	text23
  4365   001C64                     __ptext23:
  4366                           	callstack 0
  4367   001C64                     ___lwdiv:
  4368                           	callstack 27
  4369   001C64  0E00               	movlw	0
  4370   001C66  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  4371   001C68  0E00               	movlw	0
  4372   001C6A  6E05               	movwf	___lwdiv@quotient^0,c
  4373   001C6C  5003               	movf	___lwdiv@divisor^0,w,c
  4374   001C6E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4375   001C70  B4D8               	btfsc	status,2,c
  4376   001C72  EF3D  F00E         	goto	u1511
  4377   001C76  EF3F  F00E         	goto	u1510
  4378   001C7A                     u1511:
  4379   001C7A  EF67  F00E         	goto	l1005
  4380   001C7E                     u1510:
  4381   001C7E  0E01               	movlw	1
  4382   001C80  6E07               	movwf	___lwdiv@counter^0,c
  4383   001C82  EF47  F00E         	goto	l2329
  4384   001C86                     l2327:
  4385   001C86  90D8               	bcf	status,0,c
  4386   001C88  3603               	rlcf	___lwdiv@divisor^0,f,c
  4387   001C8A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4388   001C8C  2A07               	incf	___lwdiv@counter^0,f,c
  4389   001C8E                     l2329:
  4390   001C8E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  4391   001C90  EF4C  F00E         	goto	u1521
  4392   001C94  EF4E  F00E         	goto	u1520
  4393   001C98                     u1521:
  4394   001C98  EF43  F00E         	goto	l2327
  4395   001C9C                     u1520:
  4396   001C9C                     l2331:
  4397   001C9C  90D8               	bcf	status,0,c
  4398   001C9E  3605               	rlcf	___lwdiv@quotient^0,f,c
  4399   001CA0  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4400   001CA2  5003               	movf	___lwdiv@divisor^0,w,c
  4401   001CA4  5C01               	subwf	___lwdiv@dividend^0,w,c
  4402   001CA6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4403   001CA8  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4404   001CAA  A0D8               	btfss	status,0,c
  4405   001CAC  EF5A  F00E         	goto	u1531
  4406   001CB0  EF5C  F00E         	goto	u1530
  4407   001CB4                     u1531:
  4408   001CB4  EF61  F00E         	goto	l2339
  4409   001CB8                     u1530:
  4410   001CB8  5003               	movf	___lwdiv@divisor^0,w,c
  4411   001CBA  5E01               	subwf	___lwdiv@dividend^0,f,c
  4412   001CBC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4413   001CBE  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4414   001CC0  8005               	bsf	___lwdiv@quotient^0,0,c
  4415   001CC2                     l2339:
  4416   001CC2  90D8               	bcf	status,0,c
  4417   001CC4  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4418   001CC6  3203               	rrcf	___lwdiv@divisor^0,f,c
  4419   001CC8  2E07               	decfsz	___lwdiv@counter^0,f,c
  4420   001CCA  EF4E  F00E         	goto	l2331
  4421   001CCE                     l1005:
  4422   001CCE  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4423   001CD2  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4424   001CD6  0012               	return		;funcret
  4425   001CD8                     __end_of___lwdiv:
  4426                           	callstack 0
  4427                           
  4428 ;; *************** function _get_time *****************
  4429 ;; Defined at:
  4430 ;;		line 30 in file "dashboard.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;		None
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;		None
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      void 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0, cstack
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4444 ;;      Params:         0       0       0       0       0       0       0
  4445 ;;      Locals:         0       0       0       0       0       0       0
  4446 ;;      Temps:          0       0       0       0       0       0       0
  4447 ;;      Totals:         0       0       0       0       0       0       0
  4448 ;;Total ram usage:        0 bytes
  4449 ;; Hardware stack levels used: 1
  4450 ;; Hardware stack levels required when called: 5
  4451 ;; This function calls:
  4452 ;;		_read_ds1307
  4453 ;; This function is called by:
  4454 ;;		_dashboard
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text24
  4459   001B6E                     __ptext24:
  4460                           	callstack 0
  4461   001B6E                     _get_time:
  4462                           	callstack 24
  4463   001B6E                     
  4464                           ;dashboard.c: 31:     clock_reg[0] = read_ds1307(0x02);
  4465   001B6E  0E02               	movlw	2
  4466   001B70  ECCE  F00F         	call	_read_ds1307
  4467   001B74  6E39               	movwf	_clock_reg^0,c
  4468                           
  4469                           ;dashboard.c: 32:     clock_reg[1] = read_ds1307(0x01);
  4470   001B76  0E01               	movlw	1
  4471   001B78  ECCE  F00F         	call	_read_ds1307
  4472   001B7C  6E3A               	movwf	(_clock_reg+1)^0,c
  4473                           
  4474                           ;dashboard.c: 33:     clock_reg[2] = read_ds1307(0x00);
  4475   001B7E  0E00               	movlw	0
  4476   001B80  ECCE  F00F         	call	_read_ds1307
  4477   001B84  6E3B               	movwf	(_clock_reg+2)^0,c
  4478   001B86                     
  4479                           ;dashboard.c: 35:     if (clock_reg[0] & 0x40) {
  4480   001B86  AC39               	btfss	_clock_reg^0,6,c
  4481   001B88  EFC8  F00D         	goto	u1691
  4482   001B8C  EFCA  F00D         	goto	u1690
  4483   001B90                     u1691:
  4484   001B90  EFD5  F00D         	goto	l2531
  4485   001B94                     u1690:
  4486   001B94                     
  4487                           ;dashboard.c: 36:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  4488   001B94  3839               	swapf	_clock_reg^0,w,c
  4489   001B96  0B0F               	andlw	15
  4490   001B98  0B01               	andlw	1
  4491   001B9A  0F30               	addlw	48
  4492   001B9C  6E53               	movwf	_time^0,c
  4493                           
  4494                           ;dashboard.c: 37:         time[1] = '0' + (clock_reg[0] & 0x0F);
  4495   001B9E  5039               	movf	_clock_reg^0,w,c
  4496   001BA0  0B0F               	andlw	15
  4497   001BA2  0F30               	addlw	48
  4498   001BA4  6E54               	movwf	(_time+1)^0,c
  4499                           
  4500                           ;dashboard.c: 38:     } else {
  4501   001BA6  EFDE  F00D         	goto	l2533
  4502   001BAA                     l2531:
  4503                           
  4504                           ;dashboard.c: 39:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  4505   001BAA  3839               	swapf	_clock_reg^0,w,c
  4506   001BAC  0B0F               	andlw	15
  4507   001BAE  0B03               	andlw	3
  4508   001BB0  0F30               	addlw	48
  4509   001BB2  6E53               	movwf	_time^0,c
  4510                           
  4511                           ;dashboard.c: 40:         time[1] = '0' + (clock_reg[0] & 0x0F);
  4512   001BB4  5039               	movf	_clock_reg^0,w,c
  4513   001BB6  0B0F               	andlw	15
  4514   001BB8  0F30               	addlw	48
  4515   001BBA  6E54               	movwf	(_time+1)^0,c
  4516   001BBC                     l2533:
  4517                           
  4518                           ;dashboard.c: 42:     time[2] = ':';
  4519   001BBC  0E3A               	movlw	58
  4520   001BBE  6E55               	movwf	(_time+2)^0,c
  4521   001BC0                     
  4522                           ;dashboard.c: 43:     time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  4523   001BC0  383A               	swapf	(_clock_reg+1)^0,w,c
  4524   001BC2  0B0F               	andlw	15
  4525   001BC4  0B0F               	andlw	15
  4526   001BC6  0F30               	addlw	48
  4527   001BC8  6E56               	movwf	(_time+3)^0,c
  4528   001BCA                     
  4529                           ;dashboard.c: 44:     time[4] = '0' + (clock_reg[1] & 0x0F);
  4530   001BCA  503A               	movf	(_clock_reg+1)^0,w,c
  4531   001BCC  0B0F               	andlw	15
  4532   001BCE  0F30               	addlw	48
  4533   001BD0  6E57               	movwf	(_time+4)^0,c
  4534   001BD2                     
  4535                           ;dashboard.c: 45:     time[5] = ':';
  4536   001BD2  0E3A               	movlw	58
  4537   001BD4  6E58               	movwf	(_time+5)^0,c
  4538                           
  4539                           ;dashboard.c: 46:     time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  4540   001BD6  383B               	swapf	(_clock_reg+2)^0,w,c
  4541   001BD8  0B0F               	andlw	15
  4542   001BDA  0B0F               	andlw	15
  4543   001BDC  0F30               	addlw	48
  4544   001BDE  6E59               	movwf	(_time+6)^0,c
  4545                           
  4546                           ;dashboard.c: 47:     time[7] = '0' + (clock_reg[2] & 0x0F);
  4547   001BE0  503B               	movf	(_clock_reg+2)^0,w,c
  4548   001BE2  0B0F               	andlw	15
  4549   001BE4  0F30               	addlw	48
  4550   001BE6  6E5A               	movwf	(_time+7)^0,c
  4551   001BE8                     
  4552                           ;dashboard.c: 48:     time[8] = '\0';
  4553   001BE8  0E00               	movlw	0
  4554   001BEA  6E5B               	movwf	(_time+8)^0,c
  4555   001BEC  0012               	return		;funcret
  4556   001BEE                     __end_of_get_time:
  4557                           	callstack 0
  4558                           
  4559 ;; *************** function _read_ds1307 *****************
  4560 ;; Defined at:
  4561 ;;		line 55 in file "ds1307.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  address         1    wreg     unsigned char 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  address         1    1[COMRAM] unsigned char 
  4566 ;;  data            1    2[COMRAM] unsigned char 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  1    wreg      unsigned char 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, cstack
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4576 ;;      Params:         0       0       0       0       0       0       0
  4577 ;;      Locals:         2       0       0       0       0       0       0
  4578 ;;      Temps:          0       0       0       0       0       0       0
  4579 ;;      Totals:         2       0       0       0       0       0       0
  4580 ;;Total ram usage:        2 bytes
  4581 ;; Hardware stack levels used: 1
  4582 ;; Hardware stack levels required when called: 4
  4583 ;; This function calls:
  4584 ;;		_i2c_read
  4585 ;;		_i2c_rep_start
  4586 ;;		_i2c_start
  4587 ;;		_i2c_stop
  4588 ;;		_i2c_write
  4589 ;; This function is called by:
  4590 ;;		_get_time
  4591 ;;		_init_ds1307
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text25
  4596   001F9C                     __ptext25:
  4597                           	callstack 0
  4598   001F9C                     _read_ds1307:
  4599                           	callstack 24
  4600                           
  4601                           ;incstack = 0
  4602                           ;read_ds1307@address stored from wreg
  4603   001F9C  6E02               	movwf	read_ds1307@address^0,c
  4604   001F9E                     
  4605                           ;ds1307.c: 55: unsigned char read_ds1307(unsigned char address);ds1307.c: 56: {;ds1307.c
      +                          : 57:  unsigned char data;;ds1307.c: 59:  i2c_start();
  4606   001F9E  EC54  F010         	call	_i2c_start	;wreg free
  4607   001FA2                     
  4608                           ;ds1307.c: 60:  i2c_write(0xD0);
  4609   001FA2  0ED0               	movlw	208
  4610   001FA4  EC44  F010         	call	_i2c_write
  4611   001FA8                     
  4612                           ;ds1307.c: 61:  i2c_write(address);
  4613   001FA8  5002               	movf	read_ds1307@address^0,w,c
  4614   001FAA  EC44  F010         	call	_i2c_write
  4615   001FAE                     
  4616                           ;ds1307.c: 62:  i2c_rep_start();
  4617   001FAE  EC58  F010         	call	_i2c_rep_start	;wreg free
  4618   001FB2                     
  4619                           ;ds1307.c: 63:  i2c_write(0xD1);
  4620   001FB2  0ED1               	movlw	209
  4621   001FB4  EC44  F010         	call	_i2c_write
  4622                           
  4623                           ;ds1307.c: 64:  data = i2c_read();
  4624   001FB8  EC4A  F010         	call	_i2c_read	;wreg free
  4625   001FBC  6E03               	movwf	read_ds1307@data^0,c
  4626   001FBE                     
  4627                           ;ds1307.c: 65:  i2c_stop();
  4628   001FBE  EC50  F010         	call	_i2c_stop	;wreg free
  4629                           
  4630                           ;ds1307.c: 67:  return data;
  4631   001FC2  5003               	movf	read_ds1307@data^0,w,c
  4632   001FC4  0012               	return		;funcret
  4633   001FC6                     __end_of_read_ds1307:
  4634                           	callstack 0
  4635                           
  4636 ;; *************** function _i2c_write *****************
  4637 ;; Defined at:
  4638 ;;		line 55 in file "i2c.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  data            1    wreg     unsigned char 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  data            1    0[COMRAM] unsigned char 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      void 
  4645 ;; Registers used:
  4646 ;;		wreg, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4652 ;;      Params:         0       0       0       0       0       0       0
  4653 ;;      Locals:         1       0       0       0       0       0       0
  4654 ;;      Temps:          0       0       0       0       0       0       0
  4655 ;;      Totals:         1       0       0       0       0       0       0
  4656 ;;Total ram usage:        1 bytes
  4657 ;; Hardware stack levels used: 1
  4658 ;; Hardware stack levels required when called: 2
  4659 ;; This function calls:
  4660 ;;		_i2c_idle
  4661 ;; This function is called by:
  4662 ;;		_write_ds1307
  4663 ;;		_read_ds1307
  4664 ;;		_write_external_eeprom
  4665 ;;		_read_external_eeprom
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text26
  4670   002088                     __ptext26:
  4671                           	callstack 0
  4672   002088                     _i2c_write:
  4673                           	callstack 26
  4674                           
  4675                           ;incstack = 0
  4676                           ;i2c_write@data stored from wreg
  4677   002088  6E01               	movwf	i2c_write@data^0,c
  4678   00208A                     
  4679                           ;i2c.c: 55: void i2c_write(unsigned char data);i2c.c: 56: {;i2c.c: 57:  SSPBUF = data;
  4680   00208A  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  4681   00208E                     
  4682                           ;i2c.c: 58:  i2c_idle();
  4683   00208E  EC2C  F010         	call	_i2c_idle	;wreg free
  4684   002092  0012               	return		;funcret
  4685   002094                     __end_of_i2c_write:
  4686                           	callstack 0
  4687                           
  4688 ;; *************** function _i2c_stop *****************
  4689 ;; Defined at:
  4690 ;;		line 43 in file "i2c.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;		None
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;		None
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      void 
  4697 ;; Registers used:
  4698 ;;		cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4704 ;;      Params:         0       0       0       0       0       0       0
  4705 ;;      Locals:         0       0       0       0       0       0       0
  4706 ;;      Temps:          0       0       0       0       0       0       0
  4707 ;;      Totals:         0       0       0       0       0       0       0
  4708 ;;Total ram usage:        0 bytes
  4709 ;; Hardware stack levels used: 1
  4710 ;; Hardware stack levels required when called: 2
  4711 ;; This function calls:
  4712 ;;		_i2c_idle
  4713 ;; This function is called by:
  4714 ;;		_write_ds1307
  4715 ;;		_read_ds1307
  4716 ;;		_write_external_eeprom
  4717 ;;		_read_external_eeprom
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text27
  4722   0020A0                     __ptext27:
  4723                           	callstack 0
  4724   0020A0                     _i2c_stop:
  4725                           	callstack 26
  4726   0020A0                     
  4727                           ;i2c.c: 45:  PEN = 1;
  4728   0020A0  84C5               	bsf	4037,2,c	;volatile
  4729   0020A2                     
  4730                           ;i2c.c: 46:  i2c_idle();
  4731   0020A2  EC2C  F010         	call	_i2c_idle	;wreg free
  4732   0020A6  0012               	return		;funcret
  4733   0020A8                     __end_of_i2c_stop:
  4734                           	callstack 0
  4735                           
  4736 ;; *************** function _i2c_start *****************
  4737 ;; Defined at:
  4738 ;;		line 37 in file "i2c.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4752 ;;      Params:         0       0       0       0       0       0       0
  4753 ;;      Locals:         0       0       0       0       0       0       0
  4754 ;;      Temps:          0       0       0       0       0       0       0
  4755 ;;      Totals:         0       0       0       0       0       0       0
  4756 ;;Total ram usage:        0 bytes
  4757 ;; Hardware stack levels used: 1
  4758 ;; Hardware stack levels required when called: 2
  4759 ;; This function calls:
  4760 ;;		_i2c_idle
  4761 ;; This function is called by:
  4762 ;;		_write_ds1307
  4763 ;;		_read_ds1307
  4764 ;;		_write_external_eeprom
  4765 ;;		_read_external_eeprom
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text28
  4770   0020A8                     __ptext28:
  4771                           	callstack 0
  4772   0020A8                     _i2c_start:
  4773                           	callstack 26
  4774   0020A8                     
  4775                           ;i2c.c: 39:  SEN = 1;
  4776   0020A8  80C5               	bsf	4037,0,c	;volatile
  4777   0020AA                     
  4778                           ;i2c.c: 40:  i2c_idle();
  4779   0020AA  EC2C  F010         	call	_i2c_idle	;wreg free
  4780   0020AE  0012               	return		;funcret
  4781   0020B0                     __end_of_i2c_start:
  4782                           	callstack 0
  4783                           
  4784 ;; *************** function _i2c_rep_start *****************
  4785 ;; Defined at:
  4786 ;;		line 49 in file "i2c.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;		None
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;		None
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  1    wreg      void 
  4793 ;; Registers used:
  4794 ;;		cstack
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4800 ;;      Params:         0       0       0       0       0       0       0
  4801 ;;      Locals:         0       0       0       0       0       0       0
  4802 ;;      Temps:          0       0       0       0       0       0       0
  4803 ;;      Totals:         0       0       0       0       0       0       0
  4804 ;;Total ram usage:        0 bytes
  4805 ;; Hardware stack levels used: 1
  4806 ;; Hardware stack levels required when called: 2
  4807 ;; This function calls:
  4808 ;;		_i2c_idle
  4809 ;; This function is called by:
  4810 ;;		_read_ds1307
  4811 ;;		_read_external_eeprom
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text29
  4816   0020B0                     __ptext29:
  4817                           	callstack 0
  4818   0020B0                     _i2c_rep_start:
  4819                           	callstack 26
  4820   0020B0                     
  4821                           ;i2c.c: 51:  RSEN = 1;
  4822   0020B0  82C5               	bsf	4037,1,c	;volatile
  4823   0020B2                     
  4824                           ;i2c.c: 52:  i2c_idle();
  4825   0020B2  EC2C  F010         	call	_i2c_idle	;wreg free
  4826   0020B6  0012               	return		;funcret
  4827   0020B8                     __end_of_i2c_rep_start:
  4828                           	callstack 0
  4829                           
  4830 ;; *************** function _i2c_read *****************
  4831 ;; Defined at:
  4832 ;;		line 73 in file "i2c.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      unsigned char 
  4839 ;; Registers used:
  4840 ;;		wreg, status,2, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4846 ;;      Params:         0       0       0       0       0       0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0
  4849 ;;      Totals:         0       0       0       0       0       0       0
  4850 ;;Total ram usage:        0 bytes
  4851 ;; Hardware stack levels used: 1
  4852 ;; Hardware stack levels required when called: 3
  4853 ;; This function calls:
  4854 ;;		_i2c_no_ack
  4855 ;;		_i2c_rx_mode
  4856 ;; This function is called by:
  4857 ;;		_read_ds1307
  4858 ;;		_read_external_eeprom
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           	psect	text30
  4863   002094                     __ptext30:
  4864                           	callstack 0
  4865   002094                     _i2c_read:
  4866                           	callstack 25
  4867   002094                     
  4868                           ;i2c.c: 75:  i2c_rx_mode();
  4869   002094  EC5C  F010         	call	_i2c_rx_mode	;wreg free
  4870                           
  4871                           ;i2c.c: 76:  i2c_no_ack();
  4872   002098  EC60  F010         	call	_i2c_no_ack	;wreg free
  4873   00209C                     
  4874                           ;i2c.c: 78:  return SSPBUF;
  4875   00209C  50C9               	movf	201,w,c	;volatile
  4876   00209E  0012               	return		;funcret
  4877   0020A0                     __end_of_i2c_read:
  4878                           	callstack 0
  4879                           
  4880 ;; *************** function _i2c_rx_mode *****************
  4881 ;; Defined at:
  4882 ;;		line 61 in file "i2c.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;		None
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;		None
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  1    wreg      void 
  4889 ;; Registers used:
  4890 ;;		cstack
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4896 ;;      Params:         0       0       0       0       0       0       0
  4897 ;;      Locals:         0       0       0       0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0
  4899 ;;      Totals:         0       0       0       0       0       0       0
  4900 ;;Total ram usage:        0 bytes
  4901 ;; Hardware stack levels used: 1
  4902 ;; Hardware stack levels required when called: 2
  4903 ;; This function calls:
  4904 ;;		_i2c_idle
  4905 ;; This function is called by:
  4906 ;;		_i2c_read
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text31
  4911   0020B8                     __ptext31:
  4912                           	callstack 0
  4913   0020B8                     _i2c_rx_mode:
  4914                           	callstack 25
  4915   0020B8                     
  4916                           ;i2c.c: 63:  RCEN = 1;
  4917   0020B8  86C5               	bsf	4037,3,c	;volatile
  4918   0020BA                     
  4919                           ;i2c.c: 64:  i2c_idle();
  4920   0020BA  EC2C  F010         	call	_i2c_idle	;wreg free
  4921   0020BE  0012               	return		;funcret
  4922   0020C0                     __end_of_i2c_rx_mode:
  4923                           	callstack 0
  4924                           
  4925 ;; *************** function _i2c_idle *****************
  4926 ;; Defined at:
  4927 ;;		line 23 in file "i2c.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;		None
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;		None
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  1    wreg      void 
  4934 ;; Registers used:
  4935 ;;		None
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4941 ;;      Params:         0       0       0       0       0       0       0
  4942 ;;      Locals:         0       0       0       0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0       0       0
  4944 ;;      Totals:         0       0       0       0       0       0       0
  4945 ;;Total ram usage:        0 bytes
  4946 ;; Hardware stack levels used: 1
  4947 ;; Hardware stack levels required when called: 1
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_i2c_start
  4952 ;;		_i2c_stop
  4953 ;;		_i2c_rep_start
  4954 ;;		_i2c_write
  4955 ;;		_i2c_rx_mode
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text32
  4960   002058                     __ptext32:
  4961                           	callstack 0
  4962   002058                     _i2c_idle:
  4963                           	callstack 26
  4964   002058                     l351:
  4965   002058  A69E               	btfss	3998,3,c	;volatile
  4966   00205A  EF31  F010         	goto	u1431
  4967   00205E  EF33  F010         	goto	u1430
  4968   002062                     u1431:
  4969   002062  EF2C  F010         	goto	l351
  4970   002066                     u1430:
  4971   002066                     
  4972                           ;i2c.c: 26:  SSPIF = 0;
  4973   002066  969E               	bcf	3998,3,c	;volatile
  4974   002068  0012               	return		;funcret
  4975   00206A                     __end_of_i2c_idle:
  4976                           	callstack 0
  4977                           
  4978 ;; *************** function _i2c_no_ack *****************
  4979 ;; Defined at:
  4980 ;;		line 67 in file "i2c.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		None
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4994 ;;      Params:         0       0       0       0       0       0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0
  4996 ;;      Temps:          0       0       0       0       0       0       0
  4997 ;;      Totals:         0       0       0       0       0       0       0
  4998 ;;Total ram usage:        0 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; Hardware stack levels required when called: 1
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_i2c_read
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text33
  5009   0020C0                     __ptext33:
  5010                           	callstack 0
  5011   0020C0                     _i2c_no_ack:
  5012                           	callstack 26
  5013   0020C0                     
  5014                           ;i2c.c: 69:  ACKDT = 1;
  5015   0020C0  8AC5               	bsf	4037,5,c	;volatile
  5016                           
  5017                           ;i2c.c: 70:  ACKEN = 1;
  5018   0020C2  88C5               	bsf	4037,4,c	;volatile
  5019   0020C4  0012               	return		;funcret
  5020   0020C6                     __end_of_i2c_no_ack:
  5021                           	callstack 0
  5022                           
  5023 ;; *************** function _display_time *****************
  5024 ;; Defined at:
  5025 ;;		line 26 in file "dashboard.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;		None
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;		None
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      void 
  5032 ;; Registers used:
  5033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5039 ;;      Params:         0       0       0       0       0       0       0
  5040 ;;      Locals:         0       0       0       0       0       0       0
  5041 ;;      Temps:          0       0       0       0       0       0       0
  5042 ;;      Totals:         0       0       0       0       0       0       0
  5043 ;;Total ram usage:        0 bytes
  5044 ;; Hardware stack levels used: 1
  5045 ;; Hardware stack levels required when called: 3
  5046 ;; This function calls:
  5047 ;;		_clcd_print
  5048 ;; This function is called by:
  5049 ;;		_dashboard
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text34
  5054   00206A                     __ptext34:
  5055                           	callstack 0
  5056   00206A                     _display_time:
  5057                           	callstack 26
  5058   00206A                     
  5059                           ;dashboard.c: 27:     clcd_print(time, (0xC0 + (0)));
  5060   00206A  0E53               	movlw	low _time
  5061   00206C  6E03               	movwf	clcd_print@data^0,c
  5062   00206E  6A04               	clrf	(clcd_print@data+1)^0,c
  5063   002070  0EC0               	movlw	192
  5064   002072  6E05               	movwf	clcd_print@addr^0,c
  5065   002074  EC6C  F00E         	call	_clcd_print	;wreg free
  5066   002078  0012               	return		;funcret
  5067   00207A                     __end_of_display_time:
  5068                           	callstack 0
  5069                           
  5070 ;; *************** function _clcd_print *****************
  5071 ;; Defined at:
  5072 ;;		line 59 in file "clcd.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;  data            2    2[COMRAM] PTR const unsigned char 
  5075 ;;		 -> STR_22(17), STR_21(16), STR_20(9), STR_19(17), 
  5076 ;;		 -> STR_18(16), STR_17(15), STR_16(15), STR_15(17), 
  5077 ;;		 -> STR_14(6), STR_13(16), STR_12(19), STR_11(16), 
  5078 ;;		 -> STR_10(17), STR_9(17), time(9), STR_8(3), 
  5079 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
  5080 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  5081 ;;  addr            1    4[COMRAM] unsigned char 
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;		None
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  1    wreg      void 
  5086 ;; Registers used:
  5087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5093 ;;      Params:         3       0       0       0       0       0       0
  5094 ;;      Locals:         0       0       0       0       0       0       0
  5095 ;;      Temps:          0       0       0       0       0       0       0
  5096 ;;      Totals:         3       0       0       0       0       0       0
  5097 ;;Total ram usage:        3 bytes
  5098 ;; Hardware stack levels used: 1
  5099 ;; Hardware stack levels required when called: 2
  5100 ;; This function calls:
  5101 ;;		_clcd_write
  5102 ;; This function is called by:
  5103 ;;		_display_time
  5104 ;;		_dashboard
  5105 ;;		_password
  5106 ;;		_menu
  5107 ;;		_view_log
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           	psect	text35
  5112   001CD8                     __ptext35:
  5113                           	callstack 0
  5114   001CD8                     _clcd_print:
  5115                           	callstack 27
  5116   001CD8                     
  5117                           ;clcd.c: 59: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 60: 
      +                          {;clcd.c: 61:  clcd_write(addr, 0);
  5118   001CD8  0E00               	movlw	0
  5119   001CDA  6E01               	movwf	clcd_write@control_bit^0,c
  5120   001CDC  5005               	movf	clcd_print@addr^0,w,c
  5121   001CDE  EC9C  F00F         	call	_clcd_write
  5122                           
  5123                           ;clcd.c: 62:  while (*data != '\0')
  5124   001CE2  EF89  F00E         	goto	l2281
  5125   001CE6                     l2277:
  5126                           
  5127                           ;clcd.c: 63:  {;clcd.c: 64:   clcd_write(*data++, 1);
  5128   001CE6  0E01               	movlw	1
  5129   001CE8  6E01               	movwf	clcd_write@control_bit^0,c
  5130   001CEA  C003  FFF6         	movff	clcd_print@data,tblptrl
  5131   001CEE  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  5132   001CF2  6AF8               	clrf	tblptru,c
  5133   001CF4  0E05               	movlw	(high __ramtop+-1)
  5134   001CF6  64F7               	cpfsgt	tblptrh,c
  5135   001CF8  D003               	bra	u1477
  5136   001CFA  0008               	tblrd		*
  5137   001CFC  50F5               	movf	tablat,w,c
  5138   001CFE  D005               	bra	u1470
  5139   001D00                     u1477:
  5140   001D00  CFF6 FFE9          	movff	tblptrl,fsr0l
  5141   001D04  CFF7 FFEA          	movff	tblptrh,fsr0h
  5142   001D08  50EF               	movf	indf0,w,c
  5143   001D0A                     u1470:
  5144   001D0A  EC9C  F00F         	call	_clcd_write
  5145   001D0E  4A03               	infsnz	clcd_print@data^0,f,c
  5146   001D10  2A04               	incf	(clcd_print@data+1)^0,f,c
  5147   001D12                     l2281:
  5148                           
  5149                           ;clcd.c: 62:  while (*data != '\0')
  5150   001D12  C003  FFF6         	movff	clcd_print@data,tblptrl
  5151   001D16  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  5152   001D1A  6AF8               	clrf	tblptru,c
  5153   001D1C  0E05               	movlw	(high __ramtop+-1)
  5154   001D1E  64F7               	cpfsgt	tblptrh,c
  5155   001D20  D003               	bra	u1487
  5156   001D22  0008               	tblrd		*
  5157   001D24  50F5               	movf	tablat,w,c
  5158   001D26  D005               	bra	u1480
  5159   001D28                     u1487:
  5160   001D28  CFF6 FFE9          	movff	tblptrl,fsr0l
  5161   001D2C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5162   001D30  50EF               	movf	indf0,w,c
  5163   001D32                     u1480:
  5164   001D32  0900               	iorlw	0
  5165   001D34  A4D8               	btfss	status,2,c
  5166   001D36  EF9F  F00E         	goto	u1491
  5167   001D3A  EFA1  F00E         	goto	u1490
  5168   001D3E                     u1491:
  5169   001D3E  EF73  F00E         	goto	l2277
  5170   001D42                     u1490:
  5171   001D42  0012               	return		;funcret
  5172   001D44                     __end_of_clcd_print:
  5173                           	callstack 0
  5174                           
  5175 ;; *************** function _clcd_putch *****************
  5176 ;; Defined at:
  5177 ;;		line 68 in file "clcd.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  data            1    wreg     const unsigned char 
  5180 ;;  addr            1   14[COMRAM] unsigned char 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  data            1   15[COMRAM] const unsigned char 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  1    wreg      void 
  5185 ;; Registers used:
  5186 ;;		wreg, status,2, cstack
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5192 ;;      Params:         1       0       0       0       0       0       0
  5193 ;;      Locals:         1       0       0       0       0       0       0
  5194 ;;      Temps:          0       0       0       0       0       0       0
  5195 ;;      Totals:         2       0       0       0       0       0       0
  5196 ;;Total ram usage:        2 bytes
  5197 ;; Hardware stack levels used: 1
  5198 ;; Hardware stack levels required when called: 2
  5199 ;; This function calls:
  5200 ;;		_clcd_write
  5201 ;; This function is called by:
  5202 ;;		_dashboard
  5203 ;;		_password
  5204 ;;		_menu
  5205 ;;		_view_log
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text36
  5210   002004                     __ptext36:
  5211                           	callstack 0
  5212   002004                     _clcd_putch:
  5213                           	callstack 27
  5214                           
  5215                           ;incstack = 0
  5216                           ;clcd_putch@data stored from wreg
  5217   002004  6E10               	movwf	clcd_putch@data^0,c
  5218   002006                     
  5219                           ;clcd.c: 68: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 69: {
      +                          ;clcd.c: 70:  clcd_write(addr, 0);
  5220   002006  0E00               	movlw	0
  5221   002008  6E01               	movwf	clcd_write@control_bit^0,c
  5222   00200A  500F               	movf	clcd_putch@addr^0,w,c
  5223   00200C  EC9C  F00F         	call	_clcd_write
  5224                           
  5225                           ;clcd.c: 71:  clcd_write(data, 1);
  5226   002010  0E01               	movlw	1
  5227   002012  6E01               	movwf	clcd_write@control_bit^0,c
  5228   002014  5010               	movf	clcd_putch@data^0,w,c
  5229   002016  EC9C  F00F         	call	_clcd_write
  5230   00201A  0012               	return		;funcret
  5231   00201C                     __end_of_clcd_putch:
  5232                           	callstack 0
  5233                           
  5234 ;; *************** function _clcd_write *****************
  5235 ;; Defined at:
  5236 ;;		line 5 in file "clcd.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  byte            1    wreg     unsigned char 
  5239 ;;  control_bit     1    0[COMRAM] unsigned char 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  byte            1    1[COMRAM] unsigned char 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      void 
  5244 ;; Registers used:
  5245 ;;		wreg
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5251 ;;      Params:         1       0       0       0       0       0       0
  5252 ;;      Locals:         1       0       0       0       0       0       0
  5253 ;;      Temps:          0       0       0       0       0       0       0
  5254 ;;      Totals:         2       0       0       0       0       0       0
  5255 ;;Total ram usage:        2 bytes
  5256 ;; Hardware stack levels used: 1
  5257 ;; Hardware stack levels required when called: 1
  5258 ;; This function calls:
  5259 ;;		Nothing
  5260 ;; This function is called by:
  5261 ;;		_init_clcd
  5262 ;;		_clcd_print
  5263 ;;		_clcd_putch
  5264 ;;		_main
  5265 ;;		_password
  5266 ;;		_menu
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           	psect	text37
  5271   001F38                     __ptext37:
  5272                           	callstack 0
  5273   001F38                     _clcd_write:
  5274                           	callstack 27
  5275                           
  5276                           ;incstack = 0
  5277                           ;clcd_write@byte stored from wreg
  5278   001F38  6E02               	movwf	clcd_write@byte^0,c
  5279   001F3A                     
  5280                           ;clcd.c: 5: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 6: {;
      +                          clcd.c: 7:  RC1 = control_bit;
  5281   001F3A  B001               	btfsc	clcd_write@control_bit^0,0,c
  5282   001F3C  EFA2  F00F         	goto	u1441
  5283   001F40  EFA5  F00F         	goto	u1440
  5284   001F44                     u1441:
  5285   001F44  8282               	bsf	3970,1,c	;volatile
  5286   001F46  EFA6  F00F         	goto	u1455
  5287   001F4A                     u1440:
  5288   001F4A  9282               	bcf	3970,1,c	;volatile
  5289   001F4C                     u1455:
  5290   001F4C                     
  5291                           ;clcd.c: 8:  PORTD = byte;
  5292   001F4C  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  5293   001F50                     
  5294                           ;clcd.c: 11:  RC2 = 1;
  5295   001F50  8482               	bsf	3970,2,c	;volatile
  5296   001F52                     
  5297                           ;clcd.c: 12:  RC2 = 0;
  5298   001F52  9482               	bcf	3970,2,c	;volatile
  5299   001F54                     
  5300                           ;clcd.c: 14:  TRISD7 = 0xFF;
  5301   001F54  8E95               	bsf	3989,7,c	;volatile
  5302   001F56                     
  5303                           ;clcd.c: 15:  RC0 = 1;
  5304   001F56  8082               	bsf	3970,0,c	;volatile
  5305   001F58                     
  5306                           ;clcd.c: 16:  RC1 = 0;
  5307   001F58  9282               	bcf	3970,1,c	;volatile
  5308   001F5A                     l2247:
  5309                           
  5310                           ;clcd.c: 19:  {;clcd.c: 20:   RC2 = 1;
  5311   001F5A  8482               	bsf	3970,2,c	;volatile
  5312   001F5C                     
  5313                           ;clcd.c: 21:   RC2 = 0;
  5314   001F5C  9482               	bcf	3970,2,c	;volatile
  5315   001F5E                     
  5316                           ;clcd.c: 22:  } while (RD7);
  5317   001F5E  BE83               	btfsc	3971,7,c	;volatile
  5318   001F60  EFB4  F00F         	goto	u1461
  5319   001F64  EFB6  F00F         	goto	u1460
  5320   001F68                     u1461:
  5321   001F68  EFAD  F00F         	goto	l2247
  5322   001F6C                     u1460:
  5323   001F6C                     
  5324                           ;clcd.c: 24:  RC0 = 0;
  5325   001F6C  9082               	bcf	3970,0,c	;volatile
  5326                           
  5327                           ;clcd.c: 25:  TRISD7 = 0x00;
  5328   001F6E  9E95               	bcf	3989,7,c	;volatile
  5329   001F70  0012               	return		;funcret
  5330   001F72                     __end_of_clcd_write:
  5331                           	callstack 0
  5332                           
  5333 ;; *************** function ___xxtofl *****************
  5334 ;; Defined at:
  5335 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  sign            1    wreg     unsigned char 
  5338 ;;  val             4    7[COMRAM] long 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  sign            1   15[COMRAM] unsigned char 
  5341 ;;  arg             4   17[COMRAM] unsigned long 
  5342 ;;  exp             1   16[COMRAM] unsigned char 
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  4    7[COMRAM] unsigned char 
  5345 ;; Registers used:
  5346 ;;		wreg, status,2, status,0
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5352 ;;      Params:         4       0       0       0       0       0       0
  5353 ;;      Locals:         6       0       0       0       0       0       0
  5354 ;;      Temps:          4       0       0       0       0       0       0
  5355 ;;      Totals:        14       0       0       0       0       0       0
  5356 ;;Total ram usage:       14 bytes
  5357 ;; Hardware stack levels used: 1
  5358 ;; Hardware stack levels required when called: 1
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_main
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text38
  5367   00115A                     __ptext38:
  5368                           	callstack 0
  5369   00115A                     ___xxtofl:
  5370                           	callstack 29
  5371                           
  5372                           ;incstack = 0
  5373                           ;___xxtofl@sign stored from wreg
  5374   00115A  6E10               	movwf	___xxtofl@sign^0,c
  5375   00115C  5010               	movf	___xxtofl@sign^0,w,c
  5376   00115E  B4D8               	btfsc	status,2,c
  5377   001160  EFB4  F008         	goto	u2621
  5378   001164  EFB6  F008         	goto	u2620
  5379   001168                     u2621:
  5380   001168  EFD8  F008         	goto	l1169
  5381   00116C                     u2620:
  5382   00116C  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  5383   00116E  EFBD  F008         	goto	u2630
  5384   001172  EFBB  F008         	goto	u2631
  5385   001176                     u2631:
  5386   001176  EFD8  F008         	goto	l1169
  5387   00117A                     u2630:
  5388   00117A  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  5389   00117E  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  5390   001182  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  5391   001186  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  5392   00118A  1E0C               	comf	??___xxtofl^0,f,c
  5393   00118C  1E0D               	comf	(??___xxtofl+1)^0,f,c
  5394   00118E  1E0E               	comf	(??___xxtofl+2)^0,f,c
  5395   001190  1E0F               	comf	(??___xxtofl+3)^0,f,c
  5396   001192  2A0C               	incf	??___xxtofl^0,f,c
  5397   001194  0E00               	movlw	0
  5398   001196  220D               	addwfc	(??___xxtofl+1)^0,f,c
  5399   001198  220E               	addwfc	(??___xxtofl+2)^0,f,c
  5400   00119A  220F               	addwfc	(??___xxtofl+3)^0,f,c
  5401   00119C  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  5402   0011A0  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  5403   0011A4  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  5404   0011A8  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  5405   0011AC  EFE0  F008         	goto	l3153
  5406   0011B0                     l1169:
  5407   0011B0  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  5408   0011B4  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5409   0011B8  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5410   0011BC  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5411   0011C0                     l3153:
  5412   0011C0  5008               	movf	___xxtofl@val^0,w,c
  5413   0011C2  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  5414   0011C4  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  5415   0011C6  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  5416   0011C8  A4D8               	btfss	status,2,c
  5417   0011CA  EFE9  F008         	goto	u2641
  5418   0011CE  EFEB  F008         	goto	u2640
  5419   0011D2                     u2641:
  5420   0011D2  EFF5  F008         	goto	l3159
  5421   0011D6                     u2640:
  5422   0011D6  0E00               	movlw	0
  5423   0011D8  6E08               	movwf	?___xxtofl^0,c
  5424   0011DA  0E00               	movlw	0
  5425   0011DC  6E09               	movwf	(?___xxtofl+1)^0,c
  5426   0011DE  0E00               	movlw	0
  5427   0011E0  6E0A               	movwf	(?___xxtofl+2)^0,c
  5428   0011E2  0E00               	movlw	0
  5429   0011E4  6E0B               	movwf	(?___xxtofl+3)^0,c
  5430   0011E6  EF86  F009         	goto	l1172
  5431   0011EA                     l3159:
  5432   0011EA  0E96               	movlw	150
  5433   0011EC  6E11               	movwf	___xxtofl@exp^0,c
  5434   0011EE  EFFF  F008         	goto	l3163
  5435   0011F2                     l3161:
  5436   0011F2  2A11               	incf	___xxtofl@exp^0,f,c
  5437   0011F4  90D8               	bcf	status,0,c
  5438   0011F6  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  5439   0011F8  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  5440   0011FA  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  5441   0011FC  3212               	rrcf	___xxtofl@arg^0,f,c
  5442   0011FE                     l3163:
  5443   0011FE  0E00               	movlw	0
  5444   001200  1412               	andwf	___xxtofl@arg^0,w,c
  5445   001202  6E0C               	movwf	??___xxtofl^0,c
  5446   001204  0E00               	movlw	0
  5447   001206  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  5448   001208  6E0D               	movwf	(??___xxtofl+1)^0,c
  5449   00120A  0E00               	movlw	0
  5450   00120C  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  5451   00120E  6E0E               	movwf	(??___xxtofl+2)^0,c
  5452   001210  0EFE               	movlw	254
  5453   001212  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  5454   001214  6E0F               	movwf	(??___xxtofl+3)^0,c
  5455   001216  500C               	movf	??___xxtofl^0,w,c
  5456   001218  100D               	iorwf	(??___xxtofl+1)^0,w,c
  5457   00121A  100E               	iorwf	(??___xxtofl+2)^0,w,c
  5458   00121C  100F               	iorwf	(??___xxtofl+3)^0,w,c
  5459   00121E  A4D8               	btfss	status,2,c
  5460   001220  EF14  F009         	goto	u2651
  5461   001224  EF16  F009         	goto	u2650
  5462   001228                     u2651:
  5463   001228  EFF9  F008         	goto	l3161
  5464   00122C                     u2650:
  5465   00122C  EF24  F009         	goto	l1176
  5466   001230                     l3165:
  5467   001230  2A11               	incf	___xxtofl@exp^0,f,c
  5468   001232  0E01               	movlw	1
  5469   001234  2612               	addwf	___xxtofl@arg^0,f,c
  5470   001236  0E00               	movlw	0
  5471   001238  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  5472   00123A  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  5473   00123C  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  5474   00123E  90D8               	bcf	status,0,c
  5475   001240  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  5476   001242  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  5477   001244  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  5478   001246  3212               	rrcf	___xxtofl@arg^0,f,c
  5479   001248                     l1176:
  5480   001248  0E00               	movlw	0
  5481   00124A  1412               	andwf	___xxtofl@arg^0,w,c
  5482   00124C  6E0C               	movwf	??___xxtofl^0,c
  5483   00124E  0E00               	movlw	0
  5484   001250  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  5485   001252  6E0D               	movwf	(??___xxtofl+1)^0,c
  5486   001254  0E00               	movlw	0
  5487   001256  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  5488   001258  6E0E               	movwf	(??___xxtofl+2)^0,c
  5489   00125A  0EFF               	movlw	255
  5490   00125C  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  5491   00125E  6E0F               	movwf	(??___xxtofl+3)^0,c
  5492   001260  500C               	movf	??___xxtofl^0,w,c
  5493   001262  100D               	iorwf	(??___xxtofl+1)^0,w,c
  5494   001264  100E               	iorwf	(??___xxtofl+2)^0,w,c
  5495   001266  100F               	iorwf	(??___xxtofl+3)^0,w,c
  5496   001268  A4D8               	btfss	status,2,c
  5497   00126A  EF39  F009         	goto	u2661
  5498   00126E  EF3B  F009         	goto	u2660
  5499   001272                     u2661:
  5500   001272  EF18  F009         	goto	l3165
  5501   001276                     u2660:
  5502   001276  EF43  F009         	goto	l3173
  5503   00127A                     l3171:
  5504   00127A  0611               	decf	___xxtofl@exp^0,f,c
  5505   00127C  90D8               	bcf	status,0,c
  5506   00127E  3612               	rlcf	___xxtofl@arg^0,f,c
  5507   001280  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  5508   001282  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  5509   001284  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  5510   001286                     l3173:
  5511   001286  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  5512   001288  EF48  F009         	goto	u2671
  5513   00128C  EF4A  F009         	goto	u2670
  5514   001290                     u2671:
  5515   001290  EF52  F009         	goto	l1183
  5516   001294                     u2670:
  5517   001294  0E02               	movlw	2
  5518   001296  6011               	cpfslt	___xxtofl@exp^0,c
  5519   001298  EF50  F009         	goto	u2681
  5520   00129C  EF52  F009         	goto	u2680
  5521   0012A0                     u2681:
  5522   0012A0  EF3D  F009         	goto	l3171
  5523   0012A4                     u2680:
  5524   0012A4                     l1183:
  5525   0012A4  B011               	btfsc	___xxtofl@exp^0,0,c
  5526   0012A6  EF57  F009         	goto	u2691
  5527   0012AA  EF59  F009         	goto	u2690
  5528   0012AE                     u2691:
  5529   0012AE  EF5A  F009         	goto	l3179
  5530   0012B2                     u2690:
  5531   0012B2  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  5532   0012B4                     l3179:
  5533   0012B4  90D8               	bcf	status,0,c
  5534   0012B6  3211               	rrcf	___xxtofl@exp^0,f,c
  5535   0012B8  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  5536   0012BC  6A0D               	clrf	(??___xxtofl+1)^0,c
  5537   0012BE  6A0E               	clrf	(??___xxtofl+2)^0,c
  5538   0012C0  6A0F               	clrf	(??___xxtofl+3)^0,c
  5539   0012C2  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  5540   0012C6  6A0E               	clrf	(??___xxtofl+2)^0,c
  5541   0012C8  6A0D               	clrf	(??___xxtofl+1)^0,c
  5542   0012CA  6A0C               	clrf	??___xxtofl^0,c
  5543   0012CC  500C               	movf	??___xxtofl^0,w,c
  5544   0012CE  1212               	iorwf	___xxtofl@arg^0,f,c
  5545   0012D0  500D               	movf	(??___xxtofl+1)^0,w,c
  5546   0012D2  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  5547   0012D4  500E               	movf	(??___xxtofl+2)^0,w,c
  5548   0012D6  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  5549   0012D8  500F               	movf	(??___xxtofl+3)^0,w,c
  5550   0012DA  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  5551   0012DC  5010               	movf	___xxtofl@sign^0,w,c
  5552   0012DE  B4D8               	btfsc	status,2,c
  5553   0012E0  EF74  F009         	goto	u2701
  5554   0012E4  EF76  F009         	goto	u2700
  5555   0012E8                     u2701:
  5556   0012E8  EF7E  F009         	goto	l3189
  5557   0012EC                     u2700:
  5558   0012EC  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  5559   0012EE  EF7D  F009         	goto	u2710
  5560   0012F2  EF7B  F009         	goto	u2711
  5561   0012F6                     u2711:
  5562   0012F6  EF7E  F009         	goto	l3189
  5563   0012FA                     u2710:
  5564   0012FA  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  5565   0012FC                     l3189:
  5566   0012FC  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  5567   001300  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  5568   001304  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  5569   001308  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  5570   00130C                     l1172:
  5571   00130C  0012               	return		;funcret
  5572   00130E                     __end_of___xxtofl:
  5573                           	callstack 0
  5574                           
  5575 ;; *************** function ___fltol *****************
  5576 ;; Defined at:
  5577 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  f1              4   46[COMRAM] unsigned char 
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;  exp1            1   55[COMRAM] unsigned char 
  5582 ;;  sign1           1   54[COMRAM] unsigned char 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  4   46[COMRAM] long 
  5585 ;; Registers used:
  5586 ;;		wreg, status,2, status,0
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5592 ;;      Params:         4       0       0       0       0       0       0
  5593 ;;      Locals:         2       0       0       0       0       0       0
  5594 ;;      Temps:          4       0       0       0       0       0       0
  5595 ;;      Totals:        10       0       0       0       0       0       0
  5596 ;;Total ram usage:       10 bytes
  5597 ;; Hardware stack levels used: 1
  5598 ;; Hardware stack levels required when called: 1
  5599 ;; This function calls:
  5600 ;;		Nothing
  5601 ;; This function is called by:
  5602 ;;		_main
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           	psect	text39
  5607   001676                     __ptext39:
  5608                           	callstack 0
  5609   001676                     ___fltol:
  5610                           	callstack 29
  5611   001676  3431               	rlcf	(___fltol@f1+2)^0,w,c
  5612   001678  3432               	rlcf	(___fltol@f1+3)^0,w,c
  5613   00167A  6E38               	movwf	___fltol@exp1^0,c
  5614   00167C  5038               	movf	___fltol@exp1^0,w,c
  5615   00167E  A4D8               	btfss	status,2,c
  5616   001680  EF44  F00B         	goto	u2551
  5617   001684  EF46  F00B         	goto	u2550
  5618   001688                     u2551:
  5619   001688  EF50  F00B         	goto	l3109
  5620   00168C                     u2550:
  5621   00168C                     l3105:
  5622   00168C  0E00               	movlw	0
  5623   00168E  6E2F               	movwf	?___fltol^0,c
  5624   001690  0E00               	movlw	0
  5625   001692  6E30               	movwf	(?___fltol+1)^0,c
  5626   001694  0E00               	movlw	0
  5627   001696  6E31               	movwf	(?___fltol+2)^0,c
  5628   001698  0E00               	movlw	0
  5629   00169A  6E32               	movwf	(?___fltol+3)^0,c
  5630   00169C  EFBD  F00B         	goto	l811
  5631   0016A0                     l3109:
  5632   0016A0  C02F  F033         	movff	___fltol@f1,??___fltol
  5633   0016A4  C030  F034         	movff	___fltol@f1+1,??___fltol+1
  5634   0016A8  C031  F035         	movff	___fltol@f1+2,??___fltol+2
  5635   0016AC  C032  F036         	movff	___fltol@f1+3,??___fltol+3
  5636   0016B0  0E20               	movlw	32
  5637   0016B2  EF60  F00B         	goto	u2560
  5638   0016B6                     u2565:
  5639   0016B6  90D8               	bcf	status,0,c
  5640   0016B8  3236               	rrcf	(??___fltol+3)^0,f,c
  5641   0016BA  3235               	rrcf	(??___fltol+2)^0,f,c
  5642   0016BC  3234               	rrcf	(??___fltol+1)^0,f,c
  5643   0016BE  3233               	rrcf	??___fltol^0,f,c
  5644   0016C0                     u2560:
  5645   0016C0  2EE8               	decfsz	wreg,f,c
  5646   0016C2  EF5B  F00B         	goto	u2565
  5647   0016C6  5033               	movf	??___fltol^0,w,c
  5648   0016C8  6E37               	movwf	___fltol@sign1^0,c
  5649   0016CA  8E31               	bsf	(___fltol@f1+2)^0,7,c
  5650   0016CC  0EFF               	movlw	255
  5651   0016CE  162F               	andwf	___fltol@f1^0,f,c
  5652   0016D0  0EFF               	movlw	255
  5653   0016D2  1630               	andwf	(___fltol@f1+1)^0,f,c
  5654   0016D4  0EFF               	movlw	255
  5655   0016D6  1631               	andwf	(___fltol@f1+2)^0,f,c
  5656   0016D8  0E00               	movlw	0
  5657   0016DA  1632               	andwf	(___fltol@f1+3)^0,f,c
  5658   0016DC  0E96               	movlw	150
  5659   0016DE  5E38               	subwf	___fltol@exp1^0,f,c
  5660   0016E0  BE38               	btfsc	___fltol@exp1^0,7,c
  5661   0016E2  EF77  F00B         	goto	u2570
  5662   0016E6  EF75  F00B         	goto	u2571
  5663   0016EA                     u2571:
  5664   0016EA  EF8D  F00B         	goto	l3129
  5665   0016EE                     u2570:
  5666   0016EE  5038               	movf	___fltol@exp1^0,w,c
  5667   0016F0  0A80               	xorlw	128
  5668   0016F2  0F97               	addlw	151
  5669   0016F4  B0D8               	btfsc	status,0,c
  5670   0016F6  EF7F  F00B         	goto	u2581
  5671   0016FA  EF81  F00B         	goto	u2580
  5672   0016FE                     u2581:
  5673   0016FE  EF83  F00B         	goto	l3125
  5674   001702                     u2580:
  5675   001702  EF46  F00B         	goto	l3105
  5676   001706                     l3125:
  5677   001706  90D8               	bcf	status,0,c
  5678   001708  3232               	rrcf	(___fltol@f1+3)^0,f,c
  5679   00170A  3231               	rrcf	(___fltol@f1+2)^0,f,c
  5680   00170C  3230               	rrcf	(___fltol@f1+1)^0,f,c
  5681   00170E  322F               	rrcf	___fltol@f1^0,f,c
  5682   001710  3E38               	incfsz	___fltol@exp1^0,f,c
  5683   001712  EF83  F00B         	goto	l3125
  5684   001716  EFA5  F00B         	goto	l3139
  5685   00171A                     l3129:
  5686   00171A  0E1F               	movlw	31
  5687   00171C  6438               	cpfsgt	___fltol@exp1^0,c
  5688   00171E  EF93  F00B         	goto	u2591
  5689   001722  EF95  F00B         	goto	u2590
  5690   001726                     u2591:
  5691   001726  EF9D  F00B         	goto	l3137
  5692   00172A                     u2590:
  5693   00172A  EF46  F00B         	goto	l3105
  5694   00172E                     l3135:
  5695   00172E  90D8               	bcf	status,0,c
  5696   001730  362F               	rlcf	___fltol@f1^0,f,c
  5697   001732  3630               	rlcf	(___fltol@f1+1)^0,f,c
  5698   001734  3631               	rlcf	(___fltol@f1+2)^0,f,c
  5699   001736  3632               	rlcf	(___fltol@f1+3)^0,f,c
  5700   001738  0638               	decf	___fltol@exp1^0,f,c
  5701   00173A                     l3137:
  5702   00173A  5038               	movf	___fltol@exp1^0,w,c
  5703   00173C  A4D8               	btfss	status,2,c
  5704   00173E  EFA3  F00B         	goto	u2601
  5705   001742  EFA5  F00B         	goto	u2600
  5706   001746                     u2601:
  5707   001746  EF97  F00B         	goto	l3135
  5708   00174A                     u2600:
  5709   00174A                     l3139:
  5710   00174A  5037               	movf	___fltol@sign1^0,w,c
  5711   00174C  B4D8               	btfsc	status,2,c
  5712   00174E  EFAB  F00B         	goto	u2611
  5713   001752  EFAD  F00B         	goto	u2610
  5714   001756                     u2611:
  5715   001756  EFB5  F00B         	goto	l3143
  5716   00175A                     u2610:
  5717   00175A  1E32               	comf	(___fltol@f1+3)^0,f,c
  5718   00175C  1E31               	comf	(___fltol@f1+2)^0,f,c
  5719   00175E  1E30               	comf	(___fltol@f1+1)^0,f,c
  5720   001760  6C2F               	negf	___fltol@f1^0,c
  5721   001762  0E00               	movlw	0
  5722   001764  2230               	addwfc	(___fltol@f1+1)^0,f,c
  5723   001766  2231               	addwfc	(___fltol@f1+2)^0,f,c
  5724   001768  2232               	addwfc	(___fltol@f1+3)^0,f,c
  5725   00176A                     l3143:
  5726   00176A  C02F  F02F         	movff	___fltol@f1,?___fltol
  5727   00176E  C030  F030         	movff	___fltol@f1+1,?___fltol+1
  5728   001772  C031  F031         	movff	___fltol@f1+2,?___fltol+2
  5729   001776  C032  F032         	movff	___fltol@f1+3,?___fltol+3
  5730   00177A                     l811:
  5731   00177A  0012               	return		;funcret
  5732   00177C                     __end_of___fltol:
  5733                           	callstack 0
  5734                           
  5735 ;; *************** function ___fldiv *****************
  5736 ;; Defined at:
  5737 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  b               4   21[COMRAM] long 
  5740 ;;  a               4   25[COMRAM] long 
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;  grs             4   40[COMRAM] unsigned long 
  5743 ;;  rem             4   33[COMRAM] unsigned long 
  5744 ;;  new_exp         2   38[COMRAM] short 
  5745 ;;  aexp            1   45[COMRAM] unsigned char 
  5746 ;;  bexp            1   44[COMRAM] unsigned char 
  5747 ;;  sign            1   37[COMRAM] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  4   21[COMRAM] unsigned char 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5757 ;;      Params:         8       0       0       0       0       0       0
  5758 ;;      Locals:        13       0       0       0       0       0       0
  5759 ;;      Temps:          4       0       0       0       0       0       0
  5760 ;;      Totals:        25       0       0       0       0       0       0
  5761 ;;Total ram usage:       25 bytes
  5762 ;; Hardware stack levels used: 1
  5763 ;; Hardware stack levels required when called: 1
  5764 ;; This function calls:
  5765 ;;		Nothing
  5766 ;; This function is called by:
  5767 ;;		_main
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text40
  5772   0006EA                     __ptext40:
  5773                           	callstack 0
  5774   0006EA                     ___fldiv:
  5775                           	callstack 29
  5776   0006EA  5019               	movf	(___fldiv@b+3)^0,w,c
  5777   0006EC  0B80               	andlw	128
  5778   0006EE  6E26               	movwf	___fldiv@sign^0,c
  5779   0006F0  5019               	movf	(___fldiv@b+3)^0,w,c
  5780   0006F2  2419               	addwf	(___fldiv@b+3)^0,w,c
  5781   0006F4  6E2D               	movwf	___fldiv@bexp^0,c
  5782   0006F6  AE18               	btfss	(___fldiv@b+2)^0,7,c
  5783   0006F8  EF80  F003         	goto	u2321
  5784   0006FC  EF82  F003         	goto	u2320
  5785   000700                     u2321:
  5786   000700  EF83  F003         	goto	l2971
  5787   000704                     u2320:
  5788   000704  802D               	bsf	___fldiv@bexp^0,0,c
  5789   000706                     l2971:
  5790   000706  502D               	movf	___fldiv@bexp^0,w,c
  5791   000708  B4D8               	btfsc	status,2,c
  5792   00070A  EF89  F003         	goto	u2331
  5793   00070E  EF8B  F003         	goto	u2330
  5794   000712                     u2331:
  5795   000712  EFA0  F003         	goto	l2981
  5796   000716                     u2330:
  5797   000716  282D               	incf	___fldiv@bexp^0,w,c
  5798   000718  A4D8               	btfss	status,2,c
  5799   00071A  EF91  F003         	goto	u2341
  5800   00071E  EF93  F003         	goto	u2340
  5801   000722                     u2341:
  5802   000722  EF9B  F003         	goto	l2977
  5803   000726                     u2340:
  5804   000726  0E00               	movlw	0
  5805   000728  6E16               	movwf	___fldiv@b^0,c
  5806   00072A  0E00               	movlw	0
  5807   00072C  6E17               	movwf	(___fldiv@b+1)^0,c
  5808   00072E  0E00               	movlw	0
  5809   000730  6E18               	movwf	(___fldiv@b+2)^0,c
  5810   000732  0E00               	movlw	0
  5811   000734  6E19               	movwf	(___fldiv@b+3)^0,c
  5812   000736                     l2977:
  5813   000736  8E18               	bsf	(___fldiv@b+2)^0,7,c
  5814   000738  0E00               	movlw	0
  5815   00073A  6E19               	movwf	(___fldiv@b+3)^0,c
  5816   00073C  EFA8  F003         	goto	l2983
  5817   000740                     l2981:
  5818   000740  0E00               	movlw	0
  5819   000742  6E16               	movwf	___fldiv@b^0,c
  5820   000744  0E00               	movlw	0
  5821   000746  6E17               	movwf	(___fldiv@b+1)^0,c
  5822   000748  0E00               	movlw	0
  5823   00074A  6E18               	movwf	(___fldiv@b+2)^0,c
  5824   00074C  0E00               	movlw	0
  5825   00074E  6E19               	movwf	(___fldiv@b+3)^0,c
  5826   000750                     l2983:
  5827   000750  501D               	movf	(___fldiv@a+3)^0,w,c
  5828   000752  0B80               	andlw	128
  5829   000754  1A26               	xorwf	___fldiv@sign^0,f,c
  5830   000756  501D               	movf	(___fldiv@a+3)^0,w,c
  5831   000758  241D               	addwf	(___fldiv@a+3)^0,w,c
  5832   00075A  6E2E               	movwf	___fldiv@aexp^0,c
  5833   00075C  AE1C               	btfss	(___fldiv@a+2)^0,7,c
  5834   00075E  EFB3  F003         	goto	u2351
  5835   000762  EFB5  F003         	goto	u2350
  5836   000766                     u2351:
  5837   000766  EFB6  F003         	goto	l2991
  5838   00076A                     u2350:
  5839   00076A  802E               	bsf	___fldiv@aexp^0,0,c
  5840   00076C                     l2991:
  5841   00076C  502E               	movf	___fldiv@aexp^0,w,c
  5842   00076E  B4D8               	btfsc	status,2,c
  5843   000770  EFBC  F003         	goto	u2361
  5844   000774  EFBE  F003         	goto	u2360
  5845   000778                     u2361:
  5846   000778  EFD3  F003         	goto	l3001
  5847   00077C                     u2360:
  5848   00077C  282E               	incf	___fldiv@aexp^0,w,c
  5849   00077E  A4D8               	btfss	status,2,c
  5850   000780  EFC4  F003         	goto	u2371
  5851   000784  EFC6  F003         	goto	u2370
  5852   000788                     u2371:
  5853   000788  EFCE  F003         	goto	l2997
  5854   00078C                     u2370:
  5855   00078C  0E00               	movlw	0
  5856   00078E  6E1A               	movwf	___fldiv@a^0,c
  5857   000790  0E00               	movlw	0
  5858   000792  6E1B               	movwf	(___fldiv@a+1)^0,c
  5859   000794  0E00               	movlw	0
  5860   000796  6E1C               	movwf	(___fldiv@a+2)^0,c
  5861   000798  0E00               	movlw	0
  5862   00079A  6E1D               	movwf	(___fldiv@a+3)^0,c
  5863   00079C                     l2997:
  5864   00079C  8E1C               	bsf	(___fldiv@a+2)^0,7,c
  5865   00079E  0E00               	movlw	0
  5866   0007A0  6E1D               	movwf	(___fldiv@a+3)^0,c
  5867   0007A2  EFDB  F003         	goto	l3003
  5868   0007A6                     l3001:
  5869   0007A6  0E00               	movlw	0
  5870   0007A8  6E1A               	movwf	___fldiv@a^0,c
  5871   0007AA  0E00               	movlw	0
  5872   0007AC  6E1B               	movwf	(___fldiv@a+1)^0,c
  5873   0007AE  0E00               	movlw	0
  5874   0007B0  6E1C               	movwf	(___fldiv@a+2)^0,c
  5875   0007B2  0E00               	movlw	0
  5876   0007B4  6E1D               	movwf	(___fldiv@a+3)^0,c
  5877   0007B6                     l3003:
  5878   0007B6  501A               	movf	___fldiv@a^0,w,c
  5879   0007B8  101B               	iorwf	(___fldiv@a+1)^0,w,c
  5880   0007BA  101C               	iorwf	(___fldiv@a+2)^0,w,c
  5881   0007BC  101D               	iorwf	(___fldiv@a+3)^0,w,c
  5882   0007BE  A4D8               	btfss	status,2,c
  5883   0007C0  EFE4  F003         	goto	u2381
  5884   0007C4  EFE6  F003         	goto	u2380
  5885   0007C8                     u2381:
  5886   0007C8  EFFE  F003         	goto	l3015
  5887   0007CC                     u2380:
  5888   0007CC  0E00               	movlw	0
  5889   0007CE  6E16               	movwf	___fldiv@b^0,c
  5890   0007D0  0E00               	movlw	0
  5891   0007D2  6E17               	movwf	(___fldiv@b+1)^0,c
  5892   0007D4  0E00               	movlw	0
  5893   0007D6  6E18               	movwf	(___fldiv@b+2)^0,c
  5894   0007D8  0E00               	movlw	0
  5895   0007DA  6E19               	movwf	(___fldiv@b+3)^0,c
  5896   0007DC  0E80               	movlw	128
  5897   0007DE  1218               	iorwf	(___fldiv@b+2)^0,f,c
  5898   0007E0  0E7F               	movlw	127
  5899   0007E2  1219               	iorwf	(___fldiv@b+3)^0,f,c
  5900   0007E4                     l3009:
  5901   0007E4  5026               	movf	___fldiv@sign^0,w,c
  5902   0007E6  1219               	iorwf	(___fldiv@b+3)^0,f,c
  5903   0007E8  C016  F016         	movff	___fldiv@b,?___fldiv
  5904   0007EC  C017  F017         	movff	___fldiv@b+1,?___fldiv+1
  5905   0007F0  C018  F018         	movff	___fldiv@b+2,?___fldiv+2
  5906   0007F4  C019  F019         	movff	___fldiv@b+3,?___fldiv+3
  5907   0007F8  EF41  F005         	goto	l1096
  5908   0007FC                     l3015:
  5909   0007FC  502D               	movf	___fldiv@bexp^0,w,c
  5910   0007FE  A4D8               	btfss	status,2,c
  5911   000800  EF04  F004         	goto	u2391
  5912   000804  EF06  F004         	goto	u2390
  5913   000808                     u2391:
  5914   000808  EF10  F004         	goto	l3023
  5915   00080C                     u2390:
  5916   00080C  0E00               	movlw	0
  5917   00080E  6E16               	movwf	?___fldiv^0,c
  5918   000810  0E00               	movlw	0
  5919   000812  6E17               	movwf	(?___fldiv+1)^0,c
  5920   000814  0E00               	movlw	0
  5921   000816  6E18               	movwf	(?___fldiv+2)^0,c
  5922   000818  0E00               	movlw	0
  5923   00081A  6E19               	movwf	(?___fldiv+3)^0,c
  5924   00081C  EF41  F005         	goto	l1096
  5925   000820                     l3023:
  5926   000820  502E               	movf	___fldiv@aexp^0,w,c
  5927   000822  C02D  F01E         	movff	___fldiv@bexp,??___fldiv
  5928   000826  6A1F               	clrf	(??___fldiv+1)^0,c
  5929   000828  5E1E               	subwf	??___fldiv^0,f,c
  5930   00082A  0E00               	movlw	0
  5931   00082C  5A1F               	subwfb	(??___fldiv+1)^0,f,c
  5932   00082E  0E7F               	movlw	127
  5933   000830  241E               	addwf	??___fldiv^0,w,c
  5934   000832  6E27               	movwf	___fldiv@new_exp^0,c
  5935   000834  0E00               	movlw	0
  5936   000836  201F               	addwfc	(??___fldiv+1)^0,w,c
  5937   000838  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  5938   00083A  C016  F022         	movff	___fldiv@b,___fldiv@rem
  5939   00083E  C017  F023         	movff	___fldiv@b+1,___fldiv@rem+1
  5940   000842  C018  F024         	movff	___fldiv@b+2,___fldiv@rem+2
  5941   000846  C019  F025         	movff	___fldiv@b+3,___fldiv@rem+3
  5942   00084A  0E00               	movlw	0
  5943   00084C  6E16               	movwf	___fldiv@b^0,c
  5944   00084E  0E00               	movlw	0
  5945   000850  6E17               	movwf	(___fldiv@b+1)^0,c
  5946   000852  0E00               	movlw	0
  5947   000854  6E18               	movwf	(___fldiv@b+2)^0,c
  5948   000856  0E00               	movlw	0
  5949   000858  6E19               	movwf	(___fldiv@b+3)^0,c
  5950   00085A  0E00               	movlw	0
  5951   00085C  6E29               	movwf	___fldiv@grs^0,c
  5952   00085E  0E00               	movlw	0
  5953   000860  6E2A               	movwf	(___fldiv@grs+1)^0,c
  5954   000862  0E00               	movlw	0
  5955   000864  6E2B               	movwf	(___fldiv@grs+2)^0,c
  5956   000866  0E00               	movlw	0
  5957   000868  6E2C               	movwf	(___fldiv@grs+3)^0,c
  5958   00086A  0E00               	movlw	0
  5959   00086C  6E2E               	movwf	___fldiv@aexp^0,c
  5960   00086E  EF71  F004         	goto	l1098
  5961   000872                     l3033:
  5962   000872  502E               	movf	___fldiv@aexp^0,w,c
  5963   000874  B4D8               	btfsc	status,2,c
  5964   000876  EF3F  F004         	goto	u2401
  5965   00087A  EF41  F004         	goto	u2400
  5966   00087E                     u2401:
  5967   00087E  EF58  F004         	goto	l3041
  5968   000882                     u2400:
  5969   000882  90D8               	bcf	status,0,c
  5970   000884  3622               	rlcf	___fldiv@rem^0,f,c
  5971   000886  3623               	rlcf	(___fldiv@rem+1)^0,f,c
  5972   000888  3624               	rlcf	(___fldiv@rem+2)^0,f,c
  5973   00088A  3625               	rlcf	(___fldiv@rem+3)^0,f,c
  5974   00088C  90D8               	bcf	status,0,c
  5975   00088E  3616               	rlcf	___fldiv@b^0,f,c
  5976   000890  3617               	rlcf	(___fldiv@b+1)^0,f,c
  5977   000892  3618               	rlcf	(___fldiv@b+2)^0,f,c
  5978   000894  3619               	rlcf	(___fldiv@b+3)^0,f,c
  5979   000896  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  5980   000898  EF50  F004         	goto	u2411
  5981   00089C  EF52  F004         	goto	u2410
  5982   0008A0                     u2411:
  5983   0008A0  EF53  F004         	goto	l1101
  5984   0008A4                     u2410:
  5985   0008A4  8016               	bsf	___fldiv@b^0,0,c
  5986   0008A6                     l1101:
  5987   0008A6  90D8               	bcf	status,0,c
  5988   0008A8  3629               	rlcf	___fldiv@grs^0,f,c
  5989   0008AA  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  5990   0008AC  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  5991   0008AE  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  5992   0008B0                     l3041:
  5993   0008B0  501A               	movf	___fldiv@a^0,w,c
  5994   0008B2  5C22               	subwf	___fldiv@rem^0,w,c
  5995   0008B4  501B               	movf	(___fldiv@a+1)^0,w,c
  5996   0008B6  5823               	subwfb	(___fldiv@rem+1)^0,w,c
  5997   0008B8  501C               	movf	(___fldiv@a+2)^0,w,c
  5998   0008BA  5824               	subwfb	(___fldiv@rem+2)^0,w,c
  5999   0008BC  501D               	movf	(___fldiv@a+3)^0,w,c
  6000   0008BE  5825               	subwfb	(___fldiv@rem+3)^0,w,c
  6001   0008C0  A0D8               	btfss	status,0,c
  6002   0008C2  EF65  F004         	goto	u2421
  6003   0008C6  EF67  F004         	goto	u2420
  6004   0008CA                     u2421:
  6005   0008CA  EF70  F004         	goto	l3047
  6006   0008CE                     u2420:
  6007   0008CE  8C2C               	bsf	(___fldiv@grs+3)^0,6,c
  6008   0008D0  501A               	movf	___fldiv@a^0,w,c
  6009   0008D2  5E22               	subwf	___fldiv@rem^0,f,c
  6010   0008D4  501B               	movf	(___fldiv@a+1)^0,w,c
  6011   0008D6  5A23               	subwfb	(___fldiv@rem+1)^0,f,c
  6012   0008D8  501C               	movf	(___fldiv@a+2)^0,w,c
  6013   0008DA  5A24               	subwfb	(___fldiv@rem+2)^0,f,c
  6014   0008DC  501D               	movf	(___fldiv@a+3)^0,w,c
  6015   0008DE  5A25               	subwfb	(___fldiv@rem+3)^0,f,c
  6016   0008E0                     l3047:
  6017   0008E0  2A2E               	incf	___fldiv@aexp^0,f,c
  6018   0008E2                     l1098:
  6019   0008E2  0E19               	movlw	25
  6020   0008E4  642E               	cpfsgt	___fldiv@aexp^0,c
  6021   0008E6  EF77  F004         	goto	u2431
  6022   0008EA  EF79  F004         	goto	u2430
  6023   0008EE                     u2431:
  6024   0008EE  EF39  F004         	goto	l3033
  6025   0008F2                     u2430:
  6026   0008F2  5022               	movf	___fldiv@rem^0,w,c
  6027   0008F4  1023               	iorwf	(___fldiv@rem+1)^0,w,c
  6028   0008F6  1024               	iorwf	(___fldiv@rem+2)^0,w,c
  6029   0008F8  1025               	iorwf	(___fldiv@rem+3)^0,w,c
  6030   0008FA  B4D8               	btfsc	status,2,c
  6031   0008FC  EF82  F004         	goto	u2441
  6032   000900  EF84  F004         	goto	u2440
  6033   000904                     u2441:
  6034   000904  EF9C  F004         	goto	l3059
  6035   000908                     u2440:
  6036   000908  8029               	bsf	___fldiv@grs^0,0,c
  6037   00090A  EF9C  F004         	goto	l3059
  6038   00090E                     l3053:
  6039   00090E  90D8               	bcf	status,0,c
  6040   000910  3616               	rlcf	___fldiv@b^0,f,c
  6041   000912  3617               	rlcf	(___fldiv@b+1)^0,f,c
  6042   000914  3618               	rlcf	(___fldiv@b+2)^0,f,c
  6043   000916  3619               	rlcf	(___fldiv@b+3)^0,f,c
  6044   000918  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  6045   00091A  EF91  F004         	goto	u2451
  6046   00091E  EF93  F004         	goto	u2450
  6047   000922                     u2451:
  6048   000922  EF94  F004         	goto	l1107
  6049   000926                     u2450:
  6050   000926  8016               	bsf	___fldiv@b^0,0,c
  6051   000928                     l1107:
  6052   000928  90D8               	bcf	status,0,c
  6053   00092A  3629               	rlcf	___fldiv@grs^0,f,c
  6054   00092C  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  6055   00092E  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  6056   000930  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  6057   000932  0627               	decf	___fldiv@new_exp^0,f,c
  6058   000934  A0D8               	btfss	status,0,c
  6059   000936  0628               	decf	(___fldiv@new_exp+1)^0,f,c
  6060   000938                     l3059:
  6061   000938  AE18               	btfss	(___fldiv@b+2)^0,7,c
  6062   00093A  EFA1  F004         	goto	u2461
  6063   00093E  EFA3  F004         	goto	u2460
  6064   000942                     u2461:
  6065   000942  EF87  F004         	goto	l3053
  6066   000946                     u2460:
  6067   000946  0E00               	movlw	0
  6068   000948  6E2E               	movwf	___fldiv@aexp^0,c
  6069   00094A  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  6070   00094C  EFAA  F004         	goto	u2471
  6071   000950  EFAC  F004         	goto	u2470
  6072   000954                     u2471:
  6073   000954  EFD0  F004         	goto	l1109
  6074   000958                     u2470:
  6075   000958  0EFF               	movlw	255
  6076   00095A  1429               	andwf	___fldiv@grs^0,w,c
  6077   00095C  6E1E               	movwf	??___fldiv^0,c
  6078   00095E  0EFF               	movlw	255
  6079   000960  142A               	andwf	(___fldiv@grs+1)^0,w,c
  6080   000962  6E1F               	movwf	(??___fldiv+1)^0,c
  6081   000964  0EFF               	movlw	255
  6082   000966  142B               	andwf	(___fldiv@grs+2)^0,w,c
  6083   000968  6E20               	movwf	(??___fldiv+2)^0,c
  6084   00096A  0E7F               	movlw	127
  6085   00096C  142C               	andwf	(___fldiv@grs+3)^0,w,c
  6086   00096E  6E21               	movwf	(??___fldiv+3)^0,c
  6087   000970  501E               	movf	??___fldiv^0,w,c
  6088   000972  101F               	iorwf	(??___fldiv+1)^0,w,c
  6089   000974  1020               	iorwf	(??___fldiv+2)^0,w,c
  6090   000976  1021               	iorwf	(??___fldiv+3)^0,w,c
  6091   000978  B4D8               	btfsc	status,2,c
  6092   00097A  EFC1  F004         	goto	u2481
  6093   00097E  EFC3  F004         	goto	u2480
  6094   000982                     u2481:
  6095   000982  EFC7  F004         	goto	l1110
  6096   000986                     u2480:
  6097   000986                     l3067:
  6098   000986  0E01               	movlw	1
  6099   000988  6E2E               	movwf	___fldiv@aexp^0,c
  6100   00098A  EFD0  F004         	goto	l1109
  6101   00098E                     l1110:
  6102   00098E  A016               	btfss	___fldiv@b^0,0,c
  6103   000990  EFCC  F004         	goto	u2491
  6104   000994  EFCE  F004         	goto	u2490
  6105   000998                     u2491:
  6106   000998  EFD0  F004         	goto	l1109
  6107   00099C                     u2490:
  6108   00099C  EFC3  F004         	goto	l3067
  6109   0009A0                     l1109:
  6110   0009A0  502E               	movf	___fldiv@aexp^0,w,c
  6111   0009A2  B4D8               	btfsc	status,2,c
  6112   0009A4  EFD6  F004         	goto	u2501
  6113   0009A8  EFD8  F004         	goto	u2500
  6114   0009AC                     u2501:
  6115   0009AC  EFFC  F004         	goto	l3079
  6116   0009B0                     u2500:
  6117   0009B0  0E01               	movlw	1
  6118   0009B2  2616               	addwf	___fldiv@b^0,f,c
  6119   0009B4  0E00               	movlw	0
  6120   0009B6  2217               	addwfc	(___fldiv@b+1)^0,f,c
  6121   0009B8  2218               	addwfc	(___fldiv@b+2)^0,f,c
  6122   0009BA  2219               	addwfc	(___fldiv@b+3)^0,f,c
  6123   0009BC  A019               	btfss	(___fldiv@b+3)^0,0,c
  6124   0009BE  EFE3  F004         	goto	u2511
  6125   0009C2  EFE5  F004         	goto	u2510
  6126   0009C6                     u2511:
  6127   0009C6  EFFC  F004         	goto	l3079
  6128   0009CA                     u2510:
  6129   0009CA  C016  F01E         	movff	___fldiv@b,??___fldiv
  6130   0009CE  C017  F01F         	movff	___fldiv@b+1,??___fldiv+1
  6131   0009D2  C018  F020         	movff	___fldiv@b+2,??___fldiv+2
  6132   0009D6  C019  F021         	movff	___fldiv@b+3,??___fldiv+3
  6133   0009DA  3421               	rlcf	(??___fldiv+3)^0,w,c
  6134   0009DC  3221               	rrcf	(??___fldiv+3)^0,f,c
  6135   0009DE  3220               	rrcf	(??___fldiv+2)^0,f,c
  6136   0009E0  321F               	rrcf	(??___fldiv+1)^0,f,c
  6137   0009E2  321E               	rrcf	??___fldiv^0,f,c
  6138   0009E4  C01E  F016         	movff	??___fldiv,___fldiv@b
  6139   0009E8  C01F  F017         	movff	??___fldiv+1,___fldiv@b+1
  6140   0009EC  C020  F018         	movff	??___fldiv+2,___fldiv@b+2
  6141   0009F0  C021  F019         	movff	??___fldiv+3,___fldiv@b+3
  6142   0009F4  4A27               	infsnz	___fldiv@new_exp^0,f,c
  6143   0009F6  2A28               	incf	(___fldiv@new_exp+1)^0,f,c
  6144   0009F8                     l3079:
  6145   0009F8  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6146   0009FA  EF07  F005         	goto	u2521
  6147   0009FE  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  6148   000A00  E108               	bnz	u2520
  6149   000A02  2827               	incf	___fldiv@new_exp^0,w,c
  6150   000A04  A0D8               	btfss	status,0,c
  6151   000A06  EF07  F005         	goto	u2521
  6152   000A0A  EF09  F005         	goto	u2520
  6153   000A0E                     u2521:
  6154   000A0E  EF14  F005         	goto	l3083
  6155   000A12                     u2520:
  6156   000A12  0E00               	movlw	0
  6157   000A14  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  6158   000A16  6827               	setf	___fldiv@new_exp^0,c
  6159   000A18  0E00               	movlw	0
  6160   000A1A  6E16               	movwf	___fldiv@b^0,c
  6161   000A1C  0E00               	movlw	0
  6162   000A1E  6E17               	movwf	(___fldiv@b+1)^0,c
  6163   000A20  0E00               	movlw	0
  6164   000A22  6E18               	movwf	(___fldiv@b+2)^0,c
  6165   000A24  0E00               	movlw	0
  6166   000A26  6E19               	movwf	(___fldiv@b+3)^0,c
  6167   000A28                     l3083:
  6168   000A28  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6169   000A2A  EF21  F005         	goto	u2530
  6170   000A2E  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  6171   000A30  E106               	bnz	u2531
  6172   000A32  0427               	decf	___fldiv@new_exp^0,w,c
  6173   000A34  B0D8               	btfsc	status,0,c
  6174   000A36  EF1F  F005         	goto	u2531
  6175   000A3A  EF21  F005         	goto	u2530
  6176   000A3E                     u2531:
  6177   000A3E  EF2F  F005         	goto	l3087
  6178   000A42                     u2530:
  6179   000A42  0E00               	movlw	0
  6180   000A44  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  6181   000A46  0E00               	movlw	0
  6182   000A48  6E27               	movwf	___fldiv@new_exp^0,c
  6183   000A4A  0E00               	movlw	0
  6184   000A4C  6E16               	movwf	___fldiv@b^0,c
  6185   000A4E  0E00               	movlw	0
  6186   000A50  6E17               	movwf	(___fldiv@b+1)^0,c
  6187   000A52  0E00               	movlw	0
  6188   000A54  6E18               	movwf	(___fldiv@b+2)^0,c
  6189   000A56  0E00               	movlw	0
  6190   000A58  6E19               	movwf	(___fldiv@b+3)^0,c
  6191   000A5A  0E00               	movlw	0
  6192   000A5C  6E26               	movwf	___fldiv@sign^0,c
  6193   000A5E                     l3087:
  6194   000A5E  C027  F02D         	movff	___fldiv@new_exp,___fldiv@bexp
  6195   000A62  A02D               	btfss	___fldiv@bexp^0,0,c
  6196   000A64  EF36  F005         	goto	u2541
  6197   000A68  EF38  F005         	goto	u2540
  6198   000A6C                     u2541:
  6199   000A6C  EF3B  F005         	goto	l3093
  6200   000A70                     u2540:
  6201   000A70  8E18               	bsf	(___fldiv@b+2)^0,7,c
  6202   000A72  EF3C  F005         	goto	l3095
  6203   000A76                     l3093:
  6204   000A76  9E18               	bcf	(___fldiv@b+2)^0,7,c
  6205   000A78                     l3095:
  6206   000A78  90D8               	bcf	status,0,c
  6207   000A7A  302D               	rrcf	___fldiv@bexp^0,w,c
  6208   000A7C  6E19               	movwf	(___fldiv@b+3)^0,c
  6209   000A7E  EFF2  F003         	goto	l3009
  6210   000A82                     l1096:
  6211   000A82  0012               	return		;funcret
  6212   000A84                     __end_of___fldiv:
  6213                           	callstack 0
  6214                           
  6215 ;; *************** function _isr *****************
  6216 ;; Defined at:
  6217 ;;		line 6 in file "isr.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;		None
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;		None
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  1    wreg      void 
  6224 ;; Registers used:
  6225 ;;		wreg, status,2, status,0
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6231 ;;      Params:         0       0       0       0       0       0       0
  6232 ;;      Locals:         0       0       0       0       0       0       0
  6233 ;;      Temps:          0       0       0       0       0       0       0
  6234 ;;      Totals:         0       0       0       0       0       0       0
  6235 ;;Total ram usage:        0 bytes
  6236 ;; Hardware stack levels used: 1
  6237 ;; This function calls:
  6238 ;;		Nothing
  6239 ;; This function is called by:
  6240 ;;		Interrupt level 2
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	intcode
  6245   000008                     __pintcode:
  6246                           	callstack 0
  6247   000008                     _isr:
  6248                           	callstack 24
  6249                           
  6250                           ;incstack = 0
  6251   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6252   00000A  ED06  F00F         	call	int_func,f	;refresh shadow registers
  6253                           
  6254                           	psect	intcode_body
  6255   001E0C                     __pintcode_body:
  6256                           	callstack 24
  6257   001E0C                     int_func:
  6258                           	callstack 24
  6259   001E0C  0006               	pop		; remove dummy address from shadow register refresh
  6260   001E0E                     
  6261                           ;isr.c: 8:  static unsigned long count;;isr.c: 10:  if (TMR0IF)
  6262   001E0E  A4F2               	btfss	4082,2,c	;volatile
  6263   001E10  EF0C  F00F         	goto	i2u283_41
  6264   001E14  EF0E  F00F         	goto	i2u283_40
  6265   001E18                     i2u283_41:
  6266   001E18  EF33  F00F         	goto	i2l413
  6267   001E1C                     i2u283_40:
  6268   001E1C                     
  6269                           ;isr.c: 11:  {;isr.c: 12:   TMR0 = TMR0 + 8;
  6270   001E1C  0E08               	movlw	8
  6271   001E1E  24D6               	addwf	214,w,c	;volatile
  6272   001E20  6ED6               	movwf	214,c	;volatile
  6273   001E22  0E00               	movlw	0
  6274   001E24  20D7               	addwfc	215,w,c	;volatile
  6275   001E26  6ED7               	movwf	215,c	;volatile
  6276                           
  6277                           ;isr.c: 14:   if (count++ == 20000)
  6278   001E28  0E01               	movlw	1
  6279   001E2A  0100               	movlb	0	; () banked
  6280   001E2C  2776               	addwf	isr@count& (0+255),f,b
  6281   001E2E  0E00               	movlw	0
  6282   001E30  2377               	addwfc	(isr@count+1)& (0+255),f,b
  6283   001E32  2378               	addwfc	(isr@count+2)& (0+255),f,b
  6284   001E34  2379               	addwfc	(isr@count+3)& (0+255),f,b
  6285   001E36  0E21               	movlw	33
  6286   001E38  1976               	xorwf	isr@count& (0+255),w,b
  6287   001E3A  E109               	bnz	i2u284_41
  6288   001E3C  0E4E               	movlw	78
  6289   001E3E  1977               	xorwf	(isr@count+1)& (0+255),w,b
  6290   001E40  1178               	iorwf	(isr@count+2)& (0+255),w,b
  6291   001E42  1179               	iorwf	(isr@count+3)& (0+255),w,b
  6292   001E44  A4D8               	btfss	status,2,c
  6293   001E46  EF27  F00F         	goto	i2u284_41
  6294   001E4A  EF29  F00F         	goto	i2u284_40
  6295   001E4E                     i2u284_41:
  6296   001E4E  EF32  F00F         	goto	i2l3259
  6297   001E52                     i2u284_40:
  6298   001E52                     
  6299                           ; BSR set to: 0
  6300                           ;isr.c: 15:   {;isr.c: 17:    count = 0;
  6301   001E52  0E00               	movlw	0
  6302   001E54  6F76               	movwf	isr@count& (0+255),b
  6303   001E56  0E00               	movlw	0
  6304   001E58  6F77               	movwf	(isr@count+1)& (0+255),b
  6305   001E5A  0E00               	movlw	0
  6306   001E5C  6F78               	movwf	(isr@count+2)& (0+255),b
  6307   001E5E  0E00               	movlw	0
  6308   001E60  6F79               	movwf	(isr@count+3)& (0+255),b
  6309   001E62                     
  6310                           ; BSR set to: 0
  6311                           ;isr.c: 18:             tick_count--;
  6312   001E62  065D               	decf	_tick_count^0,f,c
  6313   001E64                     i2l3259:
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;isr.c: 22:   TMR0IF = 0;
  6317   001E64  94F2               	bcf	4082,2,c	;volatile
  6318   001E66                     i2l413:
  6319   001E66  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6320   001E68  0011               	retfie		f
  6321   001E6A                     __end_of_isr:
  6322                           	callstack 0
  6323                           
  6324                           	psect	rparam
  6325   000000                     
  6326                           	psect	temp
  6327   00005F                     btemp:
  6328                           	callstack 0
  6329   00005F                     	ds	1
  6330   000000                     int$flags	set	btemp
  6331   000000                     wtemp8	set	btemp+1
  6332   000000                     ttemp5	set	btemp+1
  6333   000000                     ttemp6	set	btemp+4
  6334   000000                     ttemp7	set	btemp+8
  6335                           
  6336                           	psect	idloc
  6337                           
  6338                           ;Config register IDLOC0 @ 0x200000
  6339                           ;	unspecified, using default values
  6340   200000                     	org	2097152
  6341   200000  FF                 	db	255
  6342                           
  6343                           ;Config register IDLOC1 @ 0x200001
  6344                           ;	unspecified, using default values
  6345   200001                     	org	2097153
  6346   200001  FF                 	db	255
  6347                           
  6348                           ;Config register IDLOC2 @ 0x200002
  6349                           ;	unspecified, using default values
  6350   200002                     	org	2097154
  6351   200002  FF                 	db	255
  6352                           
  6353                           ;Config register IDLOC3 @ 0x200003
  6354                           ;	unspecified, using default values
  6355   200003                     	org	2097155
  6356   200003  FF                 	db	255
  6357                           
  6358                           ;Config register IDLOC4 @ 0x200004
  6359                           ;	unspecified, using default values
  6360   200004                     	org	2097156
  6361   200004  FF                 	db	255
  6362                           
  6363                           ;Config register IDLOC5 @ 0x200005
  6364                           ;	unspecified, using default values
  6365   200005                     	org	2097157
  6366   200005  FF                 	db	255
  6367                           
  6368                           ;Config register IDLOC6 @ 0x200006
  6369                           ;	unspecified, using default values
  6370   200006                     	org	2097158
  6371   200006  FF                 	db	255
  6372                           
  6373                           ;Config register IDLOC7 @ 0x200007
  6374                           ;	unspecified, using default values
  6375   200007                     	org	2097159
  6376   200007  FF                 	db	255
  6377                           
  6378                           	psect	config
  6379                           
  6380                           ; Padding undefined space
  6381   300000                     	org	3145728
  6382   300000  FF                 	db	255
  6383                           
  6384                           ;Config register CONFIG1H @ 0x300001
  6385                           ;	unspecified, using default values
  6386                           ;	Oscillator Selection bits
  6387                           ;	OSC = 0x7, unprogrammed default
  6388                           ;	Fail-Safe Clock Monitor Enable bit
  6389                           ;	FCMEN = 0x0, unprogrammed default
  6390                           ;	Internal/External Oscillator Switchover bit
  6391                           ;	IESO = 0x0, unprogrammed default
  6392   300001                     	org	3145729
  6393   300001  07                 	db	7
  6394                           
  6395                           ;Config register CONFIG2L @ 0x300002
  6396                           ;	unspecified, using default values
  6397                           ;	Power-up Timer Enable bit
  6398                           ;	PWRT = 0x1, unprogrammed default
  6399                           ;	Brown-out Reset Enable bits
  6400                           ;	BOREN = 0x3, unprogrammed default
  6401                           ;	Brown-out Reset Voltage bits
  6402                           ;	BORV = 0x3, unprogrammed default
  6403   300002                     	org	3145730
  6404   300002  1F                 	db	31
  6405                           
  6406                           ;Config register CONFIG2H @ 0x300003
  6407                           ;	unspecified, using default values
  6408                           ;	Watchdog Timer Enable bit
  6409                           ;	WDT = 0x1, unprogrammed default
  6410                           ;	Watchdog Timer Postscale Select bits
  6411                           ;	WDTPS = 0xF, unprogrammed default
  6412   300003                     	org	3145731
  6413   300003  1F                 	db	31
  6414                           
  6415                           ; Padding undefined space
  6416   300004                     	org	3145732
  6417   300004  FF                 	db	255
  6418                           
  6419                           ;Config register CONFIG3H @ 0x300005
  6420                           ;	unspecified, using default values
  6421                           ;	PORTB A/D Enable bit
  6422                           ;	PBADEN = 0x1, unprogrammed default
  6423                           ;	Low-Power Timer 1 Oscillator Enable bit
  6424                           ;	LPT1OSC = 0x0, unprogrammed default
  6425                           ;	MCLR Pin Enable bit
  6426                           ;	MCLRE = 0x1, unprogrammed default
  6427   300005                     	org	3145733
  6428   300005  82                 	db	130
  6429                           
  6430                           ;Config register CONFIG4L @ 0x300006
  6431                           ;	unspecified, using default values
  6432                           ;	Stack Full/Underflow Reset Enable bit
  6433                           ;	STVREN = 0x1, unprogrammed default
  6434                           ;	Single-Supply ICSP Enable bit
  6435                           ;	LVP = 0x1, unprogrammed default
  6436                           ;	Boot Block Size Select bit
  6437                           ;	BBSIZ = 0x0, unprogrammed default
  6438                           ;	Extended Instruction Set Enable bit
  6439                           ;	XINST = 0x0, unprogrammed default
  6440                           ;	Background Debugger Enable bit
  6441                           ;	DEBUG = 0x1, unprogrammed default
  6442   300006                     	org	3145734
  6443   300006  85                 	db	133
  6444                           
  6445                           ; Padding undefined space
  6446   300007                     	org	3145735
  6447   300007  FF                 	db	255
  6448                           
  6449                           ;Config register CONFIG5L @ 0x300008
  6450                           ;	unspecified, using default values
  6451                           ;	Code Protection bit
  6452                           ;	CP0 = 0x1, unprogrammed default
  6453                           ;	Code Protection bit
  6454                           ;	CP1 = 0x1, unprogrammed default
  6455                           ;	Code Protection bit
  6456                           ;	CP2 = 0x1, unprogrammed default
  6457                           ;	Code Protection bit
  6458                           ;	CP3 = 0x1, unprogrammed default
  6459   300008                     	org	3145736
  6460   300008  0F                 	db	15
  6461                           
  6462                           ;Config register CONFIG5H @ 0x300009
  6463                           ;	unspecified, using default values
  6464                           ;	Boot Block Code Protection bit
  6465                           ;	CPB = 0x1, unprogrammed default
  6466                           ;	Data EEPROM Code Protection bit
  6467                           ;	CPD = 0x1, unprogrammed default
  6468   300009                     	org	3145737
  6469   300009  C0                 	db	192
  6470                           
  6471                           ;Config register CONFIG6L @ 0x30000A
  6472                           ;	unspecified, using default values
  6473                           ;	Write Protection bit
  6474                           ;	WRT0 = 0x1, unprogrammed default
  6475                           ;	Write Protection bit
  6476                           ;	WRT1 = 0x1, unprogrammed default
  6477                           ;	Write Protection bit
  6478                           ;	WRT2 = 0x1, unprogrammed default
  6479                           ;	Write Protection bit
  6480                           ;	WRT3 = 0x1, unprogrammed default
  6481   30000A                     	org	3145738
  6482   30000A  0F                 	db	15
  6483                           
  6484                           ;Config register CONFIG6H @ 0x30000B
  6485                           ;	unspecified, using default values
  6486                           ;	Configuration Register Write Protection bit
  6487                           ;	WRTC = 0x1, unprogrammed default
  6488                           ;	Boot Block Write Protection bit
  6489                           ;	WRTB = 0x1, unprogrammed default
  6490                           ;	Data EEPROM Write Protection bit
  6491                           ;	WRTD = 0x1, unprogrammed default
  6492   30000B                     	org	3145739
  6493   30000B  E0                 	db	224
  6494                           
  6495                           ;Config register CONFIG7L @ 0x30000C
  6496                           ;	unspecified, using default values
  6497                           ;	Table Read Protection bit
  6498                           ;	EBTR0 = 0x1, unprogrammed default
  6499                           ;	Table Read Protection bit
  6500                           ;	EBTR1 = 0x1, unprogrammed default
  6501                           ;	Table Read Protection bit
  6502                           ;	EBTR2 = 0x1, unprogrammed default
  6503                           ;	Table Read Protection bit
  6504                           ;	EBTR3 = 0x1, unprogrammed default
  6505   30000C                     	org	3145740
  6506   30000C  0F                 	db	15
  6507                           
  6508                           ;Config register CONFIG7H @ 0x30000D
  6509                           ;	unspecified, using default values
  6510                           ;	Boot Block Table Read Protection bit
  6511                           ;	EBTRB = 0x1, unprogrammed default
  6512   30000D                     	org	3145741
  6513   30000D  40                 	db	64
  6514                           tosu	equ	0xFFF
  6515                           tosh	equ	0xFFE
  6516                           tosl	equ	0xFFD
  6517                           stkptr	equ	0xFFC
  6518                           pclatu	equ	0xFFB
  6519                           pclath	equ	0xFFA
  6520                           pcl	equ	0xFF9
  6521                           tblptru	equ	0xFF8
  6522                           tblptrh	equ	0xFF7
  6523                           tblptrl	equ	0xFF6
  6524                           tablat	equ	0xFF5
  6525                           prodh	equ	0xFF4
  6526                           prodl	equ	0xFF3
  6527                           indf0	equ	0xFEF
  6528                           postinc0	equ	0xFEE
  6529                           postdec0	equ	0xFED
  6530                           preinc0	equ	0xFEC
  6531                           plusw0	equ	0xFEB
  6532                           fsr0h	equ	0xFEA
  6533                           fsr0l	equ	0xFE9
  6534                           wreg	equ	0xFE8
  6535                           indf1	equ	0xFE7
  6536                           postinc1	equ	0xFE6
  6537                           postdec1	equ	0xFE5
  6538                           preinc1	equ	0xFE4
  6539                           plusw1	equ	0xFE3
  6540                           fsr1h	equ	0xFE2
  6541                           fsr1l	equ	0xFE1
  6542                           bsr	equ	0xFE0
  6543                           indf2	equ	0xFDF
  6544                           postinc2	equ	0xFDE
  6545                           postdec2	equ	0xFDD
  6546                           preinc2	equ	0xFDC
  6547                           plusw2	equ	0xFDB
  6548                           fsr2h	equ	0xFDA
  6549                           fsr2l	equ	0xFD9
  6550                           status	equ	0xFD8

Data Sizes:
    Strings     231
    Constant    0
    Data        16
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      94
    BANK0           160      0      49
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[3]), STR_10(CODE[17]), STR_11(CODE[16]), STR_12(CODE[19]), 
		 -> STR_13(CODE[16]), STR_14(CODE[6]), STR_15(CODE[17]), STR_16(CODE[15]), 
		 -> STR_17(CODE[15]), STR_18(CODE[16]), STR_19(CODE[17]), STR_2(CODE[3]), 
		 -> STR_20(CODE[9]), STR_21(CODE[16]), STR_22(CODE[17]), STR_3(CODE[3]), 
		 -> STR_4(CODE[3]), STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), 
		 -> STR_8(CODE[3]), STR_9(CODE[17]), time(COMRAM[9]), 

    events	PTR unsigned char [8] size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), 

    logs	PTR unsigned char [5] size(1) Largest target is 17
		 -> STR_17(CODE[15]), STR_18(CODE[16]), STR_19(CODE[17]), STR_20(CODE[9]), 
		 -> STR_21(CODE[16]), 

    my_strcmp@one	PTR unsigned char  size(1) Largest target is 5
		 -> pass(BANK0[5]), 

    my_strcmp@two	PTR unsigned char  size(1) Largest target is 5
		 -> temp_password(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _view_log->_clcd_putch
    _password->_clcd_putch
    ___awmod->___awdiv
    _menu->_clcd_putch
    _init_config->_write_external_eeprom
    _read_external_eeprom->_i2c_write
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _dashboard->_clcd_putch
    _store_event->___lwdiv
    _write_external_eeprom->_i2c_write
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_time->_clcd_print
    _clcd_print->_clcd_write
    _clcd_putch->___awmod
    ___xxtofl->_read_adc
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   45007
                            ___fldiv
                            ___fltol
                           ___xxtofl
                         _clcd_write
                          _dashboard
                        _init_config
                               _menu
                           _password
                           _read_adc
                      _read_switches
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                             8     8      0    7960
                                             16 COMRAM     8     8      0
                            ___awmod
                         _clcd_print
                         _clcd_putch
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _password                                            15    15      0   10143
                                             16 COMRAM    15    15      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                          _my_strcmp
 ---------------------------------------------------------------------------------
 (2) _my_strcmp                                            8     6      2     398
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    8235
                                             16 COMRAM     2     2      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _init_config                                          2     2      0    2468
                                              5 COMRAM     2     2      0
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                        _init_timer0
               _read_external_eeprom
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     506
                                              3 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     370
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    1336
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dashboard                                            1     1      0   12674
                                             16 COMRAM     1     1      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                       _display_time
                           _get_time
                        _store_event
 ---------------------------------------------------------------------------------
 (2) _store_event                                          2     2      0    1488
                                              7 COMRAM     2     2      0
                            ___lwdiv
                            ___lwmod
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _write_external_eeprom                                4     3      1     469
                                              1 COMRAM     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0    3379
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    3379
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    3432
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           2     1      1    1336
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              7 COMRAM    14    10      4
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             46 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
       _read_adc (ARG)
     _read_adc (ARG)
   ___fltol
     ___fldiv (ARG)
     ___xxtofl (ARG)
     _read_adc (ARG)
   ___xxtofl
   _clcd_write
   _dashboard
     ___lwdiv
     ___lwmod
     _clcd_print
       _clcd_write
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
       _clcd_write (ARG)
     _display_time
       _clcd_print
     _get_time
       _read_ds1307
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
           _i2c_idle
         _i2c_stop
           _i2c_idle
         _i2c_write
           _i2c_idle
     _store_event
       ___lwdiv
       ___lwmod
       _write_external_eeprom
         _i2c_start
         _i2c_stop
         _i2c_write
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
     _init_matrix_keypad
     _init_timer0
     _read_external_eeprom
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_stop
       _i2c_write
     _write_external_eeprom
   _menu
     _clcd_print
     _clcd_putch
     _clcd_write
   _password
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _my_strcmp
   _read_adc
   _read_switches
     _scan_key
   _view_log
     ___awmod
     _clcd_print
     _clcd_putch
     _read_external_eeprom

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      25        0.0%
BITBIGSFRll        281      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      31       5       30.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     38      5E       1      100.0%
BITBIGSFRlhhhh      1E      0       0      19        0.0%
BITBIGSFRhhhlhh     19      0       0      17        0.0%
BITBIGSFRlhl         F      0       0      22        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRhhhlhh      B      0       0      18        0.0%
BITBIGSFRlhhl        8      0       0      21        0.0%
BITBIGSFRlhhhl       2      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8F      24        0.0%
DATA                 0      0      8F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue May 28 15:58:16 2024

                 my_strcmp@one 0001                   my_strcmp@two 0002                   ___fldiv@aexp 002E  
                 ___fldiv@bexp 002D                              _i 004C                   ___fldiv@sign 0026  
        _write_external_eeprom 1EF8                 clcd_print@addr 0005                 clcd_print@data 0003  
                my_strcmp@last 0005                             l33 1FE4                             l36 1ECA  
                           l61 1F6C                             l62 1F70                             l71 1D42  
                           l39 1EF6                             l65 1A66                             l74 201A  
                           _GO 7E11                   ___awdiv@sign 0006             _init_matrix_keypad 2046  
                          l113 1B6C                            l222 2078                            l310 2002  
                          l313 1FC4                            l162 2056                            l170 15B0  
                          l227 1BEC                            l235 156C                            l307 1EB0  
                          l139 1152                            l180 1636                            l173 15DE  
                          l165 1588                            l182 164A                            l174 161A  
                          l166 1674                            l351 2058                            l183 1672  
                          l175 15F2                            l167 15C4                            l511 0FA0  
                          l280 0DA4                            l184 165E                            l168 159C  
                          l353 2066                            l361 20AE                            l177 1606  
                          l354 2068                            l370 2092                            l267 1AE2  
                          l195 1C62                            l364 20A6                            l348 2030  
                          l428 2044                            l268 1AEA                            l373 20BE  
                          l461 1448                            l367 20B6                            l376 20C4  
                          l811 177A                            l379 209E                            l395 1F36  
                          l483 184A                            l398 1F9A                            l745 190E  
                          l758 19BE                            _CKE 7E3E                            _GIE 7F97  
                          _RC0 7C10                            _RC1 7C11                            _RC2 7C12  
                          _RD7 7C1F                            _PEN 7E2A                            _SEN 7E28  
                          _PSA 7EAB                            _SMP 7E3F                  ?_display_time 0001  
                  _start_index 0047                            _lap 0049                            _key 0051  
                          _isr 0008                 clcd_putch@addr 000F                 clcd_putch@data 0010  
                 ___awmod@sign 000E                            wreg 0FE8            ?_init_matrix_keypad 0001  
                 ___fltol@exp1 0038                           l1012 1CD6                           l1101 08A6  
                         l1005 1CCE                           l1110 098E                           l1022 1E0A  
                         l1015 1E02                           l1107 0928                           l1109 09A0  
                         l3001 07A6                           l3011 07E8                           l3003 07B6  
                         l1172 130C                           l3005 07CC                           l2301 1FA8  
                         l3031 086A                           l3023 0820                           l3007 07DC  
                         l3015 07FC                           l3111 16CA                           l3103 1676  
                         l1183 12A4                           l2231 20C0                           l2303 1FAE  
                         l2311 1FE8                           l1096 0A82                           l1176 1248  
                         l3041 08B0                           l3033 0872                           l3025 083A  
                         l3017 080C                           l3009 07E4                           l3113 16CC  
                         l3105 168C                           l1169 11B0                           l2241 1F54  
                         l2233 1F3A                           l2401 2006                           l2225 2058  
                         l2305 1FB2                           l2321 1C64                           l2313 1FEC  
                         l3201 0FC2                           l1098 08E2                           l3051 0908  
                         l3043 08CE                           l3035 0882                           l3027 084A  
                         l3019 080C                           l3115 16DC                           l2251 1F5E  
                         l2243 1F56                           l2235 1F4C                           l2227 20B8  
                         l2307 1FBE                           l2331 1C9C                           l2323 1C6C  
                         l2315 1FF2                           l2411 2020                           l2403 2046  
                         l3211 100A                           l3203 0FC6                           l3061 0946  
                         l3053 090E                           l3045 08D0                           l3037 0896  
                         l3029 085A                           l3141 175A                           l3125 1706  
                         l3117 16E0                           l3109 16A0                           l2245 1F58  
                         l2237 1F50                           l2229 20BA                           l2253 20A8  
                         l2261 20A0                           l2341 1CC8                           l2333 1CA2  
                         l2325 1C7E                           l2317 1FF8                           l2421 1E6A  
                         l2413 2028                           l2405 204E                           l3221 109A  
                         l3213 1026                           l3205 0FDE                           l3071 09B0  
                         l3063 094A                           l3055 0918                           l3047 08E0  
                         l3039 08A4                           l3143 176A                           l3135 172E  
                         l3127 1710                           l3119 16EE                           l3151 117A  
                         l2247 1F5A                           l2239 1F52                           l2271 209C  
                         l2255 20AA                           l2263 20A2                           l2335 1CB8  
                         l2327 1C86                           l2351 1DD8                           l2343 1DA8  
                         l2319 1FFE                           l2423 1E72                           l2415 202A  
                         l2407 2050                           l2431 2032                           l2503 1644  
                         l3223 10AA                           l3231 10D2                           l3215 102E  
                         l3207 0FE8                           l3081 0A12                           l3073 09BC  
                         l3065 0958                           l3057 0926                           l3049 08F2  
                         l3137 173A                           l3129 171A                           l3161 11F2  
                         l3153 11C0                           l2249 1F5C                           l2281 1D12  
                         l2265 20B0                           l2257 208A                           l2337 1CC0  
                         l2329 1C8E                           l2353 1DEE                           l2345 1DBA  
                         l2361 1FDA                           l2425 1E7E                           l2417 202C  
                         l2409 201C                           l2433 203A                           l2441 1F7E  
                         l2601 18AE                           l3233 10E2                           l3241 110A  
                         l3225 10AE                           l3217 1036                           l3209 0FF0  
                         l3091 0A70                           l3083 0A28                           l3075 09CA  
                         l3067 0986                           l3059 0938                           l3139 174A  
                         l3171 127A                           l3163 11FE                           l3155 11D6  
                         l3147 115C                           l2275 1CD8                           l2523 206A  
                         l2267 20B2                           l2259 208E                           l2531 1BAA  
                         l2339 1CC2                           l2355 1DF6                           l2347 1DC2  
                         l2291 1F10                           l2283 1EFA                           l2363 1FE2  
                         l2371 19CC                           l2427 1E92                           l2419 202E  
                         l2435 2042                           l2443 1F84                           l2611 18E2  
                         l2603 18BC                           l2515 166C                           l2451 156E  
                         l3243 111C                           l3235 10E8                           l3227 10C0  
                         l3219 1042                           l3093 0A76                           l3085 0A42  
                         l3077 09F4                           l3181 12B8                           l3173 1286  
                         l3165 1230                           l3149 116C                           l2277 1CE6  
                         l2269 2094                           l2541 1BE8                           l2533 1BBC  
                         l2525 1B6E                           l2357 1DFC                           l2349 1DCA  
                         l2293 1F14                           l2285 1EFE                           l2381 1A08  
                         l2373 19DC                           l2365 19C0                           l2429 1E9C  
                         l2445 1F88                           l2437 1F74                           l2613 18E8  
                         l2605 18C2                           l2509 1658                           l2453 1582  
                         l2701 1C06                           l3245 1126                           l3237 10F8  
                         l3229 10CA                           l3095 0A78                           l3087 0A5E  
                         l3079 09F8                           l3183 12DC                           l3175 1294  
                         l3167 1232                           l3159 11EA                           l2279 1D0E  
                         l2535 1BC0                           l2527 1B86                           l2295 1F1C  
                         l2287 1F04                           l2551 1800                           l2543 177C  
                         l2359 1FC6                           l2391 1A34                           l2383 1A12  
                         l2375 19E6                           l2367 19C4                           l2447 1F94  
                         l2439 1F78                           l2607 18D8                           l2615 18EE  
                         l2631 192E                           l2623 1910                           l2519 1672  
                         l2471 15BE                           l2703 1C16                           l2711 1C30  
                         l3247 1138                           l3239 1102                           l3089 0A62  
                         l3185 12EC                           l3177 12B2                           l3169 123E  
                         l2297 1F9E                           l2537 1BCA                           l2529 1B94  
                         l2289 1F0A                           l2561 181E                           l2545 1794  
                         l2393 1A3C                           l2385 1A18                           l2377 19F6  
                         l2369 19CA                           l2617 18FE                           l2609 18E0  
                         l2641 1966                           l2633 193C                           l2625 1914  
                         l2801 0B96                           l2481 15EC                           l2465 15AA  
                         l2713 1C40                           l2721 1C60                           l2705 1C26  
                         l3249 1148                           l3193 0FA2                           l3187 12FA  
                         l3179 12B4                           l2299 1FA2                           l2539 1BD2  
                         l2563 182E                           l2547 17C8                           l2731 1490  
                         l2395 1A46                           l2387 1A22                           l2379 1A00  
                         l2619 1906                           l2643 1974                           l2651 199E  
                         l2635 1944                           l2627 1922                           l2571 1A7C  
                         l2803 0BA0                           l2475 15D8                           l2459 1596  
                         l2715 1C48                           l3195 0FA6                           l3189 12FC  
                         l2565 1830                           l2557 1804                           l2549 17E4  
                         l2741 14CA                           l2733 14A0                           l2725 144A  
                         l2397 1A54                           l2389 1A2A                           l2581 1850  
                         l2653 19AE                           l2645 198A                           l2637 1956  
                         l2629 192A                           l2573 1A9E                           l2821 0C4E  
                         l2805 0BBE                           l2813 0BF2                           l2661 1EC8  
                         l2493 1614                           l2717 1C58                           l2901 0DFE  
                         l3197 0FAE                           l2567 1842                           l2559 181C  
                         l2751 14F4                           l2743 14DA                           l2735 14A2  
                         l2727 145E                           l2399 1A5E                           l2671 1AF4  
                         l2591 1880                           l2583 185E                           l2655 19B6  
                         l2647 1992                           l2639 195E                           l2575 1AC6  
                         l2831 0CE4                           l2823 0C80                           l2815 0C02  
                         l2807 0BE6                           l2663 1ED8                           l2487 1600  
                         l2911 0E38                           l2903 0E00                           l3199 0FBE  
                         l2761 1524                           l2753 14F8                           l2745 14DC  
                         l2737 14A6                           l2729 147E                           l2681 1B18  
                         l2673 1AF8                           l2593 1884                           l2585 1866  
                         l2649 1998                           l2577 1ACA                           l2569 1A68  
                         l2841 0D32                           l2833 0CF0                           l2825 0C9E  
                         l2817 0C08                           l2809 0BEE                           l2665 1EEE  
                         l2497 1630                           l2921 0E72                           l2913 0E3C  
                         l2905 0E12                           l2763 1544                           l2755 150A  
                         l2739 14B8                           l2747 14E0                           l2691 1B46  
                         l2683 1B22                           l2675 1B00                           l2851 1310  
                         l2595 188C                           l2587 186A                           l2579 184C  
                         l2843 0D52                           l2827 0CAE                           l2819 0C30  
                         l2835 0CFE                           l2771 0A9A                           l2659 1EB4  
                         l2931 0E8E                           l2915 0E4E                           l2907 0E22  
                         l2765 1564                           l2757 151C                           l2749 14F0  
                         l2693 1B4A                           l2685 1B2C                           l2677 1B04  
                         l2669 1AEC                           l2861 139E                           l2853 1350  
                         l2597 189E                           l2589 1878                           l2845 0D90  
                         l2837 0D12                           l2829 0CD4                           l2781 0B1A  
                         l2773 0AC2                           l2941 0F14                           l2933 0EAE  
                         l2917 0E5E                           l2925 0E86                           l2909 0E28  
                         l2767 1568                           l2759 1520                           l2695 1B66  
                         l2679 1B0E                           l2871 13DA                           l2863 13AE  
                         l2855 1360                           l2599 18A6                           l2847 0D92  
                         l2839 0D1E                           l2791 0B54                           l2783 0B22  
                         l2775 0AD2                           l2951 0F4E                           l2943 0F20  
                         l2935 0EE0                           l2919 0E60                           l2689 1B34  
                         l2881 1416                           l2873 13EA                           l2865 13B6  
                         l2857 1378                           l2849 0D9A                           l2793 0B66  
                         l2785 0B34                           l2777 0AEE                           l2769 0A86  
                         l2697 1BF0                           l2961 0F88                           l2953 0F58  
                         l2945 0F2C                           l2937 0EE4                           l2971 0706  
                         l2891 1444                           l2883 1420                           l2875 13F2  
                         l2867 13C6                           l2859 138C                           l2795 0B72  
                         l2787 0B40                           l2779 0B0A                           l2699 1C00  
                         l2963 0F94                           l2955 0F64                           l2947 0F36  
                         l2939 0F00                           l2973 0716                           l2981 0740  
                         l2965 06EA                           l2885 1424                           l2877 1402  
                         l2869 13C8                           l2789 0B4C                           l2957 0F70  
                         l2949 0F42                           l2893 0DA8                           l2991 076C  
                         l2983 0750                           l2975 0726                           l2967 06F6  
                         l2887 1428                           l2879 1404                           l2799 0B82  
                         l2959 0F7C                           l2895 0DB8                           l2993 077C  
                         l2985 0756                           l2977 0736                           l2969 0704  
                         l2889 143A                           l2897 0DBC                           l2995 078C  
                         l2987 075C                           l2979 0738                           l2899 0DCE  
                         l2997 079C                           l2989 076A                           l2999 079E  
                         _ADFM 7E07                           ?_isr 0001                           _ADON 7E10  
                         STR_1 06E2                           STR_2 06E5                           STR_3 06DF  
                         STR_4 06D3                           STR_5 06D6                           STR_6 06D9  
                         STR_7 06DC                           STR_8 06D0                           STR_9 0658  
                         _T0CS 7EAD                           u2000 151C                           u2001 1518  
                         u2010 0AC2                           u2011 0ABE                           u2100 0CE4  
                         u2020 0AEE                           u2101 0CE0                           u2021 0AEA  
                         u2110 0D90                           u2030 0B0A                           u2111 0D8C  
                         u2031 0B06                           u2200 143A                           u2120 1360  
                         u2040 0B34                           u2201 1436                           u2121 135C  
                         u2041 0B30                           u2130 139E                           u2050 0B66  
                         u2210 0DB8                           u2131 139A                           u2051 0B62  
                         u2211 0DB4                           u1500 1F36                           u2140 13AE  
                         u2060 0B96                           u2300 0E82                           u2220 0DCE  
                         u1501 1F32                           u2141 13AA                           u2061 0B92  
                         u2301 0E7E                           u2221 0DCA                           u1430 2066  
                         u1510 1C7E                           u2150 13C6                           u2070 0BBE  
                         u2310 0F00                           u2230 0DFE                           u1431 2062  
                         u1511 1C7A                           u2151 13C2                           u2071 0BBA  
                         u2311 0EFC                           u2231 0DFA                           u2400 0882  
                         u2320 0704                           u1440 1F4A                           u1520 1C9C  
                         u2160 13DA                           u2080 0C02                           u1600 15BE  
                         u2240 0E12                           u2401 087E                           u2321 0700  
                         u1441 1F44                           u1521 1C98                           u2161 13D6  
                         u2081 0BFE                           u1601 15BA                           u2241 0E0E  
                         u2410 08A4                           u2330 0716                           u1530 1CB8  
                         u2170 13EA                           u2090 0CD4                           u1610 15D8  
                         u2250 0E22                           u2411 08A0                           u2331 0712  
                         u1531 1CB4                           u2171 13E6                           u2091 0CD0  
                         u1611 15D4                           u2251 0E1E                           u2500 09B0  
                         u2420 08CE                           u2340 0726                           u1460 1F6C  
                         u1540 1DBA                           u1700 182E                           u2180 1402  
                         u1620 15EC                           u2260 0E38                           u2501 09AC  
                         u2421 08CA                           u2341 0722                           u1461 1F68  
                         u1541 1DB6                           u1701 182A                           u2181 13FE  
                         u1621 15E8                           u2261 0E34                           u2510 09CA  
                         u2430 08F2                           u2350 076A                           u1470 1D0A  
                         u1550 1DD8                           u1710 1842                           u2190 1416  
                         u1630 1600                           u2270 0E4E                           u2511 09C6  
                         u2431 08EE                           u2351 0766                           u1455 1F4C  
                         u1551 1DD4                           u1711 183E                           u2191 1412  
                         u1631 15FC                           u2271 0E4A                           u2520 0A12  
                         u2440 0908                           u2360 077C                           u2600 174A  
                         u1480 1D32                           u1560 1DEE                           u1800 1922  
                         u1720 1A9E                           u1640 1614                           u2280 0E5E  
                         u2521 0A0E                           u2441 0904                           u2361 0778  
                         u2601 1746                           u1561 1DEA                           u1801 191E  
                         u1721 1A9A                           u1641 1610                           u2281 0E5A  
                         u2530 0A42                           u2450 0926                           u2370 078C  
                         u2610 175A                           u1490 1D42                           u1810 193C  
                         u1730 1AE2                           u1650 1630                           u1570 1582  
                         u2290 0E72                           u2531 0A3E                           u2451 0922  
                         u2371 0788                           u2611 1756                           u1491 1D3E  
                         u1811 1938                           u1731 1ADE                           u1651 162C  
                         u1571 157E                           u2291 0E6E                           u2540 0A70  
                         u2460 0946                           u2380 07CC                           u2700 12EC  
                         u2620 116C                           u1740 185E                           u1820 1956  
                         u1660 1644                           u1580 1596                           u1900 1C26  
                         u2541 0A6C                           u2461 0942                           u2381 07C8  
                         u2701 12E8                           u2621 1168                           u1477 1D00  
                         u1741 185A                           u1821 1952                           u1661 1640  
                         u1581 1592                           u1901 1C22                           u2470 0958  
                         u2390 080C                           u2550 168C                           u2710 12FA  
                         u2630 117A                           u1750 1878                           u1830 1974  
                         u1670 1658                           u1590 15AA                           u1910 1C40  
                         u2471 0954                           u2391 0808                           u2551 1688  
                         u2711 12F6                           u2631 1176                           u1487 1D28  
                         u1751 1874                           u1831 1970                           u1671 1654  
                         u1591 15A6                           u1911 1C3C                           u2480 0986  
                         u2560 16C0                           u2640 11D6                           u1760 189E  
                         u1840 198A                           u1680 166C                           u1920 1C58  
                         u2800 111C                           u2720 0FBE                           u2481 0982  
                         u2641 11D2                           u1761 189A                           u1841 1986  
                         u1681 1668                           u1921 1C54                           u2801 1118  
                         u2721 0FBA                           u2490 099C                           u2570 16EE  
                         u2650 122C                           u1690 1B94                           u1930 1490  
                         u1770 18BC                           u1850 19AE                           u2810 1138  
                         u2730 0FDE          ?_read_external_eeprom 0001                           u2491 0998  
                         u2571 16EA                           u2651 1228                           u1691 1B90  
                         u1931 148C                           u1771 18B8                           u1851 19AA  
                         u2811 1134                           u2731 0FDA                           u2580 1702  
                         u2660 1276                           u1940 14A0                           u1780 18D8  
                         u1860 1ED8                           u2820 1148                           u2740 100A  
                         u2581 16FE                           u2565 16B6                           u2661 1272  
                         u1941 149C                           u1781 18D4                           u1861 1ED4  
                         u2821 1144                           u2741 1006                           u2590 172A  
                         u2670 1294                           u1950 14B8                           u1870 1B66  
                         u1790 18FE                           u2750 1026                           u2591 1726  
                         u2671 1290                           u1951 14B4                           u1871 1B62  
                         u1791 18FA                           u2751 1022                           u2680 12A4  
                         u1960 14CA                           u1880 1C00                           u2760 10AA  
                         u2681 12A0                           u1961 14C6                           u1881 1BFC  
                         u2761 10A6                           u2690 12B2                           u1970 14DA  
                         u1890 1C16                           u2770 10C0                           u2691 12AE  
                         u1971 14D6                           u2907 1A4C                           u1891 1C12  
                         u2771 10BC                           _PEIE 7F96                           u1980 14F0  
                         u2780 10E2                           u1981 14EC                           u2917 1A60  
                         u2781 10DE                           u1990 150A                           u2790 10F8  
                         u1991 1506                           u2791 10F4                           u2857 19D2  
                         u2867 19EC                           _RCEN 7E2B                           u2877 1A02  
                         u2887 1A24                           u2897 1A36                           _RBPU 7F8F  
                         _TMR0 0FD6                           _RSEN 7E29                           _flag 0052  
                         _main 0FA2                           _menu 130E                           _pass 007F  
                         _logs 008C                           _time 0053                           fsr0h 0FEA  
                         fsr1h 0FE2                           indf0 0FEF                           fsr2h 0FDA  
                         fsr0l 0FE9                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005F                           prodl 0FF3  
                         start 000E                ___fldiv@new_exp 0027           ??_init_matrix_keypad 0001  
                 ___param_bank 0000                 clcd_write@byte 0002                    _store_event 177C  
                _i2c_rep_start 20B0                  ??_i2c_rx_mode 0001                          ??_isr 0001  
                 ?_init_ds1307 0001                  ___fltol@sign1 0037                          _ADCS0 7E00  
                        _ADCS1 7E01                          _ADCS2 7E02                          ?_main 0001  
                 ?_read_ds1307 0001                          _ACKEN 7E2C                          _ACKDT 7E2D  
               ??_display_time 0006                          ?_menu 0001                          _BCLIF 7D0B  
              __end_of___fldiv 0A84                          _ACQT0 7E03                          _ACQT1 7E04  
                        _ACQT2 7E05                __end_of___awdiv 1910                          STR_10 0647  
                        STR_11 0689                          STR_12 0601                          STR_20 06C7  
                        STR_13 0699                          STR_21 0679                          STR_14 0693  
                        STR_22 0614                          STR_15 0636                          STR_16 06B8  
                        STR_17 06A9                          STR_18 0669                          STR_19 0625  
              __end_of___awmod 19C0                __end_of___fltol 177C                ___awdiv@divisor 0003  
              __end_of___lwdiv 1CD8                __end_of___lwmod 1E0C                   ?_init_config 0001  
                        i2l413 1E66                ___awdiv@counter 0005                          _VCFG0 7E0C  
                        _VCFG1 7E0D                          _PORTB 0F81                          _PORTD 0F83  
                        _TRISB 0F93                          _TRISC 0F94                          _TRISD 0F95  
                        _SSPIF 7CF3                   ?_init_timer0 0001      write_external_eeprom@data 0002  
                        _delay 003E                          _index 0040                          _store 006B  
                        tablat 0FF5                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 0FD8                          wtemp8 0060  
             init_ds1307@dummy 0004                     _i2c_no_ack 20C0                __initialization 1D44  
               ?_i2c_rep_start 0001         ?_write_external_eeprom 0002                   __end_of_main 115A  
                 __end_of_menu 144A               __end_of_i2c_idle 206A               __end_of_i2c_read 20A0  
             __end_of_i2c_stop 20A8                         ??_main 0039                         ??_menu 0011  
                __activetblptr 0002            __end_of_i2c_rx_mode 20C0                         _ADCON0 0FC2  
                       _ADCON1 0FC1               read_switches@key 004D         ??_read_external_eeprom 0002  
                       _ADRESH 0FC4                         _ADRESL 0FC3                         _T08BIT 7EAE  
             ___awdiv@dividend 0001                         _GODONE 7E11                         i2l3251 1E0E  
                       i2l3253 1E1C                         i2l3255 1E52                         i2l3257 1E62  
                       i2l3259 1E64                   _write_ds1307 1FE6                         _TMR0IE 7F95  
                       _TMR0IF 7F92                         _TMR0ON 7EAF                         _SSPADD 0FC8  
                       _TRISC3 7CA3                         _TRISC4 7CA4                         _TRISD7 7CAF  
                       _SSPBUF 0FC9               __end_of___xxtofl 130E               __end_of_get_time 1BEE  
                    ??___fldiv 001E                      ??___awdiv 0005                         _chance 005C  
                    ??___awmod 000D                      ??___fltol 0033                      ??___lwdiv 0005  
                    ??___lwmod 0005                         _main_f 004F               __end_of_init_i2c 2032  
             __end_of_init_adc 1FE6                         _events 0084                         _menu_f 004E  
             __end_of_read_adc 1EF8                         clear_0 1D88                         clear_1 1D94  
             ___awdiv@quotient 0007                ___awmod@divisor 000B                         isa$std 0001  
             __end_of_scan_key 1676                ___awmod@counter 000D               __end_of_password 0DA6  
                 __pdataCOMRAM 005C                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8               __end_of_view_log 0FA2  
                 ___xxtofl@arg 0012                   ___xxtofl@exp 0011                   ___xxtofl@val 0008  
                   __accesstop 0060        __end_of__initialization 1D9A           __end_of_display_time 207A  
                ___rparam_used 0001                     ___fltol@f1 002F                ??_i2c_rep_start 0001  
                  ?_i2c_no_ack 0001                 __pcstackCOMRAM 0001                   __pidataBANK0 207A  
                  _i2c_rx_mode 20B8              __end_of_i2c_start 20B0              __end_of_i2c_write 2094  
                   __pbssBANK0 0060         write_external_eeprom@i 0003                      ?_i2c_idle 0001  
                    ?_i2c_read 0001                      ?_i2c_stop 0001                     _clcd_print 1CD8  
                   _clcd_putch 2004                     _clcd_write 1F38   write_external_eeprom@address 0005  
                 ?_store_event 0001                read_ds1307@data 0003              read_switches@once 005E  
                      _ACKSTAT 7E2E                      ?___xxtofl 0008                    password@key 001F  
                      _SSPCON1 0FC6                      ?_get_time 0001                  _read_switches 1BEE  
                   ??_i2c_idle 0001                     ??_i2c_read 0001              __end_of_dashboard 156E  
                   ??_i2c_stop 0001                      ?_init_i2c 0001                      ?_init_adc 0001  
                    ?_read_adc 0001                      ?_scan_key 0001        ??_write_external_eeprom 0003  
                      __Hparam 0000                      ?_password 0001                        __Lparam 0000  
                      ___fldiv 06EA                        ___awdiv 184C                        ___awmod 1910  
                    ?_view_log 0001                        ___fltol 1676                        ___lwdiv 1C64  
                 store_event@k 0009                        ___lwmod 1DA8                   __psmallconst 0600  
                      __pcinit 1D44                        __ramtop 0600                        __ptext0 0FA2  
                      __ptext1 0DA6                        __ptext2 1BEE                        __ptext3 156E  
                      __ptext4 1EB2                        __ptext5 0A84                        __ptext6 1A68  
                      __ptext7 1910                        __ptext8 184C                        __ptext9 130E  
            __end_of_init_clcd 1A68                     ??___xxtofl 000C               ___awmod@dividend 0009  
                      _pre_key 0050                   init_config@j 0006                 ?_read_switches 0001  
                   ??_get_time 0004                 __pintcode_body 1E0C           end_of_initialization 1D9A  
                      menu@key 0012                     ??_init_i2c 0001                     ??_init_adc 0001  
                __Lmediumconst 0000                     ??_read_adc 0003                        int_func 1E0C  
                   ??_scan_key 0001                    ?_clcd_print 0003                    ?_clcd_putch 000F  
                  ?_clcd_write 0001              __end_of_my_strcmp 1AEC                     ??_password 0011  
                   _tick_count 005D                        postdec1 0FE5                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE                     ??_view_log 0011  
                    _PORTBbits 0F81                read_adc@channel 0007                  password@delay 001B  
                 _display_time 206A                  i2c_write@data 0001                     _view_array 0060  
                ___xxtofl@sign 0010                read_adc@reg_val 0005                    ___fldiv@grs 0029  
                  ___fldiv@rem 0022       read_external_eeprom@data 0003                   ??_i2c_no_ack 0001  
                 ?_i2c_rx_mode 0001                  __pidataCOMRAM 20C6                    _adc_reg_val 0044  
                  view_log@key 0016            start_initialization 1D44                ??_read_switches 0001  
                    _i2c_start 20A8                    __end_of_isr 1E6A                      _i2c_write 2088  
           __end_of_i2c_no_ack 20C6          __end_of_i2c_rep_start 20B8                  ??_init_ds1307 0004  
                  __pdataBANK0 0084                  ??_read_ds1307 0002    read_switches@detection_type 0001  
                ??_init_config 0006                      ___fldiv@a 001A                      ___fldiv@b 0016  
                ??_init_timer0 0001                    __pbssCOMRAM 0039                     ?_i2c_start 0001  
                   ?_i2c_write 0001                      _dashboard 144A               ___lwdiv@dividend 0001  
__end_of_write_external_eeprom 1F38                      __pintcode 0008                       ?___fldiv 0016  
                     ?___awdiv 0001                       ?___awmod 0009                       ?___fltol 002F  
           read_ds1307@address 0002                       ?___lwdiv 0001                      _clock_reg 0039  
                     ?___lwmod 0001                    _apend_index 0046                    __smallconst 0600  
          __end_of_init_ds1307 1EB2            __end_of_read_ds1307 1FC6               ___lwdiv@quotient 0005  
                    _init_clcd 19C0            __end_of_init_config 1B6E                      _log_index 004A  
                ?_write_ds1307 0002            __end_of_init_timer0 2046    read_external_eeprom@address 0002  
                 ??_clcd_print 0006                   ??_clcd_putch 0010     __end_of_init_matrix_keypad 2058  
                 ??_clcd_write 0002                     ?_dashboard 0001                       i2u283_40 1E1C  
                     i2u283_41 1E18                       i2u284_40 1E52                       i2u284_41 1E4E  
                    _my_strcmp 1A68                   password@wait 0013          clcd_write@control_bit 0001  
                   my_strcmp@k 0007                      _star_flag 004B                    ??_i2c_start 0001  
           __end_of_clcd_print 1D44                    ??_i2c_write 0001             __end_of_clcd_putch 201C  
           __end_of_clcd_write 1F72                     ?_init_clcd 0001                      copy_data0 1D58  
               ??_write_ds1307 0003                       _i2c_idle 2058                       _i2c_read 2094  
                     _i2c_stop 20A0                  _temp_password 007A                       __Hrparam 0000  
                     __Lrparam 0000                     ?_my_strcmp 0001   __end_of_read_external_eeprom 1F9C  
                  _init_ds1307 1E6A                    _read_ds1307 1F9C                    _init_config 1AEC  
                     ___xxtofl 115A            write_ds1307@address 0003                    _init_timer0 2032  
              ___lwdiv@divisor 0003                ___lwdiv@counter 0007                       __ptext10 1AEC  
                     __ptext11 1F72                       __ptext20 177C                       __ptext12 2032  
                     __ptext21 1EF8                       __ptext13 2046                       __ptext30 2094  
                     __ptext22 1DA8                       __ptext14 201C                       __ptext31 20B8  
                     __ptext23 1C64                       __ptext15 1E6A                       __ptext40 06EA  
                     __ptext32 2058                       __ptext24 1B6E                       __ptext16 1FE6  
                     __ptext33 20C0                       __ptext25 1F9C                       __ptext17 19C0  
                     __ptext34 206A                       __ptext26 2088                       __ptext18 1FC6  
                     __ptext35 1CD8                       __ptext27 20A0                       __ptext19 144A  
                     __ptext36 2004                       __ptext28 20A8                       __ptext37 1F38  
                     __ptext29 20B0                       __ptext38 115A                       __ptext39 1676  
                     _get_time 1B6E                       _init_i2c 201C                       _init_adc 1FC6  
                     _read_adc 1EB2                       _key_time 0042                       _scan_key 156E  
                  ??_dashboard 0011                       _password 0A84                  ??_store_event 0008  
                     isa$xinst 0000                       _overflow 0048                       int$flags 005F  
                     _view_log 0DA6                      view_log@j 0017                       isr@count 0076  
                  ??_init_clcd 0003          __end_of_read_switches 1C64                       intlevel2 0000  
             ___lwmod@dividend 0001                    ??_my_strcmp 0003           __end_of_write_ds1307 2004  
          __end_of_store_event 184C                ___lwmod@divisor 0003                ___lwmod@counter 0005  
                  _press_delay 003C               write_ds1307@data 0002           _read_external_eeprom 1F72  
